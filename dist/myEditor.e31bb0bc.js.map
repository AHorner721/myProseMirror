{"version":3,"sources":["node_modules/orderedmap/index.es.js","../src/diff.js","../src/fragment.js","../src/comparedeep.js","../src/mark.js","../src/replace.js","../src/resolvedpos.js","../src/node.js","../src/content.js","../src/schema.js","../src/from_dom.js","../src/to_dom.js","../src/schema-basic.js","../src/map.js","../src/transform.js","../src/step.js","../src/replace_step.js","../src/structure.js","../src/mark_step.js","../src/selection.js","../src/transaction.js","../src/state.js","../src/plugin.js","../src/browser.js","../src/dom.js","../src/domcoords.js","../src/viewdesc.js","../src/capturekeys.js","../src/domchange.js","../src/clipboard.js","../src/domobserver.js","../src/input.js","../src/decoration.js","../src/index.js","node_modules/rope-sequence/dist/index.es.js","../src/history.js","node_modules/w3c-keyname/index.es.js","../src/keymap.js","../src/commands.js","index.js"],"names":["OrderedMap","content","prototype","constructor","find","key","i","length","get","found","undefined","update","value","newKey","self","remove","slice","push","splice","addToStart","concat","addToEnd","addBefore","place","without","forEach","f","prepend","map","from","size","subtract","append","result","prop","orderedmap","let","const","p","prototypeAccessors","n","prototypeAccessors$1","super","type","loop","next","states","text","mark","this","rules","name","space","d","splitting","index","match","browser","pos","box","before","after","target","desc","search","j","offset","child","anchor","tr","sel","move","span","GOOD_LEAF_SIZE","RopeSequence","other","leafAppend","leafPrepend","appendInner","Append","to","empty","sliceInner","Math","max","min","getInner","forEachInner","forEachInvertedInner","elt","values","Leaf","call","__proto__","Object","create","configurable","depth","flatten","start","defineProperties","left","right","leftLen","inner","ropeSequence","base","shift","chrome","navigator","exec","userAgent","safari","test","vendor","gecko","mac","platform","ie","brokenModifierNames","String","fromCharCode","code","hasOwnProperty","keyName","event","ignoreKey","ctrlKey","altKey","metaKey","shiftKey","keyCode","wrap","end","$from","$to","editor","document","querySelector","state","EditorState","doc","DOMParser","fromSchema","schema","parse","plugins","undo","redo","baseKeymap","view","EditorView"],"mappings":";;AuCAA;;AACA;;AACA,ALFA,IAAIyE,cAAc,GAAG,GAArB,EAEA;AlCFA,AkCGA,AEHO,IAAIiC,IAAI,GAAG;AGGlB,AvCFA,AkCGA,AEHE,KAAG,WADa;AxBElBrE,AZAA,AoCAE,IxBAI,CwBAD,GxBAK,CZADrC,CoCFS,CxBEL,CAAC,GAAD,EAAM,CAAN,CAAbqC,AZAA,CAAoBpC,OAApB,EAA6B;AYA7BoC,A2BEA,AvCDE,AkCEF,AEFE,IxBDqB,AsBGnBqC,EEFE,CpCACzE,MoCHW,CpCGhB,EkCEc,CtBHoB,AZCnBA,EkCEE,CtBHoB,CAAC,GZCtC,IkCE0ByE,KtBHW,EAAe,CAAf,CAAvCrC,GsBGmB,GAAyB,CAAE,CAA9C;AtBHAA,AOCAA,AnBCC,AoCAC,IxBFwD,AOCpD,EiBCA,GxBFyD,GAAG,CAAC,EOClD,AiBHC,ExBEgD,CAAlEA,AOCoB,MAAM,CAAC,MAAP,CAAc,IAAd,CAApBA,EAEA;AlBLO,AWEPA,AOIA,AoBDA,ALEAqC,AEFE,IxBFI,EwBEA,GnCLU,CWGJ,EsBIA,CtBJG,AsBIFxE,AEPK,CxBGF,KAAD,EAAQ,CXHhB,AWGiB,AsBIxB,CjCP8B,AiCOP8B,CjCPhB,EAA0B,CAA1B,CWGgB,CXHa,AiCOpC,CtBJgC,CAAT,CXHhB,AWGQ,AsBIiB,CtBLhCK,CXFyC,OiCOAL,MAAT,CAAiB2C,KAAjB,EAAwB;AjCNtD,AoCIFtC,AzBHAA,AZIArC,AkCEE,AEFA,ICDI,AzBF+B,EsBK/B,AEFA,CnCLCoC,AoCIE,AHGFuC,EtBLmC,CyBE9B,ArCCF,CCLC,ADKAzE,CCLC,AWEiC,AsBKjC,CtBLkC,AsBKjCK,AERK,EnCCH,CAAb,CoCIiB,AzBF0B,CAD7C8B,CXDmB,AiCOjB,CjCPkB,ADKpB,CkCEqB,CjCPnB,CDKqB,CCLC,EoCIZ,IAAoB,WAApB,GAAkC,MAAM,IAAN,CAAW,SAAS,CAAC,QAArB,CAAlC,GAAmE,KAA/EA;ApCHI,AsCIJ,AvCCElC,AkCCqB,AEDrB,EpCAAA,EmBAW,EiBAP,EnCLE,CAAC,EiCMqB,EjCNjB,AkBKS,AnBAT,CCLC,CAAC,ADKAH,AkCCQ,AERL,CjBYhB,SlBVM,AkBUN,AnBNqB,ICJM,CAAC,IAAI,AkBUhC,ClBViC,AkBUrB,ClBVsB,MkBUlC,EAAqB,ElBVnB,EACJ,CkBSE,EAA4B,MAA5B,EAAoC;AlBThC,AoCIN,AlBMA,AnBJEI,AkCDkC,AEAlC,EpCCAA,IAAI,AoCDA,EpCCE,CqCFC,EDPS,EnCGL,CAAC,CAAC,GDMEC,GAAT,EAAc,ECNT,AoCIb,CAA0B,GpCJG,CAAC,AoCI9B,CpCJ+B,CoCIC,SpCJnB,GAA+B,IAA/B,GAAsC,GAA7C;AsBHNgC,AtBGsD,AoCKpDD,AzBDF,AOOA,AoBNA,AvCEI,AoCDF,IbTI,AXOO,A2BCToG,EFAE,ADCA,GxBFY,AZGT,CuBVG,AgBQF,CFAC,CzBDU,CWPN,AgBQFC,AvCEAnI,CqCFC,ArCEA,CuBVd+B,CaAkB,CpCUD,CqCFC,ArCEd,CqCFe,CrCEC/B,CuCFC,AvCEA,CuCFCoI,EFAR,ArCEU,CqCFC,IrCEIzI,IqCFf,CAAZmC,CEAW,CAAuB,AvCEZ,CAAa7B,MuCFxB,AvCET,CuCFJ,CvCE6CD,CAAC,IAAI,CAA9C,EACE,IAAI,KAAKL,OAAL,CAAaK,CAAb,MAAoBD,GAAxB,EAA6B,OAAOC,CAAP;AqCHjC8B,AlBOE,AoBNJ,ALAEuC,AECA,EFDAA,EKAE1E,EFDgC,ADE9B,CjBKG,AeNF,GAAGyE,CKAC,CFD+B,ClBOtC,CoBNU+D,AHTI,CCQ2B,ClBO3B,IkBPgC,CAAC,ClBO3B,AoBNF,ALAA,CKACC,ALAA7G,GGDiC,AlBO5B,CkBP6B,AlBO5B,AeNnB,CAAkB8C,GfMK,EkBPkB,AHCzC,CAAR,EGDgE,AECpD,CFDoC,AECb,CFDnCvC,OlBO2B,CAAmB,CoBNlC,CAAd,KpBMuD,CAAC,GAAR,CAAY,KAAZ,CAAnB,EAAuC,OAAO,CAAC,GAAR,CAAY,KAAZ,CAAvC,CAAD,CAAxB,CAHkC,CAItC;AIbA,AtBEIA,AYLJ,ADSE,AOQF,AnBLI,AkCDF,AEAA,ExBFA,EWNE,CXMC,CwBEC,CxBFC,CXJC,CiCME,AEXQ,CFWP,CXRA,AvBSA,CAAC,CAAR,CCPU,CiCME7B,EjCNC,CAAC,CAAC,CsBFf,CWQM,GXRc,AtBEP,CAAQ,AiCMCoE,CjCNT,CAAbvC,GiCMK,IACJuC,CXTD,IAAmC,AWS7B,CAACpE,MXTmC,AWSzC,GAAekE,KXTmB,IAAmB,KWSrD,IAAiC,EXTtC,EAAuE,CWS5BG,UAAL,CAAgBD,KAAhB,CAD7B,IAEJ,KAAKpE,MAAL,GAAckE,cAAd,IAAgCE,KAAK,CAACE,WAAN,CAAkB,IAAlB,CAF5B,IAGL,KAAKC,WAAL,CAAiBH,KAAjB,CAHF;AXPAtC,AtBCED,AoCIF,AxBRF,ADSI,AOQJ,AoBRA,AvCGG,AkCEF,AEHC,CFLF,ElCDuB,AkCWvB,CtBPI,A2BAAuG,EhBNI,AcKF,ADGA,EnCPuB,CsCKpB,E3BAE,CyBDC,AECAC,ChBNG,AXMF,CXLsB,AmCLjB,EbIA,AcKF,CpCJsB,CAAC,CAAC,IoCItC,CpCJoC,CAAQ,AoCIvB,CpCJe,CAAlCxG,GsBD4B,IAAd,CAAmB,OgBMb2D,EhBNsB,CAAC,GgBMnC,CAAmB,KhBNb,CAAhB1D;AACAA,AcIuB,AxBPzB,ADOO,A2BEHwG,AvCIF,AkCGF,AELE,EGFEA,C3BJiB,CyBEI,CEElB,ChBNC,AaQF,CGFGC,GFFsB,GAAG,EdJjB,CcIQ,ADTP,EbKE,UAAU,IAAV,CAAe,EgBMhBC,OhBNyB,CAAC,EgBMpC,CAAqBC,MhBNV,CAAlB3G,uBgBMO,EAA6B4G,KAA7B,CAAmChJ,OAAnC,CADsB;AhBJ7BoC,AtBAE,AoCGiC,AxBNrC,AMgBI,AoBPA6G,AvCIF,AoCFA,EGFEA,IhBNI,AaQF,CjBKG,ClBbD,CsCMG,EAAC,AHZM,CGaV,ChBPO,CtBAD,AkBaV,EIbc,CJaC,ClBbD,MAAd,AkBaA,CAPkC,ClBNZ,AkBc1B,oBoBRY,EAEJ,QhBRkD,IAAxC,CAA6C,SAAS,CAAC,QgBQ1D,ChBRG,CAAhB7G;AAEA,AtBF0B,AYF5B,AMiBA,AoBPgB,AvCGd,AoCFA,EbPA,ItBF0B,AmCStB,EbPE,CAAC,AtBFsB,GsBE7B,AaRgB,CnCMiB,AsCQV8G,EhBNV,ItBF0B,CAAC,CsBErB,IAAN,CAAW,EtBFE,OsBEO,CAAC,CgBMrB,OhBNA,CAAb;AACA/G,AtBHkD,AoCIlDA,AxBLF,ADUE,AOOF,AoBR+B,AvCI7B5B,AkCCFkE,AEHE,ExBDA,AZGAlE,GAAG,CuBTC,AcCA,ADMA,CpCEC,CuBTC,CcCN4B,EdDS,AcCA,AzBKA,CsBIC,CtBJC,A2BD2BgH,ALK3BlJ,EGTXkC,EdDe,AcCA,ArCQD/B,AoClBE,CbSA,EAAP,AvBSJ,EqCRL+B,ArCQmB,AkCCrB,CXVuB,AWUAT,CXVC,AcCA,EdDE,EcCxBS,EHSF,GAAiC,EXVE,IAAI,GWUGT,IXVhB,GWUO,CXViB,AWUCgD,KAAlB,EXVT,AWUkC,CXVxDvC;AACA,AtBJ4D,AYA9D,ADUI,A2BFW,AvCKX,AkCCF,AEHA,EbPA,CgBIM,C3BEJ,A2BJQ,EAGJ,ALKF,AEHA,CFGCuC,CXVC,AvBSAlE,CuBTC,EXME,CsBIC,CtBJC,AZGA,AkCCAF,EEpBK,CpCmBF,GuBTd,AWUA,ElCDmBH,AkCCA,CXVC,AXKT,GZIG,CAAUC,GAAV,CAAZ,CuBT2B,GAAG,GgBKnBgJ,KhBL2B,CAAC,YAAT,IAAyB,CAA5B,GAAgC,KgBKvD,CAHI,ChBF0D,GAAG,CAAC,OAAO,CAAC,CAAD,CAAX,GAAiB,OAAO,GAAG,CAAC,OAAO,CAAC,CAAD,CAAX,GAAiB,IAA7G;AACA,AcAA,AxBJF,ADUI,AOMA,AoBb2B,AvCU3B,AkCAmB,AEFrB,CGRU,ChBCV,AgBDF,E3BOI,EwBCE,CCPCjH,AlBYE,CIZD,CAAC,AXMA,EyBNE,AzBMA,AZGA3B,AkCAmB,CGTlB,AlBYR,EIZF,CcAa,AlBYE,AeHM,CGTrB,ArCSc,CuBTC,CAAC,AcAA,AzBIL,AwBfK,CCWC,CdAF,AJYb,AnBHgB,CAAC,CqCTC,ArCSX,EuBTa,CvBSCC,EqCTE,CAAC,MAAN,ArCSX,GqCT0B,ArCSA,CqCTnC,EdAsC,AcAA,CAAC,CrCSCT,CqCTxC,CdAsB,CAAqB,AcAA,IrCSR,CAAaQ,IuBTI,CAAC,AvBSA,GAAG,CAArB,CAAjC,IuBToB,CAAtB;AACA,AtBJE,AoCIA2B,AxBJJ,ADUI,AOMF,AnBHC,AkCDiC,AEDlC,EbPA,CvBNqB,CYYnB,EwBCE,EbPE,AtBJA,AoCIA,CdAC,AtBJA,EoCIE,CzBMC,EyBNE,AzBMA,CXVC,AWUA,CXVC,CmCRE,ECYC,CAAC,CAAD,CdAjB,AcAEA,GdAqB,CtBJhB,CAAkB,IsBII,CAAC,CtBJvB,CAAL,EAA8B,CsBIT,IAAgB,CAAC,CAAC,iBAAiB,IAAjB,CAAsB,SAAS,CAAC,SAAhC,KAA8C,CAAC,CAAD,EAAI,CAAJ,CAA/C,EAAuD,CAAvD,CAAxC;AACAA,AtBLkC,AYCpC,ADSgB,A2BAhB,AvCKE,AoCHA,IGFEkH,EhBLE,AXKU,AwBEV,EGFE,C3BAW,EAAE,A2BAV,ChBLC,CtBL+B,EsBK5B,AgBKAC,ChBLC,AtBLoB,EsBKrB,CabG,GbaI,gBAAgB,IAAhB,AgBKX,ChBLgC,AgBKjBf,MAAf,EAAuB,ChBLkB,CAAC,SAA/B,CAApBpG;AACA,AtBN4C,AoCK1C,AxBHJ,ADQe,A2BAoBuG,AvCMjC,AkCHA,AEAA,EbPA,AgBIiCA,G3BArB,CAHD,AwBMP,CGHkC,ChBJhC,AcDA,CdCC,AgBI0BA,ALG1BjE,KErBS,CbchB,GAAgB,CAAC,CAAC,CWOC,CAAC7C,IXPpB,AcDwB,AHQjB,CAAkB8C,GGRnB,CAAuB,CHQtB,EGRD,AHQ0B3C,CGR9B,EAA+B,GHQ1B,CAAgC,IAAhC,CAAP;AXNA,AcFmC,AxBFrC,ADQI,A2BD8B,AvCOhC,AkCHD,AEAC,CGJS,ALCX,CXJE,AgBGF,E3BCI,A2BEJ,EFRqC,ADS/B,EbPE,CAAC,AXIL,CyBNqC,CzBMrC,EyBNwC,CDb1B,GCamB,GzBMjC,GWJF,EXIE,CWJsB,EXId,IWJoB,IAAI,CAAC,MAAM,CAAC,CAAD,CAAzC,CAZqE,CAavE;AtBNI,AoCG4C,AxBDhD,ADOc,A2BGd,AvCIE,AoCHA,KCVE,CDUE,EnCbE,CmCVU,ECcT,EzBKY,CXTP,CAAC,AoCIF,EzBKC,IXTN,IAAiB,EoCIA,IpCJM,AoCIlB,CpCJmB,AoCIF,GAAjB,CpCJY,AoCIhB,EAAyB,EpCJM,MAAM,CAAC,IAA3C,EAAiD;AsBOnD,AtBNI,AoCG8B,AxBDpC,ADM2B,A2BI3B,AvCIErB,AkCHF+D,AEAE,EbPA,AvBUA/D,IqCbkC,ADU9B,EbPE,AvBUA,CuBVC,AcH8B,ADdrB,CpC2BR,CChBCyB,CoCG+B,AHU9B,CAAClC,EXPX,AtBNa,CAAC,AoCGoB,EdGlB,CAAC,AtBNA,CAAb,ADgBaG,CuBVD,CtBNI,AiCatB,ClCGU,AkCHayE,EXPE,AvBUDlE,GChBI,CAAC,CDgBnB,EAAqBC,CChBT,CAAY,AiCalC,CjCbsB,EiCae,ClCG3B,EChB8B,ADgBD,EuBVG,IAAjB,AtBNqB,AiCaAiE,CXPC,AtBNA,IAAP,CAAY,CAAZ,CAAlC,EsBMkD,AtBNA,CsBMC,AtBNA,AiCapB,CAAsBH,CjCbrD,EACN,EsBKyB,AWOY,CXPnC,CWOgE;AXNhE,AtBNM,AoCEsC,AxBA9C,ADCa,A2BSb,AvCII,AkCHF,AEAA,EbPA,CXXmB,EyBOZ,CDWH,EbPE,AtBNA,ADgBA7D,CuBVC,AWOA,EjCbE,AoCGF,CdGP,AvBUU,AoC5BM,CFyBLiE,EXPE,AcHF,ArCaElE,IkCHN,CAAW,CXPC,AvBUA,CuBVC,EWOb,ClCGgBA,CkCHC8D,EXPX,GvBUgB,AkCHtB,CAAP,CXP+B,EvBUEtE,EqCbA,CrCapB,GqCbF,ArCa4B,CqCbD,GAA3B,CAAJ,ArCaqCU,CuBVC,CcHH,GdGX,CAAmB,AvBUX,CAAYF,MAAZ,CAA1B,CuBV8C,CAAC,CvBUC,IAA3D,IuBV6B,KAA2C,SAAS,CAAC,cAAV,GAA2B,CAAxF,CAAb;AACA,AtBPW,AoCGiC,AxBA9C,AbcI,AkCHH,AEAC,CFFF,CXLE,CWSF,GGb8C,ADWxC,EbPE,AvBUAJ,CuBVC,CcJyC,EDfhC,CCemC,ArCcxC,GuBVX,AvBUcK,CqCd8B,EdI3B,CvBUC,CAACV,IAAL,CAAUC,GAAV,CAAZ,EuBV4B,IAAb,CAAkB,SAAS,CAAC,SAA5B,CAAjB;AACA,AehBF,ADWyD,AxBCzD,ADOE,AZME,AkCAJ,AEFE,EbPA,AXGA,GyBRO,EDYF,CbPC,AvBSwBJ,CuBTvB,CapBS,CCgBT,CzBOG,EAAE,CWHZ,AcJW,ArCa0B,GuBTrB,AvBSwBa,IAAI,CAACb,MqCbpB,CrCae,CAAae,EqCb1C,CAAmB,ErCaU,CqCb7B,CAAJ,ArCaL,EqCbgC,GdIO,QAAQ,CAAC,eAAT,CAAyB,KAAlE;AACA,AehBF,ArCQM,AoCGgC,AxBEtC,ADMI,AwBIF,EbPA,EXGE,EyBRkC,CDY/B,CbPC,CAAC,CarBS,CCgByB,AzBQhC,EXXE,AWWA,CyBRiC,EpCHxC,EoCGgC,GzBOxB,EWFZ,GAAwB,MAAM,CAAC,MAAP,IAAiB,CAAC,CAAC,uBAAuB,IAAvB,CAA4B,SAAS,CAAC,SAAtC,KAAoD,CAAC,CAAD,EAAI,CAAJ,CAArD,EAA6D,CAA7D,CAA1C;AACF,AehBO,ArCQF,AoCE6C,AxBGlD,ADMI,AZKA,AoCDF,IxBJE,CyBTK,EDaF,CpCCCP,CsCxBQ,A1BmBP,CwBzBS,CCiBT,AzBQE,EZKE,EqCbA,ErCaI,CYPH,AZOI,CAAd,EAAiB,GsCxBd,ADWe,CCXU,GDWnB,CAAc,CCXpB,EAAgC,ADW1B,CAAJ,EAAwB,KCX1B,EAA0C;AAC/C,AHcF4B,AEJmC,AxBGnC,ADMI,AZKEpC,AkCDNyE,AEAE,IDTI,AvBKF,E0BnBE,AtCwBAzE,CoCDC,GCbgC,ADjBrB,CEOP,CAAC,A1BmBA,AsBIA,CGbuB,ArCctB,AkCDAC,CtBJC,AZKAe,CqCd4B,GzBM5B,AZQR,CmCVe,AnCUFJ,EsCxBb,CAAgB,AHcE,ADSxB,CAAuBG,ECTvBqB,AnCUyB,EsCxBvB,CJuBF,CIvB2B,AtCwBEhC,EkCDE,ClCCzB,EAA4BO,KAA5B,CkCDkCI,KAAT,CAAgBa,IAAhB,EAAsBmD,EAAtB,EAA0B;AIvB5B,ArCQzB,AuBbG3C,AaeqC,AxBI5C,ADMI,AZKC,AkCDD,AEAF,IZ7BW,AZyBT,CZGA,CkCCKR,CEAF,CnChBC,AoCEoC,EHc/B,AE/BK,CEOkB,AtCyBzB,CwB9BU,Aae2B,AzBUpC,EXZE,AWYA,CXZC,AuBbS,Aae2B,AzBUpC,AsBIG,CIxBW,GDUe,CHcrB,CAAnB,CjChBI,CAAe,AiCgBIA,EV7BM,EvBazB,AiCgBuB,EV7BP,CU6BU,CjChBH,AuBbQ,AU6BZ,MjChBU,CAAC,OAAP,CAAe,IAA1C,EAAgD;AqCRX,ArCSnCO,AuBbJ,AWoBF,AENwD,AxBKxD,ADKgB,AZMVnC,AkCDF,AEAF,IDTI,EvBIU,AZMVA,AkCDG+E,CV7BF,Aac4B,ADe5B,CFAI,CtBLQ,CXXT,AkCOE,ACvBM,CZGP,AZwBU,EuBHnB,AEPsD,ArCgB3C,AkCDG,ClCCFvE,CCjBC,CuBbC,EvBaE,AiCgBG,CV7BF,AxB8BA,AkCDf,CV7BF,CU6BuBuE,CCRvB,AnCSoB,CwB9BC,AxB8BV,AkCDc,ClCCrB,EkCDwB,ClCCHpE,CwB9BC,AWqB1B,CAAY,CXrBZ,CvBa6B,AiCgBIL,CjChBH,AuBbA,AxB8B1B,EmCTJ,EAAmB,CDQI,CjChBa,CAAC,OAAR,AkCQ7B,ElCR8C,AkCQf,MlCRqB,CAAC,OAAxB,EAAiC,GAAG,GAAG,CAAvC,CAAzB6B;AuBZF,AWqBA,AER0D,AxBM9D,ADIe,AZOT,AoCDJ,IZ7BE,CZuBU,CAJA,CuBEL,ACQF,CZ7BC,AaasD,ErCiBpDvB,CwB9BC,CWqBP,AER8D,GbbnD,AWqBE,AERoD,CbbrD,AxB8BV,AoClCY,EpCkCAZ,CqCjB4C,CFQ1D,KnCSqB,CAACQ,KwB9BtB,AxB8BqB,CAAP,GAAiBI,MAAjB;AsC1BhB,ArCSI,AkCSF,AETqE,AxBOzE,ADII,AZOC,AkCDH,AEAA,IxBNE,E0BpBE,AJ0BAgB,CCRG,ACQF,ExBNH,CXXM,AiCiBA,CtBNN,G0BpBF,AJ0BYmD,CjCjBC,CqCTD,AJ0BZ,CCRE,CDQc,CjCjBC,AmCjBD,CD0BI,AvBElB,GXXE,EAAiB,AWWnB,GAAQ,EuBFR;AGlBY,ArCSS,AuBZrB,AaYuE,AxBQ3E,ADGc,AsBMM,AEClB,CDZF,GGfgB,CDSP,EDkBF,CZ9BC,CAAC,EU6BkBN,CI1BH,CAAC,AdHrB,AZuBiB,CwB5BH,CnCiBc,AuBZnB,GcGiB,CAAC,CrCSN,CqCTA,CAAS,CJ0BK,CAACO,EtBN1B,GsBMM,QI1BK,GAA2B,cAA3B,EAAD,CAAR;AAAqD,ArCShC,AuBZtB,AaaN,AxBQT,ADEoC,AZQhC,AkCF2C,AEE7C,OAAK,IpCAI,CqClBI,CbbO,CYLJ,CpCoCHjF,CqClBI,EbbJ,GaaA,CAAU,GrCkBd,CAAeC,OAAf,CAAP,qBqClBsD,GAA3C,CAAN;ApCAJ,AuBbsB,AaamC,AxBU9DoC,ADLc,AZcX,AoCAD,GxB9BmB,AZDE,CasBjB,GuBSC,IvBTM,GAAG,EuB5BE,IvB4BlBA;AyBnBE,AdHC,AaaA,AxBUHA,AbUE,AkCJA,AEGA,IvBTI,GuBSC,EE7BE,AJ0BA,GrBNK,CyBpBZ,CJ0BY6C,CrBNG,CuB7BC,GvB6BG,CAAC,GAAL,CAAS,AqBMjB,CrBNQ,AqBMQC,ErBNI,EAAZ,AqBMY,CrBN7B9C,AqBM8B+C,GAAL,CAAS,CAAT,EAAYvD,IAAZ,CAAhB,EAAmCsD,IAAI,CAACE,GAAL,CAAS,KAAK9E,MAAd,EAAsByE,EAAtB,CAAnC,CAAP;AIzBD,ArCSG,AuBZJ,AZyBE,AZQA,AkCJD,AEGC,CZrCK3C,AU4BP,CIlBA,A1BoBE,CsBMF,CjCnBI,GAAG,AmCoBA,InCpBI,CmCnBO,KnCmBD,AWaA,CXbC,CWaC,OXbf;AqCNJ,ArCOG,AkCYH,AEZE,AxBWF,ADEI,AZQFtB,AkCFF,AECE,EpCCAA,EYRE,EuBDJ,AEZM,CFYN,ACQO,CpCCC,CqCrBN,AxBWO,ADEA,CZQC,CqCrBD,AzBaE,CwBjCO,IDgClB,CAAE,CvBAiB,ECDnB,AbUmBV,CaVE,EbUX,EmCTV,AnCSwB,CaVxB,EsBCE,AtBD0B,MAA5B,EAAoC,CsBClC,QAAA,CAAS,KAAT,EAAgB,aAAhB,EAA+B;AGlBjC,ArCOC,AuBZMgC,AaWI,AxBW2B,ADGlC,AZQA,AoCDF,IZhCW,AaWF,AzBcP,GwBOG,CpCCC5B,CaXqC,CwBX5B,ADpBC,ExBkCN,CyBdQ,ArCsBP,CwBjCU,AXsB2B,ADGpC,CAAC,CZQC,CwBjCU,AXsB2B,IbWhCL,CqCtBQ,CxBW8B,EbW3C,CaX8C,AbWpCC,CwBjCS,CaWxB,CrCsBK,CAAZ,CwBjCsB,EAAe,CXsBH;AyBhBtC,AdLE+B,AaUiC,AxBWqC,ADGxD,AZSZ,AoCDF,MZhCI,AZwBU,CwBQT,CpCCC3B,CYTW,CwBlCD,CxBkCG,CYxBT,CxBiCC,EwBjCE,ExBiCE,CAAC,CwBjCC,AxBiCf,CwBjCgB,CxBiCC,OAAO,IwBjCb,AxBiCM,IwBjCe,IAAI,CAAC,UAAvC2B;AcMF,ArCOO,AuBZL,AWsBA,AvBCa,AZUX,AkCJJsC,AEGE,KxBTY,CuBDN,AvBDW,CwBWZ,CpCCCzE,CCrBQ,AuBZP,CYXS,CDiCL,CDOD,CAACC,EV7BE,AxBiCA,GAAG,CwBjCC,CvBYZ,CAAqB,AkCUpB,ClCVD,AiCiBP,ClCIuBD,AkCJAO,CjCjBQ,CAAxB,AuBZkB,AWsBE,CXtBD,AWsBxB,ADOF,CjCjBkC,CkCUN,CDOC,ClCIX,CCrBX,ADqBwBQ,ECrBS,CuBZrB,ExBiCD,CCrBX,CuBZ+B,AxBiClC,AkCJkCR,CjCjBQ,CuBZrC,CU6BoB,CAAcF,CV7BA,AU6Bd,EAAiB,IV7BG,CAAC,IAAzC,GAAgD,MAAvD;AcMF,ArCOE,AuBZF,AWqB8B,AEZ5B,AxBWF,ADGI,AZUAL,AkCJF,AEGA,CZnCKoC,ELiBL,CPSE,AZUApC,EqCxBE,AHoBAK,CjCjBC8B,AiCiBA,AEGA,EvBZE,ADGL,CyBdF,AHoBQ,AEzCQ,CnCwBP,AkCS0B,AvBEjC,AZUO,AkCJL,CGpBI,ArCwBElB,CCrBC,EkCSiB,ADQfZ,CjCjBC,AiCiBA,CjCjBC,CAAC,ADqBd,CAAeG,CYVf,AsBMgB,CrBTpB,CAAsB,EbalB,CYVA,AsBMqBF,ClCIC,Cab1B,AbaI,CCrBG6B,AWWK,CCHiB,CZRC,CiCiB5B,CjCjB8B,CiCiBC,EjCjBE,CAAC,CAAC,UAAnC,IAAiD;AqCNnD,ArCOI,AkCQqC,AEZ7B,AxBWmB,ADGjB,AORZ,AnBmBE,AkCL+B,AEIjC,ICxBU,GDwBL,CnCpBC,CYO8B,CZP5B,AoCJQ,ADrBA,CpC8CP,AkCL+B1B,EGpBrB,AzBcA,CXVP,AYO6B,CZPnC,ADqBOV,Ead+B,CDGhC,CXVK,CiCgBgB,CjChBd,EoCJU,CxBWA,CZPN,ADqBd,CCrBP,ADqBsBC,ECpB1B,CoCLY,IrCyBD,CAAP;AsC3BJ,ArCOM,AuBZNmC,AaOqC,AxBWkB,ADG3B,AZYzB,AkCNkD,AEKnD,GpCxCqB,CwBQnB,GYgCG,GA9CW,GnC0BL,EAAE,AuBZA,GAAG,CvBYC,EAAN,CuBZbA,EvBYwB,AuBVxB,IvBUa,GAAkB;AAAC,AuBThC,AWkBE,AvBHiB,AOJjB,AnBqBA,AoCFA,GxBxCmB,GuB4Bb,CCYD,CnCrByB,CAAC,AkCStB,CCnCO,CnC0BiB,CkCSrB,GlCTiB,EkCSZ,ChBPjB,CAAI,GgBOQ,CAAW,EhBPvB,CAAI,GgBOJ,AhBPA,GAAI,YAAS;AlBF0B,AuBRzC,AaIE,AxBWF,AMLiB,AnBsBf,AkCRA,AEMA,MC1BI,CD0BC,CnCtBkC,CAAC,AYOjC,AMLe,Aecf,CGpBP,ADtBgB,CnC0B0B,CoCJlC,ElBMmB,AecfkD,OfdU,CNKxB,AMLqC,Aec5B,CrBTc,AqBSAhF,CAAd,CfdQ,Aecf,GrBTF,EAA8B;AyBbvB,ArCMwB,AkCU7B,AEdU,AxBWoB,AMLQ,AnBuBtCa,AkCRD,AEMC,CjBrBA,AeYF,ClCWEA,CmBrBA,AeeF,CGvBY,GpCIN,AmCuBC,EE7BS,AzBauB,CsBG3B,AEdM,AxBWsB,AuBjCtB,EpCmDN,CmCfG,AEdM,CrC6BP,CmCfZ,AtBH2C,EsBG1B,EtBH8B,EyBb1C,CAAsB,CDEE,CxBWuB,AbkB/Bd,GsC/BhB,AzBakD,AbkB3C,EsC/BsB,ADExB,ArC6BgBO,KalBiB,AbkB/B,CalByB,CbkBJ,CsC/B5B,EAAuC,AzBauB,IyBb9D,EAA6C,EzBapB;AyBZhC,ArCKiD,AuBP1CyB,AWkBDD,AEf+B,AxBW0C,AMF7E,AnBqBE,AkCNJ,AEIE,EvBfF,EWhBa,EcEb,CF6BO,CDbG,CGhBK,EtC+BJ,AoCpDO,CEqBA,AHgBJ,CXlBQ,EWkBL,AnCeFpC,CwBjCU,CcEF,CAAC,EHgBF,KAAL,AnCeN,CwBjCuB,AWkBN,AnCeF,CsC/B1B,AtC+B2BK,EmCfV,CXlBQ,AWkBO,AnCeN,EwBjCc,AxBiCRO,CmCfG,GXlBV,AWkBa,CAArB,AnCeS,CwBjCoB,AWkBxCwB,CnCeiChB,CwBjCd,EAAyB,GxBiCxB,CAAoB,KAAKL,MAAL,CAAYV,GAAZ,EAAiBJ,OAArC,CAAf,CAAP;AsC/BG,AdDLmC,AXgBF,ADKE,AZYC,AkCNH,AEIE,ExBVA,CZnCqB,GsCehB,AdDD,CY+BC,ExBVE,CwBzCS,CZoBP,AZqBA,E0BpBJ,CdDO,EcCP,GAAA,CAAA,KdDkB,EcClB,GdDuB,WAAW,GAAG,QAAQ,CAAC,WAAT,EAAnB,CAAvBA;AvBQEA,AuBPF,AWiBE,AEfF,AzBmBE,AZaF,AkCPF,AEIE,EZ/BA,EZqBE,EyBnBE,CbFC,AY+BA,CnCxBC,AuBPA,AWiBE,CvBID,CwB1CS,CCuBhB,AzBmBS,CuBJG,CAAC,AEfJ,CpCKG,AuBPZ,CAAa,EvBOE,CAAC,CAAC,AuBPjB,EAAmB,CWiBjB,CXjBmB,CvBON,AkCUS,ClCVD,EAAE,AuBPA,EvBOV,CAAbA,CuBPiB,GAAa,IAAI,CAAC,SAAL,CAAe,MAA5B,GAAqC,EAAxD;AcCA,ArCMEA,AuBNF,AWgB0B,AEff,AzBmBD,AOVV,AnBwBA,AkCPF,AEIE,EZ/BA,EaCW,ECDP,A1BoBM,C0BpBL,AdAA,AY+BA,CnCzByB,AuBNxB,AWgBsB,EEfX,CFeS,AvBIX,EyBnBK,AzBmBH,C0BpBb,ArCMgC,EuBNpC,CvBMuC,AuBNxB,CvBMyB,AkBIxC,CmBViB,ArCMwB,AkBIrC,EKVJ,EcAqB,AdAA,ALUrB,ClBJuC,AoCLR,AlBS3B,ClBJ2C,CqCNvB,CAAC,ArCMwB,AuBNxB,ALUzB,ElBJuC,CAArCA,AoCLS,AlBSP,CmBVyB,AdAA,CcAC,AdA9B,ULUW,ImBVc,CAAoB,UAApB,EAAgC,KAAhC,CAAJ,GACG,OAAO,CAAC,YAAR,GAAuB,CAD3C,CAAJ,EAEF;AAAI,ArCIAA,AuBLF,AWeiC,AEfI,AzBmBnB,AOVL,AnByBbf,AoCzDgB,CAAX,CpCyDLA,EapBW,IZT2C,AWcpC,CYnBX,ALSa,CnByBZ,CsCjCC,CrCIiD,AD6BhD,CapBU,CWdpB,ALSyB,ClBJoC,AWcpC,C0BlBvB,AzBcF,CDI2B,EOVP,CAAW,ClBJoC,CAAC,AD6BjDhB,CmBzBN,ENMb,AbmBU,EAAcO,GC7BtBwB,ED6BQ,EanBV,AbmB+B,CanBnB,GAAZ,EAAiB,OAAjB,EAAkC,OAAlC,EAAkD;AyBdpC,AdAhB,AWc0C,AvBIvB,AOViB,AnB0BhC,CwBvCGC,ALaL,EKNF,ALQE,KnBwBMpC,OAAO,GAAG,KAAKc,MAAL,CAAYV,GapBJ,AboBR,EAAiBJ,CapBN,MboBX,CAAyBe,KAAzB,EAAd;AC7BA,AuBFJ,AWYK,AEfH,AzBkBS,AOPT,AnBwBEf,AkCTJyE,AEMO,IpCGHzE,AoCHO0G,CxBfA,GXZH,CoCLC,ADgCO,EpCGL,CAAC1F,AkCTA,AEMO,CFNNf,CjCrBC,CoCLZ,CrCmCE,CAAaG,CC9BC,ED8Bd,EAAkBO,AkCTtB,CAAuBa,CjCrBnB,EAAsB,CD8BtB,GkCTJ,GrBZ2C,AqBYV,GrBZa,KAAM,CACpD,AqBW0CA,OAAT,CAAkBC,CAAlB,EAAqBG,IAArB,EAA2BmD,EAA3B,EAA+B;AIxB9D5C,ArCII,AuBFN,AaHC,AzBkBG,AZiBA,AkCTA,AEMF,IxBdE,E0BjBE,ArCIA,AiCqBGP,AEMH,GADa,CE9BT,ArCIA,AiCqBG,CtBRF,AZiBA,EsClCE,A1BiBA,CXbC,CD8BC7B,AkCTG,GjCrBZ,EiCqBiB,CAAnB,CtBVO,CsBUgB6B,ElCShB,CsClCe,AtCkCA5B,CsClCC,AJyBI,GAAG,CAAP,ElCShB,CsClCe,AtCkCtB,CsClCFmC,CANkD,CAQpD;ArCEoB,AkCWhBA,AtBDA,ADIA,AZiBD,AkCTC,AEMF,GpCpDqB,CYsCnB,EXdgB,AkCWZ,ADWC4C,AEMH,CvBlBG,CqBYE,CtBRF,AwBYU,CnC1BK,AYUpB,CsBCA5C,AvBGO,EuBHI,AtBDA,AqBYC,CjCtBY,EYUxB,CAFgD,CZRhC,AYWpB,ADAW,AsBWU,CAAjB,CCXAA,CDWqB4C,EAAE,GAAG,KAAKzE,MAAV;AIvBvB,ArCEI,AoCJN,AxBeA,ADGI,AOTF,AnB2BA,AoCJA,IxBdE,E0BhBE,AF8BA,CE9BC,EDFE,AD6BU,EE3BjB,C1BgBU,C0BhBC,C1BgBC,IyBlBd,AzBcW,AOLT,CkBTiB,AlBSb,GkBTN,ClBSE,CkBTsB,AlBSlB,GAAJ,GAAI,YAAO;AmBNT6B,ArCEC,AuBHEC,AWaL,AEdAD,AzBkBE,AOVW,AnB4Bb,AkCVA,AEMA,IZ/BW,AZiBT,EuBJI,AEdF,AH0BAP,AEMA,EE9BE,CnBMc,AiBoBH,CC5BT,AH0BA,EtBRE,C0BhBC,ADFA,CzBkBC,AOVa,AekBbmD,CtBRC,C0BhBC,AJwBd,EACE,CCbF,AEdiB,AlBQG,CkBRF,AlBQa,CgBMV,EGZA,AnBMR,CmBNS,AdDS,EaDpB,CbCuB,AaDT,IAAd,CAAX5C,ECEc,EAAZA,CdDyC,IAAT,EAAe,GAAf,EAAoB,UAApB,EAAgC,SAAhC,EAA2C;AcC3EA,AdAF,AWaI,AtBAF,ADGY,AOVoB,AnB6BlC,AkCVI,AEMJ,CjBzBA,EAEA,CgBKI,EvBGU,AwBeV,CvBlBG,CyBb6B,CdA7B,AWaE,AvBGQ,AsBSRmD,AECQ,ExBVE,CuBHP,EGb8B,AzBaxC,CDGW,E0BhBgC,AHa5B,AtBAA,EWbA,EUyBb,CIzB8C,AJyB5B7D,CAAlB,CVzBkB,AXapB,CqBYuBG,CIzB6B,AHa1C,CAAe,EDYvB,CCZQ,CXbiB,AUyBEmD,CVzBD,AWaE,CDY5B,EAA+B,CVzBN,AUyBzB,CCZiC,CXbD,GAAP,CWaG,CXbS,AWaE,MAA/B,CAAR,GXbyB,EAAwB,ScAY,AdApC,EAAmC,CAAC,CAApC,CcAyB,AdAhC,CcApB5C,GdCoB,OAAO,CAAC,IAAD,EAAO,GAAP,EAAY,UAAZ,EAAwB,SAAxB,EAAmC,CAAnC,CADZ,CAAjB;AvBIE,AuBFJ,AWYM,AEfJ,AxBeE,ADEuB,AOPzB,AnB2BAd,AkCXwC,AEOxC,CZjCKe,CxBqCLf,CkCZA,CCVI,EvBEqB,AwBgBrB,CCjCCc,AxBeE,CZVD,CAAC,AiCuBL,AEDe,EDZN,AEfF,AzBiBqB,AZoBrB,EYpBuB,AZoBrB,CmCtBG,AtBAZ,CZVW,AoCLb,CpCKc,CYUG,EsBAE,AEfF,CFeG,EEfpB,CrCqCoBb,CmCtBN,AEfM,AxBelB,CsBAuB,ClCVlB,CAAkB,CDgCd,EAAgBlB,CmCtBvB,ElCVG,ADgCI,CChCT,CDgC8BO,CChCA,IDgCrB,EAA4B;AsCnCrC,ArCGgC,AkCW/B,AEhBmB,AxBgBtB,ADCiC,AZqB/B,AkCVE,AEMJ,GvBfF,CwBnBwB,EDkClB,EEhCE,ADFoB,AzBiBO,AZqB3BY,CqCtCqB,AH4BlBgE,AEDQ,InCtBwB,AWYH,C0Bf1B,C1Be4B,AZqB3B,GsCpCG,AtCoCA,IsCpCd,CtCoCmBzE,CsCpCD,CDFuB,CAAC,GrCsC5B,AkCVZ,CG5BuC,ArCsCfV,AkCVEqB,CG5BJ,AH4BtB,CG5BkB,CrCsCN,AkCViBG,ClCU/B,CqCtCmD,EH4BjD,CG5BoD,CAAC,AH4BlBmD,EAAnC,EG5BoD,AH4Bb,CG5BrB,AH4BlB;AI1BkB,ArCGoB,AuBA5C3C,AaLgE,AxBoBhE,ADHkC,AZqB9B,AkCV8C,AEOhD,IZ9BI,EY8BA,EnC9BsC,ADiCRpC,CCjCS,AmCsB1B,EnCtB4B,EqCHhB,ErCGY,ADiCA,CwBjCzB,EcHM,AtCoCsBuB,CwBjCzB,MxBiCgC,CAACvB,OAAR,CAAgBe,KAAhB,EAA1C,SwBjCJqB;AcHoC,ArCGiB,AkCYjDD,AtBIJ,ADJe,AONb,AnB4BE,AkCVH,AEOC,CFfF,EAUA,EtBdc,CuBAN,ACmBF,CxBlBS,CXbsC,ADkC7C3B,CClC8C,AmCsBnC,EnCtBqC,EDkC3C,EmCtBI,CnCsBDe,EmCtBI,AhBNlB,CAAI,EAAJ,CAAI,CgBMmB,AnCsBF,CmCtBG,AnCsBFpB,CmB5BtB,CgBMEgC,EhBNE,AnB4BU,CAAab,KAAb,CAAZ,KmB5BO;AlBNgC,AuBE3C,AWWIa,AEjBF,AxBqBF,ADJgB,AOPH,AnB6BTnC,AkCRJ,AEKE,IpCGEA,EmCtBI,AvBAQ,AwBmBV,CnChC8B,EuBE3B,AaNA,AzBiBU,AOPC,AiBgBD,ExBTE,AZsBV,CAACiB,CqCvCV,ClBUuB,CgBOrBkB,AvBAW,CYXf,CAAiB,AWWE,AhBPC,CAAS,AnB6BzB,CAAe3B,EwBjCnB,ALIa,EKJU,CxBiCC,EwBjCxB,AWWI2B,EXXwB,AxBiCA,CAAC,CAAV,GAAcnC,KwBjCjC,EAAwC,AxBiCA,CAACM,MAAtB,EwBjCnB,CxBiCkDE,CwBjCC,GAAnD,CxBiCI,CwBjCoD,CxBiCC,CAArD,EAAwDJ,GAAxD,EAA6DO,KAA7D;AsCrCA,ArCEyD,AuBG3D,AWWA,AEjBD,AxBqBD,ADL2B,AOPK,AnB8B5B,AkCRJ,AEKE,CjB3BA,EAEA,GgBMM,AvBDmB,AwBoBrB,EEnCE,CFwBW,EZnBR,AZUqB,AZuBrB,EYvBuB,CuBClB,CnCsBDZ,CsCtCX,CHgBe,CGhBH,CHgBd,MnCsBS,CAAeC,OAAf,CAAP;AsCtCc,AdMd,AWUF,AvBDiC,AOJjC,AnB4BC,AoCHD,GpC9DqB,GsC0BL,AHgBK,ACoBjB,EZ9BE,AZS2B,CwBShB,GZlBP,CZS4B,C0Bfd,CAAC,AHgBK,AvBDU,CYT1B,EWUmB,EGhBH,AHgB9B,CGhB+B,EAAN,CAAS,EdM5B,EcNmB,CAAc,CdMX,GAAG,CcNN,EAAqB,CdMX,KcNV,EAA6B,EdMpD,EAA0C,UcNnB,EAAD,CAAR;AAAuD,ArCIrE,AuBE4C,AWY9C,AEjBF,AzBckC,AZ0BhC,AoCJA,ODnBO,ACmBF,CnCjCC,CoCHC,CDuBU,EDNjB,CXZqD,AWYxC,ClCdD,CAAC,EuBEiC,CaLhD,CAAmB,CFiBjB,ClCdM,AkCcc,EEjBtB,EpCGyB,AoCHA,KAAzB,CpCG+B,AkCcP,ClCdQ,AoCHA,GFiBV,ClCdG,CkCcK,AEjB9B,CFiBsB,CEjBiB,CpCGC,AkCcP,MlCda,CAAC,IAA3C,EAAiD;AAC/CmC,AuBCqD,AWarD,AEjBJ,AzBaa,AZ2Bb,AkCXFsC,AEOE,KxBxBY,CyBZR,CzBcS,AwBsBR,CDnBG,CAAC,ClCdD,AmCmBS,CCtBR,CAAC,AH6BA,CCZG,ADYFxE,CjC1BC,AkCcE,GlCdC,CAAXkC,AkCcA,AEjBJ,EFiBoB,AEjBJ,EH6BlB,CAAuBR,GAAvB,GAA6B,SAASA,GAAT,CAAcF,CAAd,EAAiBG,IAAjB,EAAuBmD,EAAvB,EAA2B;AI9BpD,ArCIE5C,AkCeA,AElBc,AzBcJ,AOJd,AnB+BA,AkCXE,AEOF,ICrCkB,EzBcJ,AsBgBPP,CEOF,CCrCiB,CzBcL,CXXC,AkCeR,ADYC,AERM,CEvBR,AHmBE,AElBc,AzBcN,I0BfjB,A1BeW,AsBgBG,CCZZ,ClCfqB,CkCeP,AhBRlB,CAAI,ClBPwB,AoCHM,AH8Bb,CAAnB,EAAuBA,CjC3BO,AoCHd,AlBUlB,ClBPiC,AkBO7B,EeoByB,CjC3BD,AkBO5B,ClBPqC,CiC2BL,CfpB5B,AeoBqB,IjC3BkB,CAAC,IAAP,CAAY,EkBOrC,IlBPgB,EAA6B,MAAM,CAAC,IAAP,CAAY,MAAzC,CAAxBO;AqCHH,AdKC,AWcI,AEnBgC,AzBcb,AOHvB,AnB+BFX,AkCXE,AEOF,EpCIAA,EavBW,EDLc,AsBiBlBuD,CEOF,CZjCC,AWcA,ADYG,CfpBA,AnB+BF,CoCpBU,CZjBR,AXcS,ADLY,AZ4BrB,EmCvBI,AvBLmB,AsBiBlB,CrBPd,AMbc,EKNA,AWcE/B,EDYG,CV1BF,AU0Bf,CfpBO,CAAY,AnB+BHvB,AkCXKsD,CV1BH,AWcA,AhBRX,AnB+BA,CwBrCK,AWcO,AtBKrB,AqBOyB,CfpBD,AnB+BH,EwBrCG,AU0BI,CV1Bd,ELMZ,CKN0B,AXmB5B,CAAY,AqBOqBzE,CCZjB0C,CAAe,GAAfA,CtBKhB,AqBOuB,CV1Ba,AWcA,CXdC,AWcA,AtBKjB,GsBLoB,CXdJ,AWcpBA,CXdP,AWcH,CXdJ,EAA2C,AXmB7C,EAAsC;AZpBlC,AuBEAb,AWcI,AvBNyB,AOFjC,AnB+BE,AkCVF,AEMA,CjB7BA,EAIA,GemBIH,CEMC,CDnBG,AvBNyB,CZ6B1B,CwBrCC,AYgBS,EFWP,CjC7BC,AWU2B,AZ6B3B3B,CAAC,CmCvBG,AvBNyB,AsBmB3B,CV3BC,CvBFC,ADuCA,AkCVf,CCbkB,AnCuBhB,CwBrCe,CvBFC,ADuCAA,CAAC,EwBrCE,AWcE,CXdD,AWcE,AnCuBF,GCvCX,CkCgBO,CAAW,AnCuBFL,ECvCE,GuBEzBmC,CWcI,AtBIoB,CbmBN,CCvCa,ADuCA7B,CCvCC,AYoBL,IZpBF,CAAY,ADuCvC,EAAyCD,CAAC,GCvCG,CAAC,ADuCA,CAA9C,EACEoB,CCxCqC,ADwCpC,CCxCgD,ADwC/C,KAAKzB,CCxC8B,GAAqB,GDwCxD,CCxCmC,ADwCtBK,CAAb,CAAD,CCxCgE,CAAxC,ADwCN,KCxCoD,ADwC/CL,MCxCqD,CAAC,ADwC3D,CAAaK,CAAC,ECxCsC,CAAY,ADwC/C,CAAjB,CAAlB,CAAD,GCxCyF,CAAC,IAAP,CAAY,MAAZ,GAAqB,IAArB,GAA4B,CAAxC,CAAvE,EAAmH;AqCFvH8B,ArCGM,AkCgBC,AEpBP,AxBwBE,ADX8B,AOChC,AnB8BC,AkCXD,AEMA,GpCpEqB,GsC8BjB,ADDA,CxBwBG,AqBSFX,AEMA,CnCnCC,EmCiBW,CCrBR,CCCC,ArCGA,AoCJA,CxBwBR,CqBSF,CIhCa,AJgCA,CrBTG,GyBvBC,ADDjB,CCCkB,CDDD,CxBwBf,GqBSqBgE,GAAV,EIhCbrD,AJgC4B9B,CIhDsB,AJgDrC,CI/Bf,CJ+BiC;AjC7BjB,AuBEV,AaNe,AxByBjB,ADZW,AZiCb,AkCbiC,AEOjC,ICxCmB,CzBWP,ECcL,ADXM,AwB0BR,CnCpCS,AoCJS,EbMf,AYeS,CCrBS,AHiCc2B,CjC7BtB,GYqBhB,CWnBY,CAAC,AU2B+B,CrBR5B,AqBQ6BhB,GGjCX,CHiCI,CAAYS,CAAC,CV3B7C,AaNW,AHiCmC+D,CrBRpD,EqBQmD,CV3B1B,CAAnB,AU2BmDnF,CAAN,CAAb,CAAP,CV3BD,YAAY,CAAC,IAAD,CAApC,IAA8C,YAAY,CAAC,IAAb,CAAkB,IAAI,CAAC,QAAvB,CAA9C,IAAkF,IAAI,CAAC,eAAL,IAAwB,OAA9G,EACN;AcJE,ArCCsB,AuBGhB,AWcA,AErBkC,AxB0BxC,ADZc,AZiCd,AkCdiE,AEQjE,GFRA,EAAmEuB,CI9B/D,AHkBE,AvBPQ,C0BXT,AFsCA,CnCrCiB,CWUL,AsBmBjB,CEZiB,CxBPE,AsBmBsDmD,CjC7B/C,CqCDf,AHkBE,ADYb,CI9BY,CdIC,AZOA,G0BXR,CAAY,CdIX,GcJD,CAAiB,SAAlB,IAA+B,aAAa,CAAC,KAAD,EAAQ,IAAR,EAAc,QAAd,CAAhD,EACF;AAAI,ArCCG,AuBEa,AWeZ,AvBRmB,AOCzB,AnBiCA,AkCdA,AEQA,MDpBM,AvBRmB,CwB4BpB,EFRE/C,CEbU,CEjBR,A1BUqB,EAAE,E0BV9B,AHkBa,ADYf,CCZgB,EhBPhB,CAAI,CgBOE,CAAe,ChBPrB,CAAI,EgBOE,ChBPN,GAAI,YAAM;AmBXG,AHmBP,AEtBN,AzBaiC,AOE/B,AnBiCFN,AkCdD,AEQC,CFfF,ClCqBEA,CsChEkD,AJoDpD,CI/BA,EDLM,CD0CC,CxB7B4B,COExB,AnBiCF,CoC5BU,CCpBR,ArCgDA,CqChDC,CzBa4B,COExB,CPF0B,IyBbxC,ClBeS,CkBfQ,AlBeI,AnBiCHC,CmBjCT,EAAe,AnBiCf,EAAc,CmBjCrB;AmBTJ,ArCDM,AuBEA,AWgBC,AEvBc,AzBaa,AOGhC,AnBiCEA,AkCZJ,AEME,CjB7BA,EAIA,CkBlBmB,ArCiDjBA,EwB1CE,CxB0CC,AoCNA,CC3CkB,CbOhB,CxB0CC5B,AoC7BS,CCpBS,CbOhB,CvBFC,OuBEO,AxB0CA,CwB1CC,AaPiB,ArCiDjB6B,IwB1CD,AaPC,ArCiDX,CwB1CE,AxB0CcD,GAAhB,CwB1CoB,AxB0C1B,GwB1C6B,GAAG,CAAN,GAAU,CAAV,GAAc,CAAhC,CAAN;AvBFQ,AuBGR,AaRoC,AzBa3B,AOMb,AnB+BE,AkCZJ,AEME,KxBlCY,CYFR,CZMS,AwB8BR,CnCvCO,AD6CN,CC7CO,AD6CNA,CwB1CC,CvBHO,AmCeE,CpC8BP,CwB1CC,AxB0CAE,EC7CA,ED6CT,CavBF,CWnBI,AxB0Ca,OAAO,EavBxB,EbuBiB,OavBjB,OAAA,CAAQ,KAAR,EAAe;AZtBM,AuBIlB,AWgBD,AtBGAM,ADdY,AZqCZ,AoCNF,KZ1CE,CXyBI,ADdQ,CwB+BT,CnCxCgB,AkCoBb,ClCpBc,AWSL,CCcP,CZvBc,AuBIf,AZKU,AZqCV,EmC1BP,AtBGW,CAAXA,CWnBW,AWgBE,AvBXF,AZqCApC,IwB1CI,CAAC,KxB0CT,CAAe4B,EwB1CX,CxB0Cc,CAAC3B,EwB1CE,CAArB,EAAwB,ExB0CT,CAAYmB,MAAZ,CAAmB,KAAKW,QAAL,CAAcH,GAAd,EAAmB3B,OAAtC,CAAf,CAAP;AsC5CF,ArCFW,AuBKP,AWgBA,AEzBJ,AxB2BEmC,ADduB,AZsCxB,AoChCgB,CAAZ,EpClDgB,GsCqCjB,AdGA,AWgBA,AEzBA,AxB2BY,ADdS,CXTrB,GuBKI,CaTC,AxB2BY,ADdS,E0BPnB,AdGA,AZIqB,C0BPpB,AzBqBY,CsBFT,CAAC,AEzBF,CbSC,CAAC,EcHZ,AHmBA,CGnBe,AHmBE,AEzBjB,IFyBqB,AEzBF,CxB2Ba,CAAC,CyBrBjC,AdGO,CcHgB,AdGA,AWgBN,CAAS,AEzBF,CAAC,CbSC,AXkBM,CyBrBhC,AzBqBFA,CsBFgC,CAAC,CXhBD,CcHC,CAA/B,AHmBiB,CXhBgB,AWgBjC,AEzBJ,EAAqC,CbSG,CcFnC,AdE6B,GAAU,CAAC,CAAX,GAAe,CAAnB,CAAnB,CcFK,AdEZ,CcFa,MAAD,EAAS,KAAT,CAAX,IAA8B,gCAAc,YAAd,CAA2B,MAA3B,CAD/B,CAAJ,EACwE;AACtE,ArCHC,AkCqBGA,AE1BiC,AzBaN,AOMjC,AnBkCA,AkCfFsC,IGtCyC,ICQjC,ADRqC,AzBaV,EuBavB,CE1BoC,CHsCpC,CtBzB4B,AsByB3B7C,CCZG,CvBb0B,C0BLtC,CHkBe,ADYnB,CI9BkB,AnBWhB,CAAI,CemBc,CCZG,CAAC,AE1BmC,ElBmBzD,CAAI,CgBOa,AE1BsB,CF0BZ,ChBP3B,CemB2BA,CCZV,CAAc,AhBP3B,EemBc,CAAe6D,ECZG,CAAC,GDYnB,ECZa,ADYU,CCZE,AhBP/B,OgBOmB,CAAd,CAAXtD;AGjBFA,AdCA,AWgBEA,AE1BuD,AxB4B3D,ADf8B,AOO9BA,AnBkCF,AkCfA,AEQF,IAAIwE,EvBnBI,AMRA,AemBFlB,CrBXG,GyBnBC,AdCA,AWgB8C,ACqB9C,EEtCE,AzBmBE,AMRA,AemBF,CCbJtD,ACqBK,CZrCC,CcDC,AdCA,ALUE,KmBXG,AzBmBhB,AMRkB,AiB2BFyE,CEtCC,CzBmBC,CyBnBP,CAAS,AJ8BAnC,EfnBpBtC,GiB2BS,CZrCH,GYqCuB,CZrCC,CcDnB,CAAqB,AJ8BlC,EAAoC,GV7BhC,EcDqC,AdCF,CcDG,AFsC/B,IAAmC,EEtCZ,EAArB,EAAuC,OAAO,CAAC,EFsCE0E,GEtCV,CFsCN,CEtCjC,AFsCsDD,CEtC/DzE,QFsCwE,CAAC2E,SAA/B,CAAhD;AErCM,ArCJF,AuBIuC,AXkBnB,ADfT,AZ0Cb,AkChBsC,AESxC,IAAIC,CxBvCU,C0BCR,C1BIS,C0BJP,ArCJA,CqCIC,AzBkBoB5E,CuBoBnB,CFTqCsD,ErBXd,AuBoBpB,CnC1CC,AYsBoB,CZtBnB,AuBImC,EXkBb,AqBWG,CrBXhB,EWlBmB,AXkBH,AuBoBpBmB,CEtCd,AzBkBmC,CyBlBnB,ArCJd,CAAe,CYsBqB,GZtBpC,EYsBgB,AuBoBX,EnC1CkB,AYsBoB,CAAC,CyBlBnB,AFsCA,CEtCC,AzBkBV,EACxB,CZvBqC,CAAC,EqCIL,EAAS,EFsC7B,CnC1CkB,CAAe,CqCIb,CAAX,AFsC0B,EnC1C5C,CqCI+C,CrCJC,amC0CaI,IAAjB,CAAsBJ,SEtCT,AFsCkB,CAACK,MAAhC,CEtCG,AFsCnD,CEtCsE,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,IAAI,CAAC,GAApB,EAAyB,CAAC,CAA1B,CAAf,CAAnB,EAAiE,CAAC,CAAlE,CAA7B,GACE,gCAAc,MAAd,CAAqB,EAAE,CAAC,GAAxB,EAA6B,IAAI,CAAC,GAAL,GAAW,MAAM,CAAC,QAA/C,CADlB;AAEA,ArCLA9E,AuBGiD,AWkBjD,AE3BJ,AxB4BI,ADfU,AOOZ,AnBmCFJ,AkCjBqD,AEUvD,EpCOEA,EoCPEmF,EErCE,AzBiBA,ADfU,COOP/E,CnBmCD,CqCvDC,AzBaU,AwBmCV,CnC1CC,AkCqBE,AtBCF,Ab2BA,CY1CW,AOOR,CAAC,AiB4BF,CChDV,CCWY,AHgBE,AtBCF,CyBjBC,ArCLA,AWOA,AOOE,CAAb,CmBTa,CAAC,ArCLA,AkCqBE,AhBPA,CNQD,AMRE,AiB4BFyE,CpCOAjF,EmBnCK,CnBmCd,Ea3BI,Ab2BU,Ca3BE,CsBDG,AtBCF,CsBDG,AhBPA,AiB4BlB,CnC1CiB,AkBcE,ClBdD,AYsBA,CAAJ,CyBjBX,AFqCiB,EErClB,AzBiBoB,CyBjB5B,AzBiBQ,AMRV,ClBdgC,CAAC,AkCqBjB,AhBPmB,CgBOC,AhBPA,CNQD,CMRnC,EgBOgB,AhBNpB,CiB2BY,CnC1CiB,AkCqBiB,AtBCF,EZtBE,CkCqBxC,ACqByC,EDrBI,CtBCZ,CAAY,CZtBC,AYsBA,CZtBC,EYsBE,CAAJ,GAAQ,CZtB9B,AYsBU,AuBoBqBqF,CvBpBtD,CZtBwD,EmC0Cf,CAAkBJ,CnC1CC,GAAG,CAAxC,EAA2C,EmC0CE,CAACE,CnC1CC,GAAG,CAAlD,CAAvB3E,GmC0CyC,CAA/C;AEpCK,AHgBK,AE3BT,AxB2B2D,ADfjC,AOQrB,AnBmCFR,AoCPJ,IpCOIA,AoCPAwF,ExBpCuB,CZ2CpB,AoCPA,CDrBG,AhBPA,EnBmCApH,AoCPA,CDrBG,AvBfmB,EAAE,CuBelB,AhBPA,CAAC,CAAD,CAAN,AiB4BO6G,CjB5BG,EnBmCA,CAAChF,EmC5BI,AhBPf,CgBOgB,AhBPA,CnBmChB,CAAgBD,AoCPhB,CjB5BA,EnBmCA,CAAN,AoCP0B,CDrBd,AhBPiB,CgBOC,IAAlB,CAAuB,AhBPA,CAAC,CAAD,CAAN,CAAU,AiB4BjC,GjB5BuB,CAAc,AiB4BF,CDrBG,CAAC,ChBP3C,EAA4C,CiB4BCqF,GDrBZ,CAAkB,ACqBZ,CAAWJ,GDrBjB,CAAuB,KCqBG,CDrB1B,ACqB2BQ,GDrBK,CAAvD,CAAN,GCqBmC,CAA7C;AnC1CM,AuBGA,AWmBE,AtBDqD,ADf1B,AOQiB,AnBoChD,AkClBF,AEWF,IAAIC,EZxCE,AYwCA,EDrBE,AvBhB2B,AZ4C3B,CwB/CC,AxB+CA1F,AkClBA8D,AEWA,CnC3CC,EuBGE,AxB+CA,CY5C4B,AOQmB,AnBoC9C5D,EClDP,AuBGS,AZG2B,AsB0B3B,CCVG,ACqBF+E,CnC3CD,AkCsBI,AnC4Bf,CwB/Cc,ALWkC,CKXxC,AxB+CO,AkClBAnB,ECVX,CXnBc,AWmBE,GDUC,AEWhB,CDrBmB,AnC4BF,AkClBAnF,GEWG,CZxCC,AWmBN,AnC4BL,CwB/CY,AWmBE,CDUxB,ECVe,CXnBM,AU6BK,CV7BvB,AWmB0B,GXnBC,AU6BAoF,CV7BjC,AWmBkB,ACqBf,EDrBmC,CDUT,CAASD,AEWA,EDrBpB,EAA0B,EDUf,CAA1B,GAA6ChB,ECVI,CAAC,MAAT,GAAkB,ADUF,CAACO,KAAjE,GCV2E,CAAC,MAAtD,CAAhB,SCqBoF6B,IAAhD,CAAqDD,SAAS,CAACE,SAA/D,CAA5C;AErCI,ArCNa,AuBIZ,AWmBI,AvBjByB,AOQyB,AnBqCvD,AkClBH,AEWD,CFdA,GEcIQ,CZ5CO,McMA,AdFA,AxB+CA,IsC7CP,ArCNoB,ADmDTvH,KCnDE,GmC4CM,EpCOZ,CAAe,AoCPA4G,KpCOK7E,CoCPC,KAAKqF,EpCOX,CAAcxF,AoCPA,GpCOd,CoCPkB,CpCOC3B,AoCPA2G,MAAM,CpCOzB,AoCP0B,CpCOCxF,AoCPF,CAAP,GAAa,EpCO/B,AoCPM,CpCO4BQ,AoCPlC,GpCOqC,CAAC3B,AoCPAkH,KAAK,EpCO3C,CAAf,CAAP,AoCPqEC,GAAzE,EAEA;AEvCG,ArCP0B,AuBKvB,AXiBF,ADhBW,AOQiD,AnBsC7D,GsC7EiD,AtCd7B,CsCgDvB,C1BRc,CALH,GC0BA,IWjBE,CXiBG,IWjBV,EXiBK,CAAY,KAAK,GAAG,CAApB,IAAyB,IAAzB,GAAgC,aAAa,CAAC,KAAD,CAApD;AZrBC,AuBKA,AWkBG,AtBDN,ADhBE,AZ+CF,AkCnBF,AEYA,GvBtBE,CDlBE,AsB4BAzB,CEYC,CDvBG,EDWA,CtB5BJ,AwBwCKrF,CAAC,CxBxCN,AsB4BO,ECXI,ACuBF,CAAb,EAAgBA,CAAC,GxBxCb,AwBwCgB,EAApB,EFZyB,AEYDA,CxBxCpB,AwBwCqB,CxBxCf,CwBwCV,EAA6BoG,CxBxCzB,EAAY,CwBwCiB,CFZEhC,AEYD,KAAKpE,CAAN,CAAJ,GAAeoG,EFZnB,EAAwB,AEYD,CAAC,KAAKpG,CAAN,CAAJ,GAAekH,MAAM,CAAClH,CAAD,CAApC,EAE7B;AZ1CG,AZAe,AOQd,AnBwCF,AkCnBA,SfrBS,EeqBAqF,EtB7Bc,AOQrB,CPRsB,CsB6BxB,CAAcD,ItB7BgB,EsB6B9B,EtB7BkC,AsB6BZ,CtB7Ba,KAAL,CAAW,KAAlB,EAAyB,CAAzB,CAAP;A0BGhB,ArCRE,AuBMH,AWiBK,AvBlBgD,AOSpD,AnBwCA,AkCnBEhB,Cf1BF,EAOA,ClBhBE,AiCmCAA,EI3BE,ErCRE,EkCuBI,EGfA,ArCRA,CqCQC,AHeP,EAAS,ClCvBX,AiCmCY,CAACkB,EI3BX,EJ2BF,CAAkB,CI3BC,GJ2BnB,CI3BuB,CAAC,KAAL,IAAc,OAAO,CAAC,KAAR,GAAgB,CAAnD,EAAsD;AACpD,ArCTc,AkCuBD,AvB7BN,AOuBT,AnBsCA7D,AkCnBE,AEYJ,EpCOEA,CY/FmB,CXwCH,CmCgDb,GEvCG,ArCTc,AkCuBL,CDaR2D,AEYApF,CpCOC,AoCPA,EnChDgB,ADuDd,CmChCU,ACyBT,CDzBU,ACyBvB,CFZI,CI3BA,ArCTc,AmCgDFA,CAAC,CEvCD,AzBed,AqBYgBoF,GEYG,CpCOA9D,CmChCJ,ACyBjB,CDzBiC,ADa7B,ClCmBQ,AoCPatB,CAAC,CDzBT,AnCgCS,CoCP1B,CDzBsC,CtBCpC,AuBwB4BoG,IAAI,CAACpG,CDzBlB,ACyBmB,GvBxBlC,AuBwBqC,GAAL,CAAJ,GAAgB,EvBxB5C,CAAU,GAAV,AuBwBkDA,CAAtB,CvBxBb,CuB0BjB,IvB1BE,EAA0B;AyBfV,ArCRf,AuBOI,AWeuC,AhBJ5C,AnBqCE,AkCnBD,MI5Be,EtC+CV2B,CwBhDQ,KcCU,AtC+CZ,CsC/Ca,EdDpB,AxBgDU,CwBhDQ,EcCO,CAAC,AtC+C7B,CwBhDG,CcCoB,CAAS,AdDL,KXgBT,CyBfK,CAAgB,CzBelB,GyBfsB,CAAC,GAAL,GAAW,MAAM,CAAC,QAAlC,EAA4C,IAAI,CAAC,GAAjD,EAAsD,cAAtD,EAAD,CAAR;AAAgF,ArCPlG,AuBOE,AWeK,AtBAuB,AMJ5B,AnBqCEL,EEtGJ,EFsGIA,CmC3CA,EnC2CG,EwBhDE,AXe4B,CbiC3B5B,CmCjCG,EXfA,CAAC,AXe4B,IAAL,CAAU,CbiC3B,CAAC6B,CwBhDZ,AXe4B,EAAe,CbiC1C,CwBhDgB,AxBgDAD,CwBhDjB,EXe4B,AbiC3B,CwBhDoB,AxBgD1B,CajCuD,GWfzB,CAAC,CXeE,CAAP,OWfA,CAAe,MAApC,GAA6C,IAAI,CAAC,UAAL,CAAgB,MAApE;AACD,AtBtDD,AiCqEQ,AtBDyD,AMH/D,AekBA,AEYF,GvBzBE,EuByBG,CD1BG,ADcD8C,GEYEpE,CAAC,GAAG,ED1BI,AC0BjB,CD1BkB,CC0BDA,CFZf,AEYgB,EFZIqF,EEYA,EFZI,AEY1B,CD1BQ,ADcmBE,CCdC,AC0BFvF,CAAC,EAA3B,CD1BgC,CAAC,AC0BF,GFZT,CCdd,EDc+BoE,YAAjB;AI7BlB,ApCrDJ,AiCqEO,AvBfL,AOYA,AnBmCE,AkClBFiB,AEYAe,ExBzCA,AsB6BAf,AEYAe,IFZI,AEYA,CFZCxG,AEYAI,CAAD,CpCMG,AoCNP,EE1CS,C1BCC,AwByCAkH,CpCMClH,CY/CC,AZ+CA,CsChDV,CJ8BF,ClCkBe,CAAb,AoCNc,CFZCwF,AEYA2B,CpCMCnH,CAAC,GAAGsB,CkClBC,CAACmE,ClCkBC,CAAC9F,GoCNhB,CFZO,AEYaK,CFZEoE,AEYD,EpCMT,CAAYnE,AoCNA,EAAxB,CAAV,GpCME,EAAwCD,CAAC,AkClBC,IlCkBG,AkClBCoE,ClCkB9C,EACEzC,MAAM,GAAGA,AkCnB+C,CAAC/B,KlCmB1C,CAACa,GkCnBH,CAAjB,ElCmBa,CAAca,GAAG,CAAC3B,OAAJ,CAAYK,CAAZ,CAAd,CAAT;AsChDH,AdCI,AtBtDP,AUsDI,AOYF,AeiBAqF,AEYAgB,EFZAhB,AEYAgB,ExBzCE,EsB6BE,CAACzG,AEYA,CAACI,CZzCQ,AYyCT,CAAL,CxBzCS,EAAE,AwByCAkH,GFZX,CV7BK,AU6BUrH,CV7BQ,CYyCN,CxB1CL,AwB0CMsH,EZzCb,EAAwB,IU6B7B,EV7BK,CU6BwB9B,CV7BQ,AYyC1B,CAAoBrF,CAApB,CFZX,AEYA,GZzCK,EAAwC;AAC7C,AtBtDF,AiCqEM,AvBfF,AZ+CA,AkCjBF,AEWD,EAED,ExB3CI,EsB8BEiC,CV9BCH,CWeG,CvBfD,EYAE,AZAA,AZ+CAH,CmChCG,CAAC,AvBjBD,IZiDV,CwB/Cc,AXchB,GWdmB,CWef,EAAoB,AtBDxB,AqBgBsB,GV9BG,AU8BA,IV9BI,CAAxBG,CXcL,CWdgC,EXchC,CAAI,EWdiC,CXcrC,EWdwC,AXc/B,KAAT,CWd8C,CXc1B,GWd8B,QAAQ,CAAC,IAAD,CAA1D,EAAkE,OAAO,IAAI,KAA7E,GAAqF;AcArF,AdCE,AWeE,AvBfF,AZ+CD,AkClB0B7B,GlCpFN,CYuDnB,AsB6ByBA,ECdvB,EXfE,CcDC,A1BCA,CsB6B0B,CtB7BxB,CYAC,AU6ByB,EI9BnC,CHgBe,CXfD,EWeI,AvBlBN,IYGV,CWeqB,CXfH,EWeM,GtBFZ,CsBEgB,CAAC,CtBFd,QsBES,CAAe,GAAf,CAAmB,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAnB,CAAH,GAA8C,IAAI,CAAC,SAAtE;AGfL,AdAuB,AWgBhB,AtBHgB,ADZpB,AsB4BmCyF,ItB5BnC,EuBeI,ADa+BA,EtB5B/B,CCYuB,CDZrB,GYDqB,CXaK,ADhBtB,CuBmBG,EXhBO,CWgBJ,AtBHW,AqBgBoB,CrBhBV,CMFvC,AekBmD,ECb7B,AtBHO,EAAe,IsBG1B,CAAW/C,AtBHA,CMF7B,CNEmD,IsBGlB,AtBHJ,CsBGK,AtBHZ,GMFtB,EgBK6BA,CAAW,IhBLxC,CgBK6BA,CAAiB,CAAjBA,AhBLnB,EgBKuC,GAApBA,EAAyB,MAAzBA,CAAgC,SAAS,CAAC,OAAV,GAAoB,MAApB,CAA2B,QAA3B,CAAhCA,CAAX,EAAkFA,MAAI,CAAC,UAALA,GAAkB,CAApG,CAAZ;AXhB2B,AWiB3B,AtBJkD,ADXtD,AOUA,AnBqCF,AkCpBmC,AEcrC,IlCjGa,AUwDT,CsB2BuB,AEctB,IjB/BM,AiB+BFyE,GlCjGY,AUwDT,CuBeG,AC0Bf,CxBzCc,AOUE,CjBjEd,EkCgGehB,CD1BT,AvBpBM,COeH,CAAW,CiB+BtB,EAAuB,ClChGrB,AiBiES,CAAgB,CAAhB,CiB+BgB,CjB/BG,AiB+BFC,IlChG1B,CAAY,AiBiEH,AiB+BsB,CjB/BG,AiB+BFgB,KjB/BO,CjBjEvC,EAAqB,CiBiEZ,EAAoC,CjBjE7C,EAA2B,AkCgGD,CAAqBD,CjB/BG,EAAzC,CiB+BiB,CjB/B4B,AiB+BjC,EAAiCf,EjB/B7C,CAAP,EiB+ByD,CAACe,IAAD,CAAL,GAAchB,IAAI,CAACgB,IAAD,CAAlB;AEzCxD,ApCtDI,AiCsEG,AvBfH,AOUF,AnBqCA,AkCrB0DzB,Gfd1D,CPZE,AsB0BwDA,GhCjFnD,EoCsDA,AJ2BwD,EAAE,CtB1BvD,EVvDR,AUuDU,CAAC,EVvDI,GoCsDnB,CAAqB,GpCtDjB,CoCsDJ,ApCvD6B,CAE7B,CoCqD2B,IAA3B,EAAiC;AAC/B,AdFE7D,AtBnDJ,AiCqEK,AvBhBW,AOad,AnBmCA,AkCtBmE4D,AEgB9D,GDxDL,EA8BK,CvBhBS,AZgDVlE,AkCtB+DkE,EV5B7D,CcEC,A1BAU,AwB0CH4B,CD1BJ,AnCgCV,CYhDmB,E0BAnB,AdFW,AxBkDA,EsChDE,AHgBR,CXlBS,AWkBE,AvBhBH,AwB0CR,CAAiBC,CvB9BtB,AqBc+E,CI1B9D,CJ0BgE,EI1B5D,AHdrB,ACwDK,EZ5CiB,AWkBE,AC0BK,CZ5CN,AWZvB,AtB0BA,CyBZyB,GdFH,CcEO,AdF3BzF,IXcF,GyBZqB,CzBYrB,CAAK,CyBZkC,EzBYvC,EyBZ2C,AzBYjC,CyBZkC,IzBY5C,EAAiB,IyBZI,EzBYrB,CyBZyD,CzBYhC,GyBZoC,CAAC,SAA9D,EACF;AAAI,AdFA,AtBnDJ,AiCsEI,AtBLAA,ADbwB,AOc1B,AnBmCE,AkCvB+D,AEiBjE,IZ5CE,EXcI,ADboB,E0BCpB,AdFA,CWmBG,CtBLC,CWdD,AxBkDA,CsChDC,CAAC,AzBYE,CAAXA,CWdW,CAAC,AxBkDAnC,OAAL,CsChDP,A1BD0C,AZiDtBM,EsChDA,AdFpB,AZC4C,IZiDrC,IAAuB,CAA9B;AsChDsB,AHiBf,AtBLP6B,ADbW,AZkDZ,AkCxBwB,AEkBzB,GFlBA,CCRS,CvBlBG,CCaI,ADnBJ,O0BOmB,AHiBtB,CtBLe,CsBKd,EGjBc,AzBYG,KAAK,EsBKvB,MtBLkB,GAAgB,CAAhB,GAAoB,CAA7CA;AyBZ6B,AdD7B,AtBnDA,AiCqEiB,AtBLjBA,ADZA,AwB4CF,ID3BmB,AvBjBjB,ECYgD,AuBgC9C0F,ClChGG,CsBmDD,CAAC,AZCL,EVpDA,AUoDA,EYDA,AWkBiB,CjCrEL,AWgE4C,CWb/C,AWkBU,AC2BR,EvBhCgD,CXhE3C,AkCgGFP,ExB5Cd,EVpDoB,AWgE4C,CXhEhE,CiCqEO,CvBjBP,GAAQ,ECYmD,GAAgB,CAAhB,GAAoB,AuBgC9C,CvBhCjCnF,IuBgCsCyF,KAAK,CAACE,OAAN,IAAiBF,KAAK,CAACG,MAAvB,IAAiCH,KAAK,CAACI,OAA5C,CAAnB,IACd,CAACjB,MAAM,IAAIM,EAAX,KAAkBO,KAAK,CAACK,QAAxB,IAAoCL,KAAK,CAACxH,GAA1C,IAAiDwH,KAAK,CAACxH,GAAN,CAAUE,MAAV,IAAoB,CADvE;AE5CmC,AdDtB,AWkBiB,AvBjBlB,AZ3DS,AkCsFrBoF,AEmBA,CpCzGF,CkCsFEA,ClCyBF,CmCnCgC,EDU1B,AEmBAxC,CFnBCjD,GEmBG,GZ/CY,AWkBU,AvBjBX,AwB8CP,CAAC4H,CD7BmB,CDUhC,CAAe5B,CV5BF,CZCD,COcZ,GiBgCY,CFnBZ,GAAyB,AEmBC2B,GjBhC1B,EiBgC+B,CAACxH,GFnBE6F,AEmBvB,GjBhCX,CiBiCE,CAAC2B,EFpBsB,GfbzB,Aea6C,AEoBrC,CjBjCA,AiBiCCK,EjBjCT,EAAY,IiBiCT,GjBjCH,AiBiCoBvB,EjBjCe,GiBiChC,GAAyBD,IAA1B,EAAgCmB,KAAK,CAACM,OAAtC,CADS,IAETN,KAAK,CAACxH,GAFG,IAEI,cAFf,CAL6B,CAQ7B;AZlDyB,AtBlDvB,AiCoEO,AtBJP,ADbyB,AZqD7B,AkCzBI,GCXA,GjCpEI,CWgEC+B,GXhEG,CWgEC,AqBeF,CrBfG,EXhEE,CWgEC,CAAb,AqBeYsD,EhC/EZ,AWgEgB,CAAC,CXhED,EWgEI,AqBepB,KrBfyB,MAAL,AMCH,CNDe,EMCZ,INDpB,EAAwC,CAAC,IAAI,CAA7C,EAAgD,UMCtB,MAAO,CACrC;AmBdE,ApCpDoB,AWiEhBtD,ADrBQ,AOuBd,AnBsCA,AkCzBG,AEqBD,CDnFF,EvBzBqB,AsBqFnB,GEuBIe,EvBpCI,CyBbD,ApCpDkBf,CkCqGjB,GlCrGqB,AWiEhB,CyBbb,ApCpD8B,AkCqGlB,EvBpCI,CXjEiB,CAAb,CkCqGpB,ClCrGoC,CAAC,AWiEhB,AuBoCFe,GlCrGqB,CkCqGjB,EvBpCP,CAAY,AuBoCF,CvBpCV,EXjE+B,CAAC,EWiEd,EuBoCf,ElCrGC,CWiEmB,CXjEiB,CAAC,EAArC,EACtB,EWgEoC,GAAgB,IAAhB,GAAuB,CAAzC,CAAZf;AyBZL,AdFG,AtBlDE,AiBmEN,AnBsCA,AoCJE,EE/CF,EdJI,EYmDEe,IAAI,CZnDC,AtBlDA,GsBkDG,AYmDA,ClCrGR,IAAa,AkCqGjB,EZnDmB,AYmDAA,IZnDI,AYmDA,ClCrGC,CAAC,CAAD,AkCqGE,ClCrGT,CsBkDW,AtBlDA,IsBkDI,CAA9B,CYmDiB,CAVU,ClC3FzB,AkCsGJ;AE/CF,AdJI,AtBnD0B,AWiExB,ADXJ,AsB2BAwC,EtB3BA,AsB2BAA,EV9BE,EZGE,AsB2BA,CAACzF,CrBhBG,ADXF,CYHC,GAAG,CXcG,GAAG,AqBgBhB,CV9Be,AU8BAgF,ErBhBX,EWde,AXcA,KWdK,CU8BxB,GV9B4B,AU8BA,QV9BQ,CAAC,AU8BAA,IV9BD,CAAlC,KU8B0B,CAAqBrD,IAArB,EAA2BmD,EAA3B,EAA+B;AIzB7D,AdJG,AtBpDmC,AWiEf,ADVnB,AOaA5C,AnBsCJpC,AkCxBI,AEqBF,IxBhDE,EOaI,AiBmCFmD,EFrBEtB,CtB3BC,CZmDC,AoCHA,CxBhDC,AZmDAA,CkCxBC,EfdI,AiBmCF,CpCGd,CkCxBgB,CfdG,AecX,ClCwBU,EoCHhB,CFrBmBmD,CEqBC7B,CFrBC,CfdG,CAAC,CiBmCD,CFrBC,ClCwBAvC,CoCHE,GjBnCV,AecaL,CfdG,AnBsCjB,EAAgB,GkCxB9B,EAAoC,AEqBlB,EjBnClB6B;AmBXJ,AdJC,AtBpDC,AiCuEF,AtBP4B,ADXpB,AOcJA,AnBuCF,AkCzBwC,AEsBxC,GxBhHmB,GuBgFrB,AhBJ8C,AnBuCxCxB,AoCHAuC,CDhCN,GCgCU,CpCGC,EkCzBsC,CEsBnC,EDhCd,AhBJwD,CgBItD,ADUwC,CEsBxC,CjBpCyD,CiBoCvCA,GjBpChBf,AnBuCmBpC,CoCHC,GAAG,EDhC3B,GAAE,CnCmCA,EAAiC,CoCHf,KDhClB,CnCmCwCY,KAAP,MmCnCjC,CAAa,SAAb,EAAwB,SAAxB,EAAmC,WAAnC,EAAgD,aAAhD,EAA+D;AGdjE,AHeE,AnCmCA,AkC1BqD,AEuBrD,MDhCM,AnCmCFX,AoCHAkD,IAAI,GpCGG,CmCnCG,ACgCF,EpCGE,CmCnCG,CnCmCjB,CmCnCA,ECgCA,EAAqBA,IAAI,GAAG,YAAP;AE9CvB,AdJA,AWkBE,AtBPIf,AMGF,AnBwCF,AoCHA,MDjCqB,AnCoCjBxB,AoCHAuC,CjBrCGf,CNHC,CWXD,CYmDC,CjBrCG,AnBwCX,CmBxCY,CnBwCD,CoCHC,CvBxCG,AMGA,CgBIgB,AhBJ7B,ENHgB,AMGA,AnBwCF,CmCpCkB,AhBJf,CiBqCnB,CZnDF,CAAsB,ALcE,AnBwCFF,AoCHAiB,CvBxCG,CsBOgB,CXlBzC,CxBsDa,AoCHa,CZnDC,EXWP,AMGW,AiBqCF,CvBxCG,AMGA,AnBwCFvC,Ca3CG,GsBO/B,AtBPkC,Cb2CvB,EmBxCT,AnBwCiCX,EmBxCI,CAAC,AiBqCpB,EvBxCF,AMGhB,CNHEmC,CMGwC,AnBwCF,CAACnB,IAAR,CAAaiB,IAAb,EAAmBtB,KAAK,CAACsB,IAAD,CAAxB;AsCjDrC,AdJEE,AWkBEA,AtBREA,AMIA,AnBwCJ,AkC3BE,AEwBF,IjBrCI,EKdA,AWkBE,EtBRuC,Cb4CtC,AoCHAe,CZnDPf,CU2BS,ElC2BEpC,AoCHX,CDjCc,AhBJA,CNJsC,AqBiBvC2F,ECTI,AhBJA,CNJsC,CqBiB9C,CAAS,ECTI,CtBRsC,Ab4CrD,CAAe1F,CmBxClB,AeamByF,ECTrBtD,EtBRqD,CAAY,CAAC,Ab4C7D,AkC3BW,ClC2BlB,AkC3B8BpB,ErBjByC,GqBiBrD,CAAkBa,IrBjBmB,AqBiBrC,CrBjBdO,CqBiBsC4C,EAAxB,CAAT,CAAP;ACTA5C,AElBJ,AxBUMA,ADLJ,AOUI,AnBwCL,AkC3BE,AEwBF,CpCFD,CY7CE,CsBoBA,CfVI,EgBGyB,CvBbxB,CCK6E,CwBVpE,AzBKP,ECK8E,CMKzE,EgBGyB,AtBRmD,CwBV1F,AlBeiB,CkBfM,CFkBmB,CAAC,CtBRoD,GAAG,CMKzE,CkBfzB,AlBe0B,EkBfO,GxBU3BA,EsBQoC,EhBHpC,EgBGsD,QAAQ,CAAC,MAA3B,GAAoC,QAAQ,CAAC,GAAT,CAAa,QAAQ,CAAC,MAAT,GAAkB,CAA/B,CAApC,GAAwE,IAA9GA;AXjBF,AaAA,AzBKE,AOUC,IPVD,GYLGA,EaAE,CzBKC,CYLC,CZKC,CyBLC,CbAC,EZIL,CYJQ,GAAf,EAAoB,GAApB,EAAyB,GAAG,GAAG,GAAG,CAAC,AaA5B,CAAW,SbAlB,EAA6C;AcIxC,AdJ0C,AWmB7C,AEnBiB,AxBUf,ADJF,AZkDJ,AkC3BEuD,EAAAA,EG7BmB,AzBMjB,AZkDAxD,EkC3BE,CCVGC,ADUFlC,CV7B8C,AXU3C,CyBNM,ADJU,AzBMjB,EuBaI,AEnBe,AxBUf,ADJF,CYN8C,AWmB3C,EnCqCA,CwBxD8C,AWmB3C,AtBTA,CsBSb,ADUF,ClC2BeF,AkC3BAsF,CV7B8C,AWmB3C,AtBTd,CWV0D,AWmB3C,CtBTC,EsBSE,GDUtB,EIzBK,AtCoDP,CsCpDmC,AJyBP,CV7BqB,EAAyB,AWmBzC,CAAC,CGf3B,EAAmC,EHelB,ADUaA,CCVG,KGfjC,CHeH,CGfgD,AJyBxB,CCVoB,ADUDhF,CCVE,ADUrB,EIzBrB,AHeH,ADU8C,EIzBQ,AHeL;AGdrD,AdL4E,AWoBtE8B,AEpBuB,AxBWrBA,ADJF,AOUFA,AeaA,MIzBJ,ADL6B,AzBOvB,AOUE,EgBGE,CGfU,A1BEX,CCIG,CDJD,AsBuBA,CIzBY,AHeT,CvBdH,AOWI,CNNC,CsBSC,AnCsCFD,CmBzCG,AeaFuD,CIzBY,AzBMT,CyBNU,AzBMT,AMMA,CkBjBsB,AlBiBrB,EkBjBuB,CH8BjC,CAAYpF,CCVG,AhBHR,AeaP,CCVgB,AtBTR,AMMQ,AeavB,EIzBJ,CzBM8B,EsBSb,CAAgB,AhBH7B8B,CgBGa,CtBTE,CsBSiB,CEpBsB,CAAC,AxBWrB,GAAG,CsBSxB,CAA0B,EtBTE,CwBXa,IxBWpB,EsBSc,CAAC,AtBTA,CAAC,CAAhB,EsBSK,CAAe,AtBTA,CsBSf,CAA1B,CAAXA,AtBTuD,IAAI,GAAP,GAAa,CAAb,GAAiB,KAAnEA;AyBND,AdLqE,AWqBxE,AErBwB,AxBYpBA,ADJF,AOSFA,AecD,GAFD,GIxBK,A1BGD,AOS6B,EgBIzB,CvBbD,CCIG,CyBPL,A1BGI,CuBaG,AhBJ2B,EmBZlC,CHgBU,AhBJ2B,CNL1B,CyBPX,CAAA,CHgBc,AtBTA,CMK4B,GmBZ1C,AHgBU,CAAS,AtBTA,EMKtBA,CNLyB,IAAR,EsBSc,CAAC,CtBTC,IAAI,EsBSf,CAAkB,AtBTA,CAAP,GsBSX,AtBTsB,CsBSC,AtBTZ,CsBSX,CAAT,CtBTmC,CsBSC,IAApC,EAA0C,AtBTtC,CAAbA,QsBSS,CAAb;AGhBU,AdLmE,AWqB7E,AErBgB,AzBQR,GyBRH,CAAP,ECKY,EHgByD,AvBb3D,G0BHE,GAAA,AHgByD,CvBbpD,E0BHL,AHgByD,AvBblD,C0BHP,IHgByD,CGhBzD,AHgBV;AGhBkC,ADJrC,AxBYO,ADLG,AOUP,AeeFuD,EAAAA,II5BsC,AJ4BlC,CtB3BK,AOYFvD,AeeFlC,GI5BqC,AzBQhC,CMKCI,EmBbkC,CnBajC,ENLN,AqBoBN,Cffe,AeeAiF,CI5BqB,AzBQpB,AMKd,EAAgBjF,GAAC,GAAG,GeetB,Gff4B,AeeE,CffD,MAA3B,EAAmCA,AeeEiF,GffD,EAApC,EAAwC,KeeZ,CAAuB7D,CAAvB,EAA0BG,IAA1B,EAAgCmD,EAAhC,EAAoCmB,KAApC,EAA2C;AVhCzE,AWqBE,AtBTgB,ADJd,AOUN,AeeI,MtBzBE,EuBaI,AhBHV,CKlBS,AUiCA,EtBzBE,AOUW,EKlBT,AZQA,AsByBA7F,CCZG,AhBHS,AeeX,CrBrBa,EWZV,AWqBE,ADYFuB,Gffc,CKlBV,AXYD,AMMYvB,Aee5B,CVjCkB,CUiCCA,CffQ,AeeP,CCZG,AhBH3B,CKlBS,CUiCkB0E,ECZI,ADY3B,CVjC0B,CUiCC1E,CAAC,EVjCE,AUiC9B,CVjC+B,CUkC7B,CCbiC,CAAC,CXrBV,CAAU,GWqBT,CAAe,GXrBrC,CWqBsB,CAA3B,EAAiD,CXrBD,IAAI,CAAC,GAAL,IAAY,GAAZ,IAAmB,IAAI,CAAC,UAAL,IAAmB,GAAjF,CAAP;AcKA,AdJD,AWqBK,AtBV2B,ADJnB,AOUH,AegBH,EV/BR,IcEM,AHiBA,CGjBC,C1BGO,AOUH,EgBIC,ADYAoB,CAAC,CI7BX,AJ6BY,CCZC,AhBJJ,CmBbC,C1BGS,COUV,CPVY,AsB0BJgE,ECZb,AhBJK,CAAA,GegBG,CAAYpF,CfhBf,AegBG,CAAD,EAAiB6F,KAAK,GAAG7F,CAAzB,CAAD,KAAiC,KAArC,EAA4C;AI7BtC,AdDd,AZIa,AOUK,AegBoC,GhCzFpD,KiByEgB,GmBbG,AnBaH,GAAA,CegB2C,CI7B/C,CnBaI,CAAA,EegBoC,CfhBpC;AmBbQ,ApC3DxB,AiC6EM,AtBVA8B,ADRG,AOauB,AegBkC,KtB/B3D,GOe2B,EgBKxB,AtBVA,CsBUJ,EAAK,EhBL8B,ENLxB,CMK2B,ENLxB,AMK0B,CAAC,ENLxB,KAAK,AMKgB,CAAW,INLtB,CMKW,CAAiB,CNLzB,CAAR,GAAY,EMKI,CAAZ,ENLJ,GAAoB,GAAzB,CAAH,GAAmC,IAAnC,GAA0C,WAAW,CAAC,CAAC,GAAG,CAAL,EAAQ,GAAG,GAAG,KAAd,CAAnEA;AXlEN,AiC4Ea,AtBTP,ADJJ,AOSE,AeegE,ItBxBlE,AOSE,EAAE,CAAC,CgBIM,CvBbN,EAAE,ECII,GsBSQ,CAAC,AtBTL,EDXV,AOgBH,CgBIS,AhBJO,MNLP,CAAc,AMKA,CAAC,GAAR,CAAY,CNLnB,EAAsB,EMKE,CAAC,ENLE,CMKpB,CAAhB,CNLuC,CAAR,AMKS,GNLG,GAAG,CMKC,CAAC,ENLE,CMKV,CAAY,GNLrB,AMKwB,CAAC,ENLE,CMKlB,CAAxC,CNL6D,CMKC9B,GNLG,AMKF,GNLtD,AMKyD,ENLI,OAA7D,CAAP,cMKsE,KAAT,GAAiB,OAAhF;AmBZJ,AdFK+B,AtBzDL,AiC2E2B,AEjB7B,AxBSO,ADJH,AsBwBD,GAHD,CV3BW,AZMT,E0BJE,CHgBE,EEjBQ,ECCL,CAAC,C1BIC,EAAE,G0BJT,CAAa,A1BJV,GYEsB,CaC/B,CAA+B,CbDG,KcEhC,EAA8B,ADDhC,EAAyC,CbDE,MAAT,EAAiB;AcG/C,AdFFD,AWkBW,AEjBXA,AzBKE,AOQE,IPRF,EYNE,AaCA,ECCE,AHgBK,AhBJH9B,CkBbD,ElBaE,CmBZC,ADDA,AzBKA,EAAE,C0BJC,AdFA,AZMA,AOQA,CmBZC,AHgBK,AhBJf,EKdY,ALelB,CgBGwB,CGhBJ,CAAC,ADDA,CAAC,EbDE,CAAC,EWkBO,CAAC,EEjBZ,CAAnB8B,EFiBsB,CAAe,CGhBvB,AHgBQ,CGhBY,AdFlCA,CWkBwC,QAAQ,CGhBlC,AHgBmC,EGhBH,IHgBN,CGhB1B,CAAJ,CHgBgD,CAApC,CGhBiC,AHgB5C,KGhBiD,CAAC,YAAN,GAAqB,CAA1E,EAA2E;AAAE,AHgBnB,AEhB5D,AxBQI,ADJU,AOSR,AegBNuD,EAAAA,ErBrBI,EDJU,AOSR,AegBF,CAACzF,CrBrBG,CwBRD,AzBIU,EAAE,CCIP,CyBR0E,GJ6BtF,CAAesF,CI7BgE,CpC3D/E,AmC2DgB,AxBQG,EDJN,CCIS,CwBRf,EAAe,IxBQlB,AMKyB,CkBbtB,AlBauB,EkBbD,AlBaA,EjBxE7B,AiBwEkC,GegBlC,GAAsC,CfhBT,EjBxE7B,AiBwE2C,CAAC,KegBGA,GfhBK,GjBxEpD,AiBwEuD,CjBxE1C,IAAb,EAAmB,CiBwE4C,CjBxE/D,AiBwEgE,EjBxEzC,CAAvB,EAA0B,AgCwFY,CAA+B9D,CAA/B,CfhBc,CegBoBG,EfhBG,EegBrC,ChCxFtC,CgCwF8EmD,ChCxFrC,CgCwFH,EAA4CmB,EfhBG,CjBxErF,EAAiD,AgCwFX,CfhBmD,CegBA,SfhBU,CAAC,WAAzD,IAAwE,CAAC,CAAzE,GAA6E,CAA3F,CAAvB;AmBbqF,AdD3F,AWkBK,AEhBH/D,AxBQC,ADL4B,AOS2F,AeiBxH,MV/BE,AZK2B,EyBHzB,CH6BC,GG7BG,CH6BC9B,CtB1BoB,AsB0BnB,CV/BC,AaEA,CzBGkB,CsB0BhBuB,EV/BE4B,EU+BE,GAAG,CV/BE,AZKO,AsB0B7B,CV/BuB,CU+BAnD,CAAC,IV/BtB,AU+B0B0E,CtB1BC,CAAS,AsB0BtC,EV/BiC,AU+BD1E,ChCzFC,AU+DJ,AsB0BI,EtB1BU,AsB0B3C,ChCzFoC,AmC4DjB,CH8BjB,CVhCqC,CAAC,EaE7B,CAAX8B,ObFE,IAAoD,CAAC,MAAM,CAAC,UAAP,CAAkB,CAAlB,EAAqB,SAA9E,EACF;AAAI,AaCAA,AzBIE,AOSD,AeiBG,IV/BJ,IaC2B,EH8BnBV,CAAC,CAAC,CV/BD,CaCwB,CzBIxB,CYLG,CaCwB,AH8BrBgE,IV/Bf,AaCwC,CAAC,CH8B/B,CAAYpF,CAAZ,CAAD,EG9B2B,AH8BV6F,IG9ByB,CAAf,AH8BL,GAAG7F,CG9BsB,AH8B/C,CAAD,GG9BoD,EH8BnB,EG9BuB,GAAhE8B,AH8BI,EAA4C;AI9BhD,AdDiB,AtB1DjB,AiC4EE,AEjBFA,AxBSA,ADJI,AOSN,AegBoD,GfdpD,CmBhBE,AHiBE,GjC5EGA,CoC2DD,ADAiE,CxBS9D,CDJH,C0BLG,ApC3DE,CAAC,AiC4EA,CAAC,AvBZJ,EVhEM,AWoEA,ADJJ,AsByBgD,ChCzFpDA,AmC2DLA,CFiBE,CjC5Ec,AiC4EA,AtBRA,ADJJ,CAAC,CsByBqC,ChCzF/B,AWoEA,CsBQjB,EGjBkB,ApC3DE,AWoEA,CyBTD,ApC3DrB,EAAyB,CWoEZ,EyBTO,ApC3DQ,CoC2D5B,AzBS6B,ADJpB,CAAiB,CVhEK,EAA/B,AWoEiC,EXpEE,AUgE1B,CVhE2B,AU+D3B,EV/DT,EAAwC,EWoEX,CAAc,GAAG,GAAG,IAApB,CAA7B;AyBRD,ApC3DGA,AmC2DFA,AxBSF,ADJM,AOWN,AeakE,QhCxF1D,AmC2DF,EzBKA,GVhEO,CmC2DD,CzBKD,CVhEK,CmC2DD,AzBKF,GyBLK,AzBKF,CVhEK,AmC2DF,AzBKF,OVhED,CAAa,CAAb,AmC2DY,CnC3DxBA,AmC2DyB,EzBKhB,CAAiB,CyBLF,EAAO,IzBKtB,CyBLe,AzBGjB,EyBH+B,CAAC,MAAf,CAAV,CAAhBA;AbDF,AtB1DIA,AiC4EF,AvBXI,AOWN,AeYoE,QhCxFnC,AiC4EzB,CXlBD,CZOD,CVjE8B,EUiE3B,CVjE8B,CUiE5B,EVjE+B,AiC4ExC,CXlBF,AZOc,CuBWK,AvBXJ,CVjE8B,KAAK,CAAC,KUiExC,CAAiB,EVjExBA,GUiEO;A0BLXA,AdDF,AWkBQ,AEjBJ,AzBES,AsB2BV,CVnCIC,EUgCL,GI1BI,AHiBE,EEjBA,CzBEF,C0BFI,GAAG,CDAC,EFiBI,CGjBD,CDAC,AxBUhB,GyBVmB,GDAG,CCAC,ADAA,CCAC,EzBUxB,CwBV2B,CAAC,KAAN,CCAtBD,CDAmC,AxBUnC,IwBVuC,CAAC,ExBUxC,CAAQ,GAAR,EwBVsB,AxBUT,EwBVqC,IAA5B,CAApB,AxBUF,EwBVuD,AxBUjC;AXrElB,AiC6EA,AElBqD,AxBWvDA,ADJC,MuBWC,AtBPE,EXtEE,EWsEE,CXtEC,EmC2DqD,AxBWnD,CXtEC,AWsEZA,CsBOa,EElB0C,CnC3DjD,AiC6EU,IjC7EI,AiC6ElB,CjC7EmB,CAAC,KAAD,EAAQ,SAAS,GAAG,GAApB,EAAyB,MAAzB,EAAiC,CAAjC,CAAD,KAAyC,KAAvD,IAAgE,KAAK,CAAC,OAAN,CAAc,IAAlF,EAAwF;AoC4D5F,AdAK,AtB3DCA,AiC6ED,AEnB+D,AxBWlEA,ADVW,AsB8BbuD,EAAAA,GtB9BY,C0BAR,AzBUY,ADnBT,AsBuCH,CI9BC,AJ8BAzF,EV9BS,CtB3DJ,CoC2DN,AzBUiB,GAAG,CyBVX,ApC3DE,CoC2DD,AJ8Bd,CV9BK,AU8BU0E,CV9BQ,AtB3DL,EiB2ElB,CjB3EqB,GAAG,CsB2DnB,AtB3DCxC,CWqE8B,CWVJ,AXUK,AqBoBrC,GV9BK,AU8BuB,EV9BS,EXUD,AMMpC,CNNEA,IqBoBmCwC,IfdrC,KmBhB4B,CJ8BA,CAAqBD,IfdjD,CAAY,AecgB,Efd5B,AecwD,EfdxC,CmBhBF,CAA2B,EnBgBzC,EmBhBc,AnBgBQ,CmBhBtB,EAA8C;AAAE,AdChDvC,AtB3DM,AWqEJA,ADJA,AOUAA,AecA,ItBxBA,EYNE,AtB3DE,AWqEA,AMMA,EecA,CtBxBJ,E0BPqD,AdC9C,AtB3DE,AUiET,CVjEU,CiB2EC,AecF7B,CV9BC,AXUE,EyBXkC,AnBiBhC,CNNC,CMMC,CAAC,Aecb,CtBxBJ,EYNkB,AXUE,AqBoBFoE,CV9BC,CtB3Df,AiB2EU,CjB3ES,AUiEvB,AOUuB,CPVjB,CsBwBiB,CAACpE,ChCzFG,CAAC,AWqEb,ADJf,COUA6B,CPVY,CVjEW,AWqEQ,CWVrB,AtB3DsB,AWqEjB,AqBoBX,CV9B2B,AtB3DR,EAAY,AWqEA,CAAnCA,AqBoBkCqC,GhCzFK,CsB2D7B,CAAZrC,CtB3D4C,KAAnB,CAAnB,EACmB,AgCwFvB,EACE,EhCzFyB,CAAC,GAAL,CAAS,KAAK,CAAC,OAAN,CAAc,IAAvB,EAA6B,EAAE,GAAG,KAAlC,CADnB,EAEmB,CAFnB,EAEsB,SAAS,GAAG,KAFlC;AoC0DsD,AdE5D,AtBzDK,AiC0ED,AEnBF,AxBWAA,ADJc,AOUdA,AeeI,EV9BN,IXSwC,AMMP,CKf5B,CAAC,AWiBE,AEnBF,CFmBG,CvBZO,EOUuB,CPVF,AsByBxB,CGhCD,AxBWoC,CMMN,CPVF,CYLxC,AXSmD,AqBqBlCuD,CV9BD,CaFC,CzBO2B,AOUG,CPVF,AsByBhC,CCbT,AtBRoD,AqBqBlC,ECbA,AEnBA,CAAC,CzBOP,AOUdvD,CKfF,AU8B2BsD,EV9BA,CXSwB,GWTnD,AaFiB,AxBWkD,AqBqB7C,CrBrB6B,AqBqBjBtE,CV9BD,EaFE,AxBWoC,CAArEgB,CWTF,CU8BsB,CAAmBuC,CGhCD,CAAC,GHgCK,CAACuB,EGhC9B,IAAkC,CHgCV,EAAnB,CAAT,CGhC2C,AHgClD,CGhCmD,OAAxC,IAAmD,IAAI,CAAC,UAAL,CAAgB,CAAhB,IAAqB,GAA7E,CAAN,KACC,QAAQ,GAAG,iBAAK,KAAK,CAAC,OAAX,CADZ,KACoC,QAAQ,IAAI,IADpD,EAC0D;AbE5D,AWgBwB,AvBZH,AsByBuC,EV7B5D,IWgBwB,CXhBnB,CAAC,EZIe,GAAA,CuBYW,CXhBhC,CZIqB,CuBYc,CXhBnB,CZIK,CAAA,CuBYG,EvBZH,EYJrB;AcFA,AdGA,AtB1DI,AiCyEmC,AtBPrC,ADLwB,AOWxB,AeeD,EV7BD,CU0BA,ChCpFI,EoCuDA,CdGC,AtB1DE,AWkEA9D,AMMAA,CKdD,EtB1DI,AU6DgB,CYH1B,AXQW,AMMA,CNNC,AMMA,CjBxER,AU6DsB,C0BN1B,AdGY,CXQG,AMMA,CmBhBjB,AzBUI,ADLwB,AOWxB,ENNgB,AMMA,CKdD,AXQE,ADLO,AOWP,CKdD,AZGQ,ECKJ,AMMA,CPXI,CYHd,GAAa,AXQE,CMMC,CAAC,CKd7B,GXQsB,CAAY,CMMhC,EAAmC,CAAC,ENNpC,AMMA,ENNwC,AMMA,CNNC,IAAI,CAA7C,EAAgD;AyBVhD,AdGF,AtB1DG,AiCyEA,AtBPCA,ADN2B,AOYjC,ImBjBI,IzBWM,AMMV,CKdS,CZEwB,COYX,CmBjBV,CAAC,AzBWE,CWRb,ALcuB,CPZQ,CCMf,EyBXA,A1BKe,C0BLd,CnBiBY,CmBjBlB,AzBWU,ADNU,AOYD,CmBjBV,A1BKW,AOYF,CAA/B,INNkB,ADNe,CCMH,CAAZ,KyBXL,AzBWuB,CyBXD,IzBWM,QAAL,GAAgB,IAAhB,GAAuB,CAAzC,CAAZA,QyBX2C,MAAd,CAAqB,KAAK,CAAC,GAA3B,EAAgC,IAAI,CAAC,GAAL,GAAW,IAAI,CAAC,QAAhD,CAAtB,EAAiF,cAAjF,EAAD,CAAR;AAA2G,AdI/G,AtB1DE,AU2DoD,AOY3C,AegBTuD,EAAAA,ChCrFA,GgCqFI,CAACzF,CfhBI,KPZkD,AOYlD,CPZmD,EOYnD,AegBT,CAAe2E,EtB5B4C,AOYlD,CAAA,CPZ0D,IOY1D,GegBT,GAA6B,SAASA,WAAT,CAAsBF,KAAtB,EAA6B;AhCpF1D,AiCsEA,AEfIvC,AxBQA,ADP+D,AOYnD,AeiBd,MCfI,EtBPE,ADP2D,AOYnD,AeiBV,EG9BE,CzBC2D,AOYnD,ENLH,ADPuD,AsB6BzD7B,CCfG,AhBFE,ENLA,ADPmD,CuBclD,AhBFD,CkBbA,AlBaA,CNLZ,AqBsBE,EG9Ba,AxBQA,AMKH,CeiBIoE,EG9BE,CAAC,EFeI,ADeF,CAACpE,ECfI,IEfE,AH8B1B,CG9B2B,GH8BGkE,GCfK,CAAC,CEfV,EAAW,EFe3C,GEfgC,EAAkB,AH8BhD,EACE,EG/B4B,CAAV,CAAlBrC;ACHJ,AbrFF,AvBkCE,AW8DqB,ADPkD,AOYvC,AekB1B,QtB9BiE,AOYrC,CmBhB3B,AbrFA,EbyFgE,E0BJvE,A1BIyE,AsB8B5D,EflB4B,CPZ0B,CsB8BlDuD,CflB2B,CMrG9C,CAAoB,ANqG4B,CAAC,AekBlC,CAAShB,CTvHxB,EAAyB,ESuHI,CflBiB,AekBhBuB,CflB2B,KAAX,CAAiB,AekBvC,GAAgB9E,IflBM,CAAZ,CekBV,CAAuB,KAAKsE,MAA5B,CAAT,CAAP;AIjCP,AbrFC,AUuGE,AEfE,AxBOsB,ADPkD,AOaxEtD,AeiBwD,MCftD,EvBfsE,AOapE,CMrGD,CYwFC,ElBaI,CPbgE,CuBe9D,CvBfgE,AOa/D,EgBEE,CEfD,IAAI,AlBaE,CAAC,GAAR,CAAY,GkBbC,CFe1B,AEf2B,ClBaG,CgBEC,AhBFA,EkBbA,CAAC,AlBanB,CAAXA,IkBbwB,EAAa,IAAI,CAAC,QAAlB,EAA4B,IAA5B,CAAxB,EAAyD;AZxFrD,AUwGJ,AEhB2D,AzBAI,AOa/DA,AekBH,GAHD,CTpHQ,AUwGJ,GvBhBuD,CaxF/C,AbwFwC,AOab,EMrGzB,ANqG2B,CMrGlC,CUwGK,ChBHgC,EgBG7B,AEhBuD,IAAP,ClBaZ,CAAC,GAAR,CAAY,EgBG7B,CAAC,AhBH+B,CAAC,GAAhB,CAAxCA,GgBGuB,EAAW,QAAX,CAAvB;AGjBN,AbvFmB,AUyGf,AEjBwE,AxBQtEA,ADRmF,IaxFtE,AUyGf,ItBTM,CyBTD,AbvFe,EAAE,GAAG,AUyGb,CVzGc,AZgGb,GsBSG,AtBTA,CX9DlB,GoCqDF,CAAuB,AzBSE,GsBSrB,CGlBJ,EAA6B,AzBST,CYhGM,AZgGM,CYhGc,AZgGb,EX9D/B,CW8DkC,QYhG3B,AvBkCP,AW8DkB,CAAdA,UX9DJ,CAAY,CAAZ,EAAe;AoCsDf,AbvFQ,AvBkCN,AiCuEC,AEjBA,AxBOCA,ADxBG,AO8BH,AemBJG,EAAAA,CtBtHmB,CaFX,CYgFN,CCOE,CAAC,AbvFM,AvBkCJ,CW6DsC,AMMrC,CMrGK,ANqGT,CMtGG,CawFE,ADCA,AxBOuC,AMMrC,CmBdD,EzBQyC,CwBPtC,GCDR,CAAY,ApCrDf,AW6DsD,CX7DpC,AgCsFF,ChCtFhB,AmCsDiB,AHgCAhC,CrBzBwC,CyBRtD,ApCrDkB,CoCqDD,CDCC,EHgCvB,CIjCK,ApCrDuB,AgCsFFC,CIjCC,AzBQvB4B,CwBPwB,CAAC,AHgC7B,ChCtFE,EAAgC,AgCsFF,ChCtF9B,GoCqDF,CDCS,CCD2B,CDCG,KHgCK;AIjCN,AbvFtB,AvBmChB,AiBmEM,AekBwC,GhCnF9C,CuBrCgB,ENsGV,EAAE,CmBfmCA,AnBelC,CMtGa,CSwH+B,CTxH7B,CauFuB,CAAC,CbvFrB,CAAC,ASwH8BsD,CIjCP,GnBe7C,CmBfiD,AnBelC,CmBfmC,AJiCH,CAAYnF,EflB3D,EmBf6C,AnBexB,EAArB,AekBwC,CIjCkB,CAA1B,AbvFd,CAAoB,CauFuB,CAAC,IAAI,CAAlC,EAAqC,CAAC,EAAtC,EAA0C;AAC9E,AbzFK,AvBuCP,AiCoEE,AtBVE,ADLJ,AOYK,AeiBoE,EtB7BzE,Ca5FA,ASyHA,EfnBI,GNLI,CsBUC,CGlBH,CzBQK,AMOA,CPZD,CuBeG,CGlBH,A1BGE,C0BHD,AzBQI,GAAP,CsBUC,CGlBH,AHkBc,CGlBH,CAAX,AzBQgB,CAAC,GyBRD,CAApB,AzBQyB,CsBUC,CGlBL,AHkBM,GtBVG,GsBUZ,AtBVe,CsBUC,AtBVhC,EAAgC,MsBUhB,CAAX,EAAsC,UAAtC,CAAP;AGlBuB,AbvF1B,AvBsCC,AmCoDI6B,AxBKkC,ADJpC,AOYI,CgBtBR,GvBUI,EOYI,EAAE,CAAC,CkBbD,AzBCA,EAAE,CCImC,EyBRb,C1BGpB,CCK0B,EyBRF,ADGnB,CCHoB,EDGjB,CCHY,CAAS,CDGlB,AlBajB,CkBbkB,AlBaE,IAApB,CmBhB0B,CAAiB,AnBgBjB,EAA1B,CkBb2B,CCHoB,ADGnB,AlBaE,CmBhBkB,GDGrB,AlBa3B,EkBbkC,CCHS,CAAY,CAAC,EDG7B,CCHgC,CAAhB,ADGF,CCHf,CAAP,EDGQ,CAAV,CAAnBA;ACHgE,AzBQnB,ADH/C,AOYI,AeiBNG,EAAAA,EtB7BE,EOYI,GPZC,EAAE,QAFG,CsB+BM,CAAC0D,KAAnB,CAAyBzF,EfjBI,CAAC,AeiB9B,EfjB6B,CeiBE,CfjBG,OAAL,EAAc,EeiBA,EfjBI,CAAC,QAAL,GAAgB,CAAC,CAAjB,GAAqB,CAAnC,CAAvB;AMtGR,AU0GA,AEjBM,AzBEF,AOYG,AegBwC,ItB5B3C,EuBeJ,CAAA,EV1GS,CYyFC,CH8B4C,CAAP,EtB5BjC,Ea3Fd,AU0GA,AvBfgB,Ca3FC,AU0Gf,EEjBiB,EzBDL,CaxFd,CYyFuB,CZzFC,EU0GxB,EV1GA,CU0GE,CV1G4B,EYyFE,CAAC,IAAI,CFiBnC,AEjBoC,KAAN,EAAa,EFiB3C,CAAU,CEjBqC,CAAC,EFiBhD,EAAgB,EAAhB,EAAoB,AEjBU,EAA4B,IAA5B,CAA1B,EAA2D;ACH7D,AbrFF,AU0GE4B,AElB+D,AxBK7D,ADFF,AOYC,AeeoD,GAAvD,CrBzBI,ADFF,EuBeI,EtBbE,CY7FD,CaqFD,AHqBI,EtBbE,ADFF,CuBeG,CGrBH,A1BME,C0BND,ADG6D,AzBG3D,Ca3FC,CU0GG,AtBbA,EyBRX,ApCjDN,AmCoDiE,CCHjD,CAAV,AbrFC,EaqFY,AzBQP,CAAY,CY7FD,AZ6FE,EyBRnB,CAAkB,AzBQI,IyBRtB,CAAuB,AbrFtB,AvBoCP,GuBpCkC,AZ6FtB,IAA4B,CY7FjC,CaqFL,ApCjDF,EoCiDsC,AbrFI,EU0G7B,CtBbT,CsBaFA,CV1G6C,CAAC,GvBoChD,CuBpC+C,AvBoCnC,CuBpCZ,GvBoCA,EAAkB,EAAlB,EAAsB,cAAtB,EAAsC,QAAtC,EAAgD;AoCiDR,AbpFzC,AvBoCGA,AiCsEF,AEnB4E,AxBMzE,ADHW,AOad,GAEA,GjBrEM,AUsDQ,CuBgBP,EvBhBU,CVtDP,CUsDS,CuBgBnB,CjCtEa,AiCsEA,EjCtEXA,KiCsEF,CAAoB,UAAE,IAAF,EAAQ,CAAR,EAAW;AGtBc,ApChD3CA,AiCuEEA,AEnBD,AzBEU,AOgBb,AeaA0D,EAAAA,GtB7BY,CVtDK,AUkDL,EuBqBJ,ADYF,CAACM,MhCnFmB,EiCuET,CjCvEY,EiCuET,EjCvElBhE,EiCuEsB,CAAC,ADYzB,CAAyBuD,IAAI,CAACzF,MCZV,GDYpB,CCZyC,CDYAqC,GCZrB,IAA6B,CAAC,GAAG,IAAI,CAAC,EDY1D,UCZiD,IAAyB,IAAtD,GACV,IAAI,CAAC,IAAL,CAAU,MAAV,GAAmB,IAAI,CAAC,YADd,GAC6B,IAD7CH;AGtBN,AbnFA,AvBmCI,AiCwEA,AtBfA,ADHA,AOgBF,AecA,ICZE,AvBlBA,GVtDK,CiCwEC,CV3GD,AU2GE,AtBfA,ADHP,AsB8BKuD,EtB9BL,EsB8BF,CrB3BE,IsBeA,CV3GJ,AvBmCI,AiCwEiB,CV3GD,AvBmCE,AUsDlB,GuBkBqB,CV3GzB,AvBmCI,AiCwEsB,CvBlBtB,CazFsB,AvBmCE,CiCwExB,CjCxEA,AUsDQ,CuBkBmB,CjCxED,QiCwE1B,EjCxE6B,IAAH,EAAS,GAAT,EAAiB;AoCgD5C,AblFDvD,AvBmCI,AiCwED,AErBD,AxBMF,ADJY,AOiBZ,AecD,CApDwB,CAoDvBsC,CChBA,AtBTA,EsBaK,CV3GD,EvBmCI,CiCoER,CVvGQ,CU2GG,AErBF,CnCnDG,CuBnCD,AvBmCE,AiCoEb,AvBfmB,CsBrBI,CAAzB,CGmBI,CZtFa,ASyHjB,CTzHkB,AbwFJ,CVrDR,EAAiB,kBuBnCV,EAAXtC,CADwB,CAE1B;AvBmCQ,AiCwEJ,AErBD,AxBQD,ADP0B,AOkB1B,AegBF,GGtDE,GnChCM,GiCwEG,CjCxEC,GiCwER,CjCxEY,IAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,GAAf,IAAsB,GAAtC,EAA2C,EAAE,GAAG,GAAhD,CAAR;AoC+CN,AbjFAA,AvBmCM,AmCmDP,AxBQC,ADbY,AOyBZ,CgBPF,KVnGM,AvBmCE,GoC8CC,GbjFG,CaiFV,EbjFc,AvBmCC,GAAG,CuBnCA,AvBmCC,CuBnCA,KAAL,GAAa,IAAI,CAAC,AvBmC1B,WuBnCO,IAAmC,CAAhDA;AakFD,AbjFCA,AvBmCK,AU5Cc,AOmHnB,CPnHF,C0B4FA,GpCnDM,CuBhCA,KvBmCO,CuBnCD,GAAI,AvBmCC,IuBnCG,AvBmCC,CuBnCA,AvBmCC,MuBnCN,AvBmCC,GuBnCa,CvBmCE,GuBnCE,CAAC,IvBmCtB,EAA6B,MuBnC3B,IAAqC,CAAlDA,CAJwB,CAK1B;AamFA,ApChDQ,AiCwER,AhBDE,AeaFsC,MhCpFQ,AiCwER,CAAA,GjCxEY,EgCoFA,CAACO,ChCpFG,EiCwEhB,CAAE,CDYF,GAAqB,ChCpFb,EiCwER,CDYyBU,ECZvB,EDYmB,CAAS,EAAT,CAArB,GCZE,OAAA,CAAQ,KAAR,EAAe;AGvBjB,AbnFE,AvBmCM,AiCwEN,AvBpBFtD,AOmBE,IPnBI,EVpDE,AiCwEA,GV3GC,AbuFE,EuBoBE,CvBpBC,CAAC,EVpDE,EUoDH,CVpDM,AWyDlB,CXzDmB,AUoDA,CAAP,CuBoBN,AvBpBRA,IuBoB2B,CAAzB,EAA0B,AtBf1B,KXzDM,IWyDN,OAAA,CAAQ,CAAR,EAAW;AyBRb,AbpFU,AvBoCH,AiCuEuB,AtBd1BD,ADNJC,AOoBE,AeaF,ITxHU,AbuFe,AsBiCrB0C,ChCvFS,CW4DL,EY7FM,EAAE,ASwHN,ChCpFG,AiCuEwB,EvBpBH,AsBiCrB,CTxHO,AZ6FJ,CY7FK,AvBoCJ,AiCuEa,CjCvEZ,AUmDmB,CCMlB,ADNmB,EavF7B,GZ6Fe,GXzDP,AUmDoB,CsBiCV,CtBjCqB,CAAX,CVnDN,AUmD/B1C,CCMmB,GXzDgB,AWyDA,CXzDC,AWyDjB,EqB2BkBqC,CrB3BE,CAAnCtC,GXzDS,EAAgC,KgCoFlB,EAAwB;AInCnD,AbrF2B,AvBqCnB,AiCsEiC,AtBdrCA,ADNJC,AOqBE,AeaA,ITzHyB,AbuFyB,EVlD5C,AWwDkC,GY7FV,CvBqCpB,CuBrCsB,AbuFyB,AsBkChD0C,GhCpFK,AWwDkC,ADNY,CavFxB,AbuFyB,CavFxB,CZ6Fc,AqB4BnD,CAAgBsB,ETzHgB,CbuF4B,CCMJ,AqB4BxD,CTzH4C,AbuFyB,CAAT,AsBkCtCC,CtBlCxBjE,EavFkD,CAAC,AvBqC3C,CgCoFN,CrB5BmD,CqB4BtB,ErB5BsC,CAAhB,GAAoB,CAArED,CY7F0C,GAAmB,MAAxD;AasFT,AbrFU,AvBqCF,AgCoFJsC,ITzHM,ASyHNA,EhCpFI,CuBrCK,EAAE,IAAI,CAAC,CvBqCH,CgCoFD,CT1HP,AS0HQkB,ChCpFG,GgCoFhB,ChCpFI,AgCoFc,IAAlB;ATzHqB,AvBsClB,AiCqEH,AtBdA,ADJJ,AsBiCI,IT1HqB,AbyFZ,GCIJxD,EsBcE,AvBlBO,AsBiCTiE,CT1HsB,CZ6FlB,CY7FoB,AZ6FnB,ADJO,CuBkBN,ADeX,ErB7Ba,CY7FoB,AZ6F5BjE,AqB6BOiE,CT1HsB,CZ6FlB,CsBcT,CV3GsB,AU2GX,ADelB,ErB7BoB,CY7FoB,EU2GjB,AtBdA,CAAvB,CY7F4C,CAAC,AZ6FnB,CAAC,CsBcT,CAAW,CtBdC,KsBcZ,AtBdiB,CsBcC,EV3GI,GAAoB,AU2GnB,AtBdX,CsBcY,AtBdA,GsBcN,CAAS,EtBd7C,EAAkD,CAAC,IAAI,CsBcT,AtBd9C,EAA0D,CsBcb,EAAK;AV5G7C,AvBwCJ,AiCoEiD,AtBbhDjE,AMcJ,AeeE,GT5HF,AvB6BE,EAWG,CAXH,EWkEM,CMcR,AeeOkE,CffA,CgBDgD,EtBb1C,CqB6BX,CChByD,CtBb3C,CqB6BDA,Cfff,CgBDuD,CAAS,CtBb3C,AMcd,CeeL,CChBqD,CAAH,GtBbpC,CAAY,CAAZ,CAAZlE,AMcG,QAAA,CAAS,IAAT,EAAe,GAAf,EAAoB,QAApB,EAA8B;AmBtBhC,AbrFN,AvBuCG,AiCmEkE,AtBbhEA,AMeFA,AeeA,GCjBoC,CAAlB,CAAX,ChBEH,CgBFkE,CtBbxC,CyBRlB,ApC9CL,AgCoFF7B,EffI,CgBFkE,CjCnE3E,CiBqEY,CeeZ,CrB9BsC,EMetB,AeeF8F,CrB9B2B,AMexB,CmBvBd,CAAqB,CHqBjB,ADiBW,CCjBlB,ADiBmB9F,CrB9B2B,CMelC,CmBvBT,AnBuBqB,EmBvBO,AzBQmB,CqB8BpC,GAAc+F,CrB9B2B,GyBRpD,CJsC8B,CItCQ,AJsCP/F,CfftB,ENfsC,CyBR/C,AnBuBqC,EmBvBO,AzBQmB,AqB8BlE,Eff4C,ENfM,GAAuB,CAA3B,CAA5C6B,MMesC,CAAkB,IAAlB,CAA5B,GACN,eAAe,CAAC,IAAI,CAAC,IAAL,CAAU,CAAV,CAAD,EAAe,IAAI,CAAC,MAApB,EAA4B,IAAI,CAAC,GAAjC,EAAsC,IAAI,CAAC,KAAL,EAAtC,EAAoD,GAApD,EAAyD,QAAzD,CADrBA;AmBtBJ,ApC9CE,AWqDIA,AqB+BF,CCpBJ,EjC9DE,GoC4CF,EzBOiF,CyBPlE,AJsCN6D,GItCS,EJsCd,ErB/BqF,CyBPlE,AJsCNd,CItCO,CzBOoE,EqB+BvE,CAACC,ErB/B2E,CqB+BhF,CAASiB,CItC1B,CzBOqG,EqB+BvE,CAACJ,ErB/B2E,GqB+BzF,EAAqBK,GrB/B+D,EqB+B1D,CrB/B0E,AqB+BzEL,CrB/ByD,GAAoB,CqB+BxG,GrB/BgF,CAA3F7D,AqB+B+C,CAAjD;AItCG,AbpFA,AvByCL,AWmDIA,ADFJ,AOkBE,AeeD,EtBjCD,I0BNK,A1BMD,AOkBE,ENhBE,ADFF,Ca1FQ,EN4GZ,EmBxBG,AnBwBM,ENhBI,CyBRV,EzBQa,CyBRb,CAAA,GzBQkB,IyBRlB,AbpFA,CAA4B,CZ4Ff,CAAY,CAAC,CY5F1B,EAAkC,AZ4FL,IY5F7B,EAAwC,EZ4F3B,CAAdA,KY5FC,EAAkD;AACvDA,AvByCA,AWkDIA,ADDF,AOiBW,IPjBX,Ea1FE,EZ2FyC,CDDtC,EAAE,AOiBW,INhBgC,CMgBvC,ENhB0C,GY3FpC,EZ2FyC,CY3FtC,IAAI,CAAC,AZ2F4B,CAAY,CAAC,GAAG,GY3FjD,CAAc,IZ2FmB,CAAnDA,YY3FkB,KAAoC,CAA1DA;AaoFA,AbpFAA,AZ4FI,ADDA,AOgBqB,AeiBzB,IrBhCI,CAAC,CyBRD,AbpFyD,AZ4FvD,ADDF,AsBiCCsC,CIxCA,G1BOG,EAAE,E0BPN,AzBQC,ADFI,ECEO,EY5FyD,AS4HzE,CIxCiB,CJwCGK,CT5HwD,EaoFvD,CzBQG,CY5FwD,CaoFxD,AbpFyD,AS4HvD,CIxCD,AzBQE,AqBgCAc,IIxCE,CAAC,EbpF8C,AZ4FvE,CY5FqF,CZ4FtD,AqBgChB,GAAmBnB,KrBhClC,EyBRoB,AzBQqB,CyBRD,EbpF+B,ES4HxD,GT5HyF,AZ4FvD,CY5FtDtC,CaoFyB,CzBQgC,CyBRD,KAA/B,CAAJ,AzBQhB,CAAD,EyBPoB,OAAO,CAAC,YAAR,GAAuB,OAAO,CAAC,MAAR,CAAe,OAAf,CAAuB,IADlE,CAAJ,EAEF;AAAI,AbrFFA,AZ4FI,ADDA,AsBiCJ2C,EAAAA,ErBhCI,EY5FA,Ab2FA,ECCI,AqBgCF,CT5HC,AS4HA7E,EIvCE,A1BMA,Ca3FC,AZ4FE,CDDD,G0BNT,AbrFY,CAAC,CS4Hf,CrBhCmB,CY5FT,CAAS,AS4HA4F,CrBhCG,KqBgCG,CAACC,CrBhCtB,KY5FJ3D,AS4HmB,CAAesC,YAAY,IAAIA,YAAY,CAACxE,SAA5C,CAAnB;AIvCc,AzBQX,ADFS,AOiBV,AeiBF6E,EAAAA,KfjBO3C,CPjBK,AsBkCN,CAAClC,EfjBI,IPjBQ,COiBH,CPjBK,CsBkCrB,ChCpFA,AiBmEmB,AeiBFC,IfjBM,CAAC,IjBnExB,CiBmEmB,CeiBnB,EfjBgC,CAA9B,AeiB6B4E,EfjBI,EjBnEnC,EgCoFA,CfjBwC,GjBnExC,CAAO,AiBmEqC,CAA1C,EAA6C,EjBnE/C,EAAc,CiBmEsC,EAAlD,EAAsD;AM3GxD,AvByCE,AWoDF,ADHW,AOkBP3C,GNbJ,GXtDM,CuBzCDA,AvByCE,CiBmEC,GM5GC,CvByCG,CAAC,AiBmEA,GAAG,CM5GD,AvByCb,EAAe,AiBmEE,CM5GD,EN4GI,CAAN,GACN,EM7GgB,IAAI,IAAI,CAAC,GAAnC,CN6GyB,CAAC,CM7Ge,GN6GX,CAAC,EM7GgB,EN6GrB,CM7GwB,AN6Gd,CAAV,CAAD,EAAe,IAAI,CAAC,CM7Ge,CAAC,EN6GrB,CAAU,GM7GU,CAA5D,CN6GwC,CM7G8B,AN6G7C,EAAiC,IAAI,CAAC,MAAL,CAAY,KAAK,GAAG,CAApB,CAAjC,EAAyD,IAAI,CAAC,KAAL,CAAW,KAAX,CAAzD,EAA4E,GAA5E,EAAiF,QAAjF,CADT,GAEN,eAAe,CAAC,IAAI,CAAC,IAAL,CAAU,CAAV,CAAD,EAAe,IAAI,CAAC,IAAL,CAAU,KAAV,CAAf,EAAiC,IAAI,CAAC,KAAL,CAAW,KAAK,GAAG,CAAnB,CAAjC,EAAwD,IAAI,CAAC,KAAL,CAAW,KAAX,IAAoB,CAA5E,EAA+E,GAA/E,EAAoF,QAApF,CAFrBA;AmBtBJA,AbrFE,AvBwCiB,AiCoErB,AtBbE,ADRS,AsBsCT2C,EAAAA,GtBvCM,C0BDF,AHuBN,CAAA,CV5GQ,AS6HA,CT7HC,AS6HA7E,CIxCC,CpC7CkB,EoC6Cf,EbrFT,AvBwCiB,CiCoErB,CV5Ge,AU4Gb,CDiBA,CAAiBgG,KCjBnB,CGvByB,CAAC,AJwCxB,CCjBA,EDiB2B,IIxCJ,CAAvB9D,CANiD,CAQnD,AHqBE,EDiBoC8D,KCjBpC,CAAQ,CDiBmB,GAAoB,YCjB/C,EAA0B,YAA1B,EAAwC;AV5GzB,AvBwCe,AiCqE5B,AtBbF,ADLE,AOmBE,AegBF,ItBnCA,EuBkBI,CAAC,ChBCC,GegBC,CCjBG,CvBlBD,AOmBP,EPnBS,AOmBA,CegBCG,ItBxCR,AsBwCG,CAAUH,CCjBjB,EAAoB,IDiBb,GAAoB9E,MAApB,CAA2B,KAAKkF,KAAL,CAAWJ,OAAX,EAA3B,CAAP;AItCF,AbxFoB,AU6GI,AvBjBtB,AOkBa,AeiBd,GAFD,CtBjCE,E0BJE,CAAC,IAAL,AHqB+B,CvBjBrB,C0BJD,AnBsBa,CPlBV,CuBiBY,AvBjBX,GOkBE;AmBtBJ,ApC/CT,AiCoEiC,AvBjBrB,AOkBa,MjBrErB,AUmDQ,CVnDP,EUmDU,E0BJC,A1BIC,CVnDP,IoC+CD,ApC/CT,EAAc,EUmDH;A0BJU,AbvFrB,AvBwCgB,AUmDY,AOmB3B,AekBHnB,EAAAA,ItBrC8B,Ea3FxB,ASgIA,CAAC7E,EhCxFkB,GuBxCb,Ab2FkB,Ca3FjB,CvBwCK,AUmDY,ECK9B,AqBgCA,CAAiBoF,IThIX,Eb2FwB,Ea3FL,AZgGzB,AqBgCA,CThIE,EAAwB,ASgIE,GtBrCE,CAAS,ECKvC,CDL8B,EAAc,AsBqCPA,GrBhCrC,GAAS,EqBgCmB,CAAmBhF,CAAnB,EAAsB;AThItB,AvBwCE,AiCsE9B,AtBbE,ADLE,AOmBJ,AekBE,Cf7BF,EAaA,GgBHM,GtBbG,EqBgCAA,CAAC,CrBhCG,EDLF,AsBqCE,GCnBK,EtBbT,AqBgCS+F,CCnBG,AtBbA,EsBarB,CDmBa,CAAU9F,CrBhCG,KqBgCjB,CrBhCA,EAAyB,AqBgCF,CrBhCG,IqBgCE8F,CrBhCG,GqBgCR,CAAU7F,GAAV,CrBhCvB,AqBgCqCF,CrBhC5C,AqBgC8B,CAAvB,GAA0C,KAAKgG,KAAL,CAAW9F,GAAX,CAAeF,CAAC,GAAG,KAAK+F,IAAL,CAAU9F,MAA7B,CAAjD;AIxCF6B,AbzFoC,AU8GpC,AtBZA,ADNY,AOsBZ,AegBC,GAFD,GIvCI,AHqBqB,IvBlBb,C0BHH,AHqBqB,GGrBlB,AHqBqB,AvBlBjB,EAAE,E0BHF,AHqBqB,CGrBpB,AHqBqB,AvBlBjB,CAAC,EuBkBW,CAAS,CAAT,EAAY,EGrB7CA,CAXiD,CAYnD,CHoBoD,CvBlBhC,CAAiB,GuBkBU,CAAW,EvBlBtC,CAAP,GuBkBkC,GAAoB,YAAhC,CAAjC;AjCrEEA,AiCuEAA,AvBpB0C,AOuB5C,MjB1EM,AiCuEA,IjCvEI,AUmDkC,GVnD/B,AiCuEA,EvBpBoC,CuBoBjC,CvBpBmC,CVnDjC,EUmDoC,CAAC,MVnDrDA,KiCuE8B,CAAC,AvBpBkB,CAAiB,MuBoBlEA,CvBpBiD;A0BDnD,Ab1FEA,AvBwCAA,AiCwEF,AvBrBW,AOwBX,AegBA2C,EAAAA,IIzCI,ApClDyB,AiCwEvB,EVhHA,ASmIA,CtBxCF,AsBwCG7E,EhC3F2B,EuBxCvB,CvBwC0B,AiCwEvB,EVhHA,CUgHG,CtBbjB,AqBgCA,CIzCiB,ApClDyB,AgC2FzBqF,CIzCC,ApClDyB,EuBxCvB,Ga0FH,Cb1FO,Ca0FC,Eb1FE,AZmG3B,CYnG4B,AvBwC1BnD,CoCkDe,AJyCjB,EIzC+B,AHsBE,CVhHnB,AUgHoB,ADmBF,ITnII,AZmGpC,CsBaiB,CAAuB,CGtBvB,CAAjB,CJyCyCmD,CIzCD,Ab1FE,CAAC,CUgH3C,AtBbA,GAAW,IYnGyB,ESmIJ,CAAuB7D,CTnIA,ASmIvB,CTnI9BU,CSmIwDP,IAA1B,EAAgCmD,EAAhC,EAAoCmB,KAApC,EAA2C;AIzCjC,AbzFxC/D,AvBuCAA,AiCyEAA,AtBbA,ADRC,AsBwCD,MhC5FqD,AiCyEjD,EVhHA,ASmIAmE,CrBhCG,CAAC,CyBVuC,EpClDa,EoCkDpB,AzBU3B,AqBgCF,CTnIC,AvBuCmD,AiCyEjD,EDmBA,CTnIC,AUgHE,EjCzEmD,EW4D5D,AqBgCWF,CTnIC,AUgHE,EtBbE,CYnGD,ASmIT,ChC5FiD,AgC4FvC9F,ChC5FoD,AW4DpE,GAAsB,EX5DiC,AiCyE/D6B,AtBbO,AqBgCP,EhC5FAA,CuBvCiC,CAAC,AZmGE,GYnGH,CAAb,AZmGoB,CAAC,EYnGA,OZmGL,CAAe,EYnGA,CAAC,EZmGI,IYnGL,CAAnDA,CZmGoC,CAApC;AyBVmD,AbxFnDA,AvBsCAA,AiC0EF,AtBbA,ADXa,G0BboC,AzB0BjD,CyBXF,C1BFc,CVlD2E,AU4CjF,CV5CkF,AiC0EjF,CVhHD,EvBsCqF,CAAzFA,CiC0EF,CVhHW,AUgHE,GVhHC,CAAZA,GUgHF,CAAoB,UAAC,IAAD,EAAM;AGrB5B,Ab3FIA,AUgH6B,AtBV/B,ADXE,AOuBF,AeiBE,ItBxCA,Ia3Fe,AUgHkB,ADmB7BP,CtBxCJ,AOuBF,CAAO,CPvBL,CuBqBqC,ADmB7B,CTnIY,AUgHkB,ChBExC,CeiBa0E,CTnIY,CAAvBnE,ANkHK,GPvBL,EuBqB6B,ADmBzB,ECnB2C,CvBrB/C,CAAM,AOuBD,AekBD,ItBzCJ,AOuBK,CAAK,AekBDiE,CtBzCG,GOuBP,AekBD,CAAUd,CflBE,IAAX,EAAqB,KekBtB,CAAuB7D,CAAvB,EAA0BG,IAA1B,EAAgCsD,IAAI,CAACE,GAAL,CAASL,EAAT,EAAauB,OAAb,CAAhC,EAAuDJ,KAAvD,MAAkE,KADtE,EAEE;AhC9FF,AiCyEiD,AtBTnD,ADZgB,AsB0CV,MhC9FA,AiCyE6C,IjCzEzC,AUoDM,CVpDL,EUoDsB,AsB0CpB,GCrBgD,AvBrBzB,CVpD9B,CgC8FA,EtB1CkC,CVpDnB,AUoDoB,IVpDhB,CAAC,AUoDV,COuBM,GAAG,MjB3EJ,CAAgB,KAAhB,CAAnB,EAA2C;AuBtC3C,AvBuCE,AiCwE2D,AtBR/D,ADbqB,AOwBnB,AekBkB,IhC7FhB,IuBvCE,CNkHG,CPxBY,CVnDV,CuBvCD,AvBuCE,CuBvCD,Cb0FU,AOwBP,EMlHR,Cb0Fe,Ea1FJ,AvBuCE,CAAC,AUmDC,CAAA,COwBZ,CAAc,EPxBF,CVnDT,CuBvCa,ANkHhB,CMlHiB,CvBuCG,AiB2EA,CjB3ElB,CuBvCM,AvBuCb,EiB2EK,CMlHuB,AvBuCE,IAAI,AiB2EA,CjB3EC,EuBvCA,CAAC,CNkHG,IjB3ET,CAAc,GiB2EV,CjB3Ec,AiB2EA,CjB3EC,GiB2Ef,CMlHC,AvBuCS,CiB2EU,CMlHD,ANkHE,CjB3EC,GiB2EtB,CMlHC,ANkH9B,CMlHP,AvBuC+D,CAAC,CuBtCpE,CNiHsE,EjB3ElC,CAA9B,CiB2EoE,YAAJ,CAAiB,IAAI,CAAC,IAAL,CAAU,CAAV,CAAjB,CAAlE;AmBvBF,Ab1FI,AvBuCA,AiCuE6D,AvBrBtC,AOyB3B,CAFA,EgBFA,AhBMA,CjB7EI,CAAC,AiCuE8D,CGpB/D,Ab1FA,EvBuCI,CAAJ,CiCuEJ,AvBrB2B,CazFlB,Ea0FE,CAAC,Ab1FA,CbyFe,CazFb,EbyFa,E0BCvB,CAAe,A1BDQ,CAAA,EazFL,CAAC,EbyFI,C0BCvB,Ab1FU,Ca0Fa,Eb1FE,Ea0FzB,Eb1F6B,CAAC,Ca0FC,CAA/B,Cb1FU,GAA0B,Ca2FnC,Mb3F0C,CAAC,Ia2FhC,CAAC,KAAD,EAAQ,Ab3FuB,EAAe,Ka2F9C,Ab3F+B,Ca2F1C,Ab3FO,CAAR,Ga2FgC,gCAAc,YAAd,CAA2B,KAA3B,CADhC,CAAJ,EACwE;AACtE,Ab5FmE,AvBwClE,AiCwED/D,AvBvB8C,AO4BhD,AeeE,KTrIA,CUiHI,EGpBA,AJwCA4C,EAAE,CTnID,EbwFgD,AsB2C5CuB,CCpBG,AvBvB0C,CaxF7C,Ca2FT,CHoBe,AvBvBsC,C0BGvC,Cb3FD,AbwF8C,CaxF7C,ASmIV,IACA,ETpIK,GAAc,AU+GvBnE,ADqBSkE,KAAL,CAAWf,ETpIgB,CAAC,MAAT,GAAkB,ASoIrC,CAAwB7D,CAAxB,EAA2ByD,GTpIiB,CAAC,ASoId,CAACC,GAAL,CAASvD,IAAI,GAAG0E,GTpIC,EAAkB,ESoInC,EAAyB,CAAzB,CAA3B,ETpI4C,ASoIYpB,CTpIvD,EACT,CSmIoE,CAACE,GAAL,CAAS,KAAK9E,MAAd,EAAsByE,EAAtB,IAA4BuB,OAApF,EAA6FJ,KAAK,GAAGI,OAArG,MAAkH,KADtH,EAEE;AIzCAnE,Ab3FA,AU+GJ,AtBVA,ADd6D,AO6B7D,AegBM,MTpIF,CU+GG,AtBVP,CAAO,ADdsD,E0BIrD,Cb3FC,Ca2FC,AHoBV,AvBxB6D,CuBwBhD,ADqBA,CTpID,AZqGZ,ADd8D,C0BIjD,EzBUN,CYrGS,AbuF6C,AsB6CvD,CTpIW,Ca2FC,AHoBlB,CGpBmB,AHoBC,EGpBP,CAAS,Cb3FV,CZqGL,EYrGmB,GU+GL,CtBVd,CAAO,CAAP,CyBVM,AHoBO,CGpBc,Ab3FA,AZqGjB,CYrGkB,AU+GT,MGpBe,Ab3F7B,Ca2F8B,Eb3FE,Ia2FV,EAArB,Cb3FsC,Ca2FC,Ab3FA,Oa2FO,CAAC,Ib3FT,Ca2FC,Cb3Fc,Ca2FrD,CAATA,Mb3F+C,CAA/C;Aa4FA,Ab5FuE,AvBuCzE,AiCyEA,AtBVA,ADfgE,AO8BlE,AeeoB,MIxChB,EAAE,AHoBE,AvBzB0D,C0BK3D,ApCrDE,AW+DA,CX/DC,AW+DA,CsBUC,EjCzEE,AUgDqD,CuByBpD,AtBVA,CAAL,ADf2D,GVhDlD,AW+DA,CX/DC,EoCqDf,AHoBiB,CGpBD,AHoBE,GtBVG,CX/DZ,AW+Da,CX/DC,IiCyEb,AtBVL,CsBUuB,CGpBD,ApCrD7B,CoCqD8B,AHoBE,AtBVA,CX/DC,CAAC,EAAlC,AW+DoC,CyBVP,CpCrDO,CoCqDC,CHoBzB,CAAZ,EtBVgC,CAAY,CAAC,CyBVhB,CAAX,CzBU8B,CAAJ,CyBVI,EzBUI,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAAR,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAjC,CAAhC,GyBV0D,QAAV,CAAmB,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,IAAI,CAAC,GAApB,CAAf,CAAnB,EAA6D,CAA7D,CAA9B,GACE,gCAAc,MAAd,CAAqB,EAAE,CAAC,GAAxB,EAA6B,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,IAAI,CAAC,GAApB,CAA7B,CADlB;AAEA,ApCvDoC,AWgExC,ADhB6D,AO+B7D,AeeC,CrBhCD,EqBwBA,ChCtFwC,EoCuDpC,C1BPmD,EAAqB,CAArB,CVhDR,AUgDC,CVhDA,EoCuDpC,CAAC,CpCvD2B,CoCuDzB,ApCvDsC,CoCuDrC,IpCvD0C,CAAC,OAAN,CAAc,CoCuDtD,ApCvDwC,CAAb,CoCuD5B,CAAR;AACD,Ab9FD,AvBsCoE,AiC0ElE,AvB1B4E,QatF1E,AUgHE,GAAG,CVhHD,CAAC,EUgHI,EVhHT,EUgHF,CVhHc,CUgHC,OVhHO,CAAC,IAAT,GAAgB,OAAO,CAAC,eAAD,EAAkB,MAAlB,CAAvC,EACJ;AAAM,AU+GiB,AtBPvB,AD5BQ,AsByDN2C,EAAAA,CtB7DmB,GaxEf,CZwGC,CAAC,AqB6BA,CAAC7E,ETrIE,EZwGX,CYxGc,EAAE,AZwGA,EqB6Bd,CAAiBsF,CrB7BC,IYxGI,CAAC,EZwGT,CAAY,CYxGZ,CZwGA,CAAhB,CYxGgC,CZ0GhC,GY1GoC,CAAC,ESqInC,ETrIc,CSqI0B,ETrIE,OAAO,ASqIAA,CTrIC,YAAD,EAAe,KSqIxB,CTrIS,ASqIsB9D,CTrI3D,ASqI4B,CTrIpC,CSqIsEG,IAAlC,EAAwCmD,EAAxC,EAA4CmB,KAA5C,EAAmD;AIvCzF,Ab9FsE,AvBsCtE,AiCyEyB,AtBJ7B,AMUE,AeiBE,KTvIA,GSuIII,ChChGG,AiB+ET,CAAO,CmBvBE,Ab7FF,EvBqCM,EoCwDX,Ab7FS,ASqIE,EfjBb,CeiBgB,CTrID,CAAC,ANoHT,CjB/EE,CAAa,CgCgGDF,ETrIV,ESqIK,CTrIQ,ASqIE9F,ChChGjB,AiB+EF,EjB/EwB,GgCgG7B,ETrI8B,AvBqCI,AiB+E7B,CMpH0B,ANoHlB,GjB/EgB,AiB+ExB,EMpHiB,ANoHJ,CjB/EuB,EuBrCF,GvBqCO,CAAC,GuBrCD,CAAC,AvBqCxC,CAAP,cuBrC8C,EAAkB,OAAlB,CAAzC,EACT;Aa6FG,Ab7FG,AvBqCJ,AWqEF,AMUI,GmBjD+C,ApC5BjD,CoCwDF,Eb/FM,GNoHK,EMpHA,GAAG,IAAI,CAAC,KAAL,ANoHY,CAAC,EMpHA,CNoHD,EAAM,GAAN,EMpHS,ANoHE,CMpHD,ANoHV,EAAc,CAAd,EMpHZ,ANoH6B,CAAjB,CAAf,CMpHiC,GNoHK,IMpHE,ANoHE,CMpHD,WNoHH,CMpHE,ANoHe,EMpHA,CNoHjB,CAA7C,KMpH+C,CAA7C;AAAoE,AvBwCxE,AiCsEE,AtBHJ,ADnBE,AO6BA,AegBE,CflBF,CP3BA,CO+BA,CgBTE,AvBtBA,EAAE,EsB6CEsB,ICvBM,ADuBF,GCvBK,ADuBF0E,ICvBM,CAAC,EDuBd,CCvBS,CAAS,EDwBlB,KAAKD,CCxBI,EAAmB,EDwB5B,CCxBS,ADwBEd,CCxBf,mBDwBI,CAAgC9D,CAAhC,EAAmCG,IAAI,GAAG0E,OAA1C,EAAmDpB,IAAI,CAACC,GAAL,CAASJ,EAAT,EAAauB,OAAb,IAAwBA,OAA3E,EAAoFJ,KAAK,GAAGI,OAA5F,MAAyG,KAD7G,EAEE;ACxBF,AtBHJ,ADnBI,AO+BF,AeeM,ItB9CJ,IuBsBM,GAAG,CvBtBD,CsB8CG,CCxBC,AvBtBF,CAAC,GsB8CP,GCxBe,CAAC,IAAR,CAAa,GAAb,CAAZ;AGfF,Ab/FE,AZ4GJ,ADpBgB,AOgCd,AecoB,MIvChB,A1BPU,EaxFR,CbwFW,E0BOR,A1BPU,C0BOT,Cb/FC,IAAI,Ca+FX,IAAgB,Ab/FlB,EAAoB,Ea+FE,CAAC,KAAL,IAAc,OAAO,CAAC,KAAR,GAAgB,CAAlD,EAAqD;AACnD,Ab/FE,AU8GA,AtBFN,ADrBe,KAAD,EAAa,C0BQnB,AHeE,EV9GA,EU8GI,CAAC,EV9GT,Ca+FF,Cb/Fa,AU8GX,CGfU,CpCxDd,AiCuEmB,MjCvEnB,SAAA,GAAA,CAAI,IAAJ,EAAU,EAAV,EAAc;AoCwDE,Ab9FV,AvBuCJ,AiCuEInE,AvBxBoB,AsB+CxB,MIvCc,ApCvDV,AU+CoB,EatFpB,AvBuCE,AgC8FF4C,CtB/CuB,CuBwBnB,ADuBF,CTrIC,AbsFsB,CatFrB,AvBuCE,CgC8FDuB,CIvCa,AHgBV,CGhBW,CpCvDvB,CiCuEe,CjCvED,EoCuDc,AJuCxB,CIvCyB,EAAN,Ab9FnB,Ca8F4B,Ab9FZ,ASsIhB,KAAKF,CIxCc,CAAgB,Cb9FnC,CAAyB,AU8GE,ADwB3B,CCxB4B,ADwBlBb,CIxC6B,CAAC,Eb9FxC,Ca8FmB,AHgBR,CV9GqB,AU8GE,CGhBW,EHgBlC,EGhBsC,Ab9FjD,AU8GuC,CGhBW,GAAL,EHgBlC,CGhB6C,AHgBV,EDwB9C,CAA+B9D,CAA/B,CIxC6D,CAAC,AJwC5ByD,IAAI,CAACE,GIxCpB,AJwCe,CAASxD,CIxC6B,AHgBV,CAAC,EDwB7B,ECxBY,ADwBG0E,CCxBmB,GAAtB,CAAnC,CAAXnE,CDwBkC,CAAlC,CIxCmB,CJwCwC4C,CIxCzC,CAAR,AJwCV,EAA+DmB,KAA/D,MAA0E,KAD9E,EAEE;AIzC2F,Ab7F1F,AvBsCa,AiCwEd,AvBzBqB,AOiCzB,AegBM,IhChGY,AWqEP,CDtBC,CV/CQ,CuBxChB,AbuFkC,EV/Cf,AiBgFvB,CgBRU,AhBQH,CNXW,EY3GP,ASsIE,ChChGe,AWwE5B,CMQA,GjBhFkB,AiBgFX,AegBD,CCxBa,GAAG,CtBAtB,GsBA0B,CAAC,AhBQpB,GNRP,CAAY,CMQL,CAAM,ENRb,CsBAsB,AhBQf,CNRW,CMQA,EgBRsB,GtBAxC,CsBA4C,CAAC,AtBAnB,IAA1B,EAAgC,EAAhC,CsBAwC,CAAe,AtBAnB,GsBAI,CAAmB,OAAO,CAAC,KAAR,CAAc,QAAQ,GAAG,CAAzB,EAA4B,GAA5B,CAAnB,CAApC;AV7GE/D,AvBqC0B,AWyElC,AD1ByC,AOkCrC,AeekB,MtBjDmB,GOkC9B,EPlCmC,CapFlC,CboFoC,KapF9B,GAAG,GNsHK,CAAC,EMtHA,CAAC,ANsHF,EAAM,GAAN,EAAW,GMtH7BA,ANsHgC,CAAC,OAAJ,CAAY,IAAvB,EAA6B,GAAG,CAAC,UAAjC,EAA6C,CAAC,CAA9C,CAAf,IAAmE,IAAI,YAAJ,CAAiB,GAAjB,CAA1E;AmBzBA,Ab7FIA,AU8GA,AtBCR,AD3BwC,AOmCtC,AeeC,CfjBD,EAIA,AeKA,EtB1CY,CADR,IuB2BM,CGjBD,Cb7F6B,Ga6FpC,Gb7F0C,CU8GtC,EV9GyC,AU8G5B,MV9GkC,CAAC,SAAhDA;Aa8FL,ApCxDC,AiCwEmB,AtBEnB,AD3BA,AOqCF,IPrCE,EV/CI,CW0EC,CsBFc,CvBzBnB,CV/CQ,CW0ER,AD3BA,GV/CY,AW0EA,CX1ER,GiCwEyB,AtBEb,CX1EC,CU+CjB,CV/CmB,CW0EC,EAApB,CX1EuB,AWuEW,ADxBlC,CC4BJ,ED5BY,EV/CoB,IAA5B,EAAgC;AuBrC5B,AvBqC8B,AiCwEH,AtBInC,AD7Bc,AOsCZ,AeaA2C,EAAAA,MAAM,CAAC7E,EhClGoC,CuBrCjC,CboFS,EV/CiB,EuBrC9B,CboFM,AsBmDZ,CTvIe,ASuIEgF,UAAjB,GAA8B,SAASA,UAAT,CAAqBrD,IAArB,EAA2BmD,EAA3B,EAA+B;AIxC7D,Ab/FiB,AvBqC8B,AW6EjD,AD9B4B,AsBoDxB,QAAInD,CIzCC,Cb/FU,ESwIP,EIzCV,Eb/FuB,ASwIT,CTxIU,ASwIlB,IAAamD,EAAE,GTxIJ,CSwIQ,GTxIY,ESwIPzE,GTxIb,GSwIf,EAAoC;AIxCvC,AbhG2C,AU8GpC,AvB5BF,AsBsDoC,EItC1C,C1BlCqB,GuB8Cb,OD0ByC,IAAP,CC1BtB,CAAC,IAAb,CAAkB,IAAI,IAAJ,CAAS,GAAT,EAAc,IAAd,EAAoB,SAApB,CAAlB;AGXR,ApC7DI6B,AiCyEG,AtBIH,AMQF,AeaqD,KC9BjD,CjCpEE,CW6EC,EMQP,CAAO,CgBZI,AtBIT,CX7EU,EW6EE,CX7EC,EAAbA,CW6EgB,AMQlB,GAAO,CNRe,CAApB,CAPkC,CAQtC,KMOS,QAAA,CAAS,GAAT,EAAc,IAAd,EAAoB;AmBvB7B,AbnGQ,AvBqCJA,AiC0EE,AtBKN,AMOI,MjBtFiB,AiC0Ef,AhBYE,CAAC,GjBtFgB,CiBsFjB,CM3HI,CvBqCgB,CAAxBA,CiBsFa,CAAC,CM3HV,CU+GY,CV/GH,AU+GI,ChBYC,CAAC,EgBZjB,CAAoB,ChBYtB,EAAuB,CgBZG,IAAJ,CAAS,GAAT,CAApB;AGXN,AbpGmB,AUgHZ,AvBxBL,AOmC2B,AeazB,EtBhDF,MAAM,AsBgDAmE,ETxIW,AbwFT,AOmCyB,IAAI,CeaxB,CTxIU,CAAC,CSwIR,KAAKF,CfbY,CAAe,EM3H/B,ASwID,CAAU9F,GTxIY,GSwIpC,ETxIe,2BN2HgB,CAAN;AmBtB7B,AbrG6C,AvBsCzC,AiC2EC,AtBID,AD5BA,AOkCqF,GgBvBvF,CvBXE,CuBwBG,CjC3EC,CW+EC,CX/EC,CW+EN,CsBjBF,CjC9DW,CW+EC,AD5BF,EC4BI,AD5BF,CVnDV,AUmDW,EVnDE,CW+EG,IAAN,GAAa,KAAK,IAAL,CAAU,MAAvB,GAAgC,EAA1C;AyBfJ,ApChEmB,AiC6Ef6B,AtBGA,AD7BY,AsBgDZ,MCtBI,AvB1BQ,CC6BP,CqBmBD4C,ChCnGgB5C,AUmDL,CsBgDT,CtBhDW,EVnDO,AiC6Eb,AtBGX,CXhFyB,AgCmGfmE,ECtBI,AtBGA,CXhFc,CAARnE,AiC6EpBA,EjC7E+B,CgCmG/B,CrBnBA,CXhFkC,AgCmGf,GhCnGkB,CAAtB,EAAyB,GAAG,GAAG,EAA/B,EAAmC,CAAC,EAApC,EAAwC;AoCiE3D,AbtGQA,AvBsCFA,AWgFJ,AD9Ba,AOmCXA,AeaqB,GrBhBvB,EDhCY,COmCN,GAAG,CjBrFD,EuBtCE,AN2HE,CeakB,CTxIlB,CvBsCC,EuBtCE,CvBsCC,AgCkGmBiE,IAAL,CTxIT,AvBsCA,AiBqFE,AeaiBrF,CTxIlB,AN2HE,IAAI,AeaE,CfbD,AeaiBa,ChClG9B,CAAa,CAAb,CAAZO,AiBqFmB,AeaO,CTxIf,AN2HbA,CeakD4C,ETxIjB,ASwIL,CAAP,KTxIjB5C;AAAAA,AvBsCFA,AiC6EF,AtBMF,AqBeyD,OCrBlDA,GjC7E0B,CiC6EtB,CVnHgC,AUmH/B,CjC7EwB,CuBtCS,CUmH9B,CjC7EwB,CuBtCS,EvBsCN,GAAG,CuBtCS,CAAC,GvBsCL,AiC6EhD,CjC7EiD,CiC6EtB,CAAC,GVnHkB,AUmHf,GVnHkC,AvBsC/DA,KiC6EF,CVnHIA,CUmHqC,CAAC,EAA1C,EACA;AVnHI,AUmHF,AhBQF,IgBRE,EhBQE,CAAC,CM3HD,EN2HJ,CgBRS,CVnHD,AUmHE,AhBQF,GM3HG,CUmHT,CAAa,IAAI,IAAJ,CAAS,OAAO,CAAC,IAAR,CAAa,CAAb,CAAT,CAAb;AGbC,AbtGS,AvBsCV,AiC6EuC,AvBxB9B,AOgCD,AeaV,QAAIP,CIlCQ,CbtGA,AvBsCN,AiBqFU,EeaR,ChClGC,CuBtCO,AN2HI,EM3HF,AvBsCN,AgCkGA0E,ITxIU,AvBsCpB,CuBtCqB,CvBsCL,CgCkGlB,CfbgB,CM3HE,AN2HY,AeaT,CIlClB,CAA2B,CbtGA,EAAnB,EasGR,EAAkC,QAAlC,EAA4C,IAA5C,AnBqBiD,EmBrBC,EnBqBG,CAAC,IAA3B,GAA+B,UAA7C,CAAN;AmBpBd,AbvGsC,AvBuC9B,AUoDQ,AOgC4D,AeajD,MIjC3B,A1BZgB,G0BYI,A1BZD,Ca3FmB,Cb2FjB,C0BYE,ApChEX,CuBvC6B,ASwIP,CtB7CnB,Ca3F4B,AvBuC5B,EoCgEa,CAAC,ApChEX,AgCiGqBD,CTxIQ,CAAC,EvBuCpC,CuBvC+B,ASwIT,CAAWtF,ETxIS,AvBuC5B,CoCgE1B,CbvGe,CvBuCc,AgCiGK,CAAiBa,EhCjGnB,EAAxB,AgCiG+C,EhCjGnB,CgCiGsB0E,OAAxB,EAAiCvB,EAAE,GAAGuB,OAAtC,CAAP;AIjCpB,AbvGmD,AvBwChD,AiC4ER,AvBzBwB,AsB6CwD,MIjC3E,AHaC,AvBzBkB,Ia3FgC,CauGnD,AHaM,GGbN,ApC/DO,AiC4EE,AvBzBkB,Ca3F6B,Cb2F7B,C0BY3B,AbvG0D,CauG1D,CpC/DY,AiC4EE,CjC5ED,CuBxCiD,CAAC,CauG/D,CHaS,CAAW,CjC5EjB,AUmD0B,Ca3F6B,CvByCjE,EuBzC8E,AUoH9D,AvBzBkB,CuByBD,CVpHlB,AUoHC,AvBzByB,EuByBL,KAApB,EAA2B,MAA3B,CAAkC,OAAlC,EAA2C,MAA3C,CAAkD,YAAlD,CAAd;AGbY,AbvGoE,AvByCtE,AiC4EV,AvB1BuC,AOiCrC,MmBrBU,AHcN,GhBOG,CM5HuE,CauGpE,CpC9DF,AiC4EE,AhBOA,CAAC,CmBrBD,CHcG,AvB1B2B,Ca3F4C,CauG1E,ApC9DG,CoC8DH,AbvG4E,AZyHxF,CsBJmB,AvB1B2B,CVlD5B,AUkD6B,COiCtC,CM5HmF,AN4HtE,CmBrBV,AbvGiF,EvByCtE,AiC4ER,AvB1B2B,AOiCjC,CjBnFe,AiC4EE,AtBI1B,AD9BqD,COiC1B,EM5H6D,AvByCtE,CAAU,CiC4Eb,AhBON,CM5H6F,AN4HpG,CgBP+B,CjC5ED,CAAC,AWgFjC,CD9B0C,EVlDd,CAAS,CAAT,AWgF5B,AD9BmE,CC8B7D,CXhFkC,CiC4EzB,CAAf,CtBIA,CXhF4C,CWgF5B,CD9B0B,CVlDK,AWgF/C,EAAuC,CXhFX,AUkDmD,CVlD7D,EAAmC,CUkDd,GVlDkB,CAAC,GAAL,CAAS,KAAK,CAAC,IAAN,CAAW,MAApB,EAA4B,EAAE,GAAG,GAAjC,CAAnC,CAAR;AoC8D0B,AbvGvB,AvByC8E,AUkDR,AOkCnF,AeYE,CfjBF,EAOA,GmBxBsC,GbvGhC,CauGoC,CpC/DlC,AgCiGC,EIlCoC,GJkC/BF,ChC9FhB,CoC4DsC,EJkC3B,CAAUrF,KAAV,CrBhBC,AqBgBea,GrBhBZ,CqBgBJ,EAAsB0E,OAAtB,EAA+BvE,MAA/B,CAAsC,KAAKsE,KAAL,CAAWtF,KAAX,CAAiB,CAAjB,EAAoBgE,EAAE,GAAGuB,OAAzB,CAAtC,CAAP;ATxIG,AvB0CK,AiC4ER,AvB5BW,AOqCb,AeUC,GAND,EtB7CY,CuBgCN,CvB3BO,KVjDH,AiC4EE,CAAC,IjC5EE,GAAG,GW8EA,EX9EK,CAAC,AW8EH,CsBFf,EjC5EY,CAAU,CW8EF,CsBFM,EjC5EA,CAAC,AW8EZ,CAAU,EX9EH,CAAS,CAAT,EAAY,IAAI,CiC4E1C,EjC5E6C,AiC6E7C,GjC7EsC,GAAa,CAAzB,CAAV,EAAuC,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,OAAN,CAAc,IAAvB,EAA6B,EAAE,GAAG,GAAL,GAAW,CAAxC,CAAvC,CAAR;AoC6DV,AbtGG,AvByCiG,AiC6EhG,AtBEF,AD9BY,AOqCd,IgBTI,EGhBA,A1BZU,C0BYT,EzBkBI,CsBFC,CvB5BS,C0BYnB,CHgBa,AtBEA,AD9BQ,C0BYX,KHgBS,CAAC,AtBEX,CAAY,KAAK,AD9Bb,EuB4BA,CAAgB,CtBEpB,EAAuB,EsBFE,GtBEG,EsBFR,CAAW,GtBE/B,EAAoC,CsBFhB,GAAoB,AtBExC,EAA0C,EAA1C,CAAP,OsBF2D,CAAC,MAAjD,CAAT;AGhBQ,ApC5DL,AiC4E8D,AtBGrE,AD/BoC,AOsCpC,AeUAxB,EAAAA,ItBhDoC,EsBgD9B,CAAC7E,EIpCY,G1BZyB,E0BYhC,A1BZgC,EsBgD5C,CAAiB0E,OtBhD6B,GsBgD9C,EtBhD4C,CsBgDd,CtBhDsB,QsBgDbA,UAAT,CAAqBD,KAArB,EAA4B;AIpClC,AbrGtB,AbyFkD,AOuCpD,AeUE,QT1II,AS0IA6B,KT1IJ,AS0IS,ET1IA,AbyF4C,CsBiDzC,KAAKF,KAAL,CAAW1B,UAAX,CAAsBD,KtBjD+C,AsBiDrE,CAAZ,GtBjDqD,CAAiC,KAAjC,KAA2C,IAA9C;AazFvC,AvB0CP,AiC4EJ,AvB7BoG,QV/ChG,CiC4EG,KjC5EG,CAAC,AiC4EX,GtBIF,CXhFM,CAAY,KAAZ,AWgFN,SAAA,IAAA,GAAO;AyBpBP,AbtGkB,AvB2CZ,AWgFJ,ADlCW,AsBkDX,CCvDJ,IvBAc,C0BkBR,A1BnBI,EVxCF,AgCgGA6B,CrBhBG,EyBrBA,CAAC,ApC3DA,CWgFG,AqBgBX,EAAW,ChChGC,EoC2DV,CAAa,CzBqBR,CXhFU,AWgFE,CXhFD,IWgFM,IyBrB1B,ApC3DM,AWgFe,CAAU,CyBrBD,IzBqBT,EAAZ,EAA+B,KAAK,MAAL,IAAe,KAAK,MAAL,CAAY,KAAZ,EAA9C,EAAmE,KAAK,IAAxE,EAA8E,KAAK,EAAnF,CAAP;AyBpBA,AbtGD,AvB2CI,AWgFL,ADlCE,AOuCF,AeUe,GrBbf,CDpCE,I0BaI,C1BbJ,AOuCF,CAAO,CPvCL,C0BaQ,CJoCY,EIpCT,CAAC,AnB0Bd,CeU0BzB,EfVnB,CmB1BW,A1BbhB,C0BaiB,EJoCG,CAAW,CtBjD/B,GAAQ,AOuCH,CeU+BsB,IAAhB,CfVf,CmB1BO,AnB0BA,AeU8BG,CIpCV,CnB0B3B,EAAW,CeUI,CAAP,IIpCD,EAA+B,KAA/B,CAAJ,AnB0BH,EAA2B,CmB1BoB,KAAK,CAAC,YAAN,GAAqB,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,IAA9F,EACJ;AAAM,AbtGL,AUuHD,AtBME,ADrCY,AOwCV,AeSkD,ETvItD,IUqHA,AhBSQ,CgBTR,ChBSU,IAAI,CmB1BD,A1BdQ,GuB+BrB,CAAE,CGjBI,I1BdQ,COwCV,EAAqB,MgBTzB,GAAE,SAAA,cAAA,GAAiB;AGjBD,AbnGlB,AvBwCM,AiC6EFpE,AtBMF,ADtC8B,AOwCL,AeUxB,GAHD,GhC5FI,AiC6EE,GjC7EC,CiBqFwB,CgBRpB,CjC7ED,EiC6EI,AhBQqB,CjBrF/B,AiC6EFA,ShBQ6B,CAAe,wCAAwC,EAAvD,CAAN;AM5H3B,AvBwCA,AiC6EI,AtBMF,AD9CQ,AO+CiF,GPxEtE,IuBiEZ,KAAL,CAAW,OAAX,CAAkB,UAAC,IAAD,EAAS;AGlB3B,AblGJ,AvBuCK,AiC6E4B,ADmB/B2C,EAAAA,EIrCE,IAAI,AHkB6B,ADmB7B,CCnB8B,ADmB7B7E,EIrCE,EHkB+B,CAAC,IAAV,ADmB/B,CAAiB2E,CCnB4B,GGlBxB,CAAC,KAAD,CAAnB,AJqCF,GAA+B,SAASA,WAAT,CAAsBF,KAAtB,EAA6B;AIpC3D,AHiB8C,AvB7B/C,AOqCE,AeYA,EtBjDF,AOqCE,IgBR6C,AvB7B3C,EAAE,AsBiDA6B,GCpB8C,EhBQvC,AeYF,CfZG,EAAD,AeYC,CfZZ,GAAkB,CeYDH,IAAL,CAAUxB,QfZtB,GeYY,CAAsBF,KAAtB,CAAZ;AhChGA,AiC4EoD,AvB5BpD,AOqCA,EAAA,EPrCA,KVhDO,GUgDC,CVhDG,CUgDD,CAAC,COqCG,CAAC,CNFjB,GXnFS,CAAa,IiBqFpB,CAAyB,CjBrFlB,EAAqB,AWmF9B,GMEE,CjBrFO,CAAP,CiBqFkC,EAAlC,CNFF,SAAA,CAAU,GAAV,EAAe,OAAf,EAAwB;AyBvBxBvC,AbnGK,AvBwCL,AiC2EwD,AtBQtD,ADpCY,AOsCZ,AeWA,GCrBA,GGhBE,A1BZU,CCoCP,CqBaDoE,CTxIQ,AZ2HZ,ADpCe,AOsCR,CmB1BD,C1BZW,CCoCP,CyBxBD,AJqCT,EAAW,EIrCE,AzBwBE,IyBxBE,AzBwBP,CAAU,CY3HjB,AN6HH,CM7H2B,CamGN,CAAC,AzBwBZ,CAAe,CY3HtB,EAA8B,AZ2HvB,CAAV,IyBxBFpE;AblGAA,AUmHE,AvB7BW,AOuCb,AeUe,Cfff,EAOA,EPzCY,CatFR,AbqFE,GuB8BG,CVnHD,GAAG,ASuIW,CCpBpB,GVnHa,ASuIW2C,CTvIV,GAAL,CAAS,CSuIE,CAAWyB,KAAX,EAAkB,KAAKF,KAAvB,CAAP,CTvIJ,EAAXlE;AamGA,AbnGAA,AZ2HE,ADpCA,AOyCF,AeOqD,CCvBvD,GvBzBI,E0BYE,AbnGyC,AZ2HvC,CyBxBD,E1BZH,E0BYE,A1BZF,CavFiD,CZ2HtC,EyBxBA,AbnGyC,CamGxC,CzBwBG,EY3HyC,AvByC1D,CuBzC2D,AbuFzD,CCoCA,EY3HoD,AZ2HjC,CY3H0C,CAAT,AbuFpD,EavFgE,CbuFxD,GavF4D,CAAC,AvByCvE,GuBzCsD,CAAtDA,KvByCA,OoC0D4B,GpC1D5B,CAAW,IAAX,EAAiB,EoC0DH,ApC1Dd,CoC0DyC,CpC1DpB,GoC0DP,CAAd,EAA8C;AAAE,AblGhDA,AvByCE,AWiFqB,ADpCX,AO0CZ,AeOC,GAHD,GTpII,AvByCE,GWiFsB,CXjFlB,CoCyD6C,CblGvDA,CbsFmB,CatFP,AvByCE,EoCyDkC,ApCzD9C,EAAc,AWiFO,CAAe,CY1HtCA,AbsFY,ICoC+B,IAAL,CAAU,MAAV,GAAmB,CAAlC,EAAqC,OAArC;AyBxBqC,ApCzD1C,AWiFkD,ADpCxC,AO2C5B,WjBxFyB,QAAQ,CAAC,KAAhB;AuBxClB,AvBwCuC,AWkFvC,ADvCM,AO8CN,AeOA2C,EAAAA,CrBZA,IY5HK3C,CSwIC,CAAClC,ETxIE,CAAC,GAAG,CAAC,ESwId,CAAiB4E,CTxIC,CAAC,IAAL,GAAY,ESwI1B,ETxI8B,CAAC,ASwIA,KTxIlB,IAA2B,ASwIAA,CTxInC1C,EAAsC,CAAC,GAAG,ISwIhB,CAAsBuC,CTxIA,GAAG,CAAxD,ASwI+B,ETvI1B,ASuIuD,CTvItD,GAAG,IAAI,CAAC,GAAL,CAAS,WAAT,EAAsB,IAAI,CAAC,MAA3B,CADT,EAC6C,CAAC,IAAI,CADlD,EACqD;AaiGrD,AbhGEvC,AZ2HF,AD9EmB,AOmFnB,AeOE,CtB1FJ,K0BmDM,EbhGE,ASuIA,GTvIG,ESuIEiE,CIvCX,AbhGY,EaiGd,CJsCQ,CTvIU,ASuIAJ,CTvIC,IAAL,ASuIN,CTvIgB,GSuIGd,IAAI,CAACC,GAAL,CAAS,ITvItB,CAA2B,ASuIAkB,CTvI3B,EAA8B,CAA9B,CAAVlE,ASuIgC,CAAW6D,KAApB,EAA2BtB,KAAK,CAACsB,KAAjC,IAA0C,CAAjE,EACE;AIvCF,ApC1DA,AWqFF,AMKA,AeOM,IIvCJ,EpC1DI,IAAI,EoC0DA,CAAC,AJuCE,ChCjGC,CAAR,EgCiGWlB,CIvCD,CAAC,ApC1DE,EoC0DR,ApC1DU,CoC0DD,CJuCP,CAAW,ChCjGC,IgCiGIsB,ChCjGC,GgCiGjB,CIvCF,CAAsB,AJuCE,EhCjGV,CAAa,CgCiGCtB,KhCjGrC,CgCiGiC,ChCjGS,AgCiGE,KAAKuB,KAAhB,EAAuB3B,KAAvB,CAAtB,CAAP,EIvCyC,MAAd,CAAqB,KAAK,CAAC,GAA3B,EAAgC,IAAI,CAAC,GAArC,CAAtB,EAAiE,cAAjE,EAAD,CAAR;AAA2F,AbhG3F,AvBsC4C,AiB2F9C,AeMmE,QTvI7D,GAAG,AvBsC4C,IuBtCxC,AvBsCiC,IuBtC7B,CAAC,GAAZ,IAAmB,CAAC,IAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,GAAlB,CAAxB,EAA8C;AAAE,AvBsCO;AoC2DzD,AbjG0D,AUuH5D,ADiBI,MCjBJ,CAAA,EGtBS,EJuCE,EIvCT,EJuCaI,CCjBf,CAAE,CtBKA,GqBYS,CAAW,GCjBtB,CDiBW,ECjBT,ADiB0BJ,KAAjB,CrBZT,AqBYE,GCjBF,MtBKA,EsBLA,CAAS,IAAT,EAAmC,ItBKnC,CAAc,OAAd,EAAuB;AyB1BxB,ApC3DG,AWsFA,AqBYD,GAJD,IrBROvC,EXtFE,EWsFE,CAAC,CXtFC,EWsFE,CAARA,EAAW,EMKlB,CjB3FS,CAAa,KAAK,AiCgFd,AtBMc,GsBNX,AtBMc,IXtFR,AiB2FtB,CjB3FmC,AiCgFd,AtBMc,IAAL,CXtFR,AiCgFN,AtBMwB,CXtFC,AiCgFd,EhBW3B,EjB3FsB,CWsFpB,CXtF6C,CWsFC,CXtF1B,AWsF2B,CXtFxC,CAAP,CWsFkD,EMKpD,GAAc,ENL6C,CAAC,IAAR,CAAa,MAA/D,EAAuE,CAAC,EAAxE,EAA4E;AY5H5EA,AvBuCF,AiCgFEA,AtBMEA,AMKF,GjBzFF,GiC8EM,EVvHA,AZ6HE,CMKC,EgBXE,CtBMC,EsBNE,CtBMC,EY7HA,EUuHI,CVvHD,EZ6HI,AMKA,CMlID,AZ6HE,AMKA,CMlID,IUuHR,CAAe,CAAf,AhBWL,CAAsB,CgBXC,AtBMjB,CAAkB,CAAlB,CAAXA,CsBNU,AhBWsB,CgBXlCA,MhBWO,EMlIS,ANkI2B,EMlI3CA,GNkIgD,KAAzC,EAAgD,WAAhD,EAAP;AmB/BJ,ApCzDE,AiC6EEA,AtBOE,AMKJ,AeOA,MCnBuC,GGpBhC,AzB2BE,AqBYF2C,ICnBuC,EDmB9C,CCnBiD,EtBO7C,CAAe,EyB3BrB,AHoBwD,CGpBlC,AHoBmC,IGpBzD,AHoBmD,AtBOvB,CsBPkC,AtBOjC,CyB3BD,GzB2BP,CAAa,CsBP9B3C,AtBOiB,CAAf,EAAgC,IAAI,IAAI,IAAR,IAAgB,IAAI,GAAG,CAAvB,GAA2B,SAAS,GAAG,IAAvC,GAA8C,IAA9E;AyB1BJ,AbnGE,AvB0CF,AiC6EA,AtBOG,AqBYJ,CAlE0B,CAkEzBsC,IIvCI,AHoBE,CGpBD,CbnGC,GamGG,AHoBE,CGpBD,EHoBI,AD/CW,CAA3B,CC+CE,CVvHe,CamGV,AbnGW,CamGC,EbnGX,EamGD,CAAiB,CbnGC,GamGlB,CAAsB,EbnGE,GAAG,EAA9B,EamGF,AbnGoC,EamGA;AAAE,AblGlC,AUsHJ,AtBQA,GAEA,GYhII,AUsHc,GGpByBtC,GblGjC,AUsHc,CGpBuB,CAAC,CblGnC,AUsHc,CAA3B,CGpBmD,CblG/C,GakGmD,CAAC,KAAL,GAAa,CAA1B,EAA6B,CAAC,IAAI,CAAlC,EAAqC,CAAC,EAAtC,EAA0C,oBnBkClF;AmBjCIA,AblGE,AUsHJ,AtBUA,ADtCF,AO0CA,AeMA,ItBhDa,AsBgDTqE,ET1IE,CUsHG,GGpBD,A1BRW,Ea1FP,AUsHV,CAAa,AvB5BO,Ea1FP,CakGD,AJwCE,CtBhDU,E0BQT,AJwCE/B,CCpBjB,CAAoB,EGpBD,CAAC,AblGE,CAAC,GakGR,AblGX,CakGqB,CAAV,CAAbtC,AHoBoB,ADoBxB,ICpBsB,EAAQ,CAAR,EAAW,CvB5BX,CAAW;AazF3B,AUsHA,AtBUJ,ADvC+B,AO2CjC,EP3CiC,KAAA,CuB6BvB,CAAC,AvB7BuB,IuB6BnB,CvB7BkB,CsBkDlBqE,ECrBT,EjC9EJ,AiC8EmB,ejC9EnB,SAAA,YAAA,CAAa,KAAb,EAAoB,IAApB,EAA0B;AoC0DxB,AbjGC,AvBwCDrE,AiC8EI,AtBUN,ADxCqC,AO4CvC,EP5CuC,IVhD/B,AiC8EA,CvB9B+B,EAAE,C0BSjC,CHqBK,CAAC,CjC9EC,CoCyDH,CAAC,CpCzDK,AiC8EV,CAAW,GGrBX,CAAW,ApCzDI,AiC8Ef,CGrBA,IAAgB,CAAhB,CpCzDU,CAAa,CoCyDH,IpCzDV,CAAdA,CoCyD8B,CAAC,UAA/B,EAAyC;AAAE,AbhG5C,AbuF8B,CAAX,CAAtB,a0BSsD,IAAI,CAAC,GAAL,CAAS,OAAT,CAAiB,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,CAAf,CAAjB,CAAP;AAA0C,ApCxDrF,AiC8EI,AhBcR,MjB5FQ,GiB4FC,CgBdG,AhBcF,GjB5FK,CiC8EC,CAAC,EjC9EE,EiB4FnB,CAAoB,CjB5FhB,EAAmB,CiC8Ef,EAAkB,ChBc1B,GAA8B,IAA9B,EAEA;AMrIE,AvBuCuB,AiC8EG,AhBiB5B,QgBjB4B,CVrHnB,EvBuCuB,GiC8EE,CjC9ET,GWwFvB,YAAA,SAAA,SAAA,CAAU,CAAV,EAAa;AyB/BX,AbhGK,AvBuC2B,AiC8EA,AtBWhC,AMOJ,IMvIS,EZgID,IyBhCA,AbhGC,CZgII,CYhIH,IagGI,CAAC,AzBgCX,CYhIK,CZgIU,EyBhCX,CAAY,IAAZ,CAAiB,SAArB,EAA8B;AAAE,AbhGpB,AUsHT,AtBUc,AMQrB,IMxIgB,CUmHV,ItBaoBA,CYhIV,CUsHH,CVtHK,CZgIY,CAAC,CsBVd,EtBUiB,CYhIzB,AZgIY,CsBVA,CAAC,AtBUe,CAAC,GsBVzB,AtBU4B,EsBVb,GtBUkB,MAAL,CAAY,MAAhC,EAAwC,CAAC,EAAzC,EACrB;AyBjCyC,AbhGf,AvBwCtBA,AiC+EE,AtBUA,AMQN,IMzI0B,EvBwClB,GuBxCuB,CvBwCnB,AiC+EA,AtBUF,CYjIuB,EvBwClB,CiC+EC,CtBUD,EsBVI,CjC/EC,GiC+EG,AtBUb,CYjIkC,AUuHpB,AtBUF,CYjIuB,AZiInC,EXzFK,CAAa,AiC+ET,CVvH8B,AUuHpB,CVvHqB,AZiItB,CAAtB,CsBVa,CVvHyB,AvBwC7B,AiC+EkB,AtBUJ,EXzFzBA,GiC+EkC,CAAC,KAAN,CAAY,OAAZ,CAAd,CAAb;AGtBN,AbjGS,AvByCLA,AiC8EE,AtBUyB,AMS/B,GM1IE,GvByCM,IAAI,AiC8E4C,GjC9EzC,AiC8E4C,EtBUrB,CsBVwB,EjC9E1C,EiC8E8C,AtBUvB,EXxF5B,EiC8EuD,CjC9E3C,CWwFW,CAAY,CsBVwB,AtBUvB,CXxFpB,AiC8E4C,CjC9E3C,EWwFuB,CAAC,EsBVc,CtBUX,CsBVrD,AtBUiD,CXxFxC,EWwFgD,CXxFpB,AWwFqB,CAAT,GAAa,CAAjB,CAAb,CXxFY,AWwFnB,CXxFoB,QAA/CA;AoCwDD,AbhGF,AvByCG,AiC8EI,AtBS8D,AMUtE,EjBjGI,IAAI,AiC8EA,CjC9EC,KAAD,CAAJ,AiC8EW,GjC9EG,IAAd;AACA,AWsFkE,AMWtE,SjBjGW,IAAI,QAAJ,CAAa,IAAb,EAAmB,IAAnB,CAAP;AoCuDF,Ab/FF,AvByCE,AiC6EI,AtBQiE,AMYvE,GjB/FE,MoCoDO,Ab/FA,CUsHG,GGvBV,AHuBI,EAAS,KVtHf,CAAqB,GAArB,EAA0B;AagGzB,Ab/FCA,AvB2CA,AiC0Ee,AtBSf,AMYF,EmBzCA,IbjGM,EUqHW,GVrHN,EUqHW,CVrHR,AUqHS,EVrHrBA,OUqHe,CAAgB,GAAhB,EAAqB,OAArB;AGnBjB,AblGEA,AvB4CA,AiCyE4C,AhBsB9C,MM3IkB,GAAG,GAAG,GAAG,CAAC,aAA1BA;AamGF,AnByCA,kBNZE,YAAA,SAAA,SAAA,CAAU,CAAV,EAAa,CAAb,EAAgB;AyB5BlB,AbnGE,AUqHI,AtBWF,AMYJ,MNZQ,CAAC,EYhIA,CUqHG,EVrHV,AZgIY,EYhIA,AUqHR,EAAY,CVrHD,CZgIb,EYhIgB,AZgIA,UYhIU,CAAC,GAAD,CAA5B,EAAmC;AACjC,AUqHI,AtBUc,AMctB,IM7II,KAAK,AZ+HkB,CY/HjB,EUqHI,EVrHV,CAAW,AZ+HO,GAAc,CXpFlC,CWoFoB,CsBVC,GAAG,IAAI,CAAC,GjC1E7B,MiC0EwB,GjC1ExB,CiC0E0C,IAAI,CAAC,IjC1E/C,CAAW,IAAX,AiC0E0C,CAAe,CjC1ExC,EiC0EyB,CAAmB,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAnB,CAApC;AVrHO,AvB4CX,AWmFkC,MY/HvB,GAAA,AvB4CJ,EuB5CK,EvB4CD,CuB5CA,OvB4CJ,CAAa,CAAC,IAAD,EAAO,MAAP,CAAc,KAAK,OAAnB,CAAb,EAA0C,KAAK,IAAL,GAAY,IAAI,CAAC,QAA3D,CAAP;AoCuDG,AbnGc,AvB6CnB,AiCyEQ,GjCvER,CiB+FW,EM9IQ,GamGL,AbnGQ,EAAE,CUsHZ,EVtHe,CamGtB,AbnGuB,CamGP,EnB2CI,GmB3CpB,AHmBG,AhB0BR,EmB7C4B,AHmBP,CVtHR,MNgJb,CmB7CK,EAAiC,WnB6CtC,CAAY,KAAZ,EAAmB,GAAnB,EAAwB;AmB5CxBA,AbpGuC,AvBgDvC,AiCsEuB,AtBUrB,AMiBJ,MmB7CM,AbpGmC,CZgIhC,EyB5BA,CbpGoC,AUsHpB,EGlBb,AbpGmC,CZgI3C,CAAY,CYhIkC,CAAC,AUsHpB,CGlBd,CAAC,AzB4Bd,CAAiB,CAAjB,EAAoB,CAApB,IyB5BFA;AAAAA,AbpGa,AvBiDb,AiCqE+B,AtBW/B,AMiBF,GNfE,EYnIE,CaoGyB,OAAO,GAAG,GAAG,YAAY,+BAApDA;AAAAA,AzBgCA,AMeE,MmB/CiE,CnB+C5D,ImB/CPA,CnB+CE,GAAa,KAAb,CAHsB,CAI1B;AMnJI,AUsHI,AhB8BR,QMpJQ,GAAG,CUsHG,GVtHC,GAAX,CUsHiB,CVtHH,EUsHM,IAAI,IAAJ,CAAS,GAAG,CAAC,MAAJ,EAAT,EAAuB,IAAvB,EAA6B,SAA7B,CAAhB;AGlBN,AbpGkB,AUsHZ,MGlBF,MHkB2D,CGlB/D,EAAa,GHkBP,CjCrEN,WAAA,SAAA,QAAA,CAAS,IAAT,EAAe;AoCoDb,AbrGqB,AvBkDrB,AiCoEI,AhB+BJ,OAAK,CmBhDD,CpCnDG,CiBmGP,CmBhDO,CAAC,AHiB6D,CjCpE1D,AiBmGA,GmBhDP,AHiBqE,AhB+BzE,CmBhDa,CzB+Bf,CsBd8E,EjCpErE,CAAa,EiCoE6D,CAAC,EjCpEzD,CoCmDrB,GHiBwE,CGjBhD,CAAC,CpCnDT,AiCoEuE,CjCpE1D,AiCoE7B,MjCpEgB,CAAoB,AWkF1C,IXlFsB,CAAb,EAAwC,EWkFjD,GXlFsD,IAAL,GAAY,IAAI,CAAC,EoCmD3B,IzB+BvC,CyB/B4C,AzB+BtB,CyB/BuB,ApCnDpC,CAAP,EoCmD6B,EAAmB,CzB+BlD,EyB/BqD,AzB+BtB,CyB/BuB,IAAvB,CAA7B,EAAyD;AAAE,AbpG5D,AvBkDD,AWkFE,AMiBF,GjBjGA,AiBoGF,INpBSA,IAAI,CAAC,CyBhCwD,EzBgCrD,GyBhC8C,IzBgCvC,CAAC,IAAR,CAAa,MAAb,GAAsB,CAA9BA,EAAiC,SAAS,GAAG,KAAK,IAAL,CAAU,MAAV,GAAmB,OAAO,CAAC,IAAR,CAAa,MAAlF,EAA0F,CAAC,IAAI,CAA/F,EAAkG,CAAC,EAAnG,EAAuG;AyBhChC,ApC/CzE,AiCiEQ,AtBeJA,AMoBN,QNpBU,IsBfI,AtBeA,GAAG,GsBfG,GAAG,CtBeC,CAAC,GsBfG,CAAC,KtBeZ,CsBfM,AtBeY,CAAlB,CAAXA,EsBfiC,KAAK,CAAC,IAAD,CAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA7B,EACA;AVtHR,AUsHU,AtBeN,AMoBN,SMzJS,AZqIE,CsBfC,IVtHV,CUsHe,CAAC,EtBeZ,CAAe,CsBfJ,CAAL,GAAc,EtBeE,CAAC,GsBfjB,CtBeS,CAAa,CAAb,EAAgB,MAAhB,EAAf,EAAyC,IAAI,IAAI,IAAR,IAAgB,IAAI,GAAG,CAAvB,GAA2B,SAAS,GAAG,IAAZ,GAAmB,CAA9C,GAAkD,IAA3F;AyBjCF,AbnGH,AUqH+B,AtBgB3B,AMoBL,EMvJA,EaiGI,KAAK,AHiBC,GGjBE,GAAG,AHoBL,CGpBM,IAAZ;AACD,AbjGH,AUoHY,AtBeV,GyBrCA,AzBuCA,MyBpCO,CHmBG,KAAK,CAAC,GjCnEhB,CiCmEU,CAAW,GjCnErB,IiCmEU,KjCnEV,EAAA,CAAG,KAAH,EAAU;AoCiDR,ApChDA,AiCkE2B,AtBkB7B,IyBpCE,EpChDI,GoCgDC,EpChDI,CoCgDD,MpChDJ,CAAa,MAAb,IAAuB,KAAK,CAAC,OAAN,CAAc,MoCgDvB,ApChDlB,EAA+C,GoCgDxB,CAAC,GAAhB,EAAqB,GAAG,CAAC,IAAzB,EAA+B,CAAC,CAAhC,CAAR;ApChDiD,AiCmE5C,WjCnEmD,KAAP;AoCiDjD,AblGG,AvBiD0D,AiCoE1D,KAbM,GGNL,CblGQ,EUqHH,EGnBA,EHmBI,EGnBA,EHmBI,CAAC,CGnBlB,EAAiB,AblGd,AUqHM,CVrHiB,CUqHH,EVrHpB,EAAiD;AakGjC,AHoBf,IhBgCK,EgBhCL,OGpBsB,AHoBf,IhBgCW,CmBpDH,AzBoCrB,EMgBwB,ONhBxB,MMgBwB,GNhBxB,MAAA,CMgBwB,ENhBf,OMgBe,EAAA;AmBpDS,ApChD/B,AiCqEG,AtBgBHA,AMkBF,MNlBM,CXrFCA,IAAI,AiBuGX,CjBvGY,CWqFC,EXrFE,CAAb,AWqFc,EXrFE,CAAC,CWqFC,EXrFE,EiBuGtB,CAAY,EjBvGe,AWqFX,EAAdA,GMkBF,EjBvGsB,AiBuGD,CjBvGc,IiBuGnC,EjBvGE,AiBuGoC,EjBvGK,CAAC,EAA1C,EACJ;AoCgDG,ApChDG,AiCqED,AtBgBD,EAAA,CsBpCF,EAoBK,GjCrEG,CAAC,AWqFA,CsBhBC,AtBgBA,IXrFI,CiCqET,CAAW,KjCrEP,CAAa,AiCiDtB,CjCjDS,CiCqEe,CjCrEC,AiCiDzB,EjCjDS,CAAmB,GWqF1B,AMiBwB,CNjBM,CXrFC,CAAC,AiBsGL,ENjB3B,KXrF0B,CAAc,CAAd,CAAnB,CAAL,EAAyC;AuBlD7CA,AvBkD+C,AiCsE7C,AtBgBA,AMiBAM,IAAAA,EMzJE,GUwHK,AtBgBA,IXtF6C,AiCsEzC,AhBiCXA,CAAAA,CMzJW,CZwIX,EYxIc,AvBkD+B,AiBuG7CA,CgBjCO,AhBiCF,CgBjCa,GhBiClBA,CMzJoB,CNyJd,EMzJiB,KNyJvBA,CMzJ6B,CAAC,ANyJf,KAAfA,GgBjC+B,IAAb,CAAkB,KAAK,CAAC,EVxHnB,GAA+B,EUwHlB,CVxHhB,CUwHF,CAAX,CVxHqD,CAA9DN,AUwHwD,MAA/C,CAAP;AGrBF,AblGA,AvBiDsD,AiCuErD,AtBgBD,AMiBF,CgB1DA,CV/FE,CZ0IA,GyBxCI,QAAJ,EAAc,IblGI,CAAC,KAAD,EAAQ,SAAS,IAAI,CAAb,GAAiB,CAAjB,GAAqB,SAAS,GAAG,MAAzC,CAAlB;AamGEA,AblGH,AvBgD4D,AW0F3D,QyBxCM,EAAE,GAAG,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc,KAAd,CAATA;AHwBJ,MAAM,CAAC,KAAP,GAAe,IAAI,MAAJ,CAAW,sBAAa,KAAxB,EAA+B,CAA/B,CAAf;AGvBI,AbjGJ,AvB+CI,QoCkDI,CbjGC,AvB+CE,IAAP,EoCkDA,EAAW,UbjGf,CAA4B,KAA5B,EAAmC,IAAnC,EAAyC;AaiGxB,AbhGf,AvB+CA,AiC0EF,GjCxEE,GoC+Ce,CbhGVA,CagGY,CAAC,AHyBX,EVzHE,CAAC,GAAG,CAAb,EAAgB,AZwIhB,CYxIiB,EagGF,AHyBjB,CGzBiC,AbhGX,AUyHA,EtBepB,GYxIyB,AUyH3B,CVzH4B,CUyHC,CAA7B,EAAgC,CtBe9B,CYxIA,EAAkC,AZwIlC,CYxImC,AZwI/B,EYxIJ,CZwIA,CYxIuC,CZwI9B,KAAT,EAAoB,KyBxCyB,MAAd,CAAqB,EAAE,CAAC,GAAxB,EAA6B,KAAK,GAAG,KAAK,CAAC,GAAN,CAAU,OAAV,CAAkB,KAAlB,EAAyB,UAAzB,CAAoC,QAAzE,CAAhB;AAAmG,Ab/FpH,AvBiDE,AiCwEAA,MAAI,EVzHN,GAAwB,GAAG,AUyHzBA,KVzH8B,CAAC,CAAD,CAAhC,OZuIgB,GAAG;AYvIV,AU0HP,EAAA,KAAK,CV1HE,AU0HD,GV1HC,GAAA,CU0HP,CAAa,CV1HN,CAAA,GAAA,KU0HQ,IAAF,EAAQ,CAAR,EAAW;AG1BtB,AbhGU,AU2HV,AtBaA,IyBxCA,EzBwCI,EYxIM,AU2HN,GV3HM,AZwID,CyBxCD,AH2BA,CG3BC,AH2BA,CV3HC,CagGC,CAAC,CbhGF,AZwIV,CYxIU,CZwIK,EYxIL,CU2HN,IAAmB,CAAC,GG3Bf,EAAD,CAAR,AH2B8B,CAA9B,EAAkC;AG1BnC,AbjGgB,AvBkDjB,AiC0EI,AtBYe,MsBZf,EV5Ha,GZwIS,CYxIT,EU4HL,CV5HK,CZwIc,CsBZhB,CV5HE,AvBkDjB,AiC0EI,CV5Ha,AvBkDb,CWsFsB,CAAU,EYxInB,CZwIS,EAAe,GXtFzC,CAAI,CWsFsB,EXtF1B,AWsFgD,GXtF5C,CWsFsB,CAAP,UXtFF;AAAE,AiC2Ef,AtBWiD,IMO7B,CAO1B,IjBpG4B,IiC2Ef,CjC3EoB,IiC2E3B,GjC3EsB,CAAa,MAAb,GAAsB,KAAK,OAAL,CAAa,CAAb,CAAtB,GAAwC,IAA/C;AoCgDnB,AbjGE,AvBiDoE,AiC4EnE,AhByBL,CjBrGE,EAEA,KuBnDM,CaiGC,EbjGE,CAAC,CaiGV,QbjGM,IAAiB,GAAG,GAAG,IAA3B,EAA+B;AakGlC,AblGoC,AvBoDnC,AiC0EC,AtBUC,AMeJ,EmBnDA,CHqBE,GVzHmC,CZwI5BA,EYxI+B,CAAC,CZwI5B,CAAC,GAAG,IYxIoB,CZwIf,EYxI+B,EZwIjD,CYxIoD,CZwI5B,CAAC,CYxI8B,EZwI3B,EYxIK,GZwIA,EAAjC,EAAqC,CAAC,EAAtC,EACJ;AyBpCA,AbrG+D,AU+H7D,AtBUI,IAAA,GAAG,EsBVA,CtBUG,IsBVE,CAAC,AtBUE,IAAL,CsBVH,AtBUa,CsBVD,AtBUT,EAAa,GAAb,CAAiB,EsBVpB,CAAP,AtBUU,EAAsB,KAAtB,CAAN;AyBnCN,AH0BC,AtBSuC,AMetC,EAAA,oBAAA,CAAI,OAAJ,CAAI,GAAJ,GAAI,YAAU;AMvJZ,AvBoDF,AiBmGgB,QMvJV,GAAG,ANuJc,CMvJb,INuJkB,EjBnG5B,CAAI,GuBpDE,CNuJiB,CAAa,EMvJZ,CNuJD,CjBnGvB,CAAI,CuBpDF,CNuJyC,CMvJf,AvBoD5B,GAAI,CiBmG4C,KAAL,CAAW,GAA/B,EjBnGP,CiBmG4C,KAAK,KAA1C,GAAkD,IAAzD;AMvJc,AvBoDZ,AiC6EpB,AtBQI,AMc2E,GAA7E,CgBtBI,EVjI0B,EUiItB,CVjIyB,AvBoDR,AWqFhB,CYzIyB,CUkIlC,CtBOE,EXrF4B,MuBpDA,AUkI9B,CjC9EyB,CAAa,CuBpDS,CUkI/C,CAAY,EVlIkB,CvBoDL,AiC8EzB,EAAiB,CjC9E8B,GiC8E/C,EjC9EoD,AiC8E7B,OjC9EwB,CAAa,CiC8E5D,EAAkC,EjC9E+B,OAAL,CAAa,EiC8EzE,EAAgD,EjC9EY,GAAsB,CAAnC,CAAtB,GAA8D,IAArE;AoCkDb,AbtG8C,AvBoDwC,AWsF3F,CXtFA,EAEA,AWsFA,MyBtCc,QAAT,CAAkB,KAAlB,EAAyB,QAAzB,EAAmC;AACxCA,AbtGC,AvBsDD,AiC6EE,AtBSF,AMYF,EAAA,ImBlDM,CH6BG,EG7BA,CH6BL,EG7BQ,CH6BG,EhBqBf,CgBrBI,AhBqBJ,CmBlDiB,AH2BiC,CG3BhC,OnBkDlB,CAAE,CmBlDAA,EnBkDF,GAAE,SAAA,GAAA,CAAI,GAAJ,EAAS,OAAT,EAAkB;AmBlDlBA,AbrGD,AZ4IC,AMYEA,MmBnDyB,EnBmDrB,GmBnDNA,EnBmDW,GAAG,GAAG,CAAC,OAAJ,CAAY,OAAO,CAAC,GAAR,CAAY,KAAK,IAAjB,CAAZ,CAAZA;AgBpBA,OAAK,IAAL,GAAY,IAAZ,CAJ8C;AG1BhD,AbpGFA,AvBoDE,AiBmGE,IMvJA,EaoGE,EnBmDE,CmBnDC,AnBmDA,KAAK,CAAC,GjBnGb,CAAI,EoCgDe,AnBmDZ,CAAa,IMvJI,GAAG,AvBoD3B,CAAI,GuBpDNA,AvBoDE,EuBnDF,ANsJI,CjBnGE,CiBmG6B,WjBnGhB,IoCgDjB,EAAkC;AAChC,AbnGJ,AvBkDqB,AiBmGgB,QmBlD7B,CpCjDoB,EoCiDjB,CAAC,CnBkDgC,CjBnGX,EoCiDzB,CAAS,CzBsCf,GXvF0B,CAAa,AiBmGY,CAAC,IAAV,CmBlDpC,ApCjDa,AiBmGsC,ENZzD,EyBtC8B,CAAC,AnBkDW,CAAP,KNZnC,SAAA,CAAU,GAAV,EAAe,KAAf,EAA0B,OyBtCa,KAAK,CAAC,GAAd,EAAmB,GAAG,CAAC,EAAvB,CAA7B,EAAuD;AAAE,ApCjDd,AiBmGkB,CjBnG/D,EAEA,UoC+CkE,KAAP,WzBsCvC,GAAG;AyBtCgD,AblGlE,AvBoDL,AiC+EE,AtBK0B,OsBLrB,EVnIO,AZwIqB,KAAK,EsBLtC,EtBKiC,CsBLhB,AtBK0B,GAAV,EAAe,GYxI7C,CAA4B,AUmI/B,CAR8C,AtBab,EYxI9B,AZwIoD,EYxInB,GZwIH,CAAP;AYvI5B,AvBoDA,AWmF+D,AMa7DA,MMpJE,ENoJE,CMpJC,CAAC,KNoJK,GAAG,CMpJhB,EAAiB,ANoJE,CAAC,OAAJ,CAAY,OAAO,CAAC,GAAR,CAAY,KAAK,MAAjB,CAAZ,CAAdA;AmBlDA,AblGiB,ANqJjB,ImBnDA,KAAK,EblGmB,ANqJjB,CmBnDC,EblGmB,CakGhB,AblGiB,ANqJjB,CmBnDC,EAAZ,MblGwB,EAAP,ENqJV,CAAkB,OAAO,CAAC,MAAR,CAAe,aAAf,GAA+B,OAA/B,GAAyC,KAA3D,EAAkE,KAAlE,CAAP;AmBlDD,AbnGwC,AUqIvC,AhBiBJ,GmBtDE,AbjGsC,ANkJxC,CMjJ2C,GUqIlC,EGlCA,SzBsCP,CsBJE,GAAoB,GtBItB,SsBJE,AtBIF,IAAA,CAAK,GAAL,EAAU,KAAV,EAAiB,MAAjB,EAAyB;AyBrCvB,AzBsCAA,CsBjBJ,GGrBI,EzBsCI,GyBtCC,GAAG,CzBsCG,GAAG,GXrFhB,EWqFEA,MXrFF,SAAA,KAAA,CAAM,KAAN,EoC+CoB,ApC/CP,KoC+CY,CAAC,GAAhB,EAAqB,GAAG,CAAC,EAAzB,EAA6B,CAA7B,CAAR;ApC9CAA,AiBkGJ,EAAA,IjBlGQ,KAAK,GAAG,CiBkGhB,CAAA,GjBlGqB,MiBkGrB,CjBlGgB,AiBkGd,CjBlG2B,KAAb,CAAZA,AiBkGJ,GAAE,SAAA,OAAA,CAAQ,EAAR,EAAY,OAAZ,EAAmC;AmBnDjC,AbpGF,AUuIF,AtBII,IsBJJ,CAAA,CVvIM,CZ2IGA,CyBvCD,GzBuCK,CAAC,CyBvCD,CHmCb,CAAE,AtBIe,EyBvCA,GHmCjB,AtBIsB,CyBvClB,EAAiB,AHmCnB,CtBIE,EAAwB,CAAC,CY3I3B,EAA0B,AZ2II,EsBJ9B,GtBImC,AMYhB,EgBhBnB,AtBIE,CsBJI,AhBgBgB,CNZiB,CAAC,EAAtC,CsBJF,CtBI4C,CsBJ/B,iBhBgBe;AmBnDP,AbpGO,AvBsD1B,AiCkFA,AtBIEA,AMYFM,IAAAA,EjBlGI,AiCkFA,CjClFC,CWsFC,GY5I2B,AUwIxB,AtBIA,CXtFT,CoC8C0B,AnBoD1BA,CMxJoC,AvBsD1B,AWsFE,AMYZA,CMxJqC,AUwIjC,GGpCe,CHoCF,AtBIA,CY5IgB,CAAU,EZ4I/B,AMYZA,CgBhBsB,AtBIA,AMYhB,CgBhBiB,AtBIX,CAAVN,GsBJE,EhBgBJM,CAAM,CgBhByB,CAAC,EhBgBhCA,CAAa,EgBhBwB,CAAC,ChBgBtCA,EMxJiC,ANwJnB,CMxJY,CNwJ1BA,EAAkB,EgBhBlB,EAAiD,GhBgBjDA;AmBpD+B,AbpGmC,AvBsDtD,AiCmFVN,AtBGAA,QsBHI,AtBGoB,EXtFR,EiCmFR,EjCnFY,AWsFU,CsBHnB,EtBGsB,GsBHjB,AtBGoB,CsBHnB,AtBGoB,GXtFrB,CAAe,AiCmFpB,CAAW,ItBGW,CsBHtB,AtBGoC,CsBHnB,EtBGK,EXtFS,AWsFU,CsBHnB,IjCnFF,AiCmFpB,AtBGsB,CsBHjCA,AtBGAA,EXtFkD,oBAAnB,GAA0C,IAAzD,CAAN;AoC+Cb,ApC/CiF,AiBmGhF,QAAI,OAAO,IAAI,wBAAM,KAArB,EAA4B;AMvJ9BA,AUwIE,AtBGE,AMaAA,MMxJA,EUwII,AtBGA,EMaA,EMxJE,AUwIR,EAAU,AtBGE,CY3ID,AZ2IE,AMaF,GAAG,INbR,CMaa,GMxJG,AZ2IE,CY3ID,CNwJT,CAAW,CMxJH,AZ2IpB,CY3IJA,CZ2IgC,QMahB,CAAuB,KAAK,GAA5B,CAAZA;AmBpDJ,AbnGA,AvBoDE,AiCmFY,AtBIRA,EY3IN,GAAG,CamGC,AbnGA,GvBoDK,CWuFC,CY3IV,CAAU,CUuIW,CGpCrB,ApC/CE,AWuFY,EyBvChB,CHmC2B,AtBIR,IsBJI,CAAS,AtBIR,IsBJY,CAAC,ItBIlB,CAAe,CsBJF,AtBIb,CY3Ie,AZ2I1BA,EsBJsC,EVvIR,IAA1B,AUuIoB,EAAT,CVvIsB,CUuIW,IAAjC,EAAuC,KAAK,SAA5C,CAAP;AGnCZ,AbnGA,AvBoDF,AiCkF2E,AhBiBvE,GjBjGJ,CoC6CE,IbnGI,ENuJE,EmBpDE,CAAC,EnBoDP,EAAS,CmBpDG,CAAC,EAAN,AbnGT,CamGkB,EbnGE,EamGX,CAAc,KAAd,EAAqB,cAArB,EAAD,CAAR;AAA+C,AblG7C,AvBsDJ,AiCgFG,AtBIG,AMYS,MMtJX,ENsJW,ENZL,AMYO,CAAC,GNZJ,IAAI,IAAR,AMYK,CAAe,GNZJ,EY1IA,ANsJX,ENZe,CY1ID,EZ0II,CAAvB,IAA4B,IAAI,GAAG,KAAK,EAA5C,EAAgD;AY1IxB,AUuI7B,AtBIO,AMW4B,CgBpBtC,OVlIgC,AZ2ItB,CAAC,GAAG,IAAJ,KY3ImC,EAAE;AamG7C,AbnG6B,AZ4IrB,AMWL,OMvJC,CZ4II,CyBzCD,EzByCI,EyBzCX,CzByCc,KAAK,IAAL,CAAU,IAAV,EAAgB,OAAhB,CAAwB,MAAM,CAAC,OAA/B,CAAN;AyBxCT,AbnGK,AZ4II,AMWV,EmBlDA,CnB4CA,UMjJa,IAAP,EvBsDJ,aAAA,SAAA,UAAA,CAAW,KAAX,EAAkB;AoCgDpB,AbrGK,AvBsDD,AWsFK,SXtFE,KAAK,OAAL,CAAa,KAAb,CAAP;AoCgDJ,ApC/CE,AWsFK,AMWP,EAAA,CjB/FE,YiB+FF,CAAA,SAAA,CAAE,EAAF,GAAE,SAAA,EAAA,CAAG,KAAH,EAAU;AM5JiC,AvB8D3C,AiCiFF,AhBcI,GM7JQ,CU+IC,EV1IP,KNwJK,IM7JT,CU+IuB,AhBcT,GgBbd,SAAA,AhBa0B,YgBb1B,CAAY,AhBaH,IgBbT,AhBa2C,EgBbzB,GhBa8B,CAAC,EgBbjD,EAA0B,EhBaiB,IAAgB,IgBb3D,ChBagE,CgBb1B,KhBa7B,GgBbT,ChBa0E,CgBb1B,IhBa+B,CAAC,IAAN,IAAc,KAAK,IAA3F;AjB9FF,AiCkFE,AtBEE,AMWN,GAFA,IgBXS,CtBEC,GsBFN,GAAY,AtBEA,CAAC,GsBFb,ItBEE,EAAkB;AyBxCjB,AbrGL,AU4IE,AtBCsB,MY7IpB,AZ6IoB,CY7InB,AU4IE,EGvCO,IAAT,AHuCH,AtBC6B,CyBxCZ,EHuCH,AtBCkB,GyBxC7B,CzBwCmB,CyBxCE,CHuCxB,OGvCG,AbrGL,EaqGoC,AbrGP;AasG/B,AbrGI,AU4IA,AtBAoC,AMaxC,EAAA,EMzJI,EaqGJ,CHuCS,EGvCS,GAAG,GnBoDrB,CAAA,CmBpD0B,AHuCtB,CGvCuB,EHuCL,KhBatB,CMzJ0B,ANyJxB,CmBpDF,EbrG6B,CU4IzB,IV5IA,GNyJJ,GAAE,SAAA,WAAA,GAAc;AmBpDT,AbpGH,AU4IA,AhBaA,IMzJA,EaoGG,CHwCE,IGxCF,AnBqDI,GmBrDJ,CHwCH,AhBaW,EmBrDR,CAAA,AHwCa,CjCpFlB,GuBxDoB,CaoGf,AbpGgB,GU4InB,ChBaO,CAAiB,CMzJN,AvBwDpB,EuBxD6B,CAAT,CAAlB,ANyJ6B,KjBjG/B,CiBiGS,EAA8B,IjBjGvC,CAAQ,AiBiGoC,CjBjG5C,EAAW,CiBiGF,CAAP;AmBrDU,AbnGX,AvBwDC,AiCoFD,AtBDG,AMcN,CgBnBA,EhBiBA,CNZM,EyBxCQ,CpC3CLA,AWmFA,EyBxCK,CzBwCF,CXnFC,CoC2CC,ApC3CA,GoC2CA,ApC3CG,CoC2CH,ApC3CLA,AWmFS,CAAC,CXnFC,CoC2CN,ApC3CO,CWmFf,EXnFkB,CAApB,EAAuB,CAAC,GAAG,KAAK,OAAL,CAAa,MAAxC,EAAgD,CAAC,EAAjD,EAAqD;AoC4CvDA,AbnGD,AvBwDKA,AWmFD,MyBxCC,EpC3CI,GoC2CC,EpC3CI,CoC2CD,EpC3CI,GoC2CC,CAAC,CpC3CG,OAAL,CAAa,CoC2CjB,ApC3CI,CoC2Ca,ApC3CzBA,GoC2CQ,CAAZA;AAAAA,ApC1CI,AiBiGN,EAAA,EjBjGM,CAAC,CoC0C8B,ApC1C7B,KAAD,CoC0CoC,CpC1C5B,CAAR,CoC0CuC,AnBuD9C,CjBjGkB,AiBiGlB,CjBjGO,CAAD,EoC0C6C,IAAI,CnBuDvD,CAAE,MAAF,GAAE,SAAA,MAAA,GAAS,SmBvDuD,KAAX,CAArDA;AbjGF,AvBwDM,AiCoFNC,AtBDI,AMcA,IjBjGE,AiCoFA,CjCpFC,IuBxDE,AvBwDE,AWmFA,EMcA,GjBjGK,CAAC,AWmFA,GsBCG,AtBDA,GsBCG,AtBDN,EXnFX,AiCoFNA,CtBD0B,CY3I1B,CAA0B,EZ2II,EY3I9B,EAAgC,KZ2IN,CY3I1B,AZ2IwC,EY3IA,CZ2Id,EAAmB,OAAnB,CAAtB;AyBzCF,AbjGAD,AvBwDG,AWmFH,AMaU,MmBvDN,AbjGA,ANwJM,IAAI,EmBvDJ,AnBuDM,CMxJhBA,GaiGc,EnBuDL,EmBvDT,EAAkB;AAAE,AbjGpBA,AvByDA,AiB+FwB,GjB7FxB,GuB3Da,ANwJW,KmBvDG,CnBuDG,EAAE,CMxJV,CaiGF,EbjGK,CNwJY,EMxJrCA,INwJS;AmBvDuB,AbjGhCA,AvB4DA,AiCmFF,AhBS+C,AL9QxC,MWsHyB,ANwJe,GgBTtC,ArBrQO,CK8QmC,EAAE,KAAK,EMxJxDA,IXtHK,CAAwB,CqBqQ/B,CAA0B,KrBrQnB,EqBqQP,ArBrQwC,EqBqQL,KAAnC,EAA0C,EAA1C,EAA8C,OAA9C,EAAuD;AV/IrDA,AvB6DA,AiCmFAA,AhBQS,AL7QTA,KK6QE,CMxJ2C,AUgJzC,ArBrQA,GAAG,GWqH4C,AXrHzC,GWqH4C,AUgJzC,CVhJbA,CXrHe,CqBqQC,ArBrQA,EqBqQE,CAAC,CrBrQT,CAAW,IAAX,CqBqQM,CAAW,ArBrQA,OAAjB,CAAVA,EqBqQgB,CAAhBA;AG9CA,AbjGAA,AU+IAA,AhBSF,AL7QE,EAAA,CK2QF,EL3QK,CwBsNC,AbjGA,AU+IoC,ArBpQpC,MWqHM,CU+IVA,CG9CA,CbjGa,AXrHb,CwBsNY,ExBtNI,GWqHG,CAAC,GAApBA,OXrH8B,CAAC,SAA/B;AwBsNc,AbjGdA,AXpHA,IwBqNc,EbjGW,GXpHlB,GwBqNe,AbjGS,AXpH/B,CwBqNuB,EbjGW,GaiGN,CAAC,EAAN,AbjGiB,CaiGR,AbjGS,GAAzCA,CaiGuB,CAAc,KAAd,EAAqB,MAArB,EAA6B,cAA7B,EAAD,CAAR;AAAuD,AH+CrE,AhBUA,AL7QD,EK6QC,IgBVI,SAAJ,AhBUA,CAAO,CgBVM,EjCnFb,KiB6FA,GAAO,QjB7FP,CiB6FO,QjB7FP,AiB6FO,CAAS,GAAT,EAAc,IAAd,EAAoB,GjB7F3B,CAAc,KAAd,EAAqB,GAArB,EAA8B;AuB5D9B,AU+Ie,AhBWb,OM1JGA,CN0JC,GM1JG,AU+Ia,IhBWT,CM1JC,GAAG,AN0JA,CgBXc,AhBWb,CgBXc,EV/IX,CAAC,CvB4DE,CiB8FlB,EjB9FqB,EiB8FC,GgBXb,CV/IVA,EAA6B,EN0J5B,IAAkC,IM1JI,GAAG,AN0JA,CM1J/C,EAAkD,CN0JC,CAAC,GM1JpD,CN0JwC,CM1JiB,GN0JG,EM1JE,GAAG,GN0J/D,EM1JoE,AN2JxE,CM3JyE,WAAd,EAA2B,UAAU,EAA9F,EAAkG;AaiGlG,AbhGEA,AvB4DA,AiCkF0C,AhBYxC,AL7QN,QWmHQ,CagGC,ApCpCE,GiB8FC,CmB1DV,AbhGM,CXnHM,CAAC,CWmHP,AN0JQ,KM1JR,CAAJA,AvB4DoB,CAAC,CY/KzB,EK6QY,CjB9FY,AiB8FG,AL7QA,EZ+KI,IY/KE,CZ+KT,AY/KU,EZ+KI,GAAd,CAApB,AY/KuB,CAAc,KAAK,CAAC,SAApB,CAA3B,YK6QY,CAAN;AmBzDL,ApCpCC,AiB6FoE,AL5QtE,EwBqNA,CpCpCE,WYjLY,CAAC,SAAf,CAAyB,WAAzB,GAAuC,cAAvC;AwBsNA,AbnGI,AvB+DF,AiCgFA,ArBjQF,MqBiQM,EV/IE,AU+IA,CAAC,IV/II,CAAC,AXlHA,CAAC,CqBiQT,CAAW,KV/IT,EXlHR,CAAyB,CWkHC,CAAtB,EAAuB,AXlH3B,GqBiQM,ArBjQ0B,CqBiQ9B,EAA+B,arBjQjC,EAEA;AwBoNA,AbpG6B,AvBgE3B,AiC+EiC,AhBW/B,ALzQJ,IqB8PmC,EV/IN,KAAK,AU+IQ,AhBW/B,GM1J0B,AU+IQ,ChBW9B,GgBXkC,CV/IP,CAAC,QN0JhC,CAAkB,CgBXgB,CAAiB,ChBW9B,CAAC,CM1JI,EAAR,EU+IwC,CAAC,ChBWzC,CAAY,EgBXI,EAA+B,AhBW/B,CAAC,MgBXqC,AhBWtD,CgBXuD,AhBWzE,EAA4C,GAAG,CgBXb,AhBWc,EgBXiC,IAA/C,ChBWU,CgBX2C,AhBW/B,CgBXtB,CAAV,EhBWoC,CAAC,IAAjB,CAA5C,CAAP;AmBrDJ,AbrG2D,AvBiEzD,AiC8EkG,AhBYpG,ALzQA,GKqQE,CAvCwB,CMhHtB,AN6JJ,MM5JS,IAAI,KAAK,CAAC,QAAN,IAAkB,CAAtB,EAAuB;AAAE,AvBiEhC,AiB4FF,AL3QA,MW8GkC,KAAK,GAAG,SAAS,CAAC,KAAD,CAAT,CAAiB,cAAjB,EAAR;AAAyC,AUgJzEA,ArB7PF,KW6GS,CUgJH,KV/IN,GU+Ic,GAAG,EAAE,CAAC,OAAH,CAAW,qBAAX,CAAfA;AG3CK,AbpGE,SaoGO,aAAT,CAAuB,KAAvB,EAA8B,QAA9B,EAAwC;AAC/C,AbrGiB,AUiJf,AhBYA,EAAA,EL1QW,EwBkNb,AH4CM,EAAE,CG5Cc,AH4Cb,GG5CgB,CxBlNH,CqB8PhB,CAAS,AhBYb,CAAO,ALvQP,CwB+M4B,CAAC,CpCpC7B,EiCgFI,ChBYJ,GgBZuB,AhBYhB,ALvQP,CqB2PA,CG5CF,CH4C4B,KjChF1B,CiB4FO,ALvQP,CAAY,GAAZ,EKuQO,ALvQU,CKuQH,CjB5Fd,EiB4FO,EAAY,MAAZ,EAAoB,CjB5F3B,CAAY,EiB4FL,EAAmC,CjB5F1C,EAAmB,GAAnB,EAAoC,QAApC,EAA2D;AoCoCtD,AH6CH,ArB3PJ,MwB8MO,KAAA,AH6CI,GG7CJ,GAAA,CAAA,AH6CH,KG7CG,EpCpCiB,GAAG,CiB4FM,GAAG,CjB5FJ;AoCoClB,AbnGV,AUiJD,AhBWCA,ALtQJ,GqByPE,GG5CY,EnByDN,CM5JCA,AUiJA,IG9CK,AbnGD,AUiJA,CVjJC,CN4JC,CmBzDD,CbnGG,CAAb,AN4Jc,CmBzDJ,CAAA,AbnGM,CAAC,AUiJA,AhBWA,CAAC,EM5JE,CUiJC,EG9CX,EbnGe,AN4JX,CM5JY,AN4JA,GgBXG,CAAC,CjClFY,CuB/D1C,AN4Jc,CAAdA,CM5JkC,AvB+DW,CuB/DV,EAAnC,AUiJqB,CAAiB,CVjJC,AvB+DW,CAAC,QiCkF9B,CAAhB,EAA8C;AVhJjDA,AvB+DF,AiCkFA,AhBWA,ALtQJ,QqB2PQ,CjClFG,CuB/DD,CN4JC,GM5JG,CN4JC,CgBXC,CVjJC,AUiJA,EhBWN,CjB7FW,AiB6FF,CjB7FG,CuB/DD,CAAC,CAAD,AUiJd,CVjJFA,AvB+DgB,AiCkFG,EjClFI,AiB6FlB,EAAkB,GjB7FP,CiB6FW,CjB7FG,CiCkF5B,EjClFc,AiCkFe,AhBWA,EjB7FI,EiCkFrC,EhBWyB,GAAiB,CjB7FxB,CAAlB,KiB6FyB,GAA2B,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAA7C,CAAP;AmBzDF,ApCnCA,AiCkFI,AhBWN,ALtQI,GZ2KF,AiBwFA,CA/CwB,CAoD1B,CmB5DM,CAAC,AxB5ME,GAAL,EwB4MQ,CAAC,AH+CA,ArB3PE,GAAX,CqB2Pa,ArB/PE,CAKnB,CwB2MO,CAAa,IAAb,CAAkB,IAAlB,AH+CM,CG/CiB,AH+CA,IG/CxB,GH+C+B,CG/CC,AH+CA,CG/CC,GH+CT,CAAa,CG/CC,CAAC,UAAN,AH+CT,CG/C0B,AH+CA,EAA1B,EAA8B,GG/CrB,CAArC,AH+C4B,EG/CkC,AH+CE,OAApC,EAA6C,iBAAiB,CAAC,KAAD,CAA9D,CAAjB,EACiB,OAAO,CAAC,MADzB,EACiC,SAAS,CAAC,EAAE,CAAC,OAAH,CAAW,IAAX,CAAgB,EAAE,CAAC,KAAH,CAAS,MAAT,GAAkB,CAAlC,CAAD,CAD1C,EACkF,OAAO,CAAC,QAD1F,CAAP;AG/C4D,AblG5D,AvBkEJ,AiCgF8G,AhBahH,ALvQA,KqBwPI,KVhJM,CakG+D,GblG3D,CAAC,CakGmD,EblGxD,IAAY,MAAZ,IAAsB,IAAI,CAAC,MAAL,IAAe,MAAzC,EAAiD;AakGuB,AbjGtE,AvBkEN,AiCiFI,AhBYN,QM/JQ,KUmJK,CVnJC,GAAG,AUmJA,IVnJI,CAAC,GAAL,CAAS,GUmJb,CVnJiB,AUmJA,CVnJC,MAAd,AUmJoB,CAAC,CVnJC,GUmJ1B,EAA+B,CVnJ3B,CAAT,KUmJ2C,CAAC,MAAR,CAAe,YAAf,CAA4B,EAA5B,EAAgC,IAAhC,EAAsC,OAAtC,EAA+C,iBAAiB,CAAC,KAAD,CAAhE,CAA/B,EACiB,IADjB,EACuB,OAAO,CAAC,QAD/B,CAAP;AVlJE,AvBkEN,AiCiFmD,AhBYrD,ALxQI,OAAK,CWyGD,IXzGJ,EWyGU,CXzGG,EWyGA,AXzGb,CAPe,CAQnB,EWwGqB,CAAC,GAAL,CAAS,IAAI,CAAC,GAAd,EAAmB,MAAnB,CAAT;AaiGN,AbhGMA,AUmJL,AhBYH,ALvQA,GqBoPS,GG5CH,GHmDG,GVnJG,CUmJC,CGnDX,AbhGY,CUmJC,CGnDD,AHmDE,CVnJC,IAAI,CAAC,CUmJT,CAAW,EVnJP,GAAY,MAAM,CAAC,EUmJvB,EVnJI,GAA0B,CUmJC,GVnJG,CAAC,CUmJnC,GVnJ8B,CUmJU,EVnJE,AUmJA,MVnJM,CAAC,CUmJC,GVnJ9C,CUmJkD,EVlJrD,IAAI,CAAC,CUkJwD,CAAC,GVlJ9D,GAAa,CUkJwC,CAAiB,IVlJnD,CAAC,IAApB,GAA2B,EUkJ0B,IVlJpB,CAAC,CUkJwD,GVlJ/D,EUkJY,CVlJE,AUkJ9C,EAAuG,EVlJrD,CAAC,KAA9C,GAAsD,CAD5DA;AagGQ,AnBgEhB,ImBhEgB,QAAQ,CAAC,KAAK,CAAC,EAAN,CAAS,UAAT,CAAoB,IAApB,EAA0B,cAA1B,EAAD,CAAR;AAAoD,Ab9F5D,AUmJJA,AhBYJ,ALxQI,OAAK,CqB4PD,GrB5PJ,CWyGQ,EAAE,AXzGE,EqB4PA,ArB5PZ,CWyGa,AXnHE,CAWnB,CZwKE,AiCmFiB,OVnJX,AUmJkB,CAAC,CVnJC,GvBgE1B,IiCmFiB,IAAoB,CjCnFrC,AiCmFiB,IAAyB,CAAC,IjCnF3C,CAAU,GAAV,AiCmF0C,EjCnF3B,GiCmFyC,EjCnFxD,EAA2B,GiCmFoC,CAAC,QAAR,GAAmB,CAAC,EAAE,CAAC,IAAH,IAAW,CAAZ,IAAiB,OAAO,CAAC,aAA5C,IACA,CAAC,YAAY,CAAC,EAAD,EAAK,OAAO,CAAC,UAAb,CAD3B,CAAxCA;AVlJM,AUoJNA,ArB5PJ,QqB4PQ,EVpJE,OAAO,CUoJC,EVpJE,CUoJC,IVpJX,IvB+DY,AiCqFO,GjCrFJ,AiCqFO,CjCrFN,QiCqFe,CAAC,OAAO,CAAC,UAAT,EAAqB,EAAE,CAAC,OAAxB,CAAZ,GAA+C,SAAS,CAAC,EAAE,CAAC,OAAH,CAAW,IAAX,CAAgB,EAAE,CAAC,KAAH,CAAS,MAAT,GAAkB,CAAlC,CAAD,CAAjFA;AGtDF,Ab7FQ,AUoJN,SGvDK,Cb7FC,CUoJC,EGvDT,EHuDa,IVpJI,GAAG,EAAZ,GUoJC,CAAiB,OAAO,CAAC,IAAR,CAAa,YAAb,CAA0B,EAA1B,EAA8B,QAAQ,GAAG,KAAK,CAAC,SAAN,CAAgB,WAAhB,EAAH,GAAmC,IAAzE,EAC0B,OAD1B,EACmC,iBAAiB,CAAC,KAAD,CADpD,CAAjB,EAEiB,MAAM,CAAC,KAFxB,EAE+B,UAF/B,EAE2C,EAAE,CAAC,IAF9C,CAAP;AGtDH,Ab7FS,AvB8DN,AiCwFD,AhBOD,ALtQE,EKsQF,CgBfO,GjChFD,CYvKC,EZuKE,AiCwFF,CVtJC,GvB8DK,AiCwFF,CjCxFT,AYvKA,CKsQF,CjB/Fc,AiB+FP,CLtQU,GqB+PC,CrB/PG,EWyGA,AUsJA,AhBOrB,EgBPuB,CVtJC,AUsJA,AhBOjB,EM7JmB,AXzGT,EAAf,EWyG4B,CUsJT,CAAW,ChBOzB,IM7J8B,CAAC,EN6J/B,CgBPc,AhBON,CgBPR,EAAqC,EVtJd,EN6JvB,EM7J2C,AN6J1B,CM7JA,GAA8B,CN6J/C,EAAwB,IAAxB,EAA8B;AM7JkB,AvB8DvC,AiBgGdA,ALtQF,QKsQM,GjBhGiB,CuB9DgC,AN8J7C,GAAG,CM9J8C,EAAE,CvB8D9B,CAAC,CAAD,CuB9DkC,AN8J7C,CM9J8C,AvB8D/B,AiBgGd,GjBhGU,AiBgGlB,CjBhGG,CuB9D6C,CN8JlC,EM9J+C,GN8J1C,CAAC,EM9J+C,CAAC,AN8J/EA,IM9J2D,GAA2B,IAAI,CAAC,KAAhC,GAAwC,IAAI,CAAC,IAApD;Aa+FxD,Ab/FkH,AvB8DzE,SoCiChC,Gb/FyG,GAAG,EAAE,Ma+FvH,Ab/F6H,Ca+FrG,Ab/FsG,Ka+F9H,EAA+B;AAC7B,AbhGsD,AUyJpD,AhBMA,OmB/DGA,CnB+DC,CAAC,EmB/DE,AbhGe,AUyJf,CGzDC,CnB+DJ,CM/J6H,CagGtH,AHyDA,CGzDb,CnB+De,CmB/DC,CAAC,CbhGT,CN+JN,CmB/DkB,CnB+DD,ImB/DM,AHyDhB,CGzDiB,AHyDA,OAAO,CAAC,CGzDlC,EAAqC,CAAC,AHyDZ,CAAa,CGzDvC,EAA0C,IHyDhB,CAAqB,EAArB,EAAyB,OAAzB,CAAjB,EACiB,OAAO,CAAC,MAAR,CAAe,OAAf,CAAuB,EAAvB,EAA2B,OAA3B,CADjB,EAEiB,SAAS,CAAC,OAAO,CAAC,UAAT,EAAqB,EAAE,CAAC,OAAxB,CAF1B,EAE4D,OAAO,CAAC,QAFpE,CAAP;AGxDJ,ApClCI,AiC6FD,AhBGoB,GgBTd,GjCvFD,AiBgGe,EmB9DvB,CpClCW,AiC6FF,ChBGkB,CmB9Db,EpClCC,AiBgGe,CmB9Db,GnB8DiB,CjBhGd,CoCkCE,CAAC,CnB8De,CjBhGlC,AiBgG0B,EmB9Db,ApClCO,CoCkCI,AnB8Dc,CmB9DzB,AnB8Da,CmB9D9B,EnB8D8C,CAAC,CAAxB;AmB9Dd,AbhGC,AvB8DgB,AiC8FtB,AhBE4C,QmB9DvC,GpClCwB,AiC8FtB,CG5DF,EbhGK,CagGL,AH4DM,GG5DN,CAAA,AbhGU,AvB8DsB,CuB9DrB,AvB8DsB,GoCkCjC,EpClCsC,EiC8FpC,CV5JG,AU4Jc,IV5JI,AvB8DU,CuB9D5B,AvB8DyC,EiC8FpB,CAAC,CV5JC,EAA3B,AvB8D+B,CiC8Fb,CV3J5B,AvB6D+D,AiC8FtB,GjC9FA,CAAf,GiC8FE,CAAqB,EAAE,CAAC,OAAH,CAAW,IAAhC,CAAjB,EACiB,OAAO,CAAC,MAAR,CAAe,OAAf,CAAuB,EAAE,CAAC,OAAH,CAAW,IAAlC,CADjB,EAEiB,SAAS,CAAC,OAAO,CAAC,UAAT,EAAqB,EAAE,CAAC,OAAxB,CAF1B,EAE4D,OAAO,CAAC,QAFpE,CAAP;AV3JQ,AvB6DuD,AiCiGhE,YV9JS,MAAM,GAAG,UAAU,IAAI,MAAM,CAAC,IAAP,IAAe,CAAC,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,KAAlB,IAA2B,CAA1C,GAA8C,CAA9C,GAAkD,CAAtD,CAAnB;AagGR,AbhGmF,AU+JtF,AhBDG,QmB9DI,AnB8DA,CAAC,GmB9DG,CAAC,CnB8DC,CAAC,MAAN,CAAa,EmB9Dd,IAAoB,CAAC,IAAI,CAAC,CnB8D9B,EAAiC,amB9DR,EAAzB,EAAgD;AAAE,ApClClD,AiBiGEA,MjBjGE,GAAG,CiBiGD,EjBjGI,CoCkC+C,EnB+D9C,EmB/DuC,ApClCnC,CiBiGD,GjBjGV,IAAmB,EiBiGA,CjBjGG,AiBiGF,GjBjGK,CAA7B,EAA8B,EiBiGhB,CAAmB,KAAnB,EAA0B,IAA1B,EAAgC,IAAhC,KAAyC,SAAS,CAAC,QAAV,CAAmB,KAAnB,EAA0B,CAAC,IAA3B,EAAiC,IAAjC,CAArDA;AmB/D2D,Ab/FvD,AvB6D0B,AiCmGpC,SAAS,CjCnGiC,IAAI,OiCmG9C,CAAsB,EjCnGoB,CAAc,MiCmGxD,EAAiC,MjCnGoC,GAAb,CiCmGxD,EjCnGwE,AiCmG3B,wBjCnGW,GAAyC,IAAzC,GAA6C,GAA3D,CAAN;AoCmCjC,Ab/FM,AvB4DgG,AiCoGvG,AhBFI,MgBEA,CAAC,GhBFG,KAAJ,EgBEJ,AhBFa,EgBEE;AV/JV,AU+JY,AhBFF,GLxQf,KKwQe,GgBES,EhBFJ,GgBEH,AhBFM,KAAK,CAAC,KAAd;AmB9Df,ApCnCE,AiCmG2B,AhBFK,OjBjG3BA,AiBiGH,EmB9DG,EpCnCI,CAAC,CoCmCZ,AnB+DF,EjBlGiB,CAARA,EAAW,MAAM,GAAG,CAAzB,GAA6B,CAAC,EAA9B,EAAkC;AoCoCrC,Ab/FK,AvB4DAA,AiBiGK,ALxQT,EwB4MF,MpCrCU,EuB5DA,CAAC,AvB4DE,GAAG,CiBiGE,GM7JR,AX3GR,CZuKmB,AYvKf,IW2GiB,CvB4DP,AiBiGW,CjBjGA,AiBiGC,ALxQ1B,CZuKc,AYvKV,CZuKAA,EuB5DuB,AN6JX,ALxQhB,CW2G4B,AN6JG,ELxQ3B,EW2GiB,CN6JL,EAAsB,CM7JF,GN6JpB,CM7JwB,AN6J/B,CM7JgC,CX3G5B,IW2GQ,IAA6B,MAAM,CAAC,GAAP,IAAc,IAAI,CAAC,GAAhD,IACA,MAAM,CAAC,IAAP,IAAe,IAAI,CAAC,IAApB,IAA4B,MAAM,CAAC,GAAP,IAAc,IAAI,CAAC,MAD5D,CAAJ,EAEN;AagGA,AbhGQ,AvB0DFA,AiCmGJ,AhBF2C,ALxQ5B,MqB0QX,CAAC,CV7JC,AvB0DuB,CYvKP,EZuKU,GuB1DpB,AvB0DuB,AYvKR,EqB0Qb,CV7JC,AU6JA,CrB1QO,CAAU,CZuKS,GAAG,EYvKtB,CZuKyB,CuB1DtB,AvB0DuB,AiCmGhD,CrB1QyC,CqB0QhB,CV7JG,CAAtB,EX7GwC,EZuK1CA,EYvKqC,CAAU,CAAV,CAAnB,GAAkC,KAAK,GAA9C;AwB8MjB,AbjG+B,AU6JF,AhBDxB,ALzQ6D,CAAhE,EAEA,QqBwQkC,IAAP;AG3D7B,AbjGK,AvB0DC,AiCkGkC,ArBvQtC,QZqKQ,GAAG,IAAI,GAAX,EAAgB;AuBzDnB,AvB0DK,AiBiGJ,ALtQF,QKsQM,CAAC,CjBjGG,GAAG,GiBiGC,CjBjGG,AiBiGF,GjBjGL,GiBiGH,CjBjGiB,AiBiGF,KjBjGO,GAAG,CAA1B,EAA2B,EiBiG/B,EAAmC;AjBjGF,AiCkGnCA,AhBAI,MgBAA,IhBAI,IgBAI,AhBAA,CjBlG8B,EiCkG3B,ChBAC,CAAZ,EAAe,CgBAnBA,CjClGkD,CAAC,CAAC,GAAG,CAAL,EAAQ,GAAR,CAAf;AoCuC9B,AbhGL,AvByD8D,AiCmG9D,AhBAM,EgBAN,IV5JI,EN4JE,CmB5DQ,EH4DL,CAAC,CV5JC,EN4JE,EmB5DR,AbhGU,CagGQ,AnB4DP,CgBAhB,CAAkB,GG5Db,AnB4DC,CM5JgB,AU4JtB,CG5D8B,AbhGP,AU4JA,CAAvB,EAA0B,KG5DrB,AbhGU,EagGyB,AH4DxC,CAAiC,CV5JE,CAAnC,EAAoC,MU4JD,KAAF,EAAS,GAAT,EAAc;AG3DjD,AbjGwC,AU6JpC,AhBAG,MmB5DP,CnB0DM,EmB1DgB,AH4DbA,EV7JsC,CaiGtB,CH4DZ,AhBAA,CgBAC,GG5DgB,AH4Db,CG5Dc,AH4D3B,EAAgB,ArBxQlB,CqBwQmB,GAAG,GG5DxB,AbjG+D,AX3G7D,CW2G8D,MU6J9B,CV7J6B,AU6J5B,CrBxQjC,CW2GuE,GX3GvE,CqBwQE,ArBxQG,EqBwQoC,CAAC,GrBxQ1C,CqBwQ8C,CAA5C,ArBxQW,CW2GgD,CAAvB;AaiGjC,AbjGgF,AvB0D/E,AiCoGF,AhBAE,ALxQJA,MwB2MG,AxB3MC,EKwQA,EgBAE,CG7DH,CxB3MO,CZoKC,CoCuCR,CH6DQ,AhBAA,ALxQE,EwB2MV,CAAA,AnB6DW,CgBAC,AhBAA,CLxQG,CZoKC,CAAC,CoCuCjB,ApCvCgB,EAAI,GiBoGC,CgBAC,AhBAA,ALxQZ,CqBwQa,ArBxQE,CZoKT,AiCoGQ,CjCpGvB,EiCoG0B,CAAL,CAAnB,ArBxQO,CKwQE,ALxQfA,CKwQkC,EgBAE,GAAG,EhBAxB,EgBA4B,AhBAA,CAAC,IAA7B,EAAmC,GgBAG,CAAC,AhBAvC,CgBAsC,CAAnD,GhBAyD,SAAS,CAAC,QAAV,CAAmB,OAAnB,EAA4B,IAA5B,EAAkC,IAAlC,CAA7C,EAAsF,OAAhG;AmB7DM,ApCtCP,AiCoGC,MG9DM,EH8DN,KG9DM,GAAA,AH8DE,GG9DF,AH8DK,CG9DL,GH8DN,IG9DM;AbhGZ,AU8JiB,AhBAX,ALxQJ,MW0GE,AX1GE,CW0GD,KN8JM,ALxQC,CAAC,CW0GT,IAAa,CN8JC,ALxQhB,CKwQiB,CLxQA,EKwQR,GAAc,CM9JC,IAAI,AN8JA,CAAC,GAArB,GM9J2B,CAAC,AN8JE,IAAI,GAAG,CM9JjB,AN8JxB,EAA2C,EM9JC,CAAlD,EAAoD;AaiGpD,AbjGsD,AvB2DlD,AiCmGiB,AhBA8B,ALxQ9B,IZqKjB,EoCsCA,CAAC,GpCtCK,AiBmGyC,ALxQxB,CW0GkC,CaiGnD,CAAC,ApCtCE,CYrKkB,EZqK3B,CiBmGsD,EmB7DrD,CAAa,AnB6D2C,ImB7DxD,CAAkB,AnB6D4B,GLxQxB,CwB2MtB,AxB3MyC,CwB2MlB,IAAxB,CxB3MgD,CAAC,EwB2MjB,CAAC,GxB3MV,CAAN,CwB2MqB,CAAC,UAAN,CAAiB,OAAjB,CAArC,EAA8D;AAAE,AbjGH,AvB4D1D,AiCmGF,AhBDiE,ALxQN,GqBqQ5D,GV3J6D,IAAA,CaiGU,CbjGT,IaiGE,AbjGH;AaiGe,AbjGV,AvB6DlE,AiCmGA,AhBDK,GjBhGL,GuB/DkE,GUgK3D,GVhK2D,EAAE,GUgKpE;AVhK6D,AvBgE7D,AiCiGD,AhBDI,ALzQD,KWyGoD,IXzG7C,IAAP;AwB2MFA,AblG2E,AXxG3E,GAEA,GwBwMI,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,CAAC,CAAZ,CAAZA;AAAAA,AHiEF,AhBFI,ALtQF,MwBuM4B,GHiErB,EGjE0B,AnB+DxB,GmB/D2B,CnB+DvB,GgBEf,CGjE2C,AHiExB,CGjEyB,EHiE5C,EAAwB,IhBFb,CAAkB,CmB/DS,CAAiB,CAAC,CAAlB,CAApCA,EnB+DS,EAA2B,KAA3B,CAAP;AmB/DFA,AbjGA,AUmKAA,AhBFF,ALtQE,GKqPA,GmB/C0D,AHkEtD,GVnKG,CaiGuD,EHkEpD,CGlEuD,EHkEpD,EAAbA,EjCnGA,MuBhEuB,CAAC,CaiGuD,CAAC,EpCjChF,GoCiCqF,AbjG9D,CaiG+D,CbjGrD,IvBgEjC,QAAA,CoCiCgF,AbjGzD,CaiG8E,AbjGrG,CvBgEW,IoCiCqE,CAAD,CAA/EA;AbhGD,AvB+Dc,AiCoGb,EAAA,GAAG,CAAC,GjCpGgB,IiCoGpB,CAAW,CjCpGe,KAAK,IiCoGlB,KAAF,EAAS,EjCpGM,CiCoGf,CjCpGS,CiCoGK,EjCpGwB,EiCoGtC,CjCpGE,CiCoGkB,EAApB,EAAwB;AGlEnC,ApClCoD,AiCoGjB,MGlE/B,CAAC,IHkEiC,CGlE5B,CAAC,IHkEiC,CAAC,IAAP,CAAY,IGlE7C,AHkEiC,CGlEZ,CHkE8B,EAAlB,CAAH,CGlE9B,EAA4B,KAA5B,EAAmC,IAAnC,CAAL,EAA6C;AAAE,Ab/FjD,AUiK6D,GAA3D,MVjKO,Ea+F+C,KAAP,IxBtM/C,KWuGF,CAA0B,IAA1B,EAAgC,AXvG9B,MWuGF,EAAwC,CXvGtC,SAAA,CAAU,IAAV,EAAgB;AwBsM2C,Ab9F3DA,AUiKA,ArBxQEA,CKwLsB,CAAS,IMjF7B,AXvGE,GWuGC,AUiKA,EhBhFiB,CMjFd,AXvGE,GqBwQZ,ArBxQe,CWuGD,CAAC,EvB8Df,AYrKmB,CAAC,KAAL,CWuGL,AXvGgB,CWuGD,IXvGM,EWuG/BA,CXvGe,CZqKf,AYrKEA,SZqKF,aAAA,GAAgB;AuB7DhBA,AvB6DkB,AiCoGnB,MVjKK,GvB6DqB,EuB7DhB,GAAG,AvB6DkB,OAAL,CuB7DL,AvB6DkB,CuB7DjB,GvB6DI,CAAkB,IAAlB,CAAP,EuB7DN,EAAZA;Aa8FA,ApCjCgD,AYpK9C,GZsKF,GoC+BI,AxBrME,CAAC,MAAM,CwBqMb,AxBrMc,EwBqMA,IxBrMZ,EAAkB;AwBsMlBA,Ab9FF,AvB+DA,AiCmGF,AhBJA,ALtQwB,OWwGjBA,Ca8FC,CHoEC,AhBJA,ALtQoB,CKsQnB,CmBhEC,Ab9FA,CAAC,Ea8FE,Cb9FC,CAAb,AN8JF,ALtQwB,CKsQP,ALtQoB,CWwGnB,AUkKlB,CGpEmB,Ab9FA,AUkKA,CGpEC,CxBtMI,CWwGF,CN8JtB,ALtQ2C,EwBsM7B,Ab9FZ,AUkKF,AhBJyB,EmBhErBA,Ab9FuB,AUkKA,CVlKC,CXxGqB,CWwG/C,AXxGgD,EWwGlB,CXxGR,CqB0QxB,EAAoC,EhBJpC;AmBhEIA,Ab7FA,AUkKF,ArB3QoD,IWyGlD,EUkKE,CAAC,CGrEsB,Cb7FpB,Ca6FsB,Ab7FrB,Ga6FwB,AHqEhC,EAAW,CVlKT,CAAa,Ca6FsB,CAAC,EAAN,Ab7F9B,Ca6FuC,Cb7FpB,CAAC,GAAG,CAAvB,Ka6F8B,CAAqB,GAArB,EAA0B,GAA1B,EAA+B,IAAI,CAAC,aAAL,EAA/B,CAA9BA;AACA,Ab7FA,AUiKW,AhBHf,ImBjEI,Ab7FA,AN8JE,EmBjEA,CAAC,Eb7FE,CAAC,CUiKY,IAAP,ChBHG,EM9Jd,Ca6FA,Ab7Fe,AN+JjB,CmBlEkB,Gb7FhB,EAAqB,CAArB,EN+JF,YAAA,CAAY,MAAZ,CmBlE4B,CnBkER,GmBlEF,CAAe,AnBkEjC,EmBlEmC,AnBkET,CmBlEU,GAAH,CAAO,OAAP,CAAe,GAAf,CAAf,EAAoC,CAApC,CAAhB;AACA,Ab7FAA,AUgKsB,AhBDtB,ALzQA,IwBuMA,GnBkEK,CM/JD,CX1GG,GwBuMC,Ab7FA,Ca6FC,AnBkET,EmBlEW,Ab7FA,AX1GX,CwBuMY,AnBkEE,GjBlGhB,GiBkGE,GM/JqB,CAAC,EvB6DxB,EoCgCW,Cb7FY,Ca6Fb,CAAR,Ab7F6B,CAAR,CAArBA,EvB6DF,MAAA,GAAS;AoCiCR,ApChCC,AiBkGA,ALzQF,GAEA,IKuQO,EjBlGE,EiBkGP,GjBlGY,AiBkGA,IAAZ,GjBlGO,CAAa,MAAb,GAAsB,KAAK,OAAL,CAAa,GAAb,CAAgB,UAAC,CAAD,EAAC;AuB7D9C,AvB6D8C,AiCmGhDA,AhBAA,ALvQA,CKmQF,KgBIM,EVhKE,GvB6D+C,CuB7D3C,AvB6D4C,AiCmG5C,CVhKC,AvB6D4C,EiCmG1C,CVhKP,CUgKNA,EjCnGqD,CuB7DnC,CvB6D8B,GuB7D1B,CAAC,MAArB,EAA2B;Aa8F7B,Ab9F+B,AvB6DgC,AYnK/D,GZmK+B,CAAtB,GAA0D,EoCiC5D,EpCjCL,EoCiCF;AACD,Ab/FwC,AvB8DvC,AiCmGA,EGhEF,CpCjCE,IiCiGKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,ChBApB,KgBA0B,CAAC,AhBA3B,MgBAA,EAAmC,CAAC,AhBApC,GAAA,CgBAwC,AhBApC,CgBAJ,EAA2C,IhBA3C,EAAa;AmB/Df,ApCjCE,AiCiGEA,AhBAA,QgBAI,ChBAG,GgBAC,ChBAG,EgBAA,OAAO,CAAC,EhBAZ,CgBAI,AhBAa,CgBAD,MAAM,AhBAE,CgBAD,AhBAE,CgBAH,CAAlB,ChBAa,CgBAU,AhBAE,CgBAzB,CAAXA,GhBAyC,MAAjB,CAAjB,EAA2C,OAAO,CAAC,GAAR,CAAY,KAAK,IAAjB,CAA3C,CAAP;AmB/DJ,AblGI,AUiKAA,AhBCF,ALxQA,QWsGM,AUiKkC,EAAE,GAAG,CVjKjC,CAAC,GXtGb,CAAI,CqBuQgD,CVjKxC,AUiKyC,EVjKhC,CUiKwB,CAAY,EVjK7C,CAAV,CXtGF,CWuGF,AXvGM,CqBuQ2D,CAAC,CAAC,ArBvQjE,GqBuQoE,ArBvQhE,CqBuQ2D,CAAlB,EAA2B,CAAC,CAA5B,CAA3CA,KrBvQe;AWuGb,AXtGF,SAAO,IWsGE,CXtGG,KAAL,CAAW,MAAX,GAAoB,CAA3B;AWsGS,AvBgEX,AiCiGE,ArBtQF,CAFA,OWuGW,AvBgEX,AiCiGM,CjCjGC,GuBhEI,AUiKD,EVjKE,EUiKE,CjCjGd,CuBhEW,AUiKT,EjCjGK,AiCiGS,GhBChB,MjBlGO,IiBkGP,IjBlGO,CAAS,IiBkGhB,EjBlGO,EAAiB,GiBkGxB,CAAQ,CjBlGD,EAAwB,AiBkG/B,EAAa;AmBhER,AblGa,AvBiEhB,AiCgGgB,AhBEhB,MjBlGI,AiCgGY,CjChGX,CuBjEW,CakGJ,AnBiEL,GjBlGP,AiCgGsB,CAAC,CVjKD,AvBiEZ,EuBjEc,CAAC,AUiKT,CAAY,GVjKC,CUiKb,AhBEI,CAAC,CgBFa,EAAlB,CVjKmB,CakGhC,AblGiC,CakGJ,CnBiEzB,CAAsB,CMnKA,EakG1B,AnBiE6B,CAAC,CmBjEM,AblGK,CAAC,IAAI,CAAC,ANmKrB,CAAY,CmBjEtC,EAA8C,AblGJ,ENmKC,CMnKW,IAAI,CAAC,ANmKjC,CAAtB,EAAgD,EMnKX,CNmKc,CAAC,EMnKY,CAA1C,GAA8C,CAA9C,ANmK0B,CAAY,EMnKY,CAAtD,ENmK+C,IAAjB,CAAhD,CAAP;AmBhEFA,AbnGW,AvBiEG,AiCgGyB,AhBGvC,GAGF,GmBpEM,CbnGA,EamGG,EpClCc,CoCkCX,KAAK,CAAC,CpClCa,CAAC,AYpK9B,KZoKc,EoCkCdA,GxBtMA,SAAA,OAAA,CAAQ,IAAR,EAAc,GAAd,EAAmB;AwBsMS,AbnGwD,AvBiEjD,AiCiGlC,AhBMH,AL1QI,MwBqM0B,CxBrMrB,IwBqMqB,AxBrM1B,CAAU,EwBqMgB,ExBrM1B,CwBqM0B,AxBrMX,CwBqMW,IxBrMN,CwBqMM,ExBrM1B;AwBqMiC,AblGlC,ANwKH,AL1QI,MwBoMiC,CxBpM5B,EwBoM4B,GAAA,AxBpMjC,CAAW,EwBoMsB,CAAA,CxBpMjC,CAAgB,CwBoMiB,GxBpMjC;AZmKA,AiCiGF,AhBOF,AL1QI,MZkKI,CAAC,AYlKA,EqBmQA,GjCjGK,CAAC,CYlKX,CqBmQF,ArBnQe,KZkKR,CAAc,GYlKnB,CAAuB,CZkKlB,CAAL,EAAyB,AYlKE,CAAC,MAAL,EAAvB;AwBoMF,AblGA,AvBgE6B,AiCkG9B,AhBOD,AL1QI,MwBmME,CxBnMG,EwBmMA,AblGA,CvBgE4B,AYjKjC,GAAW,CZiK0B,EYjKrC,KwBmMiB,GpClCgB,CAAe,0BoCkC9C,IAA+B,KAAK,CAAC,CpClCN,CAAN,IoCkCM,CAAa,aAA5C,IAA6D,GAAG,CAAC,MAAJ,CAAW,aAA5E,EAAyF;AAAE,AblGpF,AvBgEiF,AYhKxF,IWgGO,IAAA,EAAC,CakG0F,GblG3F,EakGoF;AAAY,AblGzF,IAAA,MAAM,EAAE;AAAf,AvBiEL,GuBjEF,CN0KW,KjBzGF,IAAI,IiByGW,GAAA,CjBzGf,CAAa,KAAK,CAAC,GAAN,CAAU,CiByGR,KjBzGc,CAAC,IiByGf,QjBzGF,CAAb,AiByGe,CjBzGtB,CiByGsB;AmBvExBA,AblGD,AvBiEC,AiB4GA,CjBhHA,EAMA,GoC+BI,IAAI,CnB2ER,EmB3EW,WnB2EX,CAAY,EmB3Ea,CAAC,CnB2E1B,EmB3E6B,AnB2EX,CmB3EY,MAAJ,CAAW,cAAX,CAA0B,GAAG,CAAC,UAAJ,EAA1B,CAAD,CAAzBA;ApC9BA,AiCkGF,AhBQIA,AJhVJ,QIgVQ,CgBRC,ApBxUA,GIgVG,GAAG,IAAI,CAAC,CJhVpB,GoBwUA,ApBxUwB,CoBwUC,IhBQrBA,GgBRJ,EAAkC,KAAlC,EAAyC,QAAzC,EAAmD,IAAnD,EAAyD;AGnEvD,AbjGF,AvBmEE,AiCkGAA,AhBQEA,AJjVsB,MuBqQpB,AHoEA,CGpEC,CnB4EC,AJjVwB,CUoKvB,EaiGH,CnB4EM,AJjVwB,GuBqQrB,AbjGf,AN6Ke,CmB5EC,AbjGA,CVpKgB,CAAU,CoByUvB,AhBQA,CmB5EC,AnB4EA,CmB5EC,CbjGrB,AUqKsB,EVrKE,AN6KT,CAAU,CAAV,EM7Kf,AN6K4B,EM7KE,CVpKE,CuBqQ9B,AvBrQwB,EuBqQM,CnB4EjB,CAAqB,GgBRG,CAAC,AhBQA,CAAC,GAAL,CgBRG,CAArCA,ChBQ6C,IAAI,CAAC,QAArC,CAAXA;AmB5E8B,AbhGhC,AUoKAA,AhBSEM,AJlVsD,IIkVtDA,EgBT4C,GVpKvC,EagGgC,EnB6ErCA,CAAAA,CM7KW,CagGmB,AbhGlB,CUoK2C,ChBSvDA,CAAK,CM7KA,AUoKqD,GhBS1DA,CM7KoB,CN6Kd,GM7KkB,CAAC,AN6KzBA,CgBToE,CAAC,AhBSzD,EM7KQ,CUoKsC,CAAe,AhBSzEA,CM7KgC,CAA3B,AN0KW,CAIpB,EgBV8D,CVpKrB,CUoK2C,IAAtB,CVpKf,AUoK0C,CVpKzC,IAAP,CUoKvCN,GVpKsD,IAAI,CAAC,KAAL,GAAa,CAA5D,IACL,MAAM,CAAC,GAAP,IAAc,IAAI,CAAC,GAAL,GAAW,CADpB,IACyB,MAAM,CAAC,GAAP,IAAc,IAAI,CAAC,MAAL,GAAc,CAD5D;AagG4C,Ab9F7C,AUmKCA,MAAI,GAAG,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,MAAX,GAAoB,OAAO,CAAC,IAAjC,EAAuC,QAAvC,CAAgD,KAAhD,EAAuD,aAAvD,CAAVA;AjClGA,AiB4GE,AJlVJC,IAAM,IbsOJ,CAAO,AiB4GA,IAAL,AJlVW,GIkVC,AJlVE,EbsOhB,EiB4GE,CjB5GK,CatOe,CAAC,MAAP,CbsOT,AatOuB,IAAd,CAAlBA,EAEA,EboOS,CAAU,KAAV,EAAiB;AoC8BxB,Ab7FF,AvBgEI,AiCkGF,AhBUF,AJhVA,MuBiQM,ApC7BE,AiCkGF,CjClGG,AiCkGF,EVlKE,CUkKP,EjClGY,AiCkGJ,CjClGK,CoC6Bb,EAAc,GpC7BZ,EuBhEJ,AvBgEqB,CuBhEC,GAAtB,EAA2B,MAA3B,EAAmC;Aa8F/BD,Ab7FFA,AvB+DqB,AiCkGX,ApBrUZ,MUoKM,Ea6FE,GpC9BsB,CoC8BlB,Ab7FA,Ga6FG,Ab7FA,Ca6FC,CAAC,Cb7FC,CAAC,AvB+DmB,CAAC,EoC8BjB,CAAC,EpC9BA,IuB/DrBA,Ma6Fc,IAAuB,GAAG,CAAC,KAAJ,KAAc,GAAG,CAAC,MAAJ,CAAW,UAAhD,GAA6D,KAA7D,GAAqE,GAAtE,EAA2E,GAAtFA;AACAA,ApC/BwC,AiCkG1B,ApBpUlB,QuBiQQ,EAAE,GAAG,KAAK,CAAC,EAAN,CAAS,MAAT,CAAgB,IAAhB,EAAsB,IAAI,CAAC,aAAL,EAAtB,CAATA;AACA,Ab9FF,AVnKF,IuBiQI,EAAE,Ab9FA,Ca8FC,Kb9FK,IAAI,Ga8FZ,CAAgB,Ib9FI,IAAR,CAAa,MAAM,CAAC,QAApB,CAAV,IAA2C,Ga8Ff,Gb9FqB,CAAC,Ea8FpC,CAAqB,Cb9FQ,Ca8FN,CAAC,Cb9FmB,Ea8F3C,Cb9F8C,Ca8FjB,Ab9FkB,Ia8Fd,GAAG,CAApC,CAAhB,Yb9F2D,GAA4B,IAAzF,EACF;Aa8FI,Ab9FA,AvB8DAA,AiCmGFA,ApBpUF,IuBiQI,EpChCI,AiCmGF,KVjKK,Ca8FC,ApChCRA,CoCgCS,EAAE,AHmEA,CGnEC,Cb9FZ,CUiKc,GAAG,CAAC,QGnET,CHmEK,CGnEN,AHmEoB,CGnE5B,MHmEc,CAAsB,GAAG,CAAC,SAAJ,CAAc,GAApC,CAAhBA;AGlEC,Ab/Fc,AvB8DbA,AiCoGFA,ApBpUF,MbgOgB,AiCoGV,IjCpGc,CiCoGT,EjCpGY,CAAnBA,AiCoGU,CAAC,IAAI,GAAG,OAAO,CAAC,IAAX,GAAkB,OAAO,CAAC,MAA/B,EAAuC,YAAvC,CAAoD,GAAG,CAAC,SAAxD,EAAmE,KAAK,CAAC,SAAN,CAAgB,WAAhB,EAAnE,EACoD,WADpD,EACiE,aADjE,CAAZA;AAGAA,AhBMF,AJ5UA,EI4UA,IgBNM,OAAO,EhBMb,CgBNgB,AhBMhB,IgBNoB,KhBMpB,CAAE,GAAF,GgBNgB,AhBMd,CgBN+B,IAAI,GAAG,ChBMtC,GAAA,CgBNmC,AhBM/B,GgBN0C,AhBM9C,EAAS,CgBNwC,CAAC,KhBMlD,EAAkB,EgBNJ,EAA+C,IAAI,GAAG,GAAG,CAAC,SAAP,GAAmB,KAAtE,EAA6E,IAA7E,EAAmF,CAAnF,CAAdA;AGrEA,Ab/FA,AvB8DE,AiCuGF,AhBMF,AJ5UA,EoBsUE,KjCvGOA,CiB6GT,CmB5ES,Ab/FA,CUqKC,CjCvGG,AiCuGF,AhBMW,CM3KpB,AvB8DY,CoCiCZ,CHsEY,AhBMW,CjB7GR,AiCuGF,CjCvGX,EAAgB,CAAC,EiB6GW,CjB7GR,AiB6GS,EgBNtB,CAAc,EjCvGI,CAAC,GiB6GL,CAAkB,EjB7GvC,EAAkC,CAAC,AiCuG5B,AhBMqC,CgBNV,CjCvGlC,EAAuC,EiB6GlB,CAAzB,GgBNW,EAAsC,OAAtC,CAA8C,UAA9C,EAA0D;AGrEpE,Ab/FA,AvB8DKA,AiCsG+D,AhBM5D,EmBzET,EHmEqE,IjCtG3D,AiCsG2D,AhBM5D,EgBN6D,EjCtGxD,EiCsGuD,CjCtGpD,AiB4GR,GAAA,EjB5Ga,CAAC,AiB4Gd,CjB5Ga,AiB4Gb,CjB5GHA,MiB4GG;AmBxET,ApCnCM,AiCqGsE,AhBM1D,IjB3GZ,AiCqGsE,ApBrU/D,IbgOH,AiB2GQ,AJ3UD,GI2UC,AJ3UD,CbgOH,EiB2GI,EjB3GA,AiCqGsE,CjCrGrE,AiB2GD,CgBNwE,AhBMxE,EJ3UD,CI2UC,GJ3UD,CbgOX,EahOW,CAAA;AuBoQjB,AbjGA,AUkKqE,AhBOjEA,GgBPO,EAAyF,GhBO5F,CMzKC,GNyKG,GAAG,GAAG,CgBPP,AhBOQ,EgBPT,CAAR,CVlKF,CAAwB,ENyKT,CAAY,CMzK3B,EAA8B,ANyKf,CAAXA,EMzKJ,EAAmC,MAAnC,EAA2C;AAC3C,AvB6DM,AiCqGL,MVlKD,EvB6DU,CuB7DU,AvB6DT,GuB7DY,CvB6DR,IAAI,CAAC,MAAV,IuB7D6B,AvB6DT,CuB7DU,GAAD,CvB6DJ,CuB7DU,AvB6DT,CAAC,GAAG,CAAL,CuB7DI,AvB6DT,CuB7D9B,AvB6D2C,UAAb,CAAwB,IAAxB,CAAxB,EAAuD;AuB7DtD,AvB8DC,AiB2GJ,MMzKG,ENyKC,EMzKD,AvB8DK,CAAC,EuB9DN,ENyKH,CMzKG,CAAA,AvB8DC,AiB2GO,EjB3GI,EuB9DZ;AaiGA,AbjGM,AvB8DQ,AiCsGrBA,AhBKiB,IgBLb,EVpKS,EvB8DQ,CoCmCL,GbjGH,CNyKW,CjB3GG,CuB9Dd,AV9JX,Eb4N4B,CuB9DjB,CAAA,GvB8DsB,AiB2GF,CmBxE1B,ApCnC6B,AiCsGb,AhBKW,AJvUhC,CuB+P6B,CbjGlB,CUoKa,ChBKF,CjB3GM,AiB2GS,CmBxEhC,ApCnCmC,CAAZ,CoCmCQ,AHmEtCA,CjCtG6C,AiB2GrB,AJvUtB,Cb4N4B,AiB2Gb,CjB3GI,Ga5NnB,CAAM,CuB+PD,EAAyC,CvB/P9C,EAAY;AuBgQd,AblGoD,AvB8DL,AiCsG/CA,AhBK4C,AJvU5B,IoBkUiB,EGlEjC,AblGsD,GakGvC,AvBhQQ,CU8JmC,EakGxC,CblG2C,CAAC,CAAV,EakG7B,CAAC,GvBhQW,EAAnB,IuBgQhB,GHkE2D,GAAG,IAA9DA;AGlEO,AvBhQ8B,GAEnC,GuB8PK,OAAA,GAAA,GAAA,CAAA,OAAA;AbjGL,AvB8DM,AiB2GJ,AJrUF,MU4JI,AvB8DE,IuB9DE,CAAC,ANyKA,CjB3GG,CAAC,EiB2GA,IMzKT,AvB8De,CAAC,GuB9DC,CAAjB,EvB8DS,EuB9Da,ANyKjB,CMzKkB,AvB8DE,AiB2GF,CjB3Gf,CAAN,EuB9DyB,ANyKtB,CMzKuB,AvB8DE,AiB2GhC,IjB3GoC,CAAC,KuB9DvC,EAA4C,CvB8DV,CAAc,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAAN,CAA0B,IAA1B,GAAiC,IAAI,CAAC,IAApD,CAA5B;AoCoCN,AbjGEA,AvB8DG,AiB2GP,AJrUE,GIgUF,EjBzGM,CoCsCA,CAAC,CbjGC,GvB8DK,CuB9DD,EaiGN,CbjGS,AvB8DE,GoCmCC,CbjGC,CAAC,CvB8DP,EAAY,EoCmCA,CAAC,MAAR,CAAe,OAAf,CAAuB,AbjG1B,EAAXA,EaiGF,EAA2C;AAAE,AbhG3C,AvB8DI,Aa1NN,IU4JE,EvB8DI,EuB9DA,GagG8C,AbhG3C,CvB8DG,CAAC,EuB9DA,CagGgC,AbhG/B,CvB8DR,CAAY,EuB9DT,EvB8DH,EuB9DgB,IAAI,CAAC,KAAlB,IAA2B,MAAM,CAAC,IAAP,GAAc,CAAC,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,KAAlB,IAA2B,CAApE,GAAwE,CAAxE,GAA4E,CAAC,CAApF;AagGuD,Ab/FxD,AvB8DI,AiCuGP,AhBIA,EAAA,OgBJS,MhBIT,CAAA,SAAA,CgBJA,AhBIE,CgBJyB,KAA3B,ChBIA,CgBJkC,EhBIhC,SAAA,OAAA,GAAU;AjB1GP,AiCuGHA,AhBIE,MgBJE,KhBIK,EgBJE,EhBIE,CgBJC,KAAK,CAAC,OAApBA,ShBIS,CAAU,2BAAS,IAAT,CAAc,KAAK,IAAnB,CAAV,EAAoC,CAApC,EAAuC,CAAvC,CAAP;AmB1EF,Ab/FA,AN0KF,GAFA,GmBzEM,Gb/FG,Ia+FI,Ab/FA,Ca+FC,Ab/FA,CV7JZ,IuB4PI,Eb/FG,Ca+Fa,Ab/FA,Ca+FhB,CvB5PJ,GuB4PyB,Kb/FlB,CAAwB,AV7J/B,CuB4PgC,CAAC,Eb/F1B,EAA8B,AV7JrC,CuB4PyB,EvB5PhB,GU6JF,Ca+FqC,Cb/FC,IAAtC,CAAP,Ca+FmD,CAAC,GAAR,CAAY,CAAC,CAAb,CAA5C,EAA6D;AAC3DA,Ab/FH,AvB8DG,AiCuGF,ApBnUW,MoBmUP,EGtEE,CpCjCG,Aa5NS,Ib4NL,CoCiCD,EvB7Pa,CuB6PV,AvB7PW,Ib4NjB,CAAa,Aa5NX,EuB6PW,CAAC,GpCjCK,GoCiCb,CpCjCiB,AiCuGF,CGtE5BA,GHsEgC,CjCvGzB,EAA8B,IAA9B,AiCuGT,CjCvGE,CiCuGyC;AjCtG3C,AiCuGE,AhBKJ,AJzUiC,Cb+M/B,CiB0HF,CjB1GE,Aa7NA,CoBkUE,WhBKJ,CAAA,OgBLuB,EhBKvB,CgBL0B,AhBKxB,EAAF,GgBLI,AhBKF,SAAA,EAAA,CAAG,KAAH,EAAU;AmB3ER,Ab9FJ,AvBgEE,AiCqGE,AhBKA,AJvUF,IoBkUE,IGvEI,Cb9FC,EN0KE,KAAK,KM1KhB,CAAsB,IAAtB,EAA4B,AN0KA,EgBLE,EVrK9B,CUqKiC,CVrKC,MAAlC,AUqKI,ChBKO,CM1K+B,Ea8FzB,CnB4E4B,GM1K7C,Ca8FsB,CAAC,Ab9F2B,AN0KA,CAAC,EmB5E3C,EAAoB,EnB4EiB,ImB5ErC,AnB4EqD,CmB5EzD,EAAiC,EnB4E6B,MAA9D;AmB3EE,Ab9FN,AvBgEE,AiB0GF,AJvUE,GIqUF,OmB1EU,QAAJ,EAAY;AAAE,Ab7FpB,AvBgEE,AiCoGE,QGvEgB,CHuEXA,IAAI,CAAC,EGvEc,CAAC,AHuEZ,CAAb,EAAgB,CAAC,CGvEa,CAAC,CHuEX,CGvEK,CAAS,KAAT,AHuEE,CGvEa,AHuEZ,MGvEH,AHuEzB,EGvEgD,AHuEZ,CAAC,EAArC,EAAuC,SGvEd,EAAD,CAAR;AAAiD,Ab5FrE,AvBgEE,AiCmG2C,AhBO7C,EAAA,QgBPiD,KhBOjD,CAAA,CgBPwD,CAAC,CAAD,CAAP,CAAW,IAAX,AhBOjD,CgBPiE,AhBO/D,MAAF,GAAE,SAAA,EgBP2C,EAA0C,EhBOrF,GAAS;AMzKX,AUmKM,AhBOF,QgBPE,GhBOK,IJzUT,SAAA,GoBkUuB,GAAG,GpBlU1B,CoBkUI,KpBlUJ,CAAO,IAAP,EAAa;AuB2PT,Ab3FN,AUmKM,AhBMM,AJzUK,MIyUL,GJzUY,CIyUR,EAAE,CmB9EL,IAAP,CnB8EK,GJzUyB,EAAnB;AuB4PZ,Ab3FL,AvB8DE,AiB0GwB,AJzUY,GAEpC,GIuUwB,EjB1GxB,CAAO,GiB0GuB,CjB1G9B,CiB0GgC,EjB1GzB,GiB0G8B,MjB1G9B,IAAA,CAAK,KAAL,EAAY;AoC8BlB,Ab3FDA,AvB8DE,AiCoGC,AhBKM,AJtUT,KIsUE,CMvKE,AvB8DE,CAAC,KAAL,CuB9DS,CvB8DC,EuB9DE,CAAC,CAAfA;AvB8Dc,AiCqGb,AhBKH,AJtUE,GIoUF,QjBxGuB,QAAQ,CAAC,KAAhB;AoC8BdA,Ab3FA,AvB6DmC,Aa3NnC,MuByPI,Cb3FCA,Ia2FI,Ab3FA,Ga2FG,Ab3FA,GAAG,Ia2FI,Ab3FnB,Ca2FoB,Gb3FG,Oa2FX,EAAZA;AAAAA,Ab1FE,AUkKF,AhBMF,EAAA,ImB9EoC,Eb1F5B,CUkKC,EVlKE,Ca0F+B,GAAG,Ab1F9B,ANwKf,CAAA,GMxKmB,Ca0F+B,Ab1F9B,GAAhB,Ca0FkD,Cb1F/B,ANwKvB,CAAE,EgBNA,ShBMF,GAAE,SAAA,WAAA,EmB9E+D,CnB8EjD,ImB9EsC,CAApDA;Ab1FuB,AvB6DrB,AiCsGH,AhBKiB,MjB3GV,KAAK,AiB2GY,IAAI,QjB3GJ,IiB2GA,CAAiB,GjB3GtC,EAA6B,AiB2Gc,MAAtB,CAAP;AmB7EhB,Ab3F4B,AvB6DK,AiB2GmB,GAAtD,GmB7EM,KpC9BoC,CoC8B9B,GvBzPV,CuByPc,ApC9BmB,IoC8BjC,CvBzPA,CuByPkB,QvBzPlB,GAAA,CAAI,QAAJ,EAAc;AuByPM,ApC9ByB,Aa3N7B,SAAO,EuByPI,KAAP,KvBzPe,EAAnB;AuByPgB,Ab1F9BA,ANyKF,AJxUqC,EIwUrC,CJtUA,KU6JM,IAAI,GAAG,ANyKb,CAAO,GMzKU,CAAC,INyKlB,GMzKa,ANyKN,CMzKmB,QNyKnB,GMzKM,CAAyB,GAAzB,CNyKN,CMzKoC,ANyK3B,GAAT,CMzKM,CAAXA,ANyKmB,IAAd,EAAoB;AjB5GzB,AiB6GA,AJtUF,MbyNM,EiB6GA,GjB7GK,CAAC,GiB6GC,IjB7GP,AiB6GW,CjB7GG,AiB6GF,KjB7GZ,CAAJ,AiB6GI,EjB7GoB,EiB6GE,QAA1B,EACJ;AmBhFE,Ab1FE,AvB4D0B,AiB8GxB,AJtUJ,MuBsPI,Eb1FE,CAAC,EvB4D4B,CiB8GzB,CM1KR,Ca0FF,Cb1FW,Ca0FC,ApC9B4B,AiB8G1B,SjB9GqB,CAAe,AiB8GxC,CAAe,IjB9GU,CAAP,qCiB8GlB,CAAN;AmBhFU,Ab1FD,AvB4D2C,AiC2G1D,AhBGsE,AJrUpE,IuBqPc,KH6EA,GG7EQ,CAAC,Ab1FH,IAAP,Ca0Fe,CAAC,EAAN,AH6EzB,CG7EkC,AH6EL,EAA7B,EG7EyB,AH6EQ,CG7EM,KAAd,EAAqB,MAArB,EAA6B,cAA7B,EAAD,CAAR;AAAuD,Ab1F7C,AUwKxB,SAAO,EAAE,CAAC,OAAH,CAAW,eAAX,EAA4B,IAA5B,CAAP;AjC3GE,AiC4GH,AhBEG,MjB9GI,KAAK,AiB8GF,CjB9GG,GiB8GC,EjB9GX,EAAe,SiB8GR,CAAkB,GAAG,CAAC,OAAJ,CAAY,IAAI,CAAC,MAAjB,CAAlB,CAAP;AmBhFF,Ab1FE,AvB4DiB,AiB+GrB,GAJE,CAjCwB,CAuC1B,GM7KQ,Ca0FC,EpC9BmB,CuB5DhB,Ca0FV,Ab1FW,EvB4DmB,AavN9B,EU2JM,CAAU,KvB4DU,AavN1B,CbuNuC,CuB5DjC,AvB4DkC,IuB5Db,CvB4DY,CAAb,CavN1B,CU2J+B,AvB4DiB,CuB5DhB,GV3JhC,CbuNqD,AavN/C,CbuNgD,CuB5DpD,EAAsC,EV3JxC,EAAc,CbuNY,CAAP;AoC+BpB,Ab1FKA,AvB2D2D,AiC8GjEC,AhBIA,AJzUkB,EuBwPlB,EH6EM,KpBrUmB,CU4Jf,GV5JQ,CU4JJ,AUyKE,GVzKC,AUyKE,IVzKE,AUyKE,CVzKD,GAAL,CAAS,qBAAT,CUyKE,CVzKbD,AUyK2B,SAAd,CAAnBC;AG5EA,AH6EAA,ApBtU6B,GAE3B,CoBoUI,eAAe,GAAG,IAAI,2BAAJ,CAAc,cAAd,CAAxBA;AG5EA,Ab7FM,AvB2DF,AarNF,QbqNQ,EuB3DA,EvB2DI,EuB3DA,CAAC,IAAL,GAAY,AvB2DZ,CAAe,KuB3DG,CAAC,IAAnB,IAA2B,IAAI,CAAC,EvB2DI,CuB3DT,GAAW,CvB2DvB,GAA6B,EuB3DA,CAAC,GAAjD,EAAoD,QvB2DjC,IACC,KAAK,CAAC,YAAN,GAAqB,kEAArB,GAA0F,EAD3F,CAAf,CAAN;AuB3DwD,AvB6D1D,AiBgHA,AJtUA,Cb+MA,CiBuHA,MM7K0D,OAAO,AN6KjE,CAAO,EM7K6D,IAAI,AN6KxE,CM7KyE,EN6KlE,OM7KmD,EN6KnD,MAAA,CAAO,GAAP,EAAY,IAAZ,EAAkB;AM7KyD,AN8KhF,AJtUF,OUwJI,IN8KK,EM7KA,EN6KI,EM7KA,EN6KJ,CAAS,CM7KD,CAAC,CN6KG,CAAC,GM7KT,GAAa,CN6KR,CAAY,IM7KE,AN6Kd,CM7Ke,AN6KxB,CAAP,GM7KW,IAA4B,IAAI,CAAC,MAAL,GAAc,MAAM,CAAC,GAArD,EAAwD;Aa6F5D,Ab7F8D,AN8KrE,AJtUE,GIoUA,CAzCwB,CA6C1B,GMhLqE,Ca6FrD,Mb7F4D,GAAG,Ca6FxE,CAAoB,Eb7FwD,CAAC,Ea6F7E,EAA2B,Ib7FmC,Ia6F9D,EAAqC;AAC5C,Ab9F4F,AvB+D5FA,AiBkHA,IjBlHM,EoC+BN,Cb9FW,Ea8FO,ApC/BP,GoC+BU,ApC/BP,CuB9Dd,Ia6F0B,CAAC,SAA3B;AAAO,Ab7FI,AvB8DI,AiBmHf,EjBnHe,IoC+BR,CpC/Ba,EAAE,CAAR,CoC+BP,GAAA,GAAA,CAAA,KAAA;AAAO,Ab7FE,AvB8DS,EAAA,IoC+BX,EpC/BiB,CoC+BjB,CpC/BmB,EoC+BnB,GAAA,AvBrPZ,CuBqPY,GAAA,KvBrPZ,SAAA,MAAA,GAAS;AUyJN,AvB6DS,AatND,CbsNbA,QatNoB,YAAY,EAAnB;AuBsPX,AnBoFA,AJ1UgC,EI0UhC,CJxUA,GuBoPI,KAAK,CAAC,GnBoFV,CAAO,KmBpFH,OnBoFJ,GAAO,EmBpFwB,OnBoFxB,YAAA,CAAa,IAAb,EAAmB,KmBpFtB,IAA4C,KAAK,CAAC,SAAN,CAAgB,IAAhB,CAAqB,OAArE,EAA8E;AAC5E,Ab7FA,AvB6DJ,AiBoHI,AJxUF,IUuJE,GAAG,Ca6FC,CAAC,ApChCA,CuB7DC,CNiLC,CAAC,EmBpFE,Ab7FA,Ca6FC,Ab7FA,CNiLC,CjBpHhB,AiBoHiB,CMjLP,AvB6DQ,CuB7DC,IvB6DnB,AiBoHW,EjBpHc,EoCgCjB,AnBoFmB,EMjLvB,Ea6F2B,ApChC/B,AiBoH+B,CmBpFC,AnBoFA,CjBpHC,GiBoHN,CAAU,IAAV,CAAe,UAAf,KAA8B,KAArD,MmBpFqC,KAAK,CAAC,GAAf,EAAoB,KAAK,CAAC,GAA1B,CAA5B,EAA0D;AAAE,Ab5F7D,AvB6DD,AiBoHF,AJxUE,EboNA,CiBkHA,IjBlHK,CAAC,KoC+B+D,ApC/BrE,GAAc,EoC+BgD,GpC/B9D;AoC+B0E,ApC9B1E,EAAA,KAAK,CAAC,MAAN,GAAe,MAAf;AuB7DA,AvB8DA,SuB9DO,AvB8DA,KAAP,EuB9Dc,GAAG,CAAC,CAAX,GAAe,OAAf,GAAyB,IAAI,CAAC,OAAL,CAAa,UAAb,CAAwB,IAAxB,EAA8B,MAA9B,CAAhC;Aa4FE,Ab3FH,AvB8DA,AatNC,CIqRwB,CjB7D1B,AiB6DmC,EJrRjC,CAAO,GuBmPD,GnBkCkB,EJrRxB,GuBmPE,AvBnPK,EuBmPO,OvBnPP,QAAA,CAAS,MAAT,EAAiB,IAAjB,EAAuB;AuBmPd,ApC1BlB,AaxNI,MuBkPc,AvBlPV,CAAC,IAAD,GuBkPkB,CAAC,AvBlPV,CAAC,IuBkPc,AvBlPV,CuBkPW,AvBlPV,EuBkPI,CAAS,KAAT,AvBlPvB,CuBkPsC,CvBlPX,IuBkPgB,CAAC,GAArB,EAA0B,cAA1B,EAAD,CAAR;AAAoD,AbzFtE,AvBgEA,AazNiC,SUyJxB,CVzJ8B,IAAI,UAAJ,CUyJvC,AVzJsD,CUyJ5B,OAA1B,EAAmC,MAAnC,EAA2C,GAA3C,EAAgD,UVzJT,CAAN;AU0J/BD,AvBgEF,AiB+GA,AJzUwF,MU0JlF,GAAG,GAAG,CN+KC,CAAC,KM/KK,CAAC,GN+KpB,CAAwB,MM/KZ,CAAmB,AN+K/B,GAAkC,GM/KhCA,EN+KF;AmBtFI,AnBwFJ,SAAS,CAAC,CmBxFC,IAAP,CnBwFJ,CAAiB,MAAjB,EAAyB,aAAzB;AmBvFG,AbzFD,AV1JEA,MU0JE,AV1JE,GU0JC,CV1JG,GU0JC,AV1JE,GU0JC,CAAC,GAAJ,EV1JW,CU0JD,AV1JE,GU0JC,CAAC,AV1JE,CAAC,KU0J5B,EAAiC,CV1JX,CAApBA;AU2JA,AvB+DJ,AiBkHA,IAAM,IjBlHE,CuB/DCA,AvB+DA,IuB/DI,CvB+Db,EiBkHkB,CjBlHD,EuB/DE,ANkLjB,EjBnHmB,CuB/DC,IAAI,CAAC,CNkLzB,CjBnHe,CuB/DK,AvB+DQ,CuB/DC,CAAT,AvB+DL,EuB/DiB,AvB+DA,CAAjB,CAAjB,EuB/DsC,CAAC,CNkLrC,CAAY,CMlLoB,CAAS,GAAG,CNkL5C,EMlL+C,ANkL3B,CMlLY,EAAkB,IAAI,CAAC,KAAL,CAAW,GAAG,IAAI,MAAM,CAAC,GAAP,GAAa,GAAG,CAAC,GAArB,CAAH,IAAgC,GAAG,CAAC,MAAJ,GAAa,GAAG,CAAC,GAAjD,CAAX,IAAoE,CAAtF,CAAZ,CAAbA,EAAoH,CAAC,GAAG,MAA7H,IAAuI;Aa0FzI,AbzFIA,AUkLN,AhBAI,AJ7UA,MuBoPE,AvBpPE,CuBoPD,AnByFE,AJ7UA,EoB6UO,CVlLN,CV3JN,CuBoPQ,CAAC,AnByFT,AJ7US,EU2JE,CUkLf,AhBAkB,CgBAM,CVlLN,CayFX,CAAa,EnByFhB,CgBAJ,EVlLyB,AUkLO,CVlLN,CayFxB,EAAyB,ObzFT,CAAmB,CAAnB,CAAZA;AayFuB,AnCjTtB,AgC2YL,AhBAA,AJ9Ua,CI2Uf,CgBGE,MAAM,ChC3YQ,CY6DK,CuBoPe,AH0FzB,GpB9Uc,EuBoPI,InCjTtB,CAAqB,CAArB,EAAwB,AY6DV,CZ7Dd,AY6D4B,EZ7DD,gBY6DkB,IAAI,CAAC,QAAtB,GAA8B,UAA5C,CAAN;AuBoP0B,AnChTvC,AsBwNI,AUkLM,ApB9UgE,IoB8UhE,EhC1YN,CAAC,EgC0YU,CVlLP,CUkLS,ChC1YP,CAAV,EAAW,AsBwNE,CAAC,CUkLS,IAAI,GVlLnB,GUkLyB,CVlLP,AUkLQ,CVlL9B,EAAyB,EUkLZ,IAA0B,GAAlC;AhC1YI,AsByNPA,AUkLI,IAAA,OhC3YU,CsByNV,GtBzNG,EsByNE,AUkLQ,EAAE,CVlLP,GNkLlB,EMlLuB,AUkLQ,CVlLP,GUkLW,AhBAnC,MgBAyC,CAAC,EhBA1C,EMlLkB,CNkLlB,CMlLMA,ANkLF,OgBAqB,AhBAzB,EAAa,EgBA8C;AGzF3D,AnClTwB,AgC0Yf,AhBEX,AJ/UI,GoB6UF,GGxFI,AnB0FN,GAAsB,AJ/UX,GI+Uc,CJ/UV,CuBqPb,AvBrPc,EuBqPA,GnB0FgB,CAAC,EJ/UtB,CAAc,MI+UA,AJ/Ud,CI+UgC,CJ/UV,II+Ue,AJ/UrC,CAAP,KI+UqB,CAAzB;AmBzFIA,AbzFI,AUkLN,AhBAO,AJ9UP,CALA,EAOA,GI4UO,EmBzFD,CHyFC,IGzFI,AbzFAA,AUkLA,AhBAJ,GmBzFO,AnByFP,CMlLQ,CAAC,CayFC,AnByFV,CmBzFW,AnByFX,CMlLY,CAAb,EAAgB,CAAC,ENkLhB,CMlLmB,IayFZ,CbzFiB,CAAC,EayFE,CHyF3B,CAAW,CGzFmB,CAAC,AbzFhC,EAAkC,CAAC,EAAnC,CayF4B,CAAW,AbzFA,OayFX,CAAmB,IAAnDA;AACAA,AnCnTF,AsB0NQA,AUkLN,AhBDc,AJ3UhB,IoB4UE,EhC5YE,AgB2YY,CgBCX,CGzFC,AnCnTA,CAAC,AgC4YA,AhBDS,CmBxFR,EnBwFQ,CmBxFL,AnCnTA,CsB0NC,CNiLI,CAAA,EmBxFA,AbzFA,CayFC,AHwFC,AhBAF,ChB3YE,CmCmThBA,AnCnTS,AsB0NQ,ItB1NI,CsB0NC,CAAC,CAAD,CAAhBA,ItB1NJ,KACA,EAAE,CAAC,IAAI,OAAO,CAAP,IAAY,QAAnB,CADJ,EACgC;AAAE,AgC6YhC,AhBFA,AJ3UF,IoB6UE,KAAK,AhBFE,EhB3YgC,AgC6YhC,KhC7YyB,AgB2YlB,GAAG,IAAI,YAAJ,CAAiB,GAAjB,EAAsB,GAAtB,CAAH,GAAgC,IAAI,YAAJ,CAAiB,GAAjB,CAA9C;AmBxFA,AnCnT4C,AsB0NtC,AUoLJ,AhBFJ,AJ3UA,MoB6UI,EG3FE,EH2FF,EAAA,CG3FO,CAAC,AbzFA,MAAM,CAAC,AUoLf,EG3FE,EH2FF,EVpLc,CUoLP,CVpLgB,IAAT,CAAV,CayFyB,CbzFD,8BayF1B,IAA4C,KAAK,CAAC,SAAN,YAA2B,8BAA3E,EAAuF;AAAE,AbzFzD,AUqL5B,ApB7UN,MuBiP2F,EAAE,CAAC,MH4FjF,IVrL4B,AUqLxB,KG5F0E,OH4F9E,CAAiB,GVrL2B,CAAC,EUqLtB,CAAC,EVrLoB,EAAQ,CUqLpD,EAA+B,GVrLa,EAAgB,CUqLvB,CAAC,EVrLM,CAAvB,EUqLrB,EAA6C,IAA7C,EAAmD,CAAnD,CAAP;AG5FyG,AnClT/GA,AsByN8E,AUsLzE,MhC/YD,CgC4YK,IhC5YA,GAAG,KAAK,CAAC,GgB4YlB,IhB5YY,CAAc,CAAd,CAAZA,GgB4YA,SAAA,OAAA,CAAQ,GAAR,EAAa;AMlLN,AUsLH,AhBHFA,MgBGE,AhBHE,IAAI,CgBGN,EAAA,AhBHS,GAAG,CAAC,KgBGb,EhBHS,CAAY,EgBGrB,CAAM,EAAN,AhBH0B,EgBGhB,IAAV,AhBHS,CAAXA,CgBGkB,KAAhB,EAAuB;AG7FzBA,AnClTF,AsB0NK,AUsLC,AhBJJA,AJ3UF,IAAA,CAAO,CZjEH,AgB4YmC,EmB1FjC,EnB0FqC,ChB5YlC,AYiET,CZjEU,CmCkTC,AnB0FmC,CJ3UvC,CoB+UM,CG9FC,CnB0FoC,CAAC,ChB5Y/C,CAAc,CmCkTC,AnClTf,CmCkTgB,CvBjPb,GZjEiB,CmCkTV,AnB0FZA,EJ3UK,CAAO,CuBiPe,AnClT7B,AgCgZ6B,CG9Ff,AH8FgB,ApB/UvB,CZjEsB,CYiEX,CuBiPe,CH8FJ,EAAO,CG9FtB,GAA0B,CH8FX,ApB/UtB,EoB+UoC,ApB/Ud,EoB+UA,EAAkB,MAAlB,CG9FyB,AH8FhD,CG9FiD,KAAK,CAAC,IAAN,CAAW,CAAC,CAAZ,EAAe,cAAf,CAA8B,KAAK,CAAC,UAAN,CAAiB,CAAC,CAAlB,CAA9B,CAAD,CAApDA;AACAA,AnCnT6B,AgCiZ1B,ApB/UH,MAAI,EuBiPA,AvBjPE,GZlE8B,CYkE1B,CuBiPD,GAAG,AnCnTiB,KmCmTZ,AvBjPjB,EAAmB,EuBiPE,KAAT,GAAiB,CAAC;AAAC,AnCnTU,AsB2NvC,AUgLK,AhBEP,AJ3UqB,KoBsUL,CGrFe,AnB0F3B,ImB1F+B,AbxF7B,ANkLE,AJ3UmB,CUyJpB,CawF8B,AbxF7B,ENkLI,AJ3UmB,CUyJpB,CAAC,CAAC,GAAG,CAAL,GVzJgB,CUyJN,AVzJqB,EI2UjB,CMlLnB,ANkLoB,KMlLG,MAA3B,CNkLU,CMlLuB,ANkLI,IAA3B,CAAZ,EAA4C,YJ3UiC,EAAlD,CAAN;AuBiPS,AbxFO,ANkLS,AJ3UkC,KuBiPnD,CAAjB,GAAmC,EnB0FM,CgBOrD,CGjGAA,EnB0FyD,aAAJ,CAAkB,IAAlB,CAAP;AmBzF9CA,AnCnTF,AsB0N4C,AU6K1B,AhBK4D,GgBLvE,CAAP,EhCvYI,EmCmTE,GAAG,AnCnTT,EAAW,CmCmTC,oCAAS,EAAE,CAAC,GAAZ,EAAiB,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,KAAK,CAAC,GAArB,CAAjB,EAA4C,CAA5C,EAA+C,KAA/C,CAAVA;AnClTA,AsB0NC,AU0LJ,ApBnVG,EAAA,MZjEI,CAAC,CAAC,CYiEG,CAAC,EAAD,CAAT,CZjEI,EYiEY,EZjEA,CAAC,CAAC,KYiElB,CZjEA,EAAwB;AmCmTxB,AnCnT0B,AsB2N3B,ANiLC,AJ1UA,EAAA,MuBiPI,CAAC,AnByFE,EJ1UE,CAAC,CZlEuB,CmCmT7B,IAAU,AnCnTY,AgB4YV,CmBzFD,AnByFE,EJ1UjB,CuBiPI,AvBjPgB,CI0Ub,CAAe,EmBzFA,EnByFf,AJ1UP,CI0UA,EJ1U6B,EAA7B,6BuBiP+B,EAAE,CAAC,GAAZ,EAAiB,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,KAAK,CAAC,GAArB,CAAjB,EAA4C,CAA5C,EAA+C,KAAK,IAAI,CAAC;AAAC,AnCnT1C,AgB6YxC,AJ1UE,GI6UJ,GmB7FoF,GvBhPzE,CuBgP6E,EAAE,MvBhPtF;AuBgP+E,AbvFjF,ANqLF,AJ7UE,CALA,EAQF,EuB4OkF,CAAxD,CAAtB,EAAgG,AbvF3F,OAAP;AawFI,AnCnTF,AsB4NH,AU2LD,AhBNA,AJ1UA,EUuJA,IaqFM,GnCnTGA,AgCuZO,EGpGL,EnCnTE,AgCuZb,CGpGc,AnCnTA,AgCuZO,CGpGN,EnCnTE,CAAb,CgCuZJ,ChCvZoB,CAAC,AgCuZO,GhCvZJ,CAAC,CAAC,GgCuZ1B,EAAsC,ChCvZlC,EAA8B,CAAC,EAA/B,EAAiC;AmCmTrB,AnCnTuB,AgCwZrCA,AhBNF,MgBMM,EGrGU,EnCnT2B,AgCwZjC,ChCxZkC,CmCmTxB,CHqGP,CGrGS,QnCnTiC,CAAC,AgCwZjC,ChCxZkC,AgCwZjC,ChCxZkC,CAAD,CAAF,EAAO,CAAC,CAAC,CAAD,AgCwZlD,ChCxZ0C,AgCwZtB,ChCxZM,EAA4B,EgCwZtD,CAAXA;AGrGa,AnCnTsD,OmCmTvD,CAAR,OnCnTsE,KAAP;AmCoT/D,AnCpTsE,AsB+NrE,AU0LL,IpBjVW,EuB4OP,AHqGA,CAAC,EGrGE,AbrFO,EU0LV,CGrGM,EvB5OW,CoBiVR,CGrGT,CvB1OJ,EoB+UiB,CV1LZ,AU0La,CV1LQ,GU0Lb,CV1LR,AU0LkB,CpB/UvB,CUqJgC,MAA3B,EAAmC,AU0L3B,CpB/Ub,CAAY,EoB+UyB,CAArC,ApB/UA,EoB+UsC,ApB/UrB,MAAjB,EAAyB;AuB2OtB,AnCrT4E,AgCyZvC,ApB9U1C,IIwUa,OgBMoC,KAAP,AhBNjB,GAAA,aAAA,UAAA,SAAA,EAAA;AhBlZtB,AsB+NDA,AUyLoD,AhBHpD,AJ1UE,GZ9EF,GsBkOI,CVpJG,EZ3EA,CsB+NC,AVpJN,CI0UF,EMtLW,AVpJE,GAAX,CUoJa,AVtJU,CUsJT,AVnJlB,IUmJEA,CNsLA,CAAY,GAAZ,EAAiB;AmBhGf,AnCpTA,AsB8NFA,ANuLEM,IAAAA,EMvLoB,EasFhB,CnCpTCN,CsB8NPA,CasFE,EAAS,AnCpTA,AgBqZTM,ChBrZA,AgBqZAA,IhBrZc,AgBqZdA,ChBrZA,AgBqZK,EhBrZU,EgBqZfA,EAAM,GAAG,CAAC,OAAJ,CAAY,CAAZ,CAANA,EAAsB,GAAG,CAAC,OAAJ,CAAY,GAAG,CAAC,OAAJ,CAAY,IAAxB,CAAtBA;AmBhGE,AnCrTe,AsB8NnBN,AU0LA,AhBFF,AJ1UI,MuByOE,AbvFwB,AU0LxB,CpB5UG,CuByOD,CAAC,CnCrTgB,EAAE,AsB8NzBA,CtB9N0B,AY4ExB,CuByOE,AHmGJ,CGnGa,CHmGD,ApB5UI,CuByOD,AnCrTe,CmCqTd,AnCrTO,IY4ErB,CZ5EkC,CAAC,CmCqTxB,CAAW,GAAX,CAAe,KAAK,AnCrTe,CmCqTd,AnCrTe,CAAC,CAAC,CmCqTtC,AnCrTqC,CmCqT9C,AnCrT4C,EmCqTR,AnCrTe,CmCqTnD,AnCrToD,CAAC,CmCqTd,AnCrTa,CAAR,CAA7B,EAAyC,CmCqTxD;AnCrT0D,AgCwZhD,ApB3Ud,GAEA,CoByUc,WhCxZuD,IgCwZxC,ChCxZiC,AgCwZhC,IAAD,EAAO,KAAP,EAAc,QAAd,EAAwB,KAAxB,CAAf;AGlGV,AnCtTiE,AsB+NrE,AUyL2D,ApBxU3D,MU+II,IauFI,AbvFA,CauFC,AbvFA,KauFD,IAAU,CAAC,KAAK,CAAC,MbvFzB,EAAiC,IauFzB,IAAiC,KAAK,CAAC,MAAN,CAAa,IAAb,IAAqB,KAA1D,EAAiE;AAC/DA,AnCvToE,AsBgOxE,QAAI,IauFI,KAAK,GAAG,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,KAAK,CAAC,MAAN,EAAf,CAAZA;AAAAA,AbvFA,AUyLN,SAAO,GGlG2C,CHkGlD,KGlGwD,GAAG,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,KAAf,CAArDA;AnCtTJ,AsBgOEA,AUyLL,ShCzZQA,CsBgOCsB,GtBhOGpB,EsBgOA,CtBhOT,EsBgOY,EtBhOE,CAAd,CsBgOgB,CtBhOD,AsBgOE,sBAAL,CAA4B,MAAM,CAAC,IAAnC,EAAyC,MAAM,CAAC,GAAhD,CAAVF;AauFE,AnCvTa,AgBuZrB,EAAA,QhBvZyB,EmCuTb,AnCvTeE,EgBuZ3B,ChBvZ4B,AgBuZ5B,EmBhGiB,CAAC,CnCvTc,CAAP,CAAJ,CmCuTT,CAAW,AnCvTW,CmCuTV,AnBgGxB,CmBhGY,AnBgGV,EmBhGyB,KnBgG3B,GAAE,MmBhGU,CAA8B,EnBgGxC,ImBhG8C,CAAC,EnBgG/C,CAAQ,EmBhGgC,AnBgGxC,EmBhGU,AnBgGE,EmBhG4C,KnBgGxD,CmBhG8D,CAAC,AnBgG5B,KmBhGqB,KAAiB,CAA/D,EAAkE,KAAlE,CAAJ,EACR;AAAU,AnCxT0B,AsBiO9B,AVjJJ,UuBwOQ,AbvFAoB,AVjJR,CAAO,CuBwOG,CAAC,AvBxOX,EZhFyC,AsBiOrC,CVjJG,CUiJI,GtBjOuB,KYgF3B,CuBwOC,CAAiB,AvBxOlB,CAAG,CuBwOiB,CAAC,CvBxOrB,EAAQ,EIuUI,EmB/FM,CAAW,AnB+Fd,GmB/FG,CAAe,KAAK,CAAC,MAAN,EAAf,CAAjB,EAAiD,GnB+F7B,EmB/FpB;AAAuD,AnCxTtB,AsBiO5B,AVjJI,QUiJJ,CVjJW,IAAI,CUiJY,GAAGA,KAA9B,CVjJW,CUiJG,AVjJY,GAAf,CUiJG,CVjJiB,EUiJjB,EVjJH,CAAP,GUiJU,CAAA,UAAd,EAAoB,MAAA,GAAA,MAAA,CAAA,MAApB;AawFR,AnCzTyC,AsBiOC,AU4LjD,AhBLI,AJxU+C,CAAjD,EAEA,KIsUM,CgBKQ,IAAhB,CAAqB,ChBLN,IgBKf,AhBLmB,EgBKS,QAA5B,EAAsC,YhBLb,KAArB,EAA4B;AmB9F3B,AnCzTF,AsBiOE,AU4LHtB,AhBLI,AJtUJ,KU4IE,CAGE,AU4LA,AhBLA,EAAE,CAAC,CgBKC,GV5LG,AU4LA,CV5LP,CNuLA,CMvLU,ANuLA,CMvLE,ANuLZ,EAAa,EAAE,CAAC,CgBKC,CAAC,ChBLL,CAAO,MgBKb,CAAoB,AhBLd,CAAe,IgBKrB,AhBLP,CgBKJA;AV3LC,ANuLGA,UAAI,GAAG,GAAG,SAAS,CAAC,OAAV,CAAkB,EAAE,CAAC,GAArB,CAAVA;AmB/FF,AnCzTF,AgC6ZA,IGpGE,EHoGE,CAAC,EhC7ZE,EgC6ZH,CGpGM,CAAC,AnCzTX,EmCyTa,AHoGA,CGpGC,GHoGG,CAAC,MAAL,CAAY,GGpGd,EAAD,CAAR,IHoGW,IAA0B,CAAvC,EAAwC;AGnGvC,AnCzTH,AsBiOE,AU2L0C,AhBJtC,AJvUJ,EX7FF,IqB6OM,CAAC,GNuLG,AJvUR,CUgJI,AU2L6C,AhBJxC,AJvUF,GIuUK,CMvLC,ANuLA,AJvUb,CoB2U0C,ChBJjC,CAAO,AJvUT,CUgJU,CAAC,ANuLA,CAAC,MJvUZ,GIuUE,CAAL,AJvUG,CAAK,CIuUiB,MMvL7B,AVhJO,EUgJgC,AVhJlB;AUiJnBA,AU0LoD,A/BvaxD,AemaiC,AJvUR,QUiJjB,ANsLyB,CJvUD,CIuUG,CAAC,EMtLvB,AVjJuB,GUiJpB,IAAI,CAAC,ENsLY,AJvUD,CIuUiB,AJvUF,GIuUd,CJvUD,EAAqB,OAArB,CAAP,EUiJT,CAAyB,MAAM,CAAC,IAAhC,EAAsC,MAAM,CAAC,GAA7C,CAAZA;AawFF,AlCpUF,AekaqD,AJvUQ,CAA3D,EAEA,MuBuOO,IAAP;AACD,AbxFG,AU0LF,A/BtaF,AekaK,AJrUH,EuByOF,GnBwFI,CgBQE,EV1LE,GNsLG,EMtLP,CU0LF,CV1LW,CU0LC;AG/Fd,Ab3Fe,AU0LC,A/BrahB,AekaMM,AJrUJ,IoBwUc,EV1LD,ANuLTA,QMvLqD,CNuLrDA,CAAAA,CMvLwD,EU0L/B,CAAC,EV1LjB,EAAkB,AU0LF,ChBHzBA,CgBGgC,AhBH1B,EMvLqB,GAAA,AU0LF,EAAc,AhBHvCA,CAAM,IAANA,CMvL2B,ANuLd,CMvLc,CU0LF,EAAwB,AhBHjDA,EAAc,EgBGW,AhBHzBA,CgBGU,ChBHQ,KMvLT,EAAqC,ANuL9CA,MMvL8C,GAAA,QAAA,CAAA,WAArC;Aa4Ff,Ab5FoE,AU0LR,A/Bpa5D,AekaK,AJrUH;AU8IC,ANwLH,GARA;AgBUE,SAAO,IAAP;AG9FK,Ab1FLN,AUyLD,AhBDD,AJvUE,EIuUF,Efpaa,EqB4OP,ErB5OW,CkCsUD,Ab1FP,CV/IP,CX5FA,AW4FO,CU+IG,ENwLZ,CAAA,CMxLgB,CAAC,GrB3Of,EW4FA,EX5FA,AemaF,Cfnac,AemaZ,AJvUO,GuByOF,CAA6B,AlCrUlC,EAAkB,AemapB,EMxLY,Ca0FL,Ab1F2B,ANwLhC,AJvUO,EuByOkC,AlCrUzC,EAAyB,EqB2Oa,CAAC,ENwLvC,CmB9FK,Cb1FK,AV/IH,CuByO4C,AvBzOhC,CU+I0B,ENwL7C,AJvUO,EAAiB,CIuUf,CMxL0C,CAAC,CV/I7C,EU+IsC,AV/If,EAAvB,CU+ImD,CAAhD,AV/IwB,CU+IlCA,IV/IO,EAAkC;AuB0OzC,Ab3FAA,ArB1OF,Aekaa,AJtUT,MU8I4D,AV9IxD,GuByOC,Ab3FPA,ENwLkB,QmB7FD,CAAC,KAAD,EAAQ,QAAQ,IAAA,UAAK,EAAL,EAAW;AAC1CA,AlCrUJ,AeiaqB,AJrUf,MIqUe,EmB5Fb,EnB4FiB,CJrUZ,CIqUc,CmB5Fd,GAAG,KAAK,AvBzOE,CuByOD,AvBzOE,EAAX,CAAc,GAAG,CAAC,IuByOf,GvBzOW,CuByOW,AvBzOC,IAAZ,CuByOgB,CAAC,AvBzOC,EAAlB,EAAsB,KuByOX,AvBzOX,CuByO2B,AvBzOzC,CAAP,EuByOgC,CAAoB,YAApB,IAAoC,KAAK,CAAC,SAAN,CAAgB,KAAhB,CAAsB,KAAtB,EAAtEA;Ab3FF,ArBzOE,AegagB,AJpUf,GAFD,CAEE,CIoUO,CMvLP,CAAC,ArBzOE,GqByOH,CrBzOF,AW4FS,CAAP,EU6IQ,ArBzOE,AW4FA,CU6ID,GrBzOX,CqByOe,ArB5OQ,CqB4OP,ArBxOpB,GqBwOe,CAAS,QAAT,CAAkB,GAAG,CAAC,QAAJ,IAAgB,CAAhB,GAAoB,GAAG,CAAC,UAAxB,GAAqC,GAAvD,CAAb,EAA0E;Aa4FxE,Ab3FAA,AU2LJ,A/BnaA,Ae8ZiC,AJnU3B,GImUN,KmB3FQ,Ab3FA,AV7IE,CoBwUM,ApBxUL,EU6IA,Ea2FP,Cb3FU,Ca2FD,Gb3FK,AU2LlB,CV3LmB,AU2LO,EpBxUH,CU6IT,CAAS,CU2LvB,EAAiC,kBV3LnB,EAAVA,KV7IE,EAA6B;AuBwOpB,AHiGbA,ApBzUmC,MuBwOtB,AHiGT,EGjGW,CAAC,CHiGR,GAAG,ApBzU+B,OuBwO7B,CAAe,EHiGP,ApBzU+B,CoByU9B,ApBzU+B,EuBwOxC,EvBxO6B,CAAgB,CAAC,CAAC,CoByUjD,CAAoB,KAApB,ApBzU+B,CoByU1CA,ApBzUmC;AuBwOD,Ab1FhC,AU4LF,A/BpaE,Ae+ZF,AJrUoE,EIqUpE,Kf/ZO,CqBwOD,CAAC,AU4LA,G/BpaL,C+BoaS,ChBLX,CMvLa,ArBxOE,Ae+ZR,CMvLO,AU4LA,IAAI,A/BpahB,C+BoaiB,CV5LN,CNuLb,CMvLsB,CU4LR,CAAU,AhBLjB,CMvLM,CAAX,EAAwB,KNuLnB,CgBKI,GAA0B,CAArC,GhBLO,CAAS,GAAT,EAAc;AMvLO,AU6L7B,A/BpaC,Ae8ZuB,Gf5ZvB,Qe4Z8B,EMvLK,ENuLD,EMvLN,UNuLE,CAAiB,GAAjB,CAAP;AmB5FrB,Ab3FqC,ArBpOvC,Ae2ZmD,AJpU/C,GIoUJ,CmB5FE,MvBxOQ,CAAN,CuBwOM,CAAC,EAAD,CAAR;AACD,AlC/TD,AWuFG,GuBoOc,CAAjB;AAKD,Ab5FG,ArBnOF,Ae2ZF,AJpUE,CAPA,CuBiPF,AnB0FA,CH3aA,CSmPI,GAAG,GAAG,INwLV,CAAA,SAAA,CAAE,CMxLwB,CAAC,CNwL3B,GMxL+B,ANwL7B,CMxL8B,GAAN,EAAW,GNwLnC,GMxLwB,ANwLxB,CAAI,CMxLuC,ENwL3C,CMxLwB,CAAtB,ANwLO;AmBzFX,AHiGA,A/BlaE,Ae0ZW,SgBQG,EhBRI,IAAI,GgBQxB,CAA0B,KAA1B,EAAiC,ChBRb,CAAiB,GAAjB,CAAP;AmBxFb,Ab/FI,AUgMFA,A/BlaA,AeyZuC,GAAzC,GgBSM,EVhME,CAAC,CUgMC,EVhMN,CUgMS,CVhMD,SUgMW,CAAC,QAAX,CAAoB,KAApB,CAAXA;AVhMY,AUiMZ,InBpbW,KmBobJ,IVjMY,AUiMR,EnBpbW,CmBobR,CVjMF,CTnPU,EmBobJ,CAAC,MAAL,CAAY,GnBpbJ,OmBobX,GAA4B,AnBpbjB,CmBobtB,GnBpbsB,EAAA;ASmPC,AUkMxB,AnB5aC,AGmaF,EAAA,SHnaE,GGmaF,CAAA,OHnaE,CAAY,CGmad,CAAE,EHnaA,AGmaF,EHnaoB,CGmalB,CHnaA,EAAsB,KAAtB,CGmaA,CHna6B,CGma7B,CAAG,KAAH,EHnaA,AGmaU,EHna8B;AsB0UnC,Ab/FJ,AT1OCM,AGkaU,GM3M4B,CAoB1C,AT3OIA,IAAAA,CsByUY,AtBzUZA,EGkaiB,EHlajBA,CAAK,EGkaiB,EHlatBA,EADsC,CAE1C,IsBwUO,CAA0B,EnByFK,GmBzF/B,EAAiC,OnByF1B,CmBzFP,EAA2C;AAClD,AtBxUA,AGgakD,GAAlD,GmBxFA,GAAiB,GAAG,KAAK,CAAC,SAA1B;AAAO,MAAA,KAAA,GAAA,ClClUL,EkCkUK,CAAA,KAAA,GlClUL,SAAA,QAAA,CAAS,GAAT,EAAc;AkCkUF,Ab9FZ,ArBnOEN,AYNA,AGiaJ,EAAA,ImB1Fc,Ab9FRqB,ArBnOE,EkCiUM,CtBvUL,CZMLrB,CkCiUU,Cb9FD,CAAC,ATzOV,CsBuUU,AnB0Fd,CmB1Fc,AnB0Fd,CHjagB,CsBuUF,Eb9FZ,CTzOE,CSyOkB,AT7OoB,CAK1C,EGgaA,CAAE,WAAF,GAAE,SAAA,WAAA,GAAc;AmB1FmB,Ab7F/B,ArBpOAA,AYJJ,AG+ZkB,MmB1FmB,AlCjUvB,GkCiUqB,Ab7F1BA,ENuLgB,Cf3ZL,CqBoOP,CAAC,CrBpOS,EqBoON,GAAb,ArBpOAA,EqBoOkB,ANuLJ,IMvLQ,IAAI,CAA1B,EAA6B,CAAC,GAAG,UAAU,CAAC,CAAD,CAA3C,EACJ;Aa6FEA,Ab7FI,ANsL8B,GAApC,GmBzFM,IAAI,Ab7FA,CAAC,CAAC,Ca6FC,KAAK,CAAC,Eb7Fb,EAAe,Oa6FR,CAAkB,EAAlB,CAAXA;Ab7FqB,ArBpOnB,AYJA,OZIKA,CqBoOc,CTxOd,EZII,AYJT,CSwOuB,ArBpOb,EYJA,CSwOgB,ArBpOb,CAAb,AYJA,CAPsC,CZWtB,AYHpB,CZGqB,EqBoOe,CrBpOZ,EqBoOe,CrBpOZ,CAAC,EqBoOL,IrBpOnB,EAAgC,CAAC,EAAjC,EAAqC;AkCkUvC,Ab9FqC,ArBnOjCA,AYHN,MsBoUM,ElCjUI,EkCiUA,GlCjUK,CkCiUD,CAAZ,ClCjUgB,CkCiUH,ElCjUM,CAAC,CAAD,CAAfA;AkCiUW,Ab9F0B,CN6JlB,CAAS,SmB/DV,AnB+DC,KmB/DR;AAAY,Ab7F1B,ArBnOG,AYHF,QZGM,CYHD,IZGM,CYHX,CZGM,CAAQ,CYHD,IZGP,CAAJ,AYHF,EZGoB;AAAE,AYFtB,SAAK,IZEwB,GAAP,EYFtB,GAAiB,CAAC,CAAC,SAAnB;AsBmUF,Ab7FA,ArBpOkC,AYDpC,AG4ZA,EmB1FE,Ab7FA,Ga6FG,Ab7FA,Ga6FG,Ab7FA,CNuLC,CAAC,GmB1FG,CAAC,EnB0Fd,CAAiB,GmB1FT,Ab7FY,Ca6FC,Ab7FA,CNuLrB,EMvLoB,ANuLI,CmB1FhB,CAAN,Ab7FwB,MAAN,CAAlB,GNuLF;AAEAC,IAAM,WAAW,GAAG;AmB3FlB,Ab7FA,ArBpOI,Ae6ZJ,EAAA,GAAA,CmB5FI,Ab7FA,CNyLJ,Cf7ZQ,EqBoOR,EAAU,CrBpOG,CkCiUb,EAAY,AnB4FZ,Cf7ZQ,CAAU,Ce6ZlB,GAAM,If7ZE,CAAmB,KAAK,CAAC,IAAzB,CAAJ,EAAoC;AkCiU1B,Ab5FZ,ArBpOI,Ae4ZE,ImB5FM,Ib5FRoB,ErBpOI,CAAC,Ae4ZI,CmB5FO,CAAC,Cb5FV,CAAC,ArBpOR,Ae4ZE,Ef5ZO,CkCgUa,CAAC,Cb5FvBA,Ca4FiB,CAAS,Eb5FT,IAAI,CAAC,Ka4FL,CAAsB,Eb5FtB,IAAiB,CAAtC,EAAyC,uBa4FgB,MAAd,CAAqB,KAAK,CAAC,GAA3B,EAAgC,GAAhC,CAAtB,CAAD,CAAR;AAAqE,Ab3FrF,ArBrOmB,Ae4ZI,GADH,Kf3ZD,IAAI,GAAG,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAP;AqBsOnB,ArBtOyC,Ae6ZvC,EAAA,OAAA,EAAA,SAAA,OAAA,CAAQ,GAAR,EAAa;AmB5Fb,Ab1FI,ArBtOC,AYFP,AG8ZiB,EH9ZjB,GZAM,CqBwOA,Ga0FG,ElChUI,Ae4ZW,CMtLZ,Ca0FV,AtBlUF,CAAA,CSwOe,ArBtOE,Ae4ZW,IMtLT,CAAC,ArBtOE,CAAC,EqBsOR,ATxOf,CSwOwB,ATxOtB,CZEe,CAAW,Ce4ZJ,CAAiB,CH9ZzC,CSwOe,CNsLS,CMtLQ,ATxO9B,AG8Ze,Ef5ZA,CAAoB,CqBsOD,CAAC,GrBtOK,CYFxC,GZEe,CAAJ,CYFX,CSwO8B,ArBtOiB,AYFzC,CSwOwC,ETxO9C,EAAW,ESwOE,CAAT,CAHuC,CAI7C;Aa0FC,AbzFD,ArBvOQ,AYFJ,AG6Z2C,EmBzF/C,MtBpUQ,KZEO,AYFF,GZEL,MYFA,IAAkB,cAAc,CAAC,GAAD,EAAM,KAAK,IAAX,EAAiB,KAAK,EAAtB,CAApC,EACJ;AsBoUA,AlClUO,AYFD,AG0Zc,CAApBpB,EAKA,Ef/Za,MAEA,EYFA,UAAU,CAAC,IAAX,CAAgB,2CAAhB,CAAP;ASyOA,ArBtOE,AYHiE,AGiazE,UMxLU,ArBtOE,CAAC,KqBsOG,CrBtOJ,EqBsOO,ErBtOI,EqBsOA,CAAC,ErBtOI,CAAC,IAAN,CAAW,EqBsOf,CAAgB,CrBtOZ,GAAkB,EqBsOnC,EAAqC,CrBtOG,IAAL,CAAU,IAA3C,EAAiD;AqBuOjDD,ArBtOE,Ae8ZV,YMxLY,ArBtOE,CAAC,GqBsOC,CrBtON,EqBsOS,ArBtOA,IqBsOI,CAAC,UAAL,CAAgB,MAAhB,CAAXA;Aa2FD,Ab3FCA,ArBtOa,AYHjB,AGkaJ,SmB9FgB,ClCjUK,CYHV,CSyOiCuB,ErBtOnB,GqBsOjBvB,ArBtOoB,CkCiUrB,CAAmB,ClCjUK,CAAC,AYHX,CAAC,EsBoUf,EAA0B,AlCjUL,CAAU,CAAV,EAAa,CAAb,CAAP,CYHV,CsBoUJ,AtBpU2B,EsBoUS,CtBpUhC,EAA4B,KAAK,IAAjC,EAAuC,KAAK,EAA5C,EAAgD,KAAK,KAArD,CAAP;AsBqUF,AlClUyC,AYF3C,GAJA,GsBwUM,QAAJ,EAAY;AAAE,Ab3FR,ANyLR,ImB9FgB,KnB8FP,GmB9Fe,Ab3FZ,Ca2Fa,Gb3FT,CAAC,Ca2Fa,CAAC,EAAN,CAAS,EnB8FlC,CMzLY,ANyLa,GAAzB,CMzL6B,CNyLC,ImB9FL,Ab3Fb,ANyLZ,CmB9F+C,CnB8FX,EMzLE,Ca2Fa,Ab3FZuB,ANyLvC,EAAyC,GMzLC,ENyL1C,CMzL6C,CNyLG,GMzLC,ANyLjD,CMzLkD,CNyLG,IAArD,EAA2D,UmB9FZ,CAAiB,Gb3FnB,Ea2FwB,Ab3F/B,Ca2FgC,Cb3FK,Ea2F5B,CAAtB,CAAD,CAAR,Ab3FsB,IAA8C,MAAM,CAAC,IAA/E,IACAA,KAAG,CAAC,MAAJA,GAAa,MAAM,CAAC,GADxB,EAER;AayF4E,AbzFlE,ArBxOA,AYDV,AGiaE,EHjaF,IGiaM,EfhaI,EqBwOA,ANwLA,CAAC,CfhaG,CAAC,AYDf,CAAA,ESyOgB,CrBxON,CAAU,IAAV,CYDV,CAAE,AGiaA,EAAsB,IHjaxB,GAAE,SAAA,MAAA,GAAS;ASyOO,ArBvOR,AYDN,AGgasB,Qf/ZhB,GYDC,AGgasB,Gf/ZjB,CYDD,EZCI,IAAT,CYDC,CAAY,CAAC,AGgasB,CAAC,IHhalB,EGgaI,CAAqB,CHha/B,EAAY,AGgaF,EAA0B,GHhanB,AGgaP,CAAP,CHhaS,GAAU,KAAK,IAA3B,EAAiC,KAAK,KAAL,CAAW,IAA5C,CAAZ,CAAP;AsBkUF,AbzFK,ArBvOE,AYDT,AG+Z+D,GHja/D,MsBmUS,IAAP;AACD,AbzFI,KAbO,CAcZ;AACA,ArBzOQ,AYAR,AG8ZE,EH9ZF,KG8ZOvB,Gf9ZK,Ce8ZD,CAAC,CH9ZZ,CZAQ,AYAR,CG8Ze,Cf9ZC,Ie8ZI,GH9ZpB,CAAE,AG8ZsB,GAAG,GH9Z3B,AG8Z8B,CAAN,EH9ZtB,CG8ZgC,CAAV,GAAc,CAAlB,CAAlB,EH9ZA,AG8ZwC,GAAG,GH9Z3C,AG8Z8C,CH9ZvC,AG8ZiC,GH9ZxC,AG8ZkD,CAAC,CH9ZvC,EG8Z0C,IAAI,CAAC,UAAnB,GAAgC,CAAC,IAAI,CAA7E,EAAgF,CAAC,IAAI,GAArF,EAA0F;AmB5F5F,AlClUkB,AYCd,AG8ZAA,Qf/Zc,Ae+ZV,CmB7FC,EtBjUE,CZDW,CAAC,Ae+ZV,EH9ZE,CG8ZC,Cf/ZE,CAAU,Ee+ZR,CAAC,EmB7FrB,AlClUkB,CkCkUM,EtBjUb,AG8ZK,CH9ZW,AG8ZA,CAAX,CmB7FhB,AnB6FIA,EmB7F2B,CtBjUC,GsBiUhC,CtBjUW,CsBiU0B,CtBjUC,KAAK,EsBiU3C,EAA+C,AtBjUT,GAAY,KAAK,KAAL,CAAW,IAAlD,EAAwD,GAAG,CAAC,KAAJ,CAAU,KAAK,IAAf,EAAqB,KAAK,EAA1B,CAAxD,CAAP;AsBkUFA,AlCnUgC,AYElC,GAFA,GsBmUM,MAAM,GAAG,IAAI,CAAC,UAAlBA;AAAAA,AbzFE,ArBzOG,Ae+ZH,MmB7F4B,EbzFxB,ANsLA,CAAC,EmB7F4B,CbzFzB,EayF4B,AnB6F1B,CAAC,CMtLC,EayF4B,CAAC,CbzFzB,CAAC,ANsLjB,EAAmB,CMtLf,IayFNA,AbzF0B,MAAM,IAAI,IAAI,CAAC,UAAL,CAAgB,MAAhB,GAAyB,CAAvD,IAA4D,IAAI,CAAC,SAAL,CAAe,QAAf,IAA2B,CAAvF,IACA,MAAM,CAAC,GAAP,GAAa,IAAI,CAAC,SAAL,CAAe,qBAAf,GAAuC,MADxD,EAEJ;AauFEA,AbvFI,ArB1OD,AYEL,AG6ZMA,EH7ZN,IsB+TwD,AbvFlD,GAAG,CNqLC,CmB9FmD,CbvFjD,CTxOZ,CsB+TgE,AtB/ThE,CG6Ze,CMrLC,CAAC,CauFmD,AnB8FlD,CmB9FmD,GbvFzD,CAAW,ATxOvB,CsB+TgE,AtB/T9D,EsB+TAA,AbvFU,CAAe,ATxO3B,GAAE,GG6Z+B,CMrLrB,ANqLsB,CMrLC,ENqLF,EMrL3B,ATxOJ,AG6ZqC,GH7ZrC,CAAI,CG6Z2B,EAAa,GAAG,CH7Z/C,EAAa,AG6ZqC,GAAnB,EAAwB,GAAG,GAAG,CAAN,GAAU,KAAK,CAAC,UAAhB,GAA6B,CAArD,EAAwD,GAAxD,EAA6D,IAA7D,CAA3BA;AMrLiC,ATvOnCA,KSqOA,CAGJ,ETxOQ,IAAI,GAAG,OAAO,CAAC,SAAR,CAAkB,KAAK,IAAvB,EAA6B,CAA7B,CAAXA;AsB+TF,AbtFF,ArB3OI,AYEAA,AG6ZE,MmB9FA,AlCjUE,CkCiUD,AlCjUE,CYEuC,EAAE,AG6ZxC,Cf/ZN,EkCiUE,AlCjUO,AYEwC,EG6Z/C,EmB9FW,AnB8FF,CmB9FG,EtB/T0C,CAAC,EsB+TvD,IAAqB,CAAC,EtB/TyB,CAAkB,GsB+TrC,CAAC,CtB/TyC,EAAvB,CsB+TzB,CAAY,AtB/TwC,CAAC,CAA5B,CAAjDA,csB+TwB,CAA8B,KAAK,CAAC,IAApC,CAA1B,EAAmE;AAAE,AbrFvE,ArB5Oe,Ae+ZE,If/ZF,IAAI,GkCiU2D,AlCjUxD,GAAG,CAAC,Ae+ZF,CmB9F+C,IlCjUjD,Ae+ZL,Ef/ZF;AkCiUoE,Ab1F/E,ArBvO6B,AYG7B,AG4ZyB,QH5ZrB,CS0OC,GT1OG,CS0OC,AT1OA,MS0OM,CT1OX,GS0Oe,CAAV,AT1OW,EAAE,CAAC,CS0OC,IAAI,CAAC,CT1O7B,EAA8B,KS0ON,IAAiB,CAAhC,IAAqC,IAAI,CAAC,UAAL,CAAgB,MAAM,GAAG,CAAzB,EAA4B,QAA5B,IAAwC,IAAjF,EACT;AAAM,AT3O8B,AG6Z/B,KAHD,GM/KE,GAAG,ANkLE,EH7ZgC,CS2O/B,CNkLG,CAAC,CH7ZoB,GG6ZrB,IAAS,EMlLA,CAAC,IAAD,EAAO,IAAP,ANkLa,CAAC,CMlLD,MAAb,EAAqB,GNkLrB,CAA2B,EMlL3B,CAAlB,ENkLkB,CAAb,EAAgD;AmB9FzD,AbpFkD,ArB7OhD,AYE2C,AG8ZzC,MmB/FA,AlCjUE,CkCiUD,AlCjUE,MkCiUI,AlCjUT,AegaS,CmB/FC,ClCjUC,MkCiUR,CAAe,IAAhB,AnB+FoB,CAAC,GmB/FG,GnB+FjB,CmB/FqB,AnB+FA,CmB/FC,EnB+FtB,EAA0B,EmB/FT,CAAY,AnB+FA,IAAI,GAAG,GmB/FnB,AnB+FsB,CmB/FC,AnB+FP,GAAU,EmB/FE,GAAG,AnB+FA,CmB/F/B,AnB+FgC,EmB/FE,KAAlC,CAA5B,AnB+F4C,EmB/F0B,CnB+FC,CAA/B,CAA7B,CAAP;AmB9FF,AbpFD,ArB9Oc,AeiaZ,IfjaY,IkCkUT,AlClUa,CAAC,IAAL,CAAU,EkCkUvB,EAAY,AlClUC;AkCkUC,AlClUc,AYG5B,MsB+Tc,KtB/TP,GsB+Te,CAAC,AtB/TZ,KsB+TiB,CAAC,EAAN,CAAS,EtB/TzB,CAAgB,GsB+TA,CAAgB,AtB/TZ,CAAC,GsB+Te,AtB/TpC,CsB+TqC,CtB/TX,EsB+TM,EtB/TF,CsB+Ta,AtB/TZ,GAAL,CAAS,EsB+Tc,CAAC,CtB/TX,CAAC,GAAd,EAAmB,CsB+T7B,CtB/T+B,CsB+Ta,AtB/TZ,GAAtB,CsB+TsC,AtB/ThE,CsB+TiE,CtB/TX,EsB+TtC,EAAsD,CtB/TX,KAA3D,CAAP,OsB+TuB,EAAD,CAAR;AAAgF,AbnFhG,AT3OF,AG8ZI,GHlaJ,CGkaI,EMnLE,CNmLC,EMnLE,ENmLE,EMnLE,GNmLG,CMnLd,ANmLe,EMnLA,MNmLN,GAAiB,GAAxB;AMnLe,ArB9Of,AekaD,IMpLgB,GAAG,ErB9OX,CqB8Oc,GrB9OrB,WqB8OmC,CAAC,IAAD,EAAO,GAAP,EAAY,MAAZ,CAApB;AaoFf,AbpFsD,ArB7OxD,AYIF,AG8ZC,EH9ZD,CZFE,QkC+TS,EtB7TX,CAAA,CsB6TI,QtB7TJ,CAAE,KAAF,GAAE,SAAA,KAAA,CAAM,KAAN,EAAa;AsB8TZ,AlC/TD,AYEE,QAAI,EAAE,KAAK,YAAY,WAAnB,KAAmC,KAAK,CAAC,SAAz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,OTtOR,CAAgB,KAAK,CSsOpB,ATtOqB,ESsOjCA,ETtOW,EAA4B,KAAK,EAAjC,EAAqCpB,OAArC,EAA4C,KAAK,SAAjD,CAAP;AsB4TJ,AbrFA,ATtOG,AGyZH,KH7ZS,CG6ZL,EAAE,CmB9FC,AbrFA,CAAC,CTtOC,CGyZC,CmB9FV,EbrFa,CAAC,MAAP,ENmLe,CMnLC,MAAM,CAAC,qBAAP,EAAhB,ENmLD,CMnLkD,GNmLnB,EMnLwB,CAAC,CNmLrB,GMnLyB,GAAG,CAAP,GAAW,CAAX,CNmLT,EMnLwB,KAAK,CAAC,MAAN,GAAe,CAA/B,CAA7D,oBNmLI,CAAJ,EAAuE;AmB7FxE,AbrFA,ArB7OG,AYOE,AGwZqE,Sf/ZhE,GAAP,CYOS,IAAP;AZNJ,AYOG,AGuZ4E,Gf5Z/E;AkCiUF,AbrFAqB,ArB3OE,AYKF,GAdA,CSoPM,IAAI,CaqFD,EbrFI,WaqFb,CAAuB,KAAvB,EAA8B,IAA9B,EAAoC,QAApC,EAA8C,QbrF9CA,EAEA;AaoFED,AbnFF,AN8KEA,MmB3FI,AnB2FA,GAAG,GmB3FG,AnB2FA,EAAE,CmB3FC,AnB2FA,ImB3FI,CAAC,EnB2FR,CAAW,IAAX,CAAgB,EmB3F1BA,EnB2FU,CAAVA;AmB3FAA,AblFF,ATxOA,AGqZEA,EHrZF,IsB0TgC,AnB2FG,GAAjCA,EmB3FmC,EtB1TrC,CsB0TwC,AtB1TxC,IsB0T4C,CAAC,ItB1T7C,CAAE,IsB0TAA,EtB1TF,GAAE,SAAA,MAAA,GAAS;AsB0TTA,AtBzTEA,AGqZF,EAAA,GAAG,CmB5FmD,AnB4FlD,EHrZE,EsByTNA,EtBzTU,CGqZV,CAAW,Cf5ZX,AYOa,SGqZA,Cf5Zb,Ie4ZW,EAAS,Gf5ZpB,Ae4ZW,EAAc,Kf5ZzB,CAAQ,Ee4ZG,Cf5ZX,Ce4ZmC,Cf5ZtB,Ie4ZF,EAAkC;AmB5F7CA,AbjFK,ArB9OH,AYMY,AGqZiC,MmB5Fa,AtBzT9C,CZNPA,Ce2Z4C,CM7KrC,EaiFdA,AlC/TW,Ae2Z2C,Cf3Z1C,EYMU,CZNP,Ae2Z2C,Cf3ZxD,AYMsB,EZNN,CAAC,Ae2Z4B,CM7K1C,CAAqB,AN6KoC,Cf3ZxC,GqB8OjB,ArB9OoB,AYMZ,CZNa,CqB8OM,GAA3B,EAAgC,ArB9OnC,EAAgC,CAAC,CqB8O9B,CrB9OH,CqB8OyC,CrB7O7C;AqB8OA,ArB9OM,AYK+B,AGqZ6B,MM5KlE,ATzOqC,AGqZ6B,Ef1ZxD,CqB8OU,AN4KiD,CHrZ5B,ESyOlB,ATzOoB,AGqZ6B,Cf1ZzD,EAAL,CqB8OiB,ArB9OT,CqB8OU,ATzOoB,AGqZkB,Ef1Z7C,CAAC,CAAD,AYKN,CZLL,CAAJ,CqB8OiB,CAAa,ArB9OX,UqB8OF,CAAwB,GAAxB,EAA6B,IAAI,GAAG,CAAP,GAAW,CAAC,CAAZ,GAAgB,CAA7C,CAAvB;AaiFE,AbjFK,ArB9OoB,AYK2B,AGqZuB,MmB3FvE,AbjFC,ATzO+C,EAAE,ESyOjD,ATzOmD,EsB0T9C,CAAC,AbjFN,ArB9O2B,EYK6B,CSyOxD,CaiFD,AbjFC,ArB9OoB,CkC+TT,GbjFX,CaiFD,CAAiB,SAAjB,IAA8B,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,SAAlD,EAA2D;AAAE,AbjFlD,ArB9OqB,AYKnB,AGqZgE,GAA7E,EHrZEA,CSyOS,KaiFyD,CbjFzD,GAAA,CaiFkD,EbjFlD,CAAA,MAAA;AaiF8D,Ab/EzEA,ArBhPoC,Ae2ZpC,EAAA,EAAE,CAAC,CM3KC,WN2KJ,CAAgB,KM3KK,GAAGqB,CN2KC,CAAC,IM3KK,AN2Kf,CM3KgB,AN2KD,EAAE,CAAC,GM3KVA,AN2KO,CAAO,GM3KIA,IN2KX,CAAe,CM3KG,CAAC,CN2KnB,CAAf,EAAoC,CM3KpDrB,GN2KgB,CAAhB;AHrZE,AGsZJ,QHtZQ,KAAK,KAAL,CAAW,IAAf,EAAmB;AsB0TrB,Ab/EA,ArBhPE,AYKqB,MsB0TnB,Ab/EA,AT3OmB,GZLd,CqBgPD,AT3OmB,CS2OlB,AT3OmB,GZL1B,EYKqB,GS2OnB,AT3OgC,CsB0TlB,CAAC,Eb/EE,CAArB,AT3OyC,EsB0TvB,Ab/EM,Ea+EE,CtB1TU,CAAW,EsB0T7B,EAAc,EtB1TI,EAAb,IsB0TL,CAAlB,EAAyC;AAAE,Ab9E7C,ArBhPE,AYIuD,AI/DzDC,GhB6DE,CgB7DI,OkByX8C,IAAP,AlBzX5B,GAAG,CAApBA;AkByXwD,Ab7ExD,ArB9OE,AgB9DFA,IAAuB,aAAa,GAAG,CAAvCA;AK6SI,ArB9OF,AYCE,AIhEJA,IAA0C,IK6SlC,AT7OA,KAAK,KIhE2C,GAAG,CJgEvD,AIhEJA,EJgEsB,AI9DtB,CK2SyB,KAAK,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,SAAf,MAA8B,IAAI,GAAG,CAAP,GAAW,CAAC,MAAZ,GAAqB,MAAM,IAAI,IAAI,CAAC,SAAL,CAAe,MAA5E,CAAL,CAArB,EAAgH;Aa8ElHD,Ab7EIA,AT9OkB,AI7DxB,MkBwXM,AtB3TkB,IS8Od,AT9OkB,CAAC,GS8Of,Ga6EG,Ab7EA,Ga6EG,AtB3TI,GAAiB,CsB2TjB,CAAC,Eb7EE,AT9OH,CS8OI,Ga6ER,CAAY,Kb7EK,CAAC,Ia6ElB,Ab7EiB,Ca6EM,Cb7EC,Ga6EG,CAAC,Eb7EX,EAAe,Ca6ET,EAAvB,EAAqC,Cb7EpB,CAAV,Ea6EkC,Ab7EA,Ca6EC,Gb7EnC,CAArBA,Ca6EmD,Ab9E2D,CAEpH,Ia4EwE,CAApD,CAAlBA;Ab3EF,AThP6C,AI5D7C;AkBwXE,Ab3EF,AL5SA,MkBuXM,SlC5TJ,EkC4Te,GlC5Tf,EkC6TK,IAAI,GAAG,AlC7TZ,CkC6Ta,ClC7Tb,CAAG,GkC6Te,ElC7TlB,CkC6TqB,ClC7TX,KkC6TiB,CAAC,cAAP,CAAsB,MAAM,CAAC,UAA7B,CAAT,EAAmD,YAAnD,CAAgE,KAAK,CAAC,IAAtE,CADG,CAAX,IAEA,KAAK,CAAC,SAAN,CAAgB,IAAI,CAAC,CAAD,CAAJ,IAAW,KAAK,CAAC,IAAjC,EAAuC,QAF3C,EAEqD;AACnD,AlC9TA,AYAA,AI3DJ,QkByXQ,ClC9TG,EYAA,IAAP,CsB8TA,ClC9Te,CkC8TD,IlC9TP,IACJ,KAAK,IAAL,IAAa,KAAK,CAAC,IAAnB,IAA2B,WAAW,CAAC,KAAK,KAAN,EAAa,KAAK,CAAC,KAAnB,CADzC;AkC+TEA,Ab9EA,ArB/OJ,AYDF,AI3DA,GhB8DE,AYRF,OsBmUU,Ab9EAqB,Ga8EG,GAAG,Ab9EC,CAAC,Ga8EE,CAAC,Cb9EXA,Ea8EM,Eb9EW,Ca8EA,KAAK,Ab9EtBA,Ca8EuB,Gb9EI,Ka8E/BrB,Ab9EoC,IAAL,CAAU,IAAI,CAAC,SAAL,CAAe,MAAM,GAAG,CAAxB,CAAV,CAA3BqB,IAAoE,MAAM,GAAG,IAAI,CAAC,SAAL,CAAe,MAAhG,EAAwG;Aa8ExGrB,Ab7EEA,ArB7ON,AgB9DF,UkBwX2C,Eb7E/B,Ea6EmC,GAAG,Kb7E5B,GAAG,UAAU,CAAC,Qa6EuB,Cb7Ed,CAAC,Ga6ExCA,Cb7EuC,EAAO,MAAM,GAAG,CAAhB,EAAmB,MAAM,GAAG,CAA5B,CAAV,EAA0C,CAAC,CAA3C,CAA3BA;AT/ON,AI3DF,EJ2DE,WAAA,CAAO,QAAP,GAAO,SAAA,QAAA,CAAS,MAAT,EAAiB,IAAjB,EAAuB;AsB6T1B,Ab7EE,AT/OJ,AI3DJ,QJ2DQ,GsB4TGA,Cb7EC,Ga6EG,AtB5TA,CsB4TC,GAAG,AtB5TA,CAAC,ES+OE,Ca6EC,Ab7EA,Ca6EC,AtB5ThB,ES+OI,ET/OgB,EsB4TT,Ab7EW,Ga6EG,CAA3B,Ab7E4B,CAAC,Ca6EC,AtB5T5B,CsB4T6B,Cb7E7B,EAAgC,AT/OA,CsB4TC,CAAnC,EAAsC,CAAC,EAAvC,AtB5TyC,EsB6T/C,EtB7TmD,CAAC,EAAZ,IAAkB,QAAtD,EACJ;AsB4TQ,Ab7EEA,AT/OJ,AI3DN,QkBuXQ,IAAI,AtB5TA,ES+OE,Ca6EC,AlC3Tb,CYDc,OS+OO,CrB9OrB,EqB8OwB,AT/Od,CAAe,MZCzB,GqB8OkC,CAAC,ErB9OnC,GkC2TsB,AlC3Tb,IkC2TI,Ab7E+B,Ca6EjB,Ab7EkB,Ia6Ed,Ab7Ea,Ca6EZ,CAAD,Ab7EoB,Ca6ExB,CAAQ,Ib7ES,Ea6EjB,Ab7EgC,Ca6EjB,IAAf,Cb7EsC,AT/OvD,CsB4TsC,AtB5T5C,ES+OgE,CAAxB,Ca6EjB,Ab7EO,Ca6ErB,CAAP,Ab7EkE,CAAC,CAAvC,CAA1BA;Aa6E8C,AlC1TpDA,AYFgE,AI1DpE,MhB4DQ,GAAG,GAAG;AqB8OJ,ArB9OK,AgB3Df,IhB2De,IAAI,EAAE,IqB8OP,CrB9OY,IAAL,CAAU,GqB8OR,CAAC,GAAV,IAAiB,IAAI,CAAC,GAA1B,EACV;Aa4EM,Ab5EM,ArB/OE,AYDV,AIzDJ,GhB0DIA,GkC2TE,IAAI,CtB5TC,EsB4TE,EtB5TE,ISgPI,OThPR,CSgPgB,AThPA,CSgPC,GThPG,CAAC,IAArB,CSgPgB,CThPW,CSgPC,Ca4EjB,EtB5ToB,CAAC,CsB4T9B,CAAc,AtB5ThB,EAAoC,CSgPC,CAAC,Ea4EhB,CAAC,Cb5EK,Ga4EZ,Ab5E6B,Ca4EjB,IAAZ,CAAd,CAAP,Gb5E4D,CAAC,IAAxC,AThP0B,CSgPzC,OThPmC,CAAe,MAAf,EAAuB,IAAI,CAAC,KAA5B,CAApC,EAAwE,CAAC,CAAC,IAAI,CAAC,SAA/E,CAAP;AsB6TEA,Ab7EkE,AT/OxE,AIzDA,GJqDE,OsBgUQ,EAAE,GAAG,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc,IAAI,uCAAJ,CAAsB,IAAI,CAAC,GAAL,GAAW,CAAjC,EAAoC,GAApC,EAAyC,IAAI,CAAC,GAA9C,EAAmD,GAAnD,EAAwD,IAAI,uBAAJ,CAAU,IAAV,EAAgB,CAAhB,EAAmB,CAAnB,CAAxD,EAA+E,IAAI,CAAC,MAApF,EAA4F,IAA5F,CAAd,CAATA;AACAA,Ab7EG,ArB/OL,AgBzDJ,OhByDSA,GkC4TC,ClC5TG,CAAT,IkC4TY,AlC5TE,GkC4TC,ElC5TI,CkC4TD,GAAG,ClC5TrB,EAA0B,CkC4TD,IAAI,CAAC,MAA5BA;Ab5EC,ArB/OD,AgBzDN,IhByDM,GAAG,CAAC,KAAJ,GAAY,KAAK,KAAjB;AkC4TA,AlC3TA,AgBzDN,CJhBwB,CAAS,IAAT,IsBoYd,mCAAQ,EAAE,CAAC,GAAX,EAAgB,MAAhB,CAAJ,EAA2B;AAAE,Ab5E7B,ArB9OD,QkC0T8B,EAAE,CAAC,Eb5EzB,Ea4EsB,CAAQ,Cb5ErC,Ka4E6B;AAAe,Ab3E7C,ILxSQ,CK0RT,MAcO,ILxSa,GAAA,aAAA,UAAA,SAAA,EAAA;AKySlBA,ArB/OF,AYFJ,AIvDE,IJuDE,CAAC,IZEM,CqB+OD,CTjPV,AIvDE,ChByDE,AYFQ,ESiPE,GAAG,ITjPjB,CIvDE,CKwSIA,ATjPiB,AIvDT,KAAZ,EAAmB,IJuDrB,GAEA;AsB0TM,Ab3EAA,ArB9OJ,AYAF,AIzDIM,GhB2DF,CgB3DEA,EkBkXE,Ib3EmB,EAAE,CLvSvBA,CkBkXU,AlBlXVA,CkBkXW,Ab3Ee,Ea2Eb,CAAC,AlBlXdA,CAAK,EKuSHN,ELvSFM,EAAM,KAAK,CAAC,CkBkXD,EAAD,AlBlXVA,CkBkXE,ClBnXe,CAErB;AkBkXK,Ab5ECN,AT7ON,AIxDA,UKqSsC,QAAQ,GAAG,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe,CAAC,CAA3DA;ALpSN;AkBiXI,Ab5EE,ArB5OJ,IAAA,AYDW,CZCJ,KqB4OC,Ca4EC,ElCxTT,CqB4OY,Ca4EV,ClCxTK,CqB4OQ,CAAP,GT7OoB,CS6OR,CAAC,CT7OO,CZCrB,IqB4OH,EAAyB,ErB5OtB,CAAS,GYDY,GZCrB,EAAiB,IAAjB,CYDqB,CZCE,GYDF,EAAA;AsB0T3B,Ab7E8B,ArB3O7B,AYIF,AI7DE,MhByDI,CAAC,CqB2OwB,CLpSxB,CKoS0B,CrB3O/B,AYIF,EZJW,AgBzDT,GAAY,IAAI,CAAC,GAAL,EAAZ,EJ6DF,CAAY,IAAZ,EAAkB,EAAlB,EAAsB,OAAtB,EAA+B,KAA/B,EAAsC,KAAtC,EAA6C,MAA7C,EAAqD,SAArD,EAAgE;ASuO3B,ArB3OxB,AYKXM,AI7DA,IJ6DAA,ISsOmC,ATtOnCA,CAAAA,AI7DK,ChBwDY,GYKjBA,CZLqB,AYKhB,ESsOsC,ETtO3CA,CSsO8C,CAAC,ATvOe,CSuO3B,ATrOvC,AI9DI,GhBwDiB,AgBxDG,ChBwDY,IgBxDP,CAAC,SAA1B,CANiB,CAOrB,iBhBuDqB,CAAN;AkC0TbN,Ab/EoD,ArB3OgB,AYOtE,MsBmTM,Cb/EA,MACK,Ca8EG,GAAG,Ab9EF,IAAI,IAAI,CAAR,IAAa,MAAM,IAAI,IAAI,Ca8Ef,Ab9EgB,Qa8E1B,CAAmB,Ab9EE,CAAe,Ga8EpC,EAAyB,CAAzB,Ab9EN,Ca8ETA,Cb9E2D;AAAE,ALlS3D,QKkS2D,CLlStD,GKkS0D,YLlS/D,GAAuB,CAAvB,CARiB,CASrB;AkBgXEA,Ab/EqE,ArB3OnEA,AYOA,AI5DJ,MkB+WM,AlC1TE,EqB2O+D,CTpO9D,CZPG,CkC0TD,ElC1TI,AYOX,CsBmTU,Eb/EiE,ATpO/D,GSoOkE,ArB3O7D,CqB2OkD,ArB3OjD,AYOlB,CAJ8D,CsBuT5C,AtBlTtB,GZRe,CkC0TW,AlC1TE,IAAI,CAAC,GkC0TC,CAAC,AlC1TpB,CAAXA,IkC0TsB,CAAe,UAAf,CAA0B,QAAQ,CAAC,GAAnC,CAAxBA;AAAAA,Ab/EmF,ATlOrF,MsBiTmE,Cb/ExD,Ka+E8D,Cb9E9D,Ea8EiE,Eb9E7D,Ga8EkE,Cb9E9D,Ga8EkE,Ab9E/D,CAAX,EAAc,mCa8EuE,KAAX,CAAnFA;Ab9EyB,ArB3OvB,AgBrDA,MhBqDI,CAAC,CqB2OkB,CLhSlB,EhBqDL,CqB2O2B,CrB3OlB,OgBrDT,GAAmB,KAAK,CAAC,WAAzB,CAXiB,CAYrB;AkB8WE,Ab/EiC,ArB3OpB,AYSX,AI5DJ,MkB6WM,Cb/EK,ETlOF,CZTY,CYSjB,CsBiTQ,Cb9ED,CrB5Oc,AYSX,EsBiTE,AtBjTZ,CAP8D,CAQlE,EsBgTM,IAAkB,AlC1TH,CAAc,KkC0TL,IAAI,IAAI,CAAC,KAArC,EAA4C,MlC1Te,IAAI,CAAC,IAA/B,GAAmC,iBAAjD,CAAN;AkC2TX,Ab/ES,ArB5O2E,AYWxF,QsBgTQ,Ab/EK,EAAE,Ma+EX,EAAY;AAAE,Ab/EE,AL9RhB,MkB6Wc,GlB7WT,KkB6WiB,CAAC,ClB7WvB,GAAe,CkB6Wa,AlB7W5B,CkB6W6B,AlB3XZ,CAerB,CkB4W2B,CAAS,IAAT,CAAc,KAAd,EAAqB,MAArB,EAA6B,cAA7B,EAAD,CAAR;AAAuD,AlC1TrE,AYWA,SZXO,AYWF,IZXM,CAAC,EYWZ,GAAe,CZXR,CAAY,IAAI,CAAC,AYWxB,CAV8D,CAWlE,GZZW,CAAP;AqB4OE,ArB3OJ,AYYF,AI9DI,ChB6CF,EAOA,MgBpDO,IK6RI,AL7RT,GAAY,KK6RK,CAAC,AL7RA,CAAC,MAAP,CAAc,EK6RE,CAAC,CL7RjB,CAAZ,OK6RsC,CAAC,IAAD,EAAO,IAAP,EAAa,EAAb,CAAV,EAA4B,QAA5B,CAAX,EAAkD,QAAQ,GAAG,CAA7D,CAAf;Aa+EF,Ab9EC,ArBzOH,AgBpDF,WkB2WW,IAAP;AACD,Ab9EA,AThOC,GSmMyC,CA+B7C,KTlOS,KAAL,GAAa,KAAb,CAb8D,CAclE;AACA;AsB8SE,AlCzTA,IAAA,CAAO,CkCyTH,MlCzTJ,GAAO,EkCyTQ,IAAI,GlCzTZ,EkCyTiB,CAAC,IlCzTlB,CAAQ,CAAR,EAAW,CAAX,EkCyTH,AlCzTiB,IkCyTmB,WAAW,CAAC,MAAD,EAAS,KAAT,CAAnD,EAAoE;AAClEA,Ab9EF,ArB3OE,AYWA,MSgOE,ArB3OE,CqB2OD,ArB3OE,CkCyTD,CtB9SC,CsB8SC,Cb9EC,ArB3OE,CqB2OD,ArB3OR,CkCyTS,ClCzTC,AYWV,GSgOG,AThOU,CSgOC,Ca8EdA,Eb9EG,CAAe,AThOlB,CAhB8D,CAiBlE,KS+NO,CAAuB,GAAvB,EAA4B,MAA5B,CAAmC,aAAxC,EAAuD;Aa8ErDA,Ab7EA,ArB5OY,AYahB,QsB4SqBgG,Ab7Eb,GrB5Oe,GkCyTE,Ab7EX,CrB5OE,EkCyTY,EAAxBhG,Ab7Ee,IAAI,GAAG,CAAP,IAAY,MAAM,IAAI,QAAQ,CAAC,IAAD,CAAnC,CAAV,EAAsD;AACpDA,ArB7OqB,AYc3B,US+NU,MAAM,GAAG,IAAI,CAAC,UAAL,CAAgB,MAAM,GAAG,CAAzB,CAAbA;Aa6EF,aAAS;AACPgG,Ab7EA,ArB7OF,AYcA,MsB4SEA,AlC1TE,CAAC,CAAC,CYcD,CS+NC,Ea6EA,CAAC,ClC1TH,CYcJ,CS+NY,Ca6EVA,Ab7EW,Ca6ED,AlC1TI,AYcF,CZdG,CkC0TfA,AlC1TgB,IYclB,CS+NM,CrB7ON,EAAwB,CqB6OC,CAAvB,EAAwB;AAAE,ArB7OF,AYe1B,SAAK,EZf4B,IqB6OE,CrB7OT,EYe1B,GAAiB,CAAC,CS8NyB,AT9NxB,CS8NyB,MAAM,CAAC,CT9NnD,oBS8N4C,EAAD,EAAiC,KAAjC,CAAf;Aa8E1B,Ab9EgF,ArB7O5C,AYgB1C,UsB2SU,EAAE,CAAC,WAAP,EAAkB;AAAE,Ab7ErB;Aa6E0B,AlC1T3B,OAAKhG,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,MAAtB,EAA8B,CAAC,EAA/B,EACJ;AqB6OI,ArB7OE,QqB6OE,ArB7OE,CAAC,CAAC,CAAC,CAAD,CAAD,CqB6OG,ArB7OE,EAAL,CqB6OM,ArB7OE,CAAC,CAAC,CAAD,CAAT,CAAL,EAAkB,CqB6OC,CAAC,IAAD,CAArB,EAA6B;Aa6E3B,Ab5EAA,ArB9OoB,MkC0TpB,EAAE,Eb5EE,Ca4EC,EAAE,AlC1ToB,CkC0TnB,Cb5EC,GAAG,ArB9OQ,IqB8OJ,Ca4EhB,Ab5EiB,UAAL,CAAgB,MAAhB,CAAZA;Aa6ED,AlC3T4B;AqB+O3B,ArB/OgC,AYgBtC,EAAA,QS+NU,KAAK,CAAC,GT/NhB,CAAA,IS+NU,IAAkB,CAAtB,AT/NN,CAAE,CS+N2B,IT/N7B,GAAE,SAAA,KAAA,CAAM,GAAN,EAAW;AsB4ST,Ab7E2B,AT9N3B,QsB2SI,AtB3SA,EsB2SE,CAAC,EtB3SE,ES8NyB,Ma6E9B,CAAc,AtB3Sd,CS8NsC,Ca6EtB,Ab7EuB,Ca6EtB,EtB3SE,ES8NyB,CAAC,Ka6E7C,EAA6B,EAAE,CAAC,CtB3SC,CAAC,GAAD,EAAM,GsB2SvC,Cb7EuC,Ca6EK,AtB3SA,CS8NN,EAAgC,CT9NrC,CsB2SgB,CAAC,AtB3SA,CS8NZ,CAAf,GT9NgC,EsB2SvD,CAAJ,EAAgE,EtB3S3B,CAAd,IACA,cAAc,CAAC,GAAD,EAAM,KAAK,KAAX,EAAkB,KAAK,EAAvB,CADjC,CAAJ,EAEJ;AsB0SM,Ab9E6E,ArB9O/E,AYkBE,SZlBK,CkC4TD,GlC5TN,AYkBS,KsB0SP,EAAc,GtB1SG,CAAC,IAAX,CAAgB,+CAAhB,CAAP;AsB2SEA,Ab9EH,ArB9OH,AYiB2E,CZvB3E,EAQA,SkC0TUiG,KAAG,GAAG,2BAAS,KAAnBjG;AlCzTN;AkC0TM,Ab9EJ,ArB3OF,AYeEA,IIhGoB,CAoBxB,GJ4EQ,GS4NG,AT5NA,EsB0SEA,CtB1SC,GsB0SG9B,AtB1SA,CAAC,CS4NC,Ca8ED,Ab9EE,Ga8EC8H,AtB1SP,CS4NU,AT5NA,CS4NC,Ia8EA,AtB1SI,CsB0SH,MAALA,AtB1SP,EAAwB,CsB0SH,CAA3B,EAA8B9H,CtB1SK,EsB0SJ,Cb9EnB,EAAD,AT5NL,CsB0S6B,AtB1SvC8B,CsB0SI,Ab9E0C,Ea8EJ9B,Eb9EQ,Ca8EP,EAAvC,Cb9EkD,Ca8ET,Ab9E9B,CAAf;Aa8E+C+H,Ab7EhD,ALxSH,GK8P6C,CA4C7C,Ma2EmDA,KAAG,GAAG,2BAAS,IAAT,CAAcD,MAAI,CAAC9H,GAAD,CAAJ8H,CAAQ,IAARA,CAAaC,KAAbD,CAAd,CAANC;AAAsC,AtBzSrF,AI3EJ,QJ2EQ,GAAG,CAAC,SAAJ,IAAiB,GAAG,CAAC,OAAzB,EACJ;AZhBE,AYgBI,AI3EN,IhB2DE,CAAO,OAAP,CYgBW,EZhBJ,QYgBc,CZhBd,AYgBe,IAAX,CAAgB,EZhBpB,CAAQ,KAAR,EAAe,eYgBX,CAAP;AsBySEjG,Ab3EN,ArB7OE,AYemD,AI1EvD,MKwSM,ArB7OE,CAAC,KkCwTGiC,Ab3EA,ArB7OJ,IkCwTM,AlCxTI,CqB6OD,Ea2EA,Eb3EI,ArB7OE,CAAC,EkCwTF,Ab3EE,Ca2ED,Ab3EN,Ea2EA,CAAS,AlCxTR,CqB6OW,Ga2EZ,AlCxTiB,CkCwTH,AlCxT3B,EqB6O+B,ArB7OA,EkCwTA,Eb3EI,QAAQ,CAAC,IAAD,CAAnC,CAAV,EAAsD,oBa2EzB,CAAsB,IAAI,CAAC,GAAL,GAAW+D,MAAI,CAAC,MAAtC,EAA8C,IAAI,CAAC,GAAL,GAAW,KAAK,CAAC,QAA/D,EACsB,IAAI,CAAC,GAAL,GAAW,CADjC,EACoC,IAAI,CAAC,GAAL,GAAW,KAAK,CAAC,QAAjB,GAA4B,CADhE,EAEsB,IAAI,uBAAJ,CAAUC,KAAV,EAAeD,MAAI,CAAC,MAApB,EAA4B,CAA5B,CAFtB,EAEsD,CAFtD,EAEyD,IAFzD,CAAd,CAAThG;AAGA,Ab7EJA,ArB9OiC,QkC2T7B,Ab7EAwB,GrB9OoC,IAAI,CkC2ThC,Ab7EF,ArB9OmC,CkC2ThCS,Eb7EA,CrB9OoB,CkC2TlB,CAAC,Cb7EC,CAAC,UAAL,CAAgB,Ca6EhBA,EAAD,CAAR,Eb7E+B,GAAG,CAAzB,CAAbjC;Aa8EG,Ab7EHA,ArB/OiD,AYgBjDA,AI1EF,EAAA,MKySM,AT/NA,MS+NM,ET/NE,CS+NCwB,ET/NE,CI1EjB,CAAI,GJ0EkB,CS+ND,CAAC,GT/NL,CAAW,AI1E5B,CAAI,GKySWA,ALzSf,GAAI,CKyS8B,AT/NjB,CS+NFA,AT/NsB,GS+NC,ET/NI,KI1E1B,CJ0EC,CS+N8B,CAACA,AT/NE,GAAG,CAAC,IS+NP,EAAS,CT/NvC,CAAfxB,MS+N8D,CAACwB,QAAD,CAAR,IAAoB,iBAAiB,GAAG,CAAH,GAAO,CAA5C,CAAT,CAAhCA,CACjB;AACA,AL1SI,QAAI,KAAK,eAAL,GAAuB,KAAK,KAAL,CAAW,MAAtC,EAA8C;AkBsX5C,Ab9EWA,ArB9Ob,AYgBA,AIzEE,MK0SIA,ArBjPF,EYgBA,CAAC,EZhBI,AgBzDF,EkBqXE,Cb3EG,CAAC,Ea2EX,AtB5SF,EAAa,ISiOPA,ArBjPe,AgBzDnB,GAAoB,CK0SG,ArBjPzB,CqBiPMA,CrBjPmB,EgBzDE,EK0SIA,QAAM,CAAC,CL1ShB,CAAkB,GAAlB,CAAsB,EK0SbA,GL1SkB,CK0SC,EL1S5B,EK0SSA,AL1SuB,IK0SI,CAACA,AL1SA,OAAL,CK0SW,AL1SE,CK0SD,IL1SZ,CAAmB,KAAK,CK0SxEA,IAA2EA,QAA3EA,EL1SgD,CK0SoC,AL1SpE,CAApB,GKuSFxB;Aa+EC,AlC7T0B,AYgBZ,AIxEb,WhBwDgC,AgBxD3B,ChBwD4B,CYgBb,IZhBY,CAAP,KYgBK,CAAC,EIxE/B,EJwEoB,CAAgB,AIxEb,KAAK,KAAL,CAAW,MAAlC,YJwEoB,CAAP;AsB8ShB,Ab5EC,ArBlPyC,AYgB2B,AIvEnE,QKySG,MAAJ,EAAU;AAAE,aAAO,QAAQ,CAAC,UAAU,CAAC,MAAD,EAAS,CAAT,CAAX,EAAwB,KAAxB,CAAf;Aa8Ed,Ab9E2D,ArBjPzDA,AYgBA,AIvEA,MhBuDI,GkC+TC,ClC/TG,CYgBD,AIvEA,EhBuDI,CkC+Tb,ElBtXc,EhBuDI,CAAC,EYgBA,CAAC,EZhBP,EAAXA,EgBvDA,KJuEO,CAAuB,GAAvB,EAA4B,KAAK,IAAjC,EAAuC,KAAK,EAA5C,EAAgD,QAAhD,CAAP;AsBgTH,Ab9EE,ArBjPC,AYgBJ,AIvEA,EkBwXA,AlCjUI,CYKJ,AIlEE,CAzBsB,CAiCxB,ChBqDQ,CAAC,IAAL,CAAS,UAAE,CAAF,EAAK,CAAL,EAAM;AkCmUnB,AlCnUmB,AgBpDnB,WhBoDwB,CA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NT,ATzNd,EAA6B,CAA7B,CSyN+B,ATzN1CA,AI7Ee,CKsSU,GAAqB,ALtSA,CAAC,QKsSQ,CAAC,IAAD,ALtSvD,CKsSyB,GagF2C,AbhFJ,IAAxC,CagF+B,CbhFe,CagFK,AbhFJ,IAA/C,CAAX,EAAiE,CagFvB,EAA8B,CbhFH,IagF3B,AbhF+B,CagFtFA,AbhFa,CAAf;AACD,ApB/VC,AWqIEA,AI5EA,EfzDF,GAAG,CAAC,EWqI0C,CI5EvC,CJ4EyC,GAAG,EXrInD,GAAgB,EWqI0C,AI5ExD,CJ4EyD,EI5EtC,IAAnB,GfzD0B,AWqIuB,CXrItB,AWqIwC,KAAK,EAAvB,EXrInD,AWqI8E,CAAC,CAA5B,CAAjDA;AsB0SA,AjC9aF,AWqIEA,AI5EA,QkBqXI,AtBzSA,CsBySC,AjC9aA,EeyDE,CfzDT,GWqIa,AI5EX,EkBqXA,CtBzSc,CsBySD,MtBzSQ,CAAC,GAAR,CAAY,KAAK,OAAjB,EAA0B,CAAC,CAA3B,CAAdA;AsBySe,Ab9EnB,ApB/VC,AWoIGA,AI3EJ,GARA,CApCwB,CA8CxB,GJyEiD,CS2NxC,Ia8EiB,AtBzS4B,GAAG,CS2NzD,Ca8EmB,Ab9ED,IAAlB,CT3NgE,CS2NxC,AT3NyC,GAAR,CS2NzD,AT3NqE,ES2NvC,GT3N4C,KAAjB,EAAwB,CAAxB,CAArDA;AsByS2B,Ab7E7B,ALpSF,MKoSM,IAAI,CAAC,KAAL,IAAc,CAAlB,EAAmB;AAAE,ApB9VvB,AWmII,QAAK,GS2NqB,CpB9VlB,AWmIC,CXnIA,AWmIC,ES2NS,KT3Nd,EXnIT,EWmIyB,CXnIA,CWmIE,CAAC,IXnIG,CAAC,EWmIxB,IXnIiB,AWmIe,CXnID,KAAK,CAAC,AWmIE,GAAG,IAAI,CAAC,CXnI9B,CAAzB,CWmIQ,IAAsD,KAAK,GAAG,EAAE,CAAC,GAArE,EAAwE;AsBySxE,Ab9E8B,ApB7VlC,AWkI8E,QsByStE,IjC3aI,CAAC,AWkIwE,GsBySjF,CtBzS0E,CsByS9D,IjC3ahB,CAAuB,WAAvB,GAAqC,YAArC;AiC2akB,AjC1alB,AWiIyF,AIxEvF,EAAA,IkBiXgB,MjC1aN,CAAC,CiC0aa,CAAC,KAAK,AlBjX9B,CkBiX+B,AlBjX3B,CfzDN,CiC0a2B,AjC1aJ,CiC0aa,GjC1apC,CiC0a2B,CAAc,CjC1aX,GeyD5B,CkBiXyB,AlBjXrB,EkBiX0C,ClBjX9C,GAAI,IkBiXqB,AjC1a3B,EiC0a0D,AjCxa1D,MeuDqB,QkBiXM,EAAD,CAAR;AAAyD,Ab7EzEA,ApB1VF,AeuDI,MKmSE,CAAC,GAAG,CLnSC,CAAC,EKmSE,GAAG,ALnSA,IKmSI,CAAC,ELnSV,EKmSE,CLnSa,EKmSE,IAAI,CAAC,ILnSvB,CKmSTA,GLnSwC,CAAtC;AKoSF,ApB1VF,AW8HI,AIvEJ,GAFE,CAhDsB,CAoDxB,IKiSS,ET5NE,IAAI,iBAAJ,CAAsB,IAAI,CAAC,GAA3B,EAAgC,EAAE,CAAC,GAAnC,EAAwC,OAAxC,EAAiD,KAAjD,EAAwD,KAAK,KAA7D,EAAoE,KAAK,MAAzE,EAAiF,KAAK,SAAtF,CAAP;AsBySA,Ab7EM,AT3NV,AIrEA,GJgEA,CSgOU,GAAG,EAAE,Ea6EJ,Eb7EQ,CAAC,Ca6EhB,Eb7EK;Aa8EN,Ab9EsB,GawEvB,CbxEuB,ApBzVZ,KAAK,CoByVa,EAAE,ApB9U/B,IoB8UmC,CAAC,IpB9UpC,EoB8UO,GpB9UP,CAAY,OAAZ,EAAqB,SAArB,EAAgC,OAAhC,EAAyC;AiC6Z1C,Ab/E6C,ApB7U9C,AWoHA,EsB0SA,AtB1SA,ESyN8C,IAAI,EAAE,CAA3C,QTzNT,CAAA,SAAA,CAAE,MAAF,GAAE,SAAA,MAAA,GAAS;AsB2SX,AblFuD,ApB5UnD,AWoHAA,AIvEJ,EAAA,EK+RuD,GpB5U9C,CWoHD,CSwNoD,EAAE,CTxNlD,CIvEZ,Cf7CI,Ae6CJ,CJuEe,EXpHI,Me6CnB,Cf7CI,Ae6CF,Cf/CyC,CAG3C,Ye4CA,GAAE,SAAA,cAAA,CAAe,KAAf,EAAsB;AkBkXxB,AbnFS,ATxNO,AItEZ,GK8RF,GTxNc,GItEP,KJsEe,EAAE,IItEtB,GAAmB,KAAnB,GJsEW;ASyNd,ApB3UG,AWkHuC,AIrEvC,MJqEuC,CXlHlC,Ee6CA,CJqEsC,EAAE,IXlH7C,Ae6CA,CJqEkD,EXlHjC,Ce6CD,CJqEL,OXlHX,CAJuC,CAK3C,Ge4CI;AJqEwD,AIpExD,MJoEwD,EAAE,EAAE,CIpErD,IJoE0D,AIpEjE,EJoEW;AsB4SR,AbjFP,ApB3UI,AWiHY,AIpEhB,GAJA,CAtDwB,CA4DxB,CJkEgB,CXjHP,EiC4ZO,AbjFP,IT1Nc,CXjHnB,CWiHqB,ES0NzB,ApB3UmB,CoB2UD,ET1NY,CsB2SvB,CAAsB,AbjF7B,EAAwB,ApB3UpB,GoB2UJ,AT3Ne,ES2Nc,CaiFtB,EAAgC,KAAhC,EAAuC;AAC5C,AbjFA,ApB3UA,AWgHqC,AIjEvC,MK4RM,AT3NiC,GsB4S9B,CbjFC,CAAC,AT3NiC,EAAE,IS2NxC,CT3N6C,CsB4SjC,EbjFG,CAAnB,CT5Na,CsB6SN,AbjFa,EaiFG,QAAhB,EAA0B;AACnC,AblFwB,AT3NkC,AIhE1D,MJgE0D,EsB6S1D,GAAkB,AblFa,CT3NiC,EsB6S3C,AtB7S6C,CS2N1C,IakFE,AtB7S6C,CsB6S5C,SAA3B;AAAS,AblF0B,AT5NpB,AI9Df,KJ8DIA,GsB8SK,IAAA,GAAA,GAAA,CAAA,IAAA;AAAM,QAAA,EAAA,GAAA,GAAA,CAAA,EAAA;AACXA,AblFFA,AT3NE,MS2NE,CAAC,CakFC,AtB7SA,ES2NE,GAAG,AT3NA,GS2NG,EakFE,AtB7SV,CAAW,CS2NC,CakFC,AblFA,ET3NjB,CS2NS,CT3NU,CsB6SnBA,CblFuB,IAAI,CAAC,MAA9BA;AamFE,AblFF,AT5NuB,AI/DzB,EAAA,EkB6WI,EtB9SqB,GsB8ShB,AblFA,CakFC,AtB9SmB,CAAC,EsB8S1B,AlB7WJ,CkB6Wc,AlB7Wd,EJ+DyB,GAAa,II/DtC,CJ+D2C,AI/DzC,EkB6WE,CAAuB,EtB9SW,CAAW,CsB8S7C,EAA6B,EAA7B,AlB7WJ,CJ+DsC,CsB8SH,CtB9SV,AI/DvB,SkB6WoC,AlB7WpC,IkB6WiC,EAAS,GAAT,EAAiB,AlB7WlD,CAAY,KAAZ,EAAmB;AkB8Wf,AbnFI,AT5N+C,AI9DrD,IK0RM,GAAG,CL1RL,CK0RO,AL1RN,CkB6WC,AbnFD,UamFH,EAAc,UlB7WN,OAAL,CAAa,KAAK,WAAL,IAAoB,KAAK,SAAL,CAAe,KAAf,CAAqB,KAArB,EAAjC,EAA+D,KAA/D,CAAL,EACJ;AkB4WsB,AbnFJ,ALzRZ,GflDJ,CoB2UgB,MAAM,CLzRb,CKyRe,CAAjB,EamFoB,KAAP,KlB5WhB,CAAoB,KAApB;AkB4W4B,AbnFL,ApB1U3B,AW+GE,AI9D4B,IKyRH,IAAI,AT3NzB,ES2N2B,GT3NtB,CS2N0B,CAAC,IAA/B,GT3NL,EAAkB;AS2NwB,AT3NtB,IS2NsB,ET3NtB,GS2N2B,CT3NvB,CS2NyB,AT3NxB,IS2N4B,CAAC,IT3NlC,GAAiB,IAAjB;AsB+SlB,AbpFG,ApBzUPG,AW8G2C,AI7DzC,GKwRF,OaoFQ,CAAC,AlB5WA,IkB4WI,AlB5WX,CkB4WY,IjC7ZdA,CAAI,IAAJA,CAAI,CiC6ZI,EjC7ZRA,EiC6Z6B,CjC7ZzB,GiC6Z6B,CAAC,QjC7ZvB,CiC6ZkB,CAAe,QAAf,EAAyB,KAAzB,CAAzB,EAAwD;AAAE,AbnF/D,ApBzUG,AeiDJ,GAJA,CAhEwB,CAsExB,IfnDW,KAAK,OAAL,CAAa,IAAb,GAAoB,KAAK,SAAzB,GAAqC,KAAK,OAAjD;AiC4ZkE,AjC3ZpE,AW6GE,AI1DJ,CfrDEA,UW+GS,IAAP;AS6NJ,AT5NA,GANA,MSkOS,gBAAT,CAA0B,IAA1B,EAAgC,KAAhC,EAAuC,CAAvC,EAA0C;AakFpC,AbjFJH,MAAI,IaiFI,IAAI,CAAC,AbjFA,CpBzUb,EoByUgB,CaiFR,GbjFY,CaiFC,AbjFA,IpBzUrB,CoByUAA,GaiFI,EAA2B,GjC1Z/B,QAAA,CAAS,GAAT,EAAc,QAAd,EAAwB;AiC2ZlB,AblFNA,ApBxUEA,AW6GF,AI5DF,EJ4DE,AI5DF,IKuR8B,ApBxUtB,EiC0ZA,IblF4B,CpBxUrB,AeiDf,CAAA,CKuRuC,CpBxUrB,EiC0ZA,CblFyB,AT3NzC,CS2N0C,AT3NnC,CsB6SY,ElBzWrB,CKuRuC,ALvRrC,CkByWM,AblFyC,CpBxUrB,CAAC,CW6G3B,GAAO,CX7GyB,KeiDlC,CKuREA,CpBxU0B,CW6GnB,AI5DP,CfjDyC,GAAG,GAAG,CW6GxC,CAAS,AI5DhB,GfjDoD,GW6G7C,EAAiB,IX7GE,AW6GnB,CI5DP,CfjD+D,AW6GjC,AI5DhB,IAAd,EAAoB,EfjDM,EAA+C,IAA/C,CAAxBA;AiC2ZG,AjC1ZH,AW6GA,AI5DA,OkBuWE,CtB3SE,CX7GG,EeiDA,EkByWE,EtB7SE,CX7GG,AeiDF,GJ4DG,CX7GG,AW6GF,IX7GM,AW6GlB,GI5DG,CJ4DiB,AI5DA,CfjDN,CAAU,EeiDA,CAAC,GJ4DzB,CX7Gc,EAAmB,CW6GD,CI5DZ,CAAc,EfjDI,GW6GC,AI5DA,IJ4DI,CAAC,CX7G9B,CW6GkB,CX7GiB,GW6GC,AI5DhB,EfjDoB,EeiDA,IJ4DtD,CX7Gc,AeiD6C,CfjD/D,EW8GI,MI7DsD,CJ6D/C,AI7D8D,IJ6D1D,CAAC,AI7D0C,CAAqB,KAArB,CJ6DtD,CI7DoB,CAAjB,CAAP,CJ6D2B,QADvB,IACmC,OAAO,IAAI,CAAC,KAAZ,IAAqB,QADxD,IACoE,OAAO,IAAI,CAAC,MAAZ,IAAsB,QAD9F,EAEJ;AsB4SQA,AbnFN,ApBvUA,AW8GI,AI7DN,GAFA,CAxEwB,CA4ExB,CKoRM,MamFM,AtB5SA,GSyNG,CamFC,AtB5SA,GsB4SG,AbnFA,KamFK,AbnFtB,CamFuB,CbnFD,ATzNZ,CAAe,CsB4SR,CAAU,OAAV,CAAkB,GAAlB,CAAXA,gCtB5SI,CAAN;AsB4SEA,AbnFkB,ATzNgD,AI1D1E,IKmR0B,IAAI,CAAC,GamFY,KAAK,GAAG,AbnFzB,CAAiB,GamFY,CAAC,CbnF9B,IamFyB,EAA3CA;AACA,AbpFyC,QaoFzC,QjCzZN,EiCyZgB,GAAG,IAAI,CAAC,MAAL,AjCzZnB,CiCyZ+B,QjCzZ/B,MiCyZmB,CAA2B,KAA3B,CjCzZnB,CiCyZqD,AjCzZvC,IAAd,CiCyZ0D,CjCzZtC,EiCyZyC,AjCzZ7D,CiCyZmB,CjCzZK,CiCyZwC,QAA7C,CAAb;AACD,AjCzZH,AW4GA,SX5GO,EW4GA,EX5GI,EW4GA,GX5GJ,CAAU,WAAW,CAAC,CW4GtB,CAAsB,GX5GK,CW4GD,CAAC,IAA3B,CX5GqB,CW4GY,CX5GG,GW4GC,CX5GG,AW4GF,EAAtC,CX5G2C,CW4GD,IX5GM,AW4GF,CAAC,OAA/C,CX5GqB,CW4GmC,CX5GG,EAAE,CW4GD,CAAC,CX5GG,IW4GhE,CX5GqE,CW6G/C,QX7GD,CAArB,EAAiF,KAAK,QW6G1D,CX7G5B,EAAiG,KAAK,AW6GhF,CAAe,MX7GrC,AW6GsB,CX7G7B,CW6GoD,IAAI,CAAC,KAA5B,CADtB,EAC0D,IAAI,CAAC,MAD/D,EACuE,CAAC,CAAC,IAAI,CAAC,SAD9E,CAAP;AsB8SC,AbrFH,ApBpUA,AW6GF,AI5DA,EAAA,Cf/CE,AWqGA,EsBySE,Cb5EE,MAAM,CLnRZ,CAAA,EKmRgB,IAAI,CAAC,ELnRrB,CKmRE,ALnRA,EKmRsB,cLnRxB,GAAE,SAAA,gBAAA,CAAiB,IAAjB,EAAuB;AKmRC,ApBjUxB,Ae+CE,IKkRsB,IAAI,CAAC,ELlRpB,GKkRe,ELlRV,WAAL,CAAiB,IAAI,CAAC,aAAL,CAAmB,KAAK,WAAL,IAAoB,KAAK,SAAL,CAAe,KAAf,CAAqB,KAArB,EAAvC,CAAjB,CAAP;AkBwWA,AbtFkC,ALjRtC,GAFA,CA9EwB,CAkFxB,GkBqWQ,CAAC,UAAL,EAAe;AAAE,AlBpWrB,CJtB8B,CAAS,IAAT,OsB0XF,KAAP;AAAY,AbrF/B,MAAI,UpBjUJ,KAAA,SAAA,EAAA,CAAG,KAAH,EAAU;AoBkUR,ApBjUA,SAAO,EoBiUA,CAAC,EAAR,ApBjUY,OAAL,CAAa,EAAb,CAAgB,KAAK,CAAC,OAAtB,KAAkC,KAAK,SAAL,IAAkB,KAAK,CAAC,SAA1D,IAAuE,KAAK,OAAL,IAAgB,KAAK,CAAC,OAApG;AiCsZA,AbpFD,ApBjUD,AW0GF,AIzDE,EAAA,CK8QA,CTrNE,CAAC,GsB2SG,GtB3SR,CSuNY,ATvNA,IsB2SR,EAAY,ElBpWd,CAAI,MJyDN,EAA6B,MIzD3B,CAAI,GAAJ,GAAI,IJyDN,QIzDuB;AkBoWL,AbnFd,ALhRA,MkBmWc,EbnFV,GLhRG,CAAC,EkBmWc,CAAC,EbnFV,ALhRA,GkBmWe,CAAC,AbnFZ,EamFM,CAAS,AlBnWxB,EKgRR,CLhRuB,CKgRD,QamFC,CAAsB,GlBnWtC,CkBmWgB,EAA4B,ClBnWX,CkBmWjB,AlBnWvB,EkBmWuD,QAAhC,EAA0C,KAA1C,EAAiD,cAAjD,EAAD,CAAR;AAA2E,AbnFjE,ATtN5B,AIzDA,GAFE,GKiR0B,GTtNnB,CSsNuB,CAAC,KpBhU/B,MoBgU0B,CAAiB,ATtN7C,CAAwB,GX1GtB,AW0GF,EAA6B,GSsND,CTtN5B,EAAmC,CX1GjC,CW0GF,EAAuC,KX1GrC,GAAW;AoBgU0C,ApB/TnD,AW0GFA,MAAI,GX1GK,EW0GA,GX1GK,AW0GF,GAAG,CAAC,GX1GP,GAAe,CW0GZ,CAAY,CX1Gf,GAAqB,AW0GlB,CAAZA,IX1GmC,SAA1B,GAAsC,GAAtC,GAA4C,KAAK,OAAjD,GAA2D,GAAlE;AiCmZA,AjClZF,AWyGAA,AIxDF,EAAA,Cf/CE,GWuG+B,IAAI,CsByS1B,EtBzS6B,AIxDxC,CAAA,CkBiWI,AtBzSsC,GAAG,IAA3CA,CIxDF,CAAE,OAAF,GAAE,SAAA,OAAA,CAAQ,IAAR,EAAc,GAAd,EAAmB;AkBkWlB,AbpFC,ApB5TF,AWsGAA,AIvDEM,GkBiVF,ClBjVEA,EJuD+C,ESsN3C,GTtNgD,EIvDpDA,CK6QU,ATtN6C,AIvDvDA,IK6Qc,CTtN8C,CAAC,ESsN3C,CAAC,AL7QnBA,CAAM,CJuDRN,CSsNM,IAAsB,CL7Q1BM,CAAM,IK6QN,AL7QAA,CAAa,CK6QmB,GL7QhCA,EAAc,IAAdA,EAAoB,GAApBA;AkBkWH,AbrFqC,AL5QlC,MK4QkC,GL5Q7B,GK4QmC,CAAC,GL5QzC,EK4QkC,CL5QnB,KAAK,OAAL,GAAe,CAAC,aAA/B;AK4QgD,ATrNlD,AItDE,SJsDK,AItDA,IJsDI,GAAG,CAAP,GItDL,CJsDiB,EItDE,GJsDG,CItDtB,EJsDyB,CAApB,IAAyB,KAAK,CAAC,UAAN,CAAiB,KAAjB,KAA2B,KAAK,CAAC,IAAN,CAAW,KAAX,EAAkB,UAA7E,EAAyF;AsB4S3F,AbtFG,ATrNC,AItDJ,GAJA,CJ0DI,AIlJoB,CA8FxB,IkB+VS,AtB3SA,OXvGP,IiCkZF,CAAqB,GAArB,CjClZE,CiCkZwB,MAA1B,EAAkC,AjClZhC,IiCkZF,EAAwC,AjClZtC,GAAS;AiCmZX,AbtFC,ApB5TG,AWuGA,AIpDJ,EK2QA,ETvNI,EsB2SJ,AjClZQ,CAAC,CWuGD,EsB2SR,EjClZc,CiCkZd,MjClZS,CAAa,GiCkZtB,CAAA,AjClZI,EiCkZsC,AjClZhB;AiCmZ1B,AbpFA,ApB/T4B,AWwGzB,QsB2SH,GAAoB,AjCnZe,GiCmZZ,CjCnZK,KiCmZC,CAAC,CAAD,CAA7B;AAAS,AbnFT,ApBhUuC,QiCmZ9B,KAAA,GAAA,GAAA,CAAA,KAAA;AAAO,AtB1Sd,AIrDF,EAAA,IJqDM,EsB0SU,EtB1SN,CsB0SM,EtB1SH,AIrDb,CkB+VgB,AtB1Sd,AIrDF,EJqDgB,CsB0SA,CAAA,GAAA,ElB/VhB,CAAE,OAAF,GAAE,SAAA,OAAA,CAAQ,IAAR,EAAc;AkBgWZN,AjCnZAA,AWyGAA,AIrDA,MfpDI,EiCmZA,AtB1SA,CIrDC,CfpDG,CiCmZD,CtB1SC,CXzGG,AeoDX,CkB+VU,CtB1SC,CIrDC,GkB+VG,CAAC,AtB1SA,AIrDhB,CJqDiB,IsB0SP,AtB1SC,CAAW,GsB0SG,CAAf,CtB1SC,EsB0SkB,AtB1SA,GsB0SG,CAAC,IAAJ,CAAS,CtB1S3B,CAA6B,KAAK,CAAC,MsB0SjB,CAAwB,GtB1Sb,CsB0SX,AtB1S4B,CsB0S/C,GAAmD,CtB1SrB,CAA7B,CAAXA,EsB0SAA;AACA,AbpFJ,ApBhUgB,AeqDZ,IkB+VA,AjCpZY,GiCoZT,CAAC,CbpFC,EpBhUc,AeqDZ,EfrDc,EeqDrB,GfrD0B,EiCoZ1B,CAAiB,IjCpZI,CiCoZC,AjCpZY,CiCoZX,GAAvB,CbpFJ,CaoFgC,AbpFA,ApBhUP,GiCoZU,CAAC,AbpFpC,EAAsC,CaoFlC,EAAmC,EbpFvC,EAA6C,GAA7C,EAAkD,CaoFT,IAAF,EAAU;AAC3C,AbpFJA,ApBjUa,AW0GX,AIpDJ,GftDIA,AemDJ,CAhGwB,CAqGxB,CKyQM,GAAG,CaoFC,CtB3SC,CSuNC,CaoFN,EAAO,AtB3SE,ESuNE,CAAC,ATvNA,CAAd,EAAiB,MSuNnBA;AaoFa,AbnFbA,ATvNI,AIlDN,MKyQM,IAAI,ATvNA,CAAC,ESuNE,EamFS,AtB1SZ,CSuNM,GTvNG,CsB0SJ,AbnFK,GTvNG,CSuNV,ATvNW,GSuNG,GAAG,ATvNxB,CSuNyB,CTvND,ISuNjB,GAA0B,GAAG,CAAC,GAAzCA;AamFyB,AblFzB,ApBlUE,AW0G4B,MX1GxB,GoBkUC,EpBlUI,IW0G0B,IAAP,CX1GxB,GAAiB,CAArB,CoBkUqB,CAAC,ApBlUA,IoBkUD,EAAO,KAAP,EAAY,YAAQ;AAC7C,ApBnU4B,AW0Ge,IX1Gf,IoBmU5B,ApBnUgC,CAAC,EoBmUd,GAAG,IAAI,ApBnUE,CoBmUD,EpBnUkB,KoBmUvB,ApBnU4B,CoBmUf,QpBnUP,EoBmUN,CAAwB,IAAI,CAAC,GAA7B,EAAkC,GAAG,IAAI,IAAP,GAAc,CAAC,CAAf,GAAmB,CAArD,CAAtB;AakFM,AblFS,ApBnU4C,AeyD3D,EAAA,IkB4VM,EblFS,CakFN,EblFM,CakFH,ClB5VZ,CK0Qe,AL1Qf,EkB4VgB,CAAC,AblFF,CAAA,IAAA,CL1Qf,CAAE,MkB4VU,IAAsB,IAAI,CAAC,ClB5VvC,GkB4VkC,AlB5VhC,CkB4V0C,QlB5V1C,MkB4VgC,CAAyB,IAAzB,CAA5B,IlB5VJ,CAAiB,KAAjB,EAAwB;AkB6VrB,AtB3SC,AIjDF,KkByVA,CtBxSE,GIjDG,CJiDC,GAAG,IAAI,CAAC,AIjDd,CAAe,OAAf,CAAuB,CJiDrB,GIjDF,EAA6B,KAA7B;AK0QA,ApBnUA,AW2GE,AIjDF,Mf1DI,AW2GF,IAAI,CX3GG,Ae0DF,EKyQE,ELzQT,Gf1DI,GAAe,CAAnB,EAAoB;AiCsZpB,AblFEA,ApBpUoB,AW4GrB,AIjDL,GAHA,CfxD0B,Ae/CF,CA4GxB,GkByVQ,AjCtZsB,CAAC,CoBoUrB,CakFN,EAAO,GjCtZe,CoBoUT,EpBpUwB,CoBoUrB,IAAI,ApBpUsB,CoBoUrB,MpBpUC,CoBoUN,CAAa,WAAb,CAAyB,GAAzB,EAA8B,IAA9B,CAAdA;AakFO,AjCtZwC,AW6GlD,AI/CH,akBwVa;AAAA,AbjFP,ALtQN,QkBuVa,CAAA,CbjFH,CaiFU,AbjFT,OAAL,EAAY;AaiFL,AbjFO,ApBpUhB,AW6GF,AI9CF,OkBsVa,EjCrZF,AW6GF,IX7GL,CW6GF;AsBwSsB,AbjFC,ApBnUvB,AW6GF,GX3GE;AiCmZF,AjClZE,GiC0YF;AbzEM,ARvYN,AGkIA,EAAA,OHlIS,CQuYC,GLrQV,CAAA,CHlIA,CAAgB,CQuYC,CAAC,ERvYlB,EQuYU,ARvYY,CQuYC,ALrQvB,CAAE,GHlIF,EAA6B,CQuYvB,EAA0B,ARvYhC,EAAkC,UGkIlC,GAAE,SAAA,oBAAA,CAAqB,IAArB,EAA2B,YAA3B,EAAyC;AkB8UzC,AbzEgC,ARtYhC,AGkIEA,OkB6UGA,CbzE2B,ALpQ1B,CHlIC,CAAC,CqB+cC9B,AbzE0B,CayEzB,EbzE4B,CayEzB,ArB/cA,CqB+cb,ClB7Ue,CkB6UC,CAAC,ArB/cA,CAAT,AGkIU,CKoQ2B,CayEzB,AbzE0B,ERtYxB,CQsYU,ALpQT,GkB6UG,ArB/cA,CqB+cC,ArB/cA,KGkIzB8B,CkB6UF,EAAmC,CAAC,CrB/cd,CqB+ctB,ArB/csC,EqB+cA,GrB/chB,EAAuB,IAAI,CAAC,UAA5B,CAAf,MACJ,GAAG,IAAI,IAAI,CAAC,UAAZ,IAA0B,IAAI,CAAC,UAAL,CAAgB,CAAhB,EAAmB,GAAnB,CADtB,CAAP;AQsYmD,ApBhUnD,AYpED,EAED,GZkEE,CAAO,QAAP,GAAO,SAAA,QAAA,CAAS,MAAT,EAAiB,IAAjB,EAAuB;AoBgU4B,ApB/TxD,AYlEJ,AG8HI,Mf5DI,CAAC,Ce4DD,Gf5DJ,EAAS,Oe4DO,KAAK,KAArB,EACJ;AkBmVG,AjChZY,AYjEf,AG8HM,MAAA,IAAI,Cf7DY,Ee6DT,Gf7Dc,CAAC,Ae6DX,CAAC,If7DH,Ae6DF,CAAU,KAAK,WAAL,KAAqB,SAAS,CAAC,KAAV,GAAkB,SAAS,CAAC,KAAV,CAAgB,KAAhB,EAAlB,GAA6C,SAAS,CAAC,KAAV,CAAgB,WAAhB,CAA4B,SAAS,CAAC,GAAtC,KAA8C,uBAAK,IAArH,CAAV,CAAP;AKmQA,ApBhU2B,AYhEjC,AG6HmJ,MKmQ7I,GAAG,GAAG,OAAO,CAAC,GAAR,CAAY,UAAlB;AaiFJ,AbhFG,SagFI,KAAP;AACD,AjCjZGA,Ae6DA,EkBsVJ,ElBtVI,Ef7DI,Oe6DK,CAAC,Cf7DG,GAAG,IAAI,CAAC,Ee6DrB,CAAsB,IAAtB,Ef7DgB,Ae6DY,If7DM,Ae6DlC,Cf7DAA;AiCoZJ,AbnFIA,ApBjUAA,AYhEG,AG8HH,Mf9DqC,EoBiUjC,CRjYQ,EG8HL,Ef9DqC,CoBiUlC,CLnQV,Cf9D+C,CoBiUlC,ERjYV,CZgEgD,AYhE5B,CZgE6B,IYhEjD,EAA2B,CQiYN,ApBjUuB,CoBiUtB,GpBjUsC,CoBiUvC,ApBjUxBA,EoBiU+B,IAAI,CAAC,GAAZ,EAAiB,CAAjB,CAAxBA;AaoFJ,ArBpdEA,AG8HF,GANA,CAhHwB,CAwHxB,CHhIM,MAAM,GAAG,KAAK,CAAC,MAAnBA;AqBqdF,AbpFI,ApBjUA,AY/DFA,AGgIF,MfjEQ,AY/DF,GQgYGA,IAAI,ApBjUE,AY/DF,GAAG,EQgYE,GAAG,CpBjUb,AY/Dc,CAAC,CQgYC,CAAC,CpBjUG,IY/DZ,CAAe,GZ+DvB,CoBiUJ,EAAiC,CpBjUG,GY/DxB,CQgYZ,ARhYsC,EQgYE,CpBjUG,EY/DA,CAAC,CQgYC,GAAG,ApBjUZ,IAAkB,CoBiUD,CAAC,ARhY1C,EAA4C,IZ+DxD,CY/D6D,CZgEjE,AYhEkE,GQgY9D,EAAmE,GRhYvD,CAAdA;AqBqdF,AbpFMA,ApBjUA,UoBiUI,ApBjUE,IAAI,CoBiUN,GAAA,KAAA,CAAJA,ApBjUM,CAAe,kCAAf,CAAN;AiCsZN,AjCtZ8D,AY/D5D,OAAKA,IAAI,KAAK,GAAG,KAAK,CAAC,KAAvB,GAA+B,EAAE,KAAjC,EAAwC;AqBsd1C,AbrFM,ARhYFA,AG+HJ,EAAA,MH/HQ,EQgYE,ERhYE,CG+HZ,CAAA,CKiQe,ARhYA,CQgYC,IRhYI,CAAC,EG+HrB,CKiQU,ALjQR,EH/Ha,CAAY,CQgYC,CAAtB,EAAuB,ARhYd,CAAiB,KAAjB,CAAXA,CG+HJ,GAAE,SAAA,eAAA,GAAkB;AkBuVpB,AbtF+B,ApBjU3B,AY9DAA,AG+HA,QKgQ2B,AR/XvB,CZ8DG,AeiEF,IKgQ2B,ApBjUrB,AY9DF,GQ+X0B,AR/XvB,EZ8DL,AeiEP,CfjEiB,AeiEF,EKgQyB,AR/XvB,CQ+XwB,AR/XvB,IG+HlB,CfjEyB,AY9Db,AG+HW,CfjEG,AY9DF,GG+HxB,EH/HY,CAAkB,EQ+XK,ApBjUlB,CAAkB,CoBiUR,CR/Xf,CAAZA,GZ8DiB,EAA0B,IAAI,CAAC,OAA/B,CAAV,EAAmD,SAAnD,EAA8D,OAA9D,CAAP;AoBiUyD,ApBhU3D,AY/DEA,AGgIA,CfvEF,EAQA,IoB8TI,CR/XoC,GGgI/B,EKgQA,ELhQP,CHhI8C,CQgYnC,ERhYsC,GQgYjC,CAAC,CRhYqC,CAAC,GAAN,CAAU,EQgYhD,IAAkB,CAAtB,EAAuB,CRhYmB,CAAqB,KAArB,CAAjDA;AQgYgC,ApB9TlC,Ae+DF,GAHA,CA1HwB,CA+HxB,GK6PoC,KAAK,GAAG,SAAS,CAAC,KAAD,EAAQ,CAAR,EAAW,KAAK,CAAC,SAAN,CAAgB,MAA3B,CAAT,CAA4C,cAA5C,EAAR;AasF7B,AbtFiG,ApB7TtG,AYlEE,AGmIJ,OK4PW,CR/XH,CqBqdQ,IbrFhB,ARhYa,GAAG,GqBqdT,CAAoB,CrBrdN,CAAC,KAAd,CqBqdD,EAA8B,CrBrdN,IqBqdxB,ArBrd4B,CAAC,CqBqdQ,SrBrdb,CAAgB,KAAhB,EAAuB,QAAvB,EAAiC,OAAjC,CAA3B,EACJ;AqBqdE,AbtFS,AR/XL,AGmIN,SkBkVS,IrBrdI,KAAP,CqBqdY,KAAT,EAAgB,QAAhB,EAA0B;AACnC,AbvFmB,AR/XD,QqBsdlB,GAAgC,GAAG,KAAK,CAAC,SAAzC;AAAS,AjCpZP,KAAA,CAAO,EiCoZA,KAAA,AjCpZP,GiCoZO,AjCpZA,GiCoZA,CAAA,KAAA,AjCpZA,OAAA,CAAQ,QAAR,EAAkB,aAAlB,EAAsC;AiCoZ/B,AbtFV,AR/XF,AGmIJ,EAAA,MkBkVgB,ArBrdR,GQ+XGA,ER/XE,AGmIb,CAAA,CkBkVgB,AbtFD,CAAC,CR/XC,CqBqdD,ArBrdR,CQ+XW,CAAb,CasFU,CAAA,AbtFM,AR/XA,CQ+XC,AL5PvB,CAAE,EK4PwB,AR/XA,CAAC,EqBqdX,EbtFe,AR/XT,CQ+XU,AR/XA,EGmIhC,EHnIsB,CAAe,AGmInC,CK4PI,EAAkC,CAAC,EAAnC,EAAuC,ApB9TL,CYjEhC,AGmIN,EflEuC,EYjES,CAAC,KGmIjD,CHnIuD,AGmI5C,CHnI6C,GGmIxD,CHnIuD,CGmItC,CHnI6C,GGmI9D,EHnIuD,AGmIhC,EHnI8C,AGmIrE,EAAkC,MHnIqB,CAArD,EAA4E;AqBqdvD,AbrFjBA,ApB9TJA,AYlE8E,MZkE1E,EiCmZiB,IbrFb,EaqFa,CbrFV,ApB9TE,EiCmZQ,CbrFP,ApB9TE,CAAhBA,CiCmZqB,CAAA,EbrFF,CAAC,CAAD,AL7PI,CK6PnBA,CaqFiB,ClBlVK;AfjE1BA,AYlEmF,AGoInFA,MflEmB,EekEf,KflEsB,CekEhB,EflEmB,CAA7BA,AekEa,KAAK,GAAL,CAAS,IAAT,CAAc,MAA3BA;AkBkVA,AbrFI,ARhYL,QqBqdM,IbrFG,CaqFE,EbrFC,CAAC,CaqFE,CAAC,IbrFP,GaqFJ,AbrFiB,GAAG,CaqFG,AbrFF,CaqFG,EbrFpB,KAAyB,GAAG,CaqFG,CAAC,EbrFA,GaqFK,CAAC,AbrFb,GaqFM,AbrFQ,EaqFI,CbrFD,CAAC,IaqFZ,EAAoB,AbrFZ,GAAa,KaqFrB,CAAvC,AbrFkE,CAAC,CaqFC,EbrFR,GAAa,CAAxC,GAA4C,GAAG,CAAC,GAAJ,GAAU,MAAM,CAAC,MAAP,GAAgB,CAA/F,CAAJ,EACR;AaoF0E,AbpFhE,ApB/TN,AYjEH,AGmIG,EHjIJ,KZ+DSA,CekED,GflEK,CAAC,AekEF,CkBiVqE,EjCnZhE,CekED,CK6PC,CaoFyD,ElBjVtE,EK6PM,AL7PY,CflEG,CAAC,UAAtB,EAAkC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAR,KAAmB,aAAa,IAAI,CAAC,CAAC,CAAC,IAAF,CAAO,IAAP,CAAY,SAAjD,CAAlC,EAA+F,CAAC,GAAG,CAAC,CAAC,UAArG,EAA+G;AiCmZ7B,AbpFhE,ApB/T+F,AY9DrH,AGiIM,IfnE+G,MemE3G,CAAC,EfnEmH,EemExH,EAAS;AK6PR,ApBhUyH,AY7DhI,AGgIiB,eAAO,KAAK,eAAL,EAAP;AkBiVb,AbnFC,AR7XL,AG+H8C,QkBiVtC,QAAJ,EAAc;AACZ,AjCpZF,AY5DJ,OZ4DSA,GiCoZC,CjCpZGI,GAAC,GiCoZR,AjCpZW,EiCoZE,MjCpZM,CAAC,SAAtB,EAAiCA,GAAC,IAAI,CAACA,GAAC,CAAC,MAARA,KAAmB,aAAa,IAAI,CAACA,GAAC,CAAC,IAAFA,CAAO,IAAPA,CAAY,SAAjDA,CAAjC,EAA8FA,GAAC,GAAGA,GAAC,CAAC,SAApG,EAA6G;AiCqZzG,AbpFJ,ApBjU+G,AY3DnH,AG8HM,IfnE6G,OoBiUxG,ApBjU+G,CiCqZ9G,ClBlVC,EK8PT,GL9Pc,EkBkVE,CAAC,OAAT,CAAiB,KAAK,CAAC,GlBlVtB,CAA0B,MAAM,CkBkVhB,AlBlViB,IkBkVI,AlBlVX,CAAY,IAAZ,CAA1B,CkBkV4C,CAAC,AlBlVA,IAA7C,CkBkVqC,AlBlV5C,EkBkVM,CAAJ,EACR;AAAU,AbpFP,ApBlUyH,AeoEvH,GKyOoB,CAAvB,CL5OE,KkBqVM,ClBlVC,OkBkVO,CAAC,KAAK,CAAC,EAAN,CAAS,gBAAT,CAA0B,QAA1B,CAAD,CAAR;AAA6C,AbnFtD,AL9PK,SkBgVE,ClBhVE,CAAC,IkBmVX,AlBnVM,EAAS;AkBmVL,AjCvZN,AY3DJ,AG+HiB,SfpEN,AY3DF,CqBkdC,ArBldA,GZ2DK,EeoES,GkBmVN,AjCvZP,CiCuZQ,AjCvZE,AY3DrB,CAAoB,AG+HS,IkBmVL,ArBldxB,CqBkdyB,EAAN,AjCvZR,AY3DgB,CqBkdC,CjCvZG,EeoEP,CAAiB,IAAjB,CH/HY,CZ2DzB,AeoEoC,EfpEL,AeoElB,CkBmVL,AlBnVF,CkBmVyB,ArBldf,EAAgB,GZ2DhC,CAAP,EiCuZ8C,ArBldvB,CqBkdwB,CrBldA,KqBkdT,CAAgB,KAAhB,CAAvB,CAAD,CAAR;AAAwD,AbnFlEH,ApBnUE,AY3DK,AG8H2C,CfxEhD,GoBwUI,ER9XC,KAAA,CQ8XO,ER9XP,CQ8XU,IR9XV,CAAA,KAAA,OQ8XPA;AaoFO,ArBldO,MAAA,CqB6cR,ErB7cQ,GAAA,CqBkdD,IrBldC,CAAA,GAAA;AqBmdND,AbnFR,ARhYmB,AG+HbA,MH/Ha,GQgYV,CLjQC,CH/HS,CqBmdP,ErBndO,CqBmdJ,AlBpVA,GkBoVG,AlBpVA,CH/HC,CAAA,GqBmdXA,AlBpVe,EH/HJ,QQgYnB,CAAkC,ALjQ5BA,IKiQN,EAAwC,KAAxC,EAA+C,GAA/C,EAAoD;AamF5CA,AblFR,AR/XEA,MQ+XF,AR/XM,GQ+XO,GakFY,AblFT,EakFW,ArBjdb,GqBidgB,AblFT,AR/XJ,CQ+XK,IakFa,ArBjdb,CqBidc,ArBjdb,EqBidfA,EblFR,ER/XiB,CAAa,KAAK,GAAG,CAArB,CAAfA;AQ+XK,ApBnUP,AY5DEA,AG8HI,MKiQC,AR/XmC,GZ4DjC,CekEC,CKiQH,ALjQI,CH9HqC,EQ+XzC,CR/X4C,CG8H7C,CKiQC,CAAA,AR/X+C,AG8HpC,CH9HqC,CZ4DvD,CAAqB,EoBmUd,CR/X4C,CAAU,GZ4D7D,EAA8B,AY5DoC,GAAG,CZ4DrE,AY5DmD,CAAjDA,CZ4DkC,EAApC,EAAwC;AiCsZhC,AjCrZR,AY5DEA,AG8HMA,MflER,AY5DM,GZ4De,EY5DV,CZ4Da,AekEZ,CkBmVCA,CrBjdC,GqBidG,AlBnVA,CkBmVC,CjCrZa,CAAC,AekEZ,CkBmVC,CAAb,ArBjdNA,EqBidsB,CAAC,AlBnVA,GkBmVD,AlBnVJ,CflEI,AekEK,CflEa,EiCqZV,CAAC,CjCrZT,CAAxB,CiCqZoC,AlBnVhB,CAAiB,IAAjB,CkBmVsB,AlBnVlCA,CkBmVmC,MAAnC,EAA2C,CAAC,EAA5C,EAAgD;AACxD,AbnFE,ApBnUK,AY5DLA,AG+HM,MKgQF,ApBnUC,AY5DiB,CQ+XjB,CLhQC,CH/HmB,EZ4DpB,CoBmUK,AR/XkB,CQ+XjB,ALhQA,CkBmVb,AjCtZO,EemES,CfnET,CAAA,AY5DLA,AG+HgB,CkBmVQ,AbnFnB,CAAa,EamFS,AlBnVP,CfnEf,GemES,EkBmVmB,CAAC,AlBnVP,CkBmVM,CAAnC,AbnFE,EAA6B,CLhQG,CAAC,KAAN,EAAb,GAA6B,KAAK,CAAC,WAAN,CAAkB,KAAK,GAAL,CAAS,OAAT,CAAiB,EAAjB,CAAlB,CAArC;AkBmVO,AbnFkB,ApBnUnB,AY1DZA,AG8HK,MfpEO,AY1DR,KQ6XkC,CpBnU1B,AY1DF,EqBgdG,CjCtZD,AY1DC,CQ6XkB,EpBnUnB,CiCsZC,AjCtZD,GiCsZC,GjCtZD,EiCsZC,CAAA,KAAA,SrBhdS,KAAtBA;AqBgdoB,AbnFuB,ApBnUE,AY1D7CA,MZ0D+C,AY1DlB,KZ0DuB,GiCsZhC,AjCtZmC,CY1DjB,EqBgdlB,CrBhdqB,CAAzCA,CqBgdoB,CjCtZ0C,CAAC,GiCsZ3C,CAAA,GAAA,GjCtZmC,CAAmB,KAAnB,CAAV;AiCuZrC,AjCtZV,AeoEM,MfpEN,IiCsZU,CjCtZ8B,AeoE7B,EkBkVE,CjCtZ8B,EiCsZ3B,KAAK,AjCtZ6B,CiCsZ5B,AjCtZ6B,GiCsZnC,CAAU,ClBlVpB,CAAsB,GfpEe,CAAkB,AeoEvD,EfpEqC,AeoET,CfpElC,CeoEM,EkBkVU,AlBlVsB,CkBkVC,KAAK,AlBlVA,CkBkVC,AlBlVA,GkBkV7B,ClBlVsB,CkBkVY,AlBlVA,GkBkVG,CAAC,AlBlVhB,EAAkB,CkBkVxC,EAA2C,ElBlVrB,CAAhC,KkBkVU,CAAN;AACD,AbpFPA,ApBnUY,AY1DZ,MQ6XI,ApBnUQ,CY1DPA,IAAI,CQ6XC,AR7XA,CZ0DE,EoBmUC,AR7XA,CZ0DD,IoBmUM,AR7XbA,CQ6Xc,ApBnUP,CAAA,AY1DQ,KZ0DR,IY1DiB,EQ6X7BA,CR7XgC,KAAhC,EAAuC,CAAC,GAAG,MAA3C,EAAmD,CAAC,EAApD,EACF;AQ4XEA,ApBnU6B,AYzD3B,AG8HE,MK8P6B,ApBnUJ,EYzDvB,EG8HE,CAAC,EK8P+B,CpBnUX,EoBmUc,AL9P7B,CK8P8B,ApBnUf,AYzDd,IAAI,CZyDU,CoBmU7BA,ApBnU6B,EeqEpB,CH9He,AG8HA,CH9HC,EZyDI,EeqEzB,CH9He,CAAY,AG8HF,CH9HV,IAAiB,CAAlC,EAAqC;AqBidjC,AbrFNA,AR3XI,AG6H2B,MK8PqB,AR3XhD,KQ2XqD,EaqF9CA,AlBnVyB,CK8PwB,CR3X/C,EqBgdE9B,CrBhdC,EqBgdA,AbrFkD,ER3X9D,CqBgde,CAAb,AbrFgE,CL9PvC,CkBmVTA,AlBnV2B,GkBmV1B,AbrFoD,CAAC,EaqFlD,GlBnVgC,CK8PY,AL9PX,CK8PwB,CaqFnD,CAAC,ClBnVgB,CAAe,GK8PM,CaqFhE,AbrFqF,CL9PtB,CkBmV5BA,EbrFzC8B,CaqF0C,EAApC,EAAwC,ClBnVkB,CAAe,GAA9B,CAAlB;AkBoVjC,AbrFEA,ApBnUA,AYxDI,AG4HgF,MK+PhF,ApBnUA,AYxDA,GQ2XG,GAAG,ApBnUA,AYxDA,EqBgdZ,CrBhde,CZwDC,GiCwZU,CjCxZpB,EiCwZuB,EbrFL,ApBnUA,EoBmUtBA,CAJkD,CayFjB,AbpFnC,CaoFoC9B,AjCxZP,CAAC,EiCwZK,CAAnC,GjCxZE,EAAoC,IYxDd,IAAT,CAAc,KAAK,CAAC,IAAN,CAAW,CAAX,EAAc,IAAd,CAAmB,MAAnB,CAAd,CAAT;AqBgdS,AbnFf,ApBpUI,AYxDE,MAAA,EZwDE,MiCuZO,CrB/cA,CZwDC,IAAI,CiCuZL,CjCvZP,EiCuZO,EjCvZW,CAAC,EiCuZZ,CAAA,IjCvZmB,CiCuZnB,AjCvZoB,KAAR,CAAc,OAAd,EAAuB,MAA9C,EAAoD;AiCuZlC,AjCvZoC,AYvDrD,AG2HC,KH/HF,MAIO,CZuDqD,CeoEnD,CkBmVS,EjCvZ8C,CeoE9D,EkBmVgB,GAAA,IjCvZ0C,CiCuZ1C,AjCvZyD,CiCuZzD,GAAA,qBjCvZ0C,CAAN;AoBqUxD,ApBrUuG,AYtDnG,AG2HD,MKgQC,AR3XA,CQ2XC,IR3XI,IQ2XI,CAAC,IAAT,CAAc,KAAK,CAAC,MAAN,CAAa,WAA3B,CAAD,IAA4C,CAAC,GAAG,CAAC,MAArD,EACF;AakFU,AblFN,AR3XJ,AG2HA,GAhBA,CAlIwB,CAoJxB,MK8PW,GakFG,AblFA,GakFJ,CblFQ,CakFC,KblFR,IAAiB,GAAG,IAAI,UAAxB,GAAqC,OAArC,GAA+C,KAAtD;AamFQ,AbnFmD,ApBrU3D,AYtDC,AG8HL,WfxEW,CiCwZC,EAAE,CAAC,GjCxZG,CAAC,GAAR,CAAY,CAAZ,CiCwZC,CAAcgI,AjCxZA,IAAf,EAAqB,CiCwZD,CAAC,GAApB,CjCxZD,CiCwZ0BC,AjCxZE,KiCwZC,CAAC,CjCxZK,CAAC,CiCwZnC,EAAkC,AjCxZP,CAAY,EAAZ,CAA5B,CAAP,GiCwZQ;AACD,AjCxZR,AewEH,WkB8UU,MAEO;AACLnG,AbnFV,AR5XAA,MAAI,GQ4XG,ER5XE,GAAG,EqB+cE,IAAI,GAAGkG,EbnFE,CAAC,IamFE,AbnFH,CamFI,CbnFG,EamFpBlG,GbnFa,EAAY,ER5Xd,KAArBA,KQ4X2C;AamFjCA,AblFZ,ApBtUE,AYvDAA,MZuDI,AYvDwB,KZuDnB,EYvD0B,EZuDtB,CiCwZmB,ArB/cM,CAAtCA,CqB+ckC,GAAGmG,CjCxZrC,EAAoB,EiCwZoB,CAAC,GAA/BnG;AAAAA,AbjFZ,ApBvUwB,AewExB,EAAA,QfxE8B,GewE9B,CfxEkC,AewElC,EkBgVgD,KAAK,ElBhVrD,CkBgVwDkG,AjCxZ1B,AewE5B,CfxE2C,MiCwZgB,AlBhV7D,CkBgV8D,ElBhV5D,OkBgVUlG,ElBhVV,OfxE4B,AewE5B,CfxEsB,AewEd,GAAR,EAAa,KAAb,EAAoB;AkBgVVA,AbhFZ,ApBxUuE,AYtDrE,AG+HE,OH/HGA,EG+HE,EH/HEiB,EG+HP,CH/HQ,AG+HE,EkB+U2D,CrB9c1D,EqB8c6D,ElB/UvD,CkB+U0DkF,ArB9cxEnG,EAAekB,AG+HR,GkB+UoE,CAAC,AlB/UvD,OH/HG,CG+HjB,EkB+UFlB,ArB9csB,CG+HK,GAAzB,CH/HZ,EAAuCiB,AG+HI,GH/HH,AG+HM,CAAC,EH/HJ,CG+HzC,IAAoD,CH/HtD,EAAmDA,EG+HjD,CH/HkD,EAApD,EACF;AqB8cYjB,AbhFZ,AR9XI,AG+HA,QH/HIkB,GG+HG,IAAP,CkB+UY,GrB9cC,IAAI,GqB8cK,ArB9cF,CAAC,EqB8cI,GrB9cR,CAAUD,CqB8cG,ErB9cF,EqB8cM,CrB9cH,CAAd,GqB8csB,CAAC,ArB9cJ,GAAG,CAAC,EqB8cf,CrB9cW,CAAQA,CqB8cK,ErB9cb,CAApC,EAAgD,EqB8cQ,IAAP,CAAY,KAAK,CAAC,IAAlB,EAAwB,CAAxB,EAA2B,MAAnD,GAA4D,CAA7EjB;AACAA,AbhFZ,ApBzUE,AYrDIkB,AG+HN,GAHA,CAvJwB,CA4JxB,CHjIMA,GZqDG,OiCyZO,AjCzZA,CAAC,AYrDF,GAAG,IqB8cM,ArB9clBA,GqB8cqB,EjCzZlB,CiCyZqB,AjCzZA,IiCyZI,CjCzZzB,EiCyZ4B,AjCzZA,CiCyZC,IjCzZI,CAAC,CiCyZhB,GAAoB,AjCzZV,CAAW,MiCyZM,IAAP,CAAY,AjCzZA,CAAC,EiCyZE,CAAC,EjCzZE,CAAC,CiCyZnB,EAAsB,CAAtB,EAAyB,CjCzZb,EAAgB,GiCyZhD,CjCzZoD,EiCyZE,CAArElB,AjCzZsE,MAAP,GAAgB,CAAhC,EAAmC,EAAE,GAAG,MAAL,GAAc,CAAjD,CAAtB,CAA5B,CAAP;AoB0UEA,ApBzUH,AYrDK,AGiIN,MHjIM,EQ8XE,GR9XG,GAAG,EQ8XE,GAAG,GAAG,CAAC,UAAJ,CAAe,CAAf,CAAfA,KR9XmB,IAAT,CAAc,GAAG,CAAC,IAAJ,CAASiB,GAAT,EAAY,IAAZ,CAAiB,KAAjB,CAAd,CAAR;AqB8cM,AbhFRjB,AR7XE,MAAA,EQ6XgC,KR7XzB,EQ6XgC,CagF7B,EbhFgC,EagF5B,CbhF+B,CAAC,CagF7B,QbhFnBA,EagFY,GAAoB,EAAxB,EAA4B;AAAE,AbhFtCA,ApBvUJ,AYrDK,KAJD,GQgY2D,CpBvUtD,EYrDE,GqB4c+B,AbhF2B,GAAG,CagF1B,CjCvZ9C,CoBuU2E,ApBvUvD,CoBuUwD,CagF1B,KjCvZlD,EAA6B,GiCuZa,AbhFtCA,CpBvUJ,EAAmC,MAAnC,EAA2C,MAA3C,EAAmD;AiCuZW,Ab/E1DA,ApBvUJ,AYrDM,AG+HN,EAAA,If1EA,AYrDM,EQ4XE,CpBvUa,AYrDZ,GZqDe,Ce0ExB,CkB4U8D,AlB5U9D,EkB4UgE,GjCtZjC,CiCsZqC,Ab/EhD,ApBvUY,GoBuUT,AL7PvB,CAAE,EK6PwB,CAAC,Ca+EmC,CjCtZtC,CAAkB,Ce0E1C,Gf1EwB,Ae0EtB,Cf1EF,MoBuUIA,CAPyC,CAOJ,AL7PvC,OAAA,CAAQ,GAAR,EAAa;AkB4U+D,AjCtZvE,AYpDP,AG+HI,Mf3EG,KAAA,Ae2EI,Gf3EJ,Ee2ES,Cf3ET,CAAA,Ee2EI,CAAU,Ef3Ed,Ke2EqB,GAAP,IAAc,QAAd,GAAyB,GAAzB,GAA+B,GAAG,CAAC,GAA7C,CAAP;AK6PA,ApBxUU,AYpDT,AGgIL,GAFA,CK8PI,AL5ZoB,CAkKxB,Cf9Ec,CoBwUP,CAAC,IpBxUM,EoBwUV,CAAW,ApBxUD,GAAA,CAAA,EoBwUV,EAAmB,EpBxUT,CoBwUV,EAAwB,WAAxB;Aa+EQ,Ab9ERA,ApBzU2C,Ae+E/C,Mf/EiD,EoByUzC,GpBzU8C,CiCuZ1C,EAAE,AjCvZ2C,CiCuZ1C,Eb9EE,GAAG,CpBzU4C,CiCuZpD,AjCvZqD,CiCuZ1C,Eb9EE,CAAC,Ca8Ed,EAAiB,EAAjB,Ab9EQ,CpBzUqC,CiCuZxB,AjCvZ2C,CoByU1C,IAAI,ApBzUmB,CoByUlB,ApBzUQ,EiCuZN,CAAC,Ib9ER,CAAa,Ca8Ed,CAAgB,KAAhB,CAArB,Gb9EsB,CAAyB,KAAK,CAAC,MAAN,EAAzB,CAAd,GAAyD,IAAI,CAAC,GAA9EA;Aa+EO,Ab9EPA,AR5XF,AGkIF,QK0PQ,CR5XC,KQ4XK,AR5XA,GQ4XG,CAAC,AR5XT,CAAU,IAAI,IQ4XI,CAAC,QAAV,CAAmB,GAAG,AR5XrB,CQ4XsB,AR5XA,KAAtB,EAA6B,EQ4XX,CAAc,AR5XhC,EAAkC,MQ4XhB,ER5XlB,EQ4X4C,AR5XA,CQ4X1B,GAA8B,ER5XhD,CQ4XmD,CAAC,AR3X9B,IAAI,KQ2XR,GAA8C,GAAG,CAAC,SAAJ,CAAc,CR3XxD,CAAU,MAAM,CAAC,CQ2XxC,CAAD,IACR,AR5X0C,CAAc,KAAd,CQ4XnC,AR5XyB,EAAgC,EQ4XrD,GAAG,CAAC,GR5XiB,EAA2C,IQ4X3E,GR5XgC,CQ4XJ,AR7XlB,EAEsB,IQ2XE,ER3XI,CAAC,CQ2XD,GAAG,AR3XT,CQ2XU,ER3XI,SQ0XnDA,AR5Xe,CQkX0B,CAY7C,AR5XkE,IAF/C,CAAV,CAAP;AqB2cO,AjCxZP,AYhDF,CA5BA,EA8BA,GZ8CM,MAAM,IAAI,IAAV,IAAkB,KAAK,CAAC,MAA5B,EAAoC;AoB4UlC,ApB3UA,AY9CJ,IQyXI,GAAG,CAAC,ApB3UA,MAAM,IAAI,CAAC,IoB2Uf,EpB3UqB,CAAC,UAAP,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC,MAAhC,CAAf,EAAsD;AiCwZlD,Ab5EJ,ApB5UwD,AY7C5D,AG4HE,EAAA,EK6PE,GAAG,Ca4EC,Ab5EA,KpB5U2D,GiCwZnD,Ab5EZ,Ca4Ea,Ab5EA,ApB5U2C,EiCwZzC,CAAC,AlBzUlB,CAAI,IK6PF,KL7PF,CAAI,GkByUW,AlBzUf,EkByUc,CAAR,AlBzUF,YAAY;AkB0UX,AjCzZgE,AY5CvE,AG4HI,SAAKA,IAAI,CAAT,IAAc,KAAK,IAAnB,EAAuB;AkB0UtB,Ab7ED,ARxXJ,AG2H6B,QK6PrB,KL7P4B,KAAP,EK6PT,IAAI,IAApB,EAAwB;AAAE,ApB5U1B,AY3CJ,AG0HyC,MK6PX,GAAG,CAAC,CpB5UvB,OAAO,CAAC,GAAR,CAAY,CoB4UO,ApB5UnB,EAAe,CoB4UyB,GpB5UxC,EAAqB,MAArB,CoB4UmB,ApB5US,MAA5B,EAAoC,MAApC,CAA2C,OAAO,CAAC,GAAR,CAAY,IAAZ,CAA3C,CAAP;AiC0ZA,Ab9E2D,ApB3U5D,AY3CH,WqBocW,IAAP;AACD,AlB3UC,GkB4SF,QlB5SS,IAAP;AkB4UH,Ab/EG,ApB3UFA,Ae+EF,GAHE,CArKsB,CA0KxB,CfjFM,KoB2UK,ApB3UA,GAAG,GoB2UV,OpB3UoB,CAAC,KAAK,CAAC,OAAP,EAAgB,IAAI,GAAG,MAAP,GAAgB,CAAhC,EAAmC,MAAnC,CAAtBA;AoB4UC,ApB3UD,AY5CK,AG6HP,GKyOyB,CAAvB,KpB1TO,AY5CO,KZ4CF,IAAI,GY5CX,CAAsB,GZ4CJ,CAAC,CY5CnB,EAA6B,QAA7B,CZ4CW,CAAqB,AY5CO,KZ4C5B,AY5CX,EZ4CuC,AY5CO,KZ4CF,CAAC,IAAN,AY5CvC,CZ4CkD,CY5CgB,IZ4C3B,CAA5B,CAAhB;AiC2ZF,Ab/EC,ApB3UA,AeiFD,Ef/EA,OiCwZS,mBAAT,CAA6B,QAA7B,EAAuC,ArBvcwB,GAAG,OqBuclE,EAAmD;AACjD,AjCxZF,AY/CEA,MAAI,GqBucJ,GrBvcU,GAAG,IqBucN,EAAP,EAAa,WrBvcmB,CAAC,KAAD,EAAQ,QAAR,CAAhCA;AqBwcE,Ab/EJA,ARxXEA,IQwXE,ERxXE,EqBucE,CAAC,EAAE,ArBvcA,CqBucC,ErBvcE,CQwXC,GAAG,ERxXE,CqBuchB,Cb/EJA,Ca+EqB,CrBvcG,kBAAkB,CAAC,UAAD,EAAa,QAAb,CAAxCA;AqBucqB,Ab/EvBA,AL3PA,EAAA,EK2PwB,Sa+EM,Ab/EG,AL3PjC,CAAA,EK2PoC,IAApCA,Ca+EsC,CAAC,ClB1UvC,CkB0UsC,AlB1UpC,CkB0UqB,alB1UvB,GAAE,SAAA,cAAA,GAAiB;AkB0UuB,Ab/E1CA,ApBzUA,AY9CE,AG6HE,IK0PsC,CpBzUrC,CAAC,AY9CA,CAAC,EG6HE,Ef/ET,CY9CE,EZ8CY,AY9CF,EQuX0C,AL1PlD,Ef/Ec,CoByUuC,CL1PrC,Gf/EN,CoByUdA,ApBzUwB,QAAQ,CAAC,Ce+E7B,If/EU,EAA0B,CAA1B,EAA6B,CAA7B,CAAd;AY9Cc,AG8HV,WH9HiB,AG8HV,IH9HG,AG8HV;AkB0UAA,AbhFG,ApBxUA,AYhDkB,AG+HzB,GAHA,KkB4UQ,CbhFQ,ApBxUA,KiCwZF,EjCxZP,CiCwZU,AjCxZO,EiCwZpBA,GjCxZG,CoBwUA,CAAwB,ApBxUA,GAAxB,CoBwUA,CpBxU6B,CoBwUC,IpBxU9B,CoBwUA,CpBxUoC,CoBwUC,GAArC,EAA0C;AAC/C,ApBxUA,MoBwUI,ApBxUA,KAAK,CAAC,KoBwUK,IAAI,ApBxUf,GAAkB,EoBwUlB,GpBxUuB,CoBwUC,ApBxUA,KAA5B,EACF,EoBuUuC,IAAI,GAAzC,EAA4C;AagF1C,AbhF4C,ApBvU5C,AYjDF,AGgIA,EAAA,OkBwUOA,ArBxcA,CZiDC,CoBuU6C,EagF1C,CAAC,AjCvZA,CYjDC,CAAC,CqBwcC,CAAb,CrBxcK,CqBwcW,ArBxcA,AGgIlB,CkBwUmB,AlBxUf,EKwP0C,CagFxB,EAAE,AjCvZhB,CiCuZiB,AjCvZA,EYjDlB,EAAsB,GqBwcP,CAAW,ErBxc1B,AGgIP,CHhIoC,AGgIhC,CkBwUkB,CAAgB,ClBxUtC,GAAI,EkBwUF,EAA4C,CAAC,EAA7C,EAAiD,GlBxU5B,oBf/Ef,CAAN;AiCwZEA,AbjF6D,ApBvUU,AYjDtC,AGiInC,IHjImC,IAAI,EqBycjC,ArBzcmC,CGiIlC,CAAC,CkBwUC,GAAG,ClBxUC,CkBwUC,ArBzcoB,CqBycnB,KlBxUP,EkBwUI,CAAW,AlBxUA,IkBwUX,CAAgB,CAAhB,CAAVA,OlBxUK,IAAkC,CAAzC;AHjIiD,AGkIrD,GAFE,CHhImD,KAAA,EAAE;AqB0cjD,AbjFJ,ApBvUA,AYlDoC,EQyXpC,CRzXO,EAAsD,CZkDzD,KiCwZKA,AjCxZA,AYlDF,CZkDG,AYlD0D,CQyXzD,EaiFE,CAAC,AbjFA,CpBvUV,AYlDqE,CAAC,CqB0czD,CAAb,AjCxZc,CoBuUlB,ARzXoE,CqB0chD,ArB1c0D,CqB0czD,EjCxZE,CiCwZC,AjCxZA,KYlD4C,CqB0ctC,ArB1cvB,CqB0cwB,ArB1c/B,EZkDI,IiCwZA,AjCxZiC,EiCwZE,CAAC,AjCxZA,CAAC,CiCwZrC,EACN,EjCzZuC,GAAY,KAAK,CAAC,OAAvD,EACF;AiCwZQ,AblFe,ApBtUnB,AYlDH,EQwXsB,MakFf,EjCxZE,CoBsUsB,GakFlB,AblFqB,ApBtUrB,CiCwZC,CAAD,CAAN,AblFe,GakFH,GAAG,CAAC,EjCxZd,CiCwZU,AjCxZO,CiCwZC,MAAM,CAAC,CAAD,CAAd,CAAZ,ejCxZE,CAAN;AiCwZkC,AbjFpC,ApBvUoD,SoBuU7C,YAAY,GAAG,GAAG,IAAI,IAAP,IAAe,GAAG,IAAI,MAAtB,GAClB,sBAAsB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CADJ,GAElB,wBAAwB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CAF5B;AAGF,AR1XA,CGrDwB,CAAS,AMjBjC,OTsES,SAAT,CAAmB,IAAnB,EAAyB,QGrDD;AkB8flB,AjCxZJ,AYjDyB,ASrE3B,MY8gBM,GAAG,AjCxZA,AYjDyB,CqBycxB,OAAJ,CAAW,GjCxZI,CAAC,KAAD,CiCwZF,CjCxZU,CiCwZZ,EAAM,AjCxZF,EiCwZJ,AjCxZiB,EiCwZP,GjCxZN,CiCwZJ,CjCxZwB,CiCwZR,AjCxZZ,CAAnB,CiCwZe,EAAkB;AAAA,AjCvZlC,AYlDiC,ASpElC,IToEkC,IAAA,EAAC,IAAD,CqBycM,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,EAAlB,CAAL;AAA0B,ArBzcpB,ASnEzC,ITmEyC,GqBycnC,ErBzcwC,EAAE;AqB0c3C,AjCtZL,AgB3HA,AJuEkC,ASlElC,GTkE2B,EqBicZ,CAWf,GjCxZS,AgB3HA,IAAT,CAAc,CAAd,EAAiB,IhB2HjB,AgB3HA,ChB2HsB,CgB3HC,IhB2HvB,EAA6B,GAA7B,EAAkC,KAAlC,EAAyC,KAAzC,EAAgD;AiCyZhD,AjCxZEA,AgB3HA,AJsEqD,ASjEvD,MrBsHM,GgB3HG,CAAC,ChB2HC,GAAG,AgB3HL,IAAS,ChB2HC,AgB3HA,ChB2HC,AgB3HX,GAAc,CAAd,ChB2HK,CAAY,CgB3HC,CAAC,CAAC,EhB2Hf,CAAZA,CgB3HyB,CAAO,IAAP,CAAzB;AhB2HAA,AgB1HD,AKKD,MrBqHkC,IAAI,GAAG,KAAK,CAAC,IAAN,CAAW,KAAX,CAAvCA;AYnDF,ASjEA,STiES,mBAAT,CAA6B,KAA7B,EAAoC,IAApC,EAA0C;AqB4ctCA,AjCxZF,AgBzHF,AJsEO,ASjEP,ILLM,EhByHA,AYnDC,EqB2cC,GjCxZG,CYnDJ,CItEQ,EhByHA,AYnDR,CqB2cS,AjBhhBd,EhBwHgB,CiCwZC,AjCxZA,CYnDZ,CqB2cHA,ArB3cG,GZmDQ,CAAU,AgBxHvB,EJqEK,GZmDQ,CAAT,GgBxHJ,ChBwHiC,AgBxHrB,IAAZ,ChBwHsC,CgBxHpB,EhBwHuB,EgBxHzC,EAAwB,ChBwHsB,CAAC,EgBxH/C,EAA8B,ChBwHW,GAAc,KAAK,CAAC,SAA7D,EAAwE;AACtEA,AgBxHA,AJoEW,AShEf,MTgEe,CIpEN,ChBwHD,GgBxHJ,EhBwHS,CgBxHG,EhBwHA,AYpDD,EIpEX,CJoEW,KAAA,CAAA,GZoDa,CAAC,KAAD,CYpDb,CZoDqB,GAAR,EAAa,KAAb,EAAoB,KAAK,GAAG,CAA5B,CAAxBA;AiCwZA,AjCvZA,AgBxHA,AJmEuB,AS/D3B,MT+D2B,CInElB,EiB+gBAA,EjCvZE,AgBxHP,EiB+gBS9B,CjB/gBG,AJmEW,CZqDZ,CiCuZD,AjCvZE,CYrDW,CInEP,CiB+gBH,AjB/gBI,CiB+gBjB,AjCvZO,CAAU,CiCuZDA,ArB5cO,CInEF,AJmEE,CInED,CiB+gBL,AjCvZI,CAAC,EiCuZF,AjB/gBJ,EAAY,CJmEL,EZqDN,CiCuZS,AjCvZI,AgBxHd,CiB+gBW,AjB/gB3B,MiB+gBA,EAAmCA,GAAC,AjCvZnB,CAA0B,GiCuZH,CAAxC,CjCvZiB,CiCuZ0B,CjCvZO,KAAjC,CAAV,CAAP;AiCwZE8B,AjCvZH,AgBxHC,AJmEFA,AS/DF,GrBiHE,GYlDI,CInEG,EhBwHA,CiCuZC,EjB/gBN,AJmEQ,CZqDC,CiCuZC,AjCvZA,CgBxHG,AJmEF,EqB4cE,EjCvZE,AgBxHE,ChBwHD,AgBxHE,CJmED,CAAC,CqB4cC,CAAC9B,AjB/gBE,CAAC,EiB+gBJ,AjCvZT,CiCuZR8B,AjCvZsB,EgBxHP,EhBwHZ,AgBxHyB,EhBwHA,EgBxHb,AJmEN,CInEX,AJmEiC,UAAtB,EAAkC,YAAlC,CAA+C,IAA/C,CAAbA;AqB4cIA,AjCtZF,AgBxHF,AKIF,CLTA,SiBmhB4B,CjCtZjB,CiCsZmB,GAAG,CjCtZjB,CAAC,IiCsZsB,AjCtZvB,CiCsZwB9B,CjCtZjB,EiCsZkB,GAAG,CAAL,CAAjC8B,MjCtZ8B,CAAC,KAAD,EAAQ,GAAR,EAAa,KAAb,CAApB,CAAZ;AiCuZEA,AjCtZH,AYtDD,AS9DF,GrBkHS,GYpDH,CAAC,EZsDE,CiCsZC,GjCtZG,AYtDX,CZsDY,CiCsZC,ArB5cF,GqB4cK,CjCtZC,CiCsZC,AjCtZA,CiCsZC,GAAH,CAAO,IjCtZZ,GiCsZK,CAAe,AjCtZA,CAAC,GiCsZhB,CAAZA,CjCtZiC,CAAC,OAA3B,IAAsC,KAAK,CAAC,KAAN,IAAe,KAArD,IAA8D,GAAG,CAAC,KAAJ,IAAa,KAA/E,EAAsF;AiCsZzFA,AjCtZyF,AgBtH/FC,AJgEe,AS7Df,ILHM,MiB4gBkC,CrB5clB,GIhEN,CiB4gB6B,ArB5c9B,EIhEI,CiB4gB6B,AjB3gB9C,IAAI,CiB2gB+C,CAAC,OjB3gBpD,CAAc,GiB2gBgC,CAAkB,CjB3gBhE,CiB2gB8C,CAA1CD,AjB3gBiB;AiB2gBjBA,AjCrZFA,AgBrHA,AJ8DsB,AS5D1B,ELFI,IAAA,EhBqHI,AgBrHJ,EiB0gBmE,IjCrZzD,EiCqZ+D,CjCrZ5D,AgBrHb,EiB0gB4E,EjB1gB5E,ChBqHkB,AgBrHb,ChBqHc,CiCqZ8D,CAAC,GjB1gBlF,CiB0gB4E,AjCrZ5EA,CiCqZuF,AjB1gB1E,KiB0gB+D,CAA1EA;AjCrZFA,AgBrHe,AKGnB,QrBkH+B,GgBrHL,IhBqHY,EgBrHN,ChBqHS,AgBrHR,GAAP,GhBqHqB,CAAC,AgBrHR,MAAM,ChBqH1CA,AgBrH2C,MAAP,CAAc,WAAd,CAA0B,aAA1B,EAArB;AiB2gBb,AjCrZF,AgBtH+E,AJ+DjFA,AS3DF,GLLuB,GJgEjB,KqB4cKA,AjCrZA,AYvDA,GAAG,CqB4cC,CjCrZC,CAAC,GiCqZG,ArB5cA,CAAC,EqB4cE,AjCrZP,EAAS,EYvDX,CqB4cc,CAAC,CrB5cC,EZuDE,CAAC,GAAR,AYvDW,CZuDC,AYvDA,CZuDZ,AYvDW,CqB4cb,ArB5cT,CqB4c0B,AjCrZA,EYvDE,GqB4cnB,AjCrZsB,CiCqZlCA,AjCrZmC,AYvD5CA,EqB4c8C,GAAG,GAAG,IjCrZ7B,CiCqZkC,CAAC,AjCrZA,KiCqZN,CAAY,AjCrZzC,CAA0C,IiCqZI,CjCrZC,CAAC,CiCqZC,CAApB,CAAhD,EAAwE,EjCrZrD,CiCqZwD,CjCrZC,GiCqZG,EAA/E,CjCrZmB,CiCqZgE,AjCrZA,EiCqZE,KAArF,AjCrZ0F,CAAC,CiCqZC,EjCrZT,CAAY,GAAG,CAAC,YAAhB,CAAhE,CAAT,CAAZ;AiCsZIA,AjCrZL,AgBtHC,AJ+DF,AS3DF,ELJI,ChBmHK,IgBnHL,EhBsHK,AgBtHL,AJ+DK,GqB4cG,GrB5cG,CAAC,CqB4cC,CjB3gBb,EiB2gBgB,GjB3gBhB,CAAM,EiB2gBgB,AjB3gBtB,CiB2gBuB,CjB3gBb,EJ+DL,CAAsB,MqB4cX,CAAkB,GrB5c7B,EqB4cW,ArB5cuB,CqB4cnCA,OrB5cC,EAA4C,KAA5C,IAAqD,MAArD,GAA8D,IAArE;AZwDF,AgBvHgB,AJgEf,AS3DD,QrBkHA,GAAoB,AgBvHG,EAAE,ChBuHF,AgBvHG,GAAV,mBhBuH6B,CAAC,KAAD,EAAQ,KAAR,CAA7C;AiCqZQ,AjCrZC,AgBvHsB,AKM/B,QrBiHS,IiCqZG,CAAC,AjCrZJ,GAAA,EiCqZD,CjCrZC,CiCqZS,AjCrZT,KAAA;AiCqZW,AjCrZJ,AgBzHO,AJoEvB,AS3DA,CLTE,CADiB,EAMjB,IhBoHc,AgBpHV,CJ+DG,EZqDO,GAAA,GAAA,AgBpHd,ChBoHc,AgBpHA,GhBoHA,MYrDhB,CAA4B,CI/D1B,EAA2B,EJ+D7B,EAAmC,IAAnC,EAAyC;AqB0chB,AjCpZrB,AgBpHA,AJ+DG,AS3DP,ELJI,IAAA,AJ+DG,EI/DH,GhBoHO,CYrDJ,GAAA,CZqDS,CAAC,AgBpHb,GJ+DG,CZqDS,AgBpHZ,AJ+DG,CI/DE,ChBoHc,IYrDhB,CI/DH,EAAa,QhBoHqB,AgBpHlC,ChBoHmC,CgBpHZ,IhBoHW,EAAQ,KAAR,EAAe,GAAf,EAAoB,GAApB,EAAyB,KAAzB,CAAtB,CAAZ;AACD,AgBrH0B,AJ+Dd,AS1Df,MT0De,KI/DqB,KJ+DrB,CI/D2B,CAAC,CJ+D5B,KAAA,CAAA,EI/DqB,IAAoB,IJ+DzC,KI/DkD,CAAC,OAAV,CAAkB,QAAQ,CAAC,GAA3B,CAA3B;AiBygBrB,AjCnZP,AgBtHwF,AJ+D9D,ASzD3B,GLP6B,GJgEF,MqB0cf,ErB1ce,GqB0cV,ArB1cU,IqB0cN,CrB1cM,CAAA,MqB0cE,CAAC,CrB1cH,MqB0cN,CAAiB,GAAjB,KAAyB,CAAC,CAAvC,EAA0C;AACxCA,AjBzgBN,AJ+DFA,ASzDF,ELNI,IJ+DE,CI/DF,EAAA,EJ+DO,GqB0cG,ArB1cA,II/DV,EiBygBgB,ArB1cA,CAAC,EqB0cE,AjBzgBnB,CAAM,EAAN,AJ+DU,CAAa,CI/Db,CiBygBe,CAAC,KAAP,CAAa,CrB1ctB,CAAZA,GqB0cuC,GAAG,CAArB,CAAbA;AjClZV,AgBvHgB,AJgEdA,ASzDF,MTyDM,GZuDG,EgBvHc,CJgEX,CIhEa,CAAC,CJgEX,GZuDf,CAAmB,AYvDA,CAAC,GZuDpB,AgBvHgB,EhBuHS,GAAzB,EAA8B,EYvDf,CAAkB,YAAlB,CAA+B,KAAK,CAAC,IAArC,CAAbA;AqB0cQ,AjClZR,AgBxHmC,AKQrC,MrBgHM,CAAC,GAAG,CAAC,GiCkZG,CjClZP,CAAS,IiCkZI,CAAC,IAAP,IAAe,IjClZtB,CiCkZ2B,AjClZA,CiCkZC,GjClZG,CiCkZxB,AjClZyB,IiCkZI,AjClZpC,CAAL,EACF,OiCiZqD,CAAC,MAAD,EAAS,KAAT,CAA3C,EACV;AAAY,AjClZR,AgB3HyB,AJmE3B,ASxDF,CLXE,CANiB,EAWjB,EJ8DI,CAAC,CI9DD,EhBsHI,EiCkZE,CrB1cV,CZwDY,CYxDD,EI9DX,CAAc,EiBwgBI,CAAC,IAAT,CAAc,AjClZhB,CAAiB,EiCkZf,EjBxgBV,EAA6B,WhBsHa,GAAG,CAAC,IAAJ,CAAS,IAA1B,GAAiC,QAAjC,GAA4C,IAAI,CAAC,IAAL,CAAU,IAAvE,CAAN;AiCkZ0B,AjClZwD,AgBrHlF,AJ6DW,ASvDf,ELNI,IAAA,EAAA,GJ6DkB,IAAP,EI7DX,IAAA,CAAK,MAAL,EAAa;AiBwgBR,AjClZR,AgBtHkB,AJ6DO,AStD1B,WLP0B,MAAM,CAAC,WAAP,IAAsB,IAA7B;AAAmC,AKQtD,GLT+B;AiB0gBvB,AjCjZR,AgBvHI,AJ6DFA,ASrDF,ELRI,IJ6DE,CI7DF,CiBwgBI,CjCjZC,AgBvHL,EiBwgBO,GrB3cG,CqB2cC,EjCjZf,AY1DiB,CZ0DC,AgBvHd,EiBwgBgB,CAAC,EjBxgBjB,AJ6DmB,CI7Db,AJ6Dc,CZ0DxB,CgBvHI,ChBuHuB,CgBvHb,CiBwgBN,CrB3cS,GZ0DjB,AY1DiC,CI7D7B,ChBuH+B,CgBvHb,GJ6DiB,CZ0DvC,AgBvHI,AJ6DoC,EZ0DE,AgBvHd,IJ6DkB,CI7D1C,AJ6D2C,EI7DZ,IJ6DK,GAAgB,CAAjB,CAAtB,GAA4C,IAA3DA;AqB4cK,AjCjZLA,AgBxHmC,AJ8DnCA,ASrDF,MrB+GM,AY1DA,IZ0DI,CgBxHkC,EhBwH/B,GgBxHoC,AJ8DjC,CI9DkC,EJ8D/B,CZ0DC,CAAC,IAAR,CAAa,AgBxHkB,CAAgB,AJ8DjC,CAAC,GZ0Df,CAAXA,EgBxH0C,GAA0B,EAAE,CAAC,AJ8DvEA,WI9D0C,GAA2C,IAAlD;AiB0gBhC,AjCjZH,AgBzH2F,AKU7F,ErB+GE,GiCsXa,CA4Bf,KjClZW,CAAC,IAAD,EAAO,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAP,CAAT;AACA,AgB5H6B,AJiE7B,ASpDF,CLbE,CAXiB,EAgBjB,GJ4DKA,CI5DD,ChBuHG,EY3DE,CAAC,CZ2DV,EY3Da,EI5Db,CAAc,OJ4Dd,EAAyB,UI5DzB,AJ4DmC,EI5DA,EJ4DI,CAAC,GAAG,QAA3C,EAAqD,CAAC,EAAtD,EACF;AZ2DC,AgBvHG,AJ4DA,ASpDJ,ELRI,EJ4DA,EI5DA,EAAA,MJ4DU,GI5DV,AJ4Da,II5Db,GAAO,GJ4DgB,CAAC,SAAX,CAAqB,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,IAArC,CAAb;AqB4cA,AjBxgBS,AJ4D8C,ASnD3D,IY+fI,OjBxgBgB,CiBwgBR,AjBxgBC,CiBwgBA,IAAT,CAAa,UAAE,CAAF,EAAK,CAAL,EAAM;AAAA,AjC/YvB,AgBzHuB,AKUvB,GLXqC,MhB0H5B,IiC+YmB,CAAC,EjC/Y7B,CiC+YgC,AjC/Yf,CiC+YM,IjC/YvB,EAAwB,MAAxB,EAAgC;AiC+YC,AjC9Y/BA,AgBzHE,AJ4DF,ASlDF,ELVI,GiBugBA,CjC9YE,AY7DA,CI5DF,AJ4DG,EI5DH,ChByHM,GAAG,IY7DP,CI5DF,ChByHe,CAAC,CY7DC,CAAC,CI5DlB,CAAM,EhByHG,AgBzHT,EAAU,ChByHe,CAA3BA,EgBzHE,AJ4D4B,CAAC,CI5Db,OJ4DlB,EAAuC;AI5DnB,AJ4DqB,ASjD3C,WLX6B,AJ4DqB,EI5DnB,CAAC,CJ4DW,eI5Dd,GAAsB,IAAI,GAAG,CAA7B,GAAiC,IAAxC;AiBwgBlB,AjC9YF,AgB1HkE,AJ4Dd,AShDtD,MrB8GM,GiC8YGA,CjC9YC,GiC8YG9B,CjC9YC,CAAR,CiC8YQ,GAAG,AjC9YE,KAAK,CAAC,EiC8YA,CAAC,GjC9YpB,GiC8YW,CjC9YkB,EiC8YA,CAA/B,EAAkCA,AjC9YE,CAAC,EiC8YF,IAAI,CAAvC,EAA0CA,CjC9YX,CAAiB,CiC8YL,EAA3C,EAA+C,CjC9YO,CAAC,IAAD,CAAvB,CAAjC,EACF;AiC8YM,AjC9YF,AgB7HiC,AKerC,CLfE,CAhBiB,CAAnB+B,ChB6II,CgBvHJ,KiBqgBU,AjC9YA,CAAC,IAAD,CAAN,GAAe,KAAK,CAAC,QAAN,CAAe,MAAM,CAAC,IiC8YvB,AjC9YsB,CAAN,CiC8Yd,AjC9Y2B,CiC8Y1B,GAAX,AjC9YwB,EiC8YR,CjC9Y4B,KAAK,CAAC,CiC8Y1B,CAAC/B,EjC9YhB,CiC8Ye,AjC9Y9B,CiC8YM,CAAJ,EAAgC;AAAE,AjC9YyB,AgBtHjE,AJwDE,AS/CF,GrB4GE,KiC+YsC,CjC5YxC,AYhES,CqB4ciC,CAAC,IAAH,ArB5ctC,CqB4c8C,QAAQ,CAACA,GAAD,CAAhB;AAAoB,AjC5YxD,AY/DH,AS/CD,ETiDA,EZ6DI,MAAM,CAAC,IAAP,CAAY,KAAZ;AiC6YC,AjC7YiB,AgBvHtB,AJ2DA,ASjDA,ILVM,aAAa,GACjB,SAAA,aAAA,CAAY,MAAZ,EAAoB,OAApB,EAA6B;AhBuH9B,AY5DD,ASjDA;AY0fI,AjBngBA,AJ2DJ,ASjDA,IYyfI,GjBngBK,KiBmgBG,CAAC,AjBngBT,EiBmgBQ,CAAR,AjBngBc,MAAd;AiBogBD,AjC5YH,AgBvHI,AKUJ,GYudE,IjBjeO,EhBuHA,IgBvHL,GAAc,ChBuHlB,CAAkB,MAAlB,EAA0B,AgBvHE,CAAC,GhBuH7B,EAAgC,CgBvHd,EAAd,EhBuHJ,EAAuC,MAAvC,EAA+C;AiC6Y9C,AjC5YC8B,AgBvHE,AKUJ,EY2fA,IjC9YM,CgBvHG,GhBuHC,GAAG,CAAC,AgBvHV,GAAe,ChBuHD,CgBvHd,GhBuHkB,MAAT,EAAiB,IAAjB,CAAsB,KAAtB,CAAXA;AiC+YF,AjC9YEA,AgBvHE,AJyDJ,AS/CA,MrB6GM,CgBvHG,EJyDA,CAAC,MZ8DM,GAAG,AgBvHf,AJyDJ,CZ8DEA,AY9DkB,EIzDI,EJyDxB,GAA2B,CIzDG,CAAC,MAAP,CAAc,CJyDF,GIzDZ,CAApB,CJyDuB,EAAgB,QAAhB,EAA0B;AqB6crD,AjC/YEA,AY7DAA,AS/CF,MrB4GsB,AY7DhB,OAAO,CZ6DiB,EY7Dd,CZ6DiB,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,KAAX,CAAH,EY7DZ,CZ6DmC,IAAI,AY7D9DA,CZ6D+D,UAA/DA;AiCgZF,AjBtgBI,AKWJ,MLXQ,OAAJ,EAAW;AiBugBf,AjChZE,AgBvHe,AJ0Df,AS9CF,ILZiB,EhBuHX,CY7DCA,II1DiB,AJ0Db,CZ6DT,AgBvHuB,AJ0Db,EZ6DE,CY7DC,II1DE,CAAe,GJ0DT,CAAC,MI1DS,AJ0DlB,GAAkB,CAA/B,EI1D8B,AJ0DI,CAAC,CI1DM,GJ0DF,CAAvC,EAA0C,CAAC,EAA3C,EACF;AqB6cA,AjChZI,AgBvHE,AJ0DF,AS9CJ,IrB2GI,AY7DA,MI1DMa,CJ0DC,GZ6DG,AY7DA,EI1DA,ChBuHG,AgBvHF,MhBuHQ,CAAC,KAAP,AgBvHPA,ChBuHoB,AgBvHF,KhBuHX,CAAb,AgBvH8B,CAAC,GAAzBA,CAAJ,AJ0DiB,EIzDvB,EJyDc,CAAc,QAAQ,CAAC,CAAD,CAAR,CAAY,IAAZ,CAAiB,MAAjB,CAAwB,QAAQ,CAAC,CAAD,CAAR,CAAY,KAApC,EAA2C,OAA3C,CAAd,CAAV;AqB8cJ,AjBvgBQ,AJyDwE,AS7ChF,cLZc,IAAI,UAAJ,CAAe,mDAAmD,MAAM,CAAC,GAA1D,GAAgE,GAA/E,CAAN;AhBuHJ,AgBvH6F,AKajG,QrB0GQ,MAAM,CAAC,KAAP,GAAe,KAAnB,EAA0B;AACxB,AY7DJb,AS7CF,MrB0GM,AY7DA,KAAK,GAAG,EZ6DE,GY7DG,CAAC,KAAlBA;AqB6cK,AjC/YF,AgBxHCa,AJ0DJb,AS5CF,KrBwGI,CgBtHEa,AJ0DqB,GqB6cX,ArB7cc,EZ8DnB,CgBxHD,AJ0DuB,CI1DtB,EhBwHI,EiC+YR,ArB7c+B,CqB6cb,ArB7cc,EI1DjCA,ChBwHe,AgBxHF,AJ0DjBb,CZ8DoB,GiC+Yf,AjBvgBDa,CAAkB,CiBugBU,KjC/YvB,AgBxHLA,EhBwH4B,GiC+Y3B,EAAuC;AAC5C,AjC/YI,AgBxHAA,AJ0DJ,AS5CF,MYyfM,AjC/YA,AgBxHAA,GJ0DG,EqB6cE,CAAC,AjBvgBF,ChBwHG,AgBxHF,ChBwHG,AY9DA,IAAL,CqB6cH,ArB7ca,CqB6cC,AjC/YA,CAAC,EY9DE,EI1DjBA,CAAkB,IiBugBlB,AjC/YO,CiC+YX,CjC/Y8B,AgBxHF,CiBugBG,AjBvgBF,GAAzBA,EhBwHO,CAAP,CgBxHgC,AJ0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GAVD,GZwEI,OAAO,EiCyYwC,CjCzYrC,EAAdA,CiCyY4C;AAAO,AjCxYnD,AY9DA,AStCFC,ErBoGE,EqBpGI,KTsCG,CZ8DC,CAAC,EY9DT,AStCa,ErBoGL,CqBpGQ,CrBoGD,AqBpGjBA,KrBoGU,EAAc,KAAd,EAAqB,OAArB,CAAR;AiCwYuD,ArBrczD,ASvCAA,CTwBA,GSxBqB,WAAW,GAAG,CAAnCA;ArBqGE,AqBrGFA,IAAsC,ErBqGhC,SAAS,EqBrGoC,ErBqGhC,CqBrGmC,CAAtDA,KrBqGM,IAAwB,MAAM,CAAC,KAAP,CAAa,KAAb,KAAuB,IAAI,CAAC,KAAL,CAAW,KAAX,CAAnD,EAAsE;AiCwYpE,AjCvYA,AY7DJ,ASzCAA,IrBsGI,AqBtGqD,KTyChD,EqBocE,EjCvYE,CAAC,AqBtGqD,EY6e/D,CZ7ekE,CAAtEA,EAEA,ETuCA,CZ6Da,AY7DU,EZ6DE,CY7DzB,EAA4B,GAA5B,CZ6Da,CAAT,AY7D6B,IAAjC,EAAuC;AqBqcpC,AjCvYC,AY7DFD,ASvCF,GYueE,CjCnYE,EY7DE,IAAI,CZ6DC,CAAC,CY7DC,GAAG,CZ6DC,AY7DA,CZ6DC,MY7DL,CAAY,EZ6DR,CY7DJ,CZ6DgB,AY7D3BA,eZ6D0C,CAAC,KAAD,EAAQ,MAAR,EAAgB,IAAhB,EAAsB,GAAtB,EAA2B,KAAK,GAAG,CAAnC,CAA3B,CAAN,EAAyE,OAAzE,CAAP;AiCwYH,AjCvYE,AY9DDA,GZ2DA,AgB1HA,GJ+D6B,GZ8DtB,EY9D2B,GAAG,IAAI,CAAC,KAAL,EAArCA;AZ+DE,AgB7HF,AJ+DA,ASvCF,IAAM,IrBqGE,CY9DC,GSvCK,CTuCD,CAAC,CSrCZ,ErBmGE,EACJ,CY/DS,CAAY,GSrCnB,QAAA,CAAY,ETqCL,CAA2B,GSrClC,ETqCO,ASrCa,ETqCqB,KAAK,CSrC9C,ETqCiD,ASrCnB,CTqCvB,EAA6C,ASrCpD,EAAmC,ETqC5B,CAAP,OSrCA,EAA+C;AY2ejDA,AjCvYM,AgB5HJ,AJ8DD,ASrCG,ETuCJ,EqBmcI,EjCvYE,CqBnGG,MY0eI,AjCvYA,AqBnGT,CrBmGU,EiCuYE,AZ1eE,GrBmGC,CAAC,EqBnGhB,OY0eyB,AjCvYV,CiCuYW,CjCvYC,aAAa,CiCuYf,AjCvYgB,EiCuYE,GjCvYH,EAAQ,MAAR,CiCuYf,CjCvY+B,CiCuYC,IjCvYI,GAAG,CAAxB,CAAzB,CAAN,EAA4D,MiCuY5C,CAA7BA,AjCvYa,CAAP;AiCwYNA,AjCxYiF,AgB3H/E,AJgEF,ASvCI,IY0eA,GAAG,AZ1eE,GY0eC,KZ1eN,GAAgB,KY0eG,CAAC,EZ1epB,aY0emB,EAAkB,WAAlB,EAA+B,iBAA/B,CAAvBA,EAEA;AACA,AjBpgBE,AJ+DF,ASvCI,OAAK,GAAL,GAAW,GAAX,CAH6C,CAIjD;AY4eA,AjC3YI,AgBzHF,AKyBF,IrBgGI,QAAQ,CAAC,MAAD,EAAS,IAAT,EAAe,KAAf,EAAsB,OAAtB,CAAR;AiC4YJ,AjBpgBE;AiBqgBF,AjC5YI,AgBvHF,AJ4DF,ASrCI,EAAA,GAAG,CAAC,ErBgGA,CY3DC,CAAC,KZ2DN,CqBhGA,CrBiGJ,EY5DA,ASrCqB,CTqCD,GSrChB,CAN6C,CAOjD,QToCA,GAAoC,UAAS,GAAT,EAAc,IAAd,EAAoB,KAApB,EAA2B,KAA3B,EAAkC;AqBwctE,AjC5YM,AgBvHJ,AJ4DAA,ASpCF,MrB+FM,AY3DA,IAAI,GZ2DG,AY3DA,CZ2DC,IY3DI,CZ2DC,CAAC,CY3DP,CAAS,KZ2DH,CY3DN,CZ2DgB,AY3DA,GAAhB,CAAXA,SZ2DwC,CAAC,IAAD,EAAO,GAAP,EAAY,KAAK,GAAG,CAApB,CAAvB,CAAN,EAAsD,OAAtD,CAAP;AiC6YN,AjC7Y2E;AiC8Y3E,AjC7YG,AgBvHDG,AJ4DA,ASpCE,MToCE,CAAC,ASpCE,IToCP,EAAS,ISpCP,GLxBFA,AKwBoB,CLxBhB,MAAJA,CAAI,EKwBF,CLxBFA,GAAI,YAAS;AiBqgBf,AjBpgBI,AJ2DS,ASnCT,OAAK,ELxBE,CJ2DQ,ESnCf,ELxBY,AJ2DO,CSnCN,KLxBN,CAAY,GJ2DJ,ASnCf,CTmC8B,EI3D9B,yBJ2De,CAAN;AqB0cb,AjC9YE,AgBtHA,AJ0D4D,ASlC5D,CL1BAA,AKaF,CrB2GE,CgBpHA,OhBoHQ,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,EAAmB,OAAnB,CAAR;AiC+YF,AjC9YE,AgBpHA,ShBoHO,IAAI,QAAJ,CAAa,OAAb,CAAP;AACD,AY7DC,MAAI,CAAC,IAAL,EAAS;AqB2cD,ArB3cG,IqB2cF,ArB3cE,IAAI,GAAG,IAAI,CqB2cD,ArB3cE,GqB2cC,CrB3cb;AqB4cX,AjC7YF,AgBtHEA,AJuD2B,SZ+DpB,EiC6YE,SjBngBTA,CAAI,ChBsHN,CAAuB,CiC6YC,CAAC,GjC7YzB,AgBtHEA,CAAI,ChBsHwB,EgBtH5BA,ChBsHF,EAAmC,AgBtH7B,GiBmgBkB,EAAgB,AjC7YxC,EAA0C,KgBtH1B,YiBmgBQ,EAAqC,cAArC,EAAqD,UAArD,CADE;AAExB,AjC7YAH,AgBtHE,MhBsHE,GgBtHK,IhBsHE,CgBtHG,CiBmgBD,CjC7YC,EAAdA,EgBtHS,CAAY,EiBigBG,KjBjgBtB;AiBogBF,AjC7YA,AgBtHA,AJsDAA,CIxDAG,ChBwHA,CgBpHA,GJoDI,IZgEI,CAAC,EYhEE,EqB6cE,AjC7YL,CYhEM,CZgEC,GYhEG,CAAC,CZgEX,EiC0YgB,AjC1YF,GYhER,CAAY,CZgElB,EAAqB,EYhEf,EAAmB,GZgEzB,CAAR,AYhEc,EAAyB,KAAK,IAAI,IAAI,CAAC,KAAvC,CAAdH;AqB8cA,AjBjgBA,mBiBigBiB,SAJO;AAKxB,AjC9YA,AYhEA,MZgEI,AYhEA,IAAI,CZgEC,AYhEA,CqB8cC,AjC9YA,GiCyYc,EjCzYpB,AYhEJ,EACF,CZ+DoB,KAAlB,EAAyB;AiC+YzB,AjC9YEA,AYhEA,QZgEI,GYhEG,CZgEC,GAAG,CiC8YC,ArB9cA,GqBwcU,IjCxYH,CAAC,GYhEb,CAAiB,CZgEL,EAAQ,AYhEpB,EAAsB,CZgEV,EAAa,AYhEA,GAAG,EZgEE,EYhEE,CZgEC,AYhEA,CZgErB,CAAnBA,MYhEO,EAA2C,OAA3C,CAAP;AqB+cF,AjC9YE,AYjE0D,IZiE1D,OiC8YO,AjC9YA,CAAC,KAAK,CAAC,IAAD,AgBrHf,EhBqHsB,MgBrHtB,OhBqHmC,CAAC,CgBrHpC,IhBqHmC,CgBrHnC,ChBqH2C,AgBrHrC,EAAN,ChBqHmC,CgBrHzB,ChBqHsC,KAAK,GAAG,CAArB,CAApB,CAAN,EAAoD,OAApD,CAAP;AiCuYsB,AjCtYvB,AgBrHC,CiB2fM,EAUV,MjBrgBW,KAAK,gBAAL,CAAsB,EAAtB,EAA0B,KAAjC;AiBsgBJ,AjBrgBE,AJoDA,GIlDA,GJkDI,CAAC,IAAI,CAAC,YAAL,CAAkB,IAAI,CAAC,OAAvB,CAAL,EACF;AqBidA,AjCjZE,AYhEE,EZgEF,QAAQ,AYhEA,CZgEC,GAAD,AYhEI,EZgEE,IAAN,EAAY,EYhEZ,CAAe,EZgEf,EAAmB,OAAnB,CAAR,uBYhE0D,IAAI,CAAC,IAAvD,CAAN;AqBkdJ,AjCjZE,AYjEoE,SZiE7D,IAAI,QAAJ,CAAa,OAAb,CAAP;AiCkZF,AjCjZC,sBgBpHC,oBAAA,SAAA,iBAAA,CAAkB,EAAlB,EAAsB,MAAtB,EAAmC;AJoDnC,SAAO,KAAK,IAAL,CAAU,IAAI,QIpDO,GAAG,CAAC,KJoDf,CAAsB,GAAtB,EAA2B,GAAG,GAAG,IAAI,CAAC,QAAtC,EAAgD,GAAG,GAAG,CAAtD,EAAyD,GAAG,GAAG,IAAI,CAAC,QAAX,GAAsB,CAA/E,EACsB,IAAI,uBAAJ,CAAU,2BAAS,IAAT,CAAc,OAAd,CAAV,EAAkC,CAAlC,EAAqC,CAArC,CADtB,EAC+D,CAD/D,EACkE,IADlE,CAAV,CAAP;AZkEF,AYhEA,CAbA,EAeA,MZ8DS,sBAAT,CAAgC,KAAhC,EAAuC,MAAvC,EAA+C;AiCgZrC,AjC/YRA,AgBtHE,AJwDJ,IqB6cW,EjC/YL,CgBtHGA,IhBsHE,AgBtHE,CAAC,EhBsHA,CgBtHG,CAAb,CiBqgBoB,CjBrgBJ,CAAC,CiBqgBM,AjC/YP,CAAC,CgBtHG,IhBsHV,CgBtHe,EhBsHA,IgBtHL,ChBsHU,AgBtHE,ChBsHD,MgBtHX,CAAoB,EhBsH1CA,IgBtHE,EAAgD,CAAC,EAAjD,EAAmD;AiBsgBrD,AjChZAA,AgBtHuD,MhBsHX,EgBtHe,CAAC,GiBsgBlD,AjChZwC,CgBtHc,EhBsHX,IgBtHE,EhBsHI,AgBtHa,ChBsHZ,EiCgZtC,CAAC,CjChZ8B,CAAY,KAAZ,CAArDA,GiCgZsB,CADG;AAEzB,AjChZAA,AgBtHIA,MhBsHA,IAAI,AgBtHA,GhBsHG,GgBtHG,GiBsgBG,AjChZA,AgBtHA,ChBsHC,IAAP,AgBtHW,ChBsHC,KAAK,AgBtHX,CiBsgBY,AjChZA,AgBtHA,CiBsgBC,MjChZnB,AgBtHM,ChBsHjBA,AgBtHqC,CAApB,CAAbA,MiBsgByB,CAFJ;AAGzB,ArB/cK,SAAS,GqB+cJ,KrB/cL,CAAkB,GAAlB,EAAuB,CqB+cN,CAAC,CrB/clB,EAA4B,KqB+cX,ArB/cjB,CqB4coB,CrB5cmB,UAAvC,EAAmD;AqBgdxD,AjCjZA,AgBtHI,OhBsHCA,GgBtHG,ChBsHC,CAAC,GAAG,CgBtHC,CAAC,GhBsHG,CgBtHV,CAAY,ChBsHC,CiCiZC,AjCjZtB,EAAwB,CAAC,EY/Da,EZ+DT,CAA7B,AY/DyC,EZ+DT,CAAC,CiCiZC,CAAC,AjCjZnC,EACF,AgBvHU,IAAiC,CAAC,KiBugBR,CAJT,AjBngBuB,CAAC,IAAP,CAAY,iBAAZ,CAA8B,IAA9B,CAAmC,MAAnC,EAA2C,EAA3C,EAA+C,IAA/C,CAAtC,EACN;AiBugBE,AjCjZE,AgBtHI,AJuDNA,IZ+DE,EY/DE,EZ+DE,EY/DE,CZ+DC,EY/DE,EIvDE,CiBugBC,ArBhdA,CZ+DC,AY/DA,CZ+DC,EgBtHV,EhBsHG,CAAY,CAAZ,AY/DE,CAAY,CZ+DC,EiCiZE,ArBhdf,CqBgdgB,ArBhd3BA,CZ+DS,CAAoB,QAAQ,CAAC,CiCiZZ,CALD,EjC5YI,CAAc,IAAd,CAApB,CAAP;AiCkZF,AjClZiD,AgBtH/B,AJuDlBA,MAA6B,IAAI,CqBidxB,ErBjd2B,IAAI,CAAC,KqBidpB,ArBjde,CqBidd,ErBjd2B,KAAjDA,KqBidqB;AANI,AjBjgB3B,AJuDEA,CqB0cQ,KrB1cJ,SAAS,GAAI,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC,MAAX,GAAoB,CAArB,CAAzB,IAAqD,IAAI,CAAC,MAA1EA;AZ+DA,AgBtHG,ShBsHI;AAAC,AY9DR,IZ8DQ,EY9DJ,GZ8DS,CY9DL,CZ8DO,EY9DJ,CAAP,CZ8De,CAAC,EY9DJ,IAAI,CAAC,MAAL,CZ8DD,AY9Da,CZ8DO,GY9DnB,CAAiB,CZ8DO,CAAC,EY9DzB,CAAsB,MZ8DH,GAAkB,AY9DjD,IACA,CZ6DW,AY7DV,CZ6DE,GY7DE,CAAC,MAAL,CAAY,UAAZ,CAAuB,IAAI,CAAC,KAAL,EAAvB,EAAqC,IAAI,CAAC,MAAL,CAAY,UAAjD,CADD,IAEA,CAAC,SAAS,CAAC,IAAV,CAAe,YAAf,CAA4B,IAAI,CAAC,MAAL,CAAY,OAAZ,CAAoB,UAApB,CAA+B,IAAI,CAAC,KAAL,EAA/B,EAA6C,IAAI,CAAC,MAAL,CAAY,UAAzD,CAA5B,CAFL,EAGF;AqB8cA,AjClZU,AgBtHN,AJ0DA,IZ4DM,CiCkZLA,EjClZQ,EiCkZJ,AjClZM,AgBtHJ,EJ0DA,CqB8cX,CjClZmB,AgBtHf,ChBsHgB,EiCkZJ,ArB9cZ,YqB8cJ,AjClZe,CAAoB,CiCkZP,GjClZW,CAAC,OAAL,CAAa,IAAb,GAAoB,KAAK,CAAC,OAA1B,GAAoC,KAAxD;AiCkZe,AjCnZrB,AgBpHP,AJyDc,EqB8cc,CjCnZ5B,AgBlHA,YiBqgByC,CAAC,GAAD,CAAb,GAAqB,YAAY,CAAC,GAAD,CAAjC;AAAsC,AjCjZpE,AgBnHE,EiBsgBF,AhCjnBA,CoB4GE;ApB3GF,Ae2GE,AJsDA,ASrDA,OTqDKA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAL,GAAa,CAArBA,EAAwB,CAAC,GAAG,KAAK,GAAG,CAAzC,EAA4C,CAAC,GAAG,IAAhD,EAAsD,CAAC,IAAI,CAAC,EAA5D,EAAgE;AXhKlE,Ae2GE,AJsDEA,QAAI,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,CAAV,CAAXA;AqB+cJC,AhC/mBA,Ae2GE,AJqDED,IqB+cE,GAAG,CrB/coBmB,EqB+cjB,KrB/csB,EqB+cf,CrB/ckB,CSrDnC,GTqDuC,CAAC,GqB+c9B,ErB/cyB,CAAW,CqB+chB,ArB/cK,CAAjCnB,ISrDF,MYogBU,GAAkC,AZpgB5C,MYogBkD,IAAN,CAAW,EZpgBvD,GAAgB,IYogBgD,CAAC,QAArB,CAAlC,GACA,OAAO,EAAP,IAAa,WAAb,GAA2B,EAAE,CAAC,QAAH,MAAiB,QAA5C,GAAuD,KADnEC,EAGA;AACA,AhClnBA,Ae2GE,AKDkB,SAAO,KAAP;AYygBpB,AhClnBA,AW+JI,AStD4B,QTsDxB,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,SAAnB,EAA4B;AqBodhC,AhClnBA,AW8JkC,aAAO,KAAP;AX7JlC,AW6J8C,mBSrD5C,GLCA,WKDA,QLCA,CKDA,QLCA,GKDA,GAAc,ULCd,CAAiB,MAAjB,EAAyB;AiBygBjB,AjBxgBN,AKFc,IY0gBP,EjBxgBH,CAAC,EKFgB,GLEX,EiBwgBO,AZ1gBH,GY0gBM,GAAG,GAAG,MjBxgBrB,CAAuB,MiBwgBL,AjBxgBlB,CAAL,EiBwgB0C,AjBxgBP,YiBwgB7B;AjBxgB+B,AJoDrCD,AStD0B,QTsDtB,GIpDwC,CJoDpC,GAAG,IAAI,CAAC,OAAL,CAAa,UAAb,CAAwBmB,OAAxB,EAA+B,IAAI,CAAC,UAApC,CAAXnB;AIpD6C,AJqD7CA,IX9JS,EeyGoC,EJqDzC,GIrD8C,EAAE,AJqD3C,EX9JW,CW8JP,CIrD+B,CfxG9C,QW6JyB,CX7JzB,GW6J6B,QX7J7B,CAAY,CW6J2B,CAAC,CX7JxC,AW6JuC,CAAzB,CX7JG,GW6J8B,CX7J/C,EAAuB,CW6JrBA,WX7JF,EAAqC;AACvC,AeuG8D,MAAA,YAAY,CKDxE,CLC0E,aKD1E,SAAA,WAAA,GAAc;ApBrGZ,AesG4C,AJsD5C,ASvDc,KLCuB,EftGhC,CW4JD,CSvDiB,CpBrGrB,GAAW,AW4JF,CSvDK,EpBrGd,CW4Ja,IAAb,EAAiB;AX3JjB,AeqG2E,AJsDxD,ASvDO,MTuDP,CX3Jd,GW2JkB,CX3JvB,EW2J0B,CX3Jd,GW2JkB,CX3J9B,AW2J+B,CX9JI,CAIvC,UW0J8B,CAAkB,CAAlB,EAAqB,KAAK,CAAC,IAAN,CAAW,MAAX,CAAkB,KAAK,CAAC,KAAxB,CAArB,CAAP;AXzJvB,AWyJkF;AXxJlF,AeoGIA,MAAI,GAAG,GAAG,CAAC,MAAD,AKFZ,CLEEA,aKFF,SAAA,WAAA,CAAY,SAAZ,EAAuB;ApBjGzB,AemGIA,AJqDA,ASvDuB,MLEH,EJqDhB,CAAC,ASvDyB,ITuDrB,CIrDmB,AJqDlB,ASvDa,GLEQ,KAAK,EJqD/B,CAAgBmB,OIrDU,AJqDL,CIrDqB,EJqDlB,CAAxB,EAA2B,CIrDD,CAA/BnB,EJqDoC,CAAC,UAAhC,CAAD,IAAgD,CAAC,KAAK,CAAC,IAAN,CAAW,YAAX,CAAwB,IAAxB,CAArD,EACJ;AItDIA,AJsDE,ASxDiC,MLEqB,IAAI,GAAG,AJsDtD,IItDTA,CAHuB,AJyDrB,CIrDN;AfnGI,AeoGJ,AJoDkB,OXxJT,KAAL,GAAa,IAAI,CAAC,MAAL,GAAc,CAAd,GAAkB,CAA/B,CARmC,CASvC;AeoGA,AJoDG,ASvDD,kBAAA,CAAI,cAAJ,CAAI,GAAJ,GAAI,YAAiB;ApBhGnB,AoBgGqB,OpBhGhB,EoBgGuB,KAAP,KpBhGrB,GAAoB,YAApB;AACF,AemGS,AJoDTA,ASxDmC,CAAnC,EAEA,GTsDI,KIpDc,AJoDT,GAAG,IAAI,CAAC,UAAL,CAAgB,IAAhB,CAAZA;AInDIA,AJoDJA,AStDA,MTsDI,EIpDI,MJoDI,CIpDG,EJoDA,CIpDG,KAAdA,IJoDqB,IAAI,UAAU,CAAC,CAAD,CAAvCA;AACA,AStDA,STsDO,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,cAAhB,CAA+B,KAA/B,EAAsC,KAAtC,EAA6C,QAAQ,GAAG,QAAQ,CAAC,IAAZ,GAAmB,IAAI,CAAC,IAAL,CAAU,IAAI,GAAG,CAAjB,EAAoB,IAA5F,CAAP;AIpDI,AJqDL,AStDC,ETwDF,OIvDWA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,MAAxC,EAAgD,CAAC,EAAjD,EAAqD;AACnDA,AJuDR,UIvDY,MAAM,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,CAApB,CAAbA;AJwDR;AIvDQ,AJwDR,UIxDY,MAAM,CAAC,EKFjB,ELEU,CAAY,SKFtB,QLEM,CKFN,CLEyC,QKFzC,GAAY;ALGJA,AJwDV,AS3DgB,SAAO,GLGT,CAAC,AKHC,GLGE,IAAI,GAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAX,GAAe,CAA3BA;AAAAA,AJyDV,AS5D2B,GAEzB,SLCsC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,KAAX,GAAmB,IAAhEA;AACAA,AKDR,YLCY,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,MAAR,IACL,MAAM,CAAC,IAAP,CAAY,iBAAZ,CAA8B,IAA9B,CAAmC,MAAnC,EAA2C,CAAC,GAAG,GAAG,CAAC,KAAJ,CAAU,CAAV,CAAH,GAAkB,GAA9D,EAAmE,QAAnE,EAA6E,QAA7E,CADJA;AKAR;ALEQ,AJuDV,SAAS,CAAC,EIvDI,EAAE,IAAI,CJuDpB,CAAoB,KAApB,CIvD4B,CAAC,CJuDD,UAAS,GAAT,EAAc,CIvDtB,CAA2B,EAA3B,CJuDQ,CIvDuB,CAA/B,AJuDiC,CIvD3C,EAA6C,OJuD3B,EAAqC;AItDrD,UAAA,EAAE,CAAC,OAAH,CAAW,QJsDwB,GAAG,UItDtC,EAAkC,MAAlC;AJuDVA,MAAI,IAAI,GAAG,KAAK,CSzDhB,ETyDW,CAAS,OAAT,CAAiB,CSzD5B,ETyDW,CAAXA,MSzDA,SAAA,GAAY;ALGF,AJsDVA,ASzDc,MTyDoB,GSzDb,GTyDmB,EItD1B,AKHA,CLGC,AJsD4B,IItDjC,EAAW,qBJsD+B,KAApDA;AIrDY,AJqDZA,ASzD0B,GAE1B,GTuD2D,KAAK,CIrDpD,EJqDuD,EIrDnD,GAAG,EAAP,oBJqDgE,KAA5EA;;AIpDY,AJqDZ,OAAKA,IAAI,CAAC,GAAG,EIrDIA,EJqDA,CAAC,CIrDG,CAAC,GAAG,AJqDpBA,CIrDO,CJqDa,CIrDG,AJqDF,CIrDG,EJqDA,CIrDG,GJqDC,CAAC,CIrDG,IJqDR,EIrDG,CAAY,AJqDF,KAArCA,EIrD2B,AJqDiB,CIrDG,AJqDF,GAAG,GIrDzC,EAAgD,AJqDF,CIrDG,EAAjD,AJqDiD,CAA7D,CIpDF,CJoDkE,CAAC,GAAG,CAApE,EAAuE,CAAC,IAAI,CAAC,EAA7E,EAAiF;AIpDnE,AJqDZ,ASxDF,ITwDE,MAAM,GAAG,CIrDG,IAAI,AKHlB,CLGmB,AKHf,ILGU,AKHd,CLGwB,AKHpB,CLGqB,EKHzB,CLG4B,CAAJ,CKHpB,ELG4B,QJqDZ,ESxDT,ETwDA,CAAc,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,IAAb,CAAkB,MAAlB,CAAd,CAAT;AIrD+B,AJsD/BA,ASxDAA,MAAI,ETwDA,ESxDI,GAAG,CAAXA,ELE+B,CJsDlB,GAAG,CItDoB,EAAE,OJsDZ,CItDI,GJsDA,UAAU,CAAC,CAAD,CAAxCA;AItDgD,AJuDhD,IAAA,KAAK,GAAG,IIvDwC,CAAC,EAAE,GAAG,CAAC,gBJuDtC,IAAT,CAAc,SAAS,GAAG,SAAS,CAAC,IAAV,CAAe,MAAf,CAAsB,SAAS,CAAC,KAAhC,EAAuC,KAAvC,CAAH,GAAmD,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,IAAb,CAAkB,KAAlB,CAA1E,CAAR;AIvD8B,AJwD/B,ASzDC,OAAKA,IAAI,CAAC,GLCY,AKDT,CAAb,ELCiE,AKDjD,CAAC,GpB7GnB,AoB6GsB,KAAK,QAAL,CAAc,CpB7GpC,KoB6GE,EAA0C,CAAC,CpB7G7C,CoB6GE,EAA6C,SpB7G/C,CAAa,GAAb,EAAkB;AAChB,Ae6GkE,AKDnB,IAAA,EpB5G3C,EoB4G+C,CpB5G5C,GoB4GgD,CpB5G5C,Ge6GuD,Cf7GlE,AoB4G4D,EpB5G7C,Ee6GwD,EAAE,EKDlB,CAAc,CLCJ,AKDV,EAAiB,IAAzB;ApB5G9B,Ae6G8D,AJyDjF,AS1D8E,ST0DvE,EXtKmB,GWsKd,EXtKmB,Ae6GkD,CAAC,CJyD3E,CIzD6E,AJyDnE,EXtKE,EWsKE,WAAJ,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,IAAI,uBAAJ,CAAU,MAAM,CAAC,MAAP,CAAc,KAAd,CAAV,EAAgC,KAAhC,EAAuC,KAAvC,CAA1B,EAAyE,IAAzE,CAAV,CAAP;AXtKoC,Ae6G+B,AJ0DrE,CARA,EAUA,YI5DgB;AAAyE,AJ6DzF,AS7DI,SAAO,IAAP;ApB5GA,Ae6GS,AJ6Db,AS7DE,CAJA,EAMA,GpB/GM,GAAG,GAAG,CAAV,EAAW;AAAE,AoBgHf,WpBhHsB,KAAK,KAAL,GAAa,GAApB;AAAuB,Ae8G5B,UAAA,GAAG,CAAC,IAAJ,CAAS,EAAT;AACA,AJ4DL,SAAS,CI5DJ,MJ4DL,CAAiB,CI5DJ,EJ4Db,CI5DgB,CJ4DM,GAAtB,EAA2B,EI5DH,CAAC,UAAT,CAAoB,EAApB,CAAX;Af9GR,Ae+GQ,AJ4DVA,AS3DA,MT2DI,GX3KK,Ce+GC,AJ4DF,EX3KN,CW2KS,GAAG,CI5DG,AJ4DF,CS3Df,CAAI,CLDgB,IAAV,AJ4DC,CAAY,AS3DvB,CAAI,ET2DO,CAAXA,AS3DA,GAAI,YAAS;ApB/Gb,Ae+GS,AJ2DTA,AS3De,GpB7Gf,GWwK6B,GS3DP,CAAP,CT2DmB,GAAG,IAAI,CAAC,KAAL,EAArCA;AXvKA,AWwKA,AS5DuB,CAAvB,QT4DO,QAAQ,CAAC,IAAI,CAAC,UAAN,EAAkB,IAAI,CAAC,SAAvB,CAAR,IACL,IAAI,CAAC,MAAL,CAAY,UAAZ,CAAuB,KAAvB,EAA8B,KAAK,GAAG,CAAtC,CADF;AXvKA,Ae4GQ,AJ6DT,YI7Da,IAAJ,EAAQ;Af3GhB,Ae2GkB,UAAA,IAAI,CAAC,CAAD,CAAJ,EKClB,CLD4B,SKC5B,SAAA,OAAA,GAAU;ALDmB,AJ+D/B,AS7DI,OAAK,ET6DA,GI/DsB,CKE3B,GAAc,CLFkB,AJ+DpC,CAAkB,CI/DoB,AJ+DtC,CS7DI,CT6DiB,CAArB,EAAwB,GI/DM;AAAkB,AJgE9C,SAAO,CAAC,EIhEsC,CAAC,CJgEnC,CIhEqC,AJgE1C,GIhE6C,CAAC,AJgEpC,CAAC,CAAC,CAAC,MAAb,IAAuB,CAAC,CAAC,SAAF,CAAY,CAAZ,CAA9B;AX1KAG,Ae0G4B,AJiE7B,AS9DG,ETgEJ,IShEQ,KLHY,AKGP,GAAL,CAAS,KpB7GfA,CAAI,IoB6GE,EpB7GNA,CAAI,CoB6GyB,EpB7G7BA,EoB6GE,CpB7GE,CoB6G6B,WpB7GpB;AAAE,Ae0G6C,AJoE9D,ASjEqC,SpB7Gb,AoB6GkB,GAAL,CAAS,CpB7GjB,IAAL,CAAU,IoB6GG,CpB7GE,EoB6GoB,GpB7GnC,CAAP,AoB6GoB;ApB7GQ,Ae2GpC,AJoET,ASlE+D,CpB7G7DA,EAEA;AACA,AeyGK,AJoEP;ASlEI,OAAKH,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EACJ;ALFM,AKEA,QLFI,CAAC,AKEA,OLFL,CKEA,CLFY,AKEE,CAAd,EAAiB,OAAjB;ApB3GJG,AeyGkB,AJoEb,ASlEyB,STkEhB,IIpEW,KJoEpB,CAAmB,CX7KxBA,CAAI,CW6KC,EX7KLA,AW6K6B,CX7KzB,EW6KC,CX7KLA,CW6KkC,EX7K9B,CW6KC,EAAuC,SX7KlC;AAAE,AeyGc,AKG1B,QLH0B,CfzGP,IeyGY,CfzGP,CeyGS,GfzGd,CAAU,CAAV,CAAP,EeyGa,EJoEY,GAAG,CAAC;AX7KV,AeyGY,AJqE3CH,CX9KAG,EAEA,GW4KI,EIrEuC,EJqEnC,GAAG,GAAG,CAAC,GIrEwC,EAAE,EJqE9C,CAAY,GAAZ,CAAXH;AX3KA,AesGyB,OAAP,YKKlB,iBAAA,SAAA,cAAA,CAAe,KAAf,EAAsB;ApB1GtB,AeqG6D,AJsE7D,AShEE,OTgEGA,AShEEA,ITgEE,AShEE,CTgED,AShEE,GTgEC,AShEE,CAARA,EAAW,CTgED,CAAC,CShEG,GAAG,CTgExB,GAA0B,CAAC,AShEE,ETgE7B,EAA+B,MShE7B,EAAuC,CAAC,GAAG,KAAK,QAAL,CAAc,MAAzD,EAAiE,CAAC,EAAlE,EAAsE;ALLrE,AJsEDA,AShEEA,QTgEE,AShEE,GAAG,GTgEL,AShEQ,GTgER,EShEa,GTgEb,CAAJA,IShEY,CAAc,CAAd,CAAVA;ALLJ,AJqEEA,GInEF,KJmEc,KAAA,GAAA,KAAA,CAAZA;AAAAA,AS/DE,QT+DiB,AS/Db,GAAG,ET+De,ES/DX,CT+Dc,IAAI,AS/D7B,CT+D8B,CX3KlC,AoB4GoB,IT+DS,CAAW,CAAX,CX3K7B,AW2KEA,SX3KF,IAAA,CAAK,KAAL,EAAY;AAAE,AoB4GQ,SpB5GD,IoB4GQ,CpB5GH,EoB4GJ,EpB5GD,CAAU,KAAK,YAAL,CAAkB,KAAlB,IAA2B,CAArC,CAAP;AAA8C,AW4K1D,AShE8B,GpB1GhC,KW0KM,CAAC,IAAI,IAAI,CAAC,IInEhB,CJmEE,EAAqB,UInEvB,SAAA,UAAA,CAAW,EAAX,EAAe;AftGf,AeuGE,AJmEE,MInEE,AJmEF,CInEG,EAAE,CAAC,EJmEA,GAAG,CInEN,CAAU,EAAV,AJmEU,CInEG,AJmEF,KInEO,GAAlB,CAAL,CJmEE,CInEyB;AftG7B,AesG+B,AJoE3B,ASjEA,IAAA,ETiEA,CSjEG,GLH8B,CJoE5B,ASjEE,GLH8B,AJoE7B,ASjEE,CAAC,GTiEC,CAAC,ASjEb,KLHiC,CAAe,GJoEhD,gCIpEiC,CAAN;AfrG/B,AeqGwF,AJqErF,ASjEA,KT8DD,MAGO,IAAI,GAAG,GAAG,CAAV,EAAa;AAClB,ASjEJ,MTiEI,MAAM,GAAG,IAAI,CAAC,IAAL,CAAU,CAAC,GAAG,CAAd,CAAT;AIrEFA,AJsEE,MItEE,AJsEF,KAAK,MItEQ,GAAG,IAAI,WAAJ,CAAgB,KAAK,MAArB,CAAlBA;AAAAA,AJuEE,ASjEJ,MLNkD,AJuE9C,KAAK,CIvE+C,EJuE5C,CIvE+C,GJuE3C,ASjEhB,CTiEiB,ASjEb,CLN4D,EfrGhE,CW4KY,CAAU,CAAV,CIvE+C,CAAY,AJuE9C,CSjEzB,CAAI,CpB3GJ,EoB2GA,CLNEA,EKME,ETiEQ,CAAwB,CX5KpC,IW4KY,CX5KZ,AW4KI,CX5KE,EoB2GU,GpB3GhB,EAAa;AAAE,AW6KZ,ASjED,KT6DO,IXzKa,AoB4Gb,ETiEA,GX7KkB,AoB4Gb,IpB5GQ,CAAU,CoB4GvB,CAAY,GpB5GgB,WoB4G5B,CpB5GuB,AoB4GI,CpB5Gc,GoB4GzC,CAAP,CpB5G8B,IAA2B,CAA3B,GAA+B,CAAzC,CAAP;AAAkD,AesG/D,AJwEE,ASjEJ,CAFA,EpBzGA,GW4KI,CIxEGA,IAAI,CAAC,AJwEF,GIxEK,AJwEF,CIxEX,EAAgB,CAAC,AJwEF,CAAC,EIxEI,EJwET,CAAU,CAAV,EIxEe,AJwEF,CIxEG,MAA3B,EAAmC,CAAC,AJwEzB,CAAwB,CIxEnC,EAAwC,EJwEA,GAAG,CAAhC,CAAT;AX3KJ,AeoGIA,AJwEA,MAAA,EIxEI,GJwEC,EIxEI,CJwED,EIxEI,EJwEA,CAAC,GIxEK,CAAC,AJwEX,CIxEU,AJwEA,CIxElBA,AJwEmB,GAAG,CAAd,CAAR;AX3KJ,AeoGI,AJwED,ASjEH,ILPI,WAAW,CAAC,EKOhB,CAAI,ELPiB,CAAC,IAAP,CAAX,E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pEO,AJqET,CXzKiC,CAAtB,GAA0B,CeoG5B,CAAO,GfpG0B,GAA/B,AeoGF,EAAe,CfpGwB,KAAK,IAAL,CAAU,KAAK,GAAG,CAAR,GAAY,CAAtB,CAA5C;AACF,AeoGEA,AJoEA,AS/DIA,GpBvGN,GekGM,GJoECA,CS/DG,GLLG,AJoEF,CAAC,EIpEI,CJoED,CS/DTA,ELLc,AKKA2B,CT+DD,CAAC,IS/Dd3B,CT+DS,GAAa,CAA1B,EIpEc,AJoEe,CIpEG,AJoEF,IAAI,CAAlC,CIpEsC,CAAC,AJoEF,CAAC,EIpEN,AJoEhC,EAA0C,CIpEG,MAAM,CAAC,GAAP,CAAW,IAAX,CAAgB,MAA7B,GAAsC,MAAM,CAAC,MAA/D,EAAuE,MAAM,CAAC,OAA9E,CAAdA;AfjGF,AekGEA,AJoEEA,MIpEE,IJoEE,IIpEM,CJoED,EIpEI,CJoED,GIpEK,CJoED,CAAC,KAAL,CAAW,CAAX,CAAZA,CIpEa,CAAgB,OAAhB,CAAfA;AfjGF,AoBsGM,UAAI,GAAG,IAAI,KAAK,UAAhB,EAA4B;ALJhC,AJoEE,AS/DI,OLLDA,CKKC,ET+DA,CIpEG,CAAC,EJoEA,CIpEG,AJoEF,CIpEX,AKKc,ELLE,CAAC,AJoEX,AS/DW,CT+DD,CAAV,CIpEc,AKKA,CT+DD,AS/DE,MLLM,CAAC,GKKX,CAAe,ELLZ,CAAe,AJoE7B,CAA4B,ES/DjB,CAAX,ELLN,AJoEM,EIpEqC,AJoEF,CIpEG,EAA5C,EACJ,AJmEU,EAA0C,QAA1C,CAAJ,EAAuD;AInEvD,AJmEyD,AS9DtD,ILLH,GKGE,KLHM,CAAC,AKKA,ET8DuD,IAAI,CInEpD,AJmEqD,CInEpD,KJmE+C,CInEvD,AJmEmE,CInEpD,AJmEqD,CInEpE,EAAkB,AJmEqD,CAAhB,CAAP,EInEjD,CAAR,GAAmC,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,IAAlB,CAAuB,MAAvB,EAA+B,QAA/B,CAAnC;AAA2E,AJmEO,AS7D9E,eAAO,GAAG,CAAC,GpBxGnB,OoBwGe,CpBxGf,GoBwGiC,KAAK,CpBxGtC,KAAA,CAAM,GoBwGE,EpBxGR,AoBwGgD,EpBxGnC;AACX,AoBuGgD,EpBvGhD,KAAK,GAAG,AoBuGwC,GAAG,EpBvGtC,CoBuGyC,GAAG,CAAC,OpBvGlD,CAAkB,EoBuGsB,GpBvGxC,CAAR;AekGA,AJmEE,AS9DkE,SLL7D,CJmED,KAAK,EInEX,CJmEc,CAAZ,EAAa;AXpKf,AekGF,AJkEmB,CIxEnB,EAQA,GfpGM,CAAC,KAAL,EAAU,CWoKc,IAAP;AXpKL,AeqGd,AJ+D8B,AS7DtB,QAAA,EpBvGY,IAAI,EoBuGR,GAAG,GAAG,CAAC,CpBvGH,CAAe,SoBuG3B,sCpBvGY,CAAN;AAAqE,AesGnF,AJ+DF,AS7DS;ALDP,AJ8DG;AXpKD,AeuGF,AKCM,SpBxGG,IoBwGI,CpBxGC,IAAI,GoBwGG,EpBxGE,EoBwGE,EAAE,CpBxGT,AoBwGU2B,GpBxGG,CAAtB,EoBwGuB,CpBxGG,EoBwGA,GpBxGK,GAA/B,EoBwGkC,CpBxGG,AoBwGF,KpBxGO,IAAL,CAAU,AoBwG7B,KpBxGkC,AoBwGFA,GpBxGK,CAAR,EoBwGO,CpBxGK,AoBwGJ,CpBxGlB,IAA2B,CoBwGdA,IpBxGmB,AoBwGJ,IpBxGD,AoBwGhD,CpBxG0D,AoBwG7E,EAAyE,GpBxGS,GAAG,CAAlB,EAAqB,QAA5F;AACF,AeuGA,AJ6DA,AS7DiF,GpBrGjF,GWkKI,ES7D6E,ET6DzE,CAAC,KS7DgF,GAAG,IT6DxF,IAAqB,AS7D2E,CAAC,GT6DxE,CAAC,MAAL,CAAY,AS7D4C,OT6DxD,CAAoB,IAA7C,EACF;AXlKE,AeqGA,AJ6DE,AS9D8G,ST8DzG3B,IAAIiB,GAAC,GAAG,IAAI,CAAC,KAAL,GAAa,CAA1B,EAA6BA,GAAC,IAAI,CAAlC,EAAqCA,GAAC,EAAtC,EAA0C;AXjK5C,AeqGA,AJ6DIjB,UAAImB,OAAK,GAAG,IAAI,CAAC,UAAL,CAAgBF,GAAhB,CAAZjB;AXjKJ,AeqGA,AKFM,aAAO,QAAQ,GAAG,KAAK,cAAL,CAAoB2B,MAApB,CAAH,GAA+B,KAAK,QAAnD;ALGN,AJ4DI,AS9DC,UT8DG,IAAI,CAAC,IAAL,CAAUV,GAAV,EAAa,cAAb,CAA4BE,OAA5B,EAAmCA,OAAnC,EAA0C,QAA1C,CAAJ,EAAuD;AI3D3D,AJ2D6D,AS7D1D,GAzBgC,CA0BrC,WT4DsE,IAAI,CAAC,KAAL,CAAWF,GAAC,GAAG,CAAf,CAAP;AXjK7Dd,AeuGA,AJ0DqF,AS3DvF,oBpBtGEA,CAAI,UAAJA,CAAI,GAAJA,GAAI,YAAa;AAAE,AoBuGrB,SpBvG4B,KAAK,GAAL,GAAW,KAAK,IAAL,CAAU,KAAK,IAAL,CAAU,MAAV,GAAmB,CAA7B,CAAlB;AAAiD,AWkKhE,CXlKJA,EAEA,OWgKQgB,OAAK,GAAG,IAAI,CAAC,IAAL,CAAUF,GAAV,EAAa,UAAzB,EAAmC;AX/JvC,AW+JyC,eAAO,IAAP,GI1DzC,cAAA,SAAA,WAAA,CAAY,MAAZ,EAAoB;AfpGpB,AeqGEjB,AJyDkD,AS1DlDA,MLCI,AKDA,KAAJA,ELCW,GAAG,IAAI,aAAJ,CAAkB,KAAK,MAAvB,EAA+B,MAAM,CAAC,OAAtC,CAAdA;AfpGF,AeqGEA,AJyDJ,MIzDQ,MAAM,GAAG,OAAO,CAAC,MAArBA;AAAAA,AJyDC,AS1DD,MLC6B,AKDzB,GAAG,IAAI,CLC0B,GAAG,CKDxB,GLC4B,AKDxC,IAAmB,KAAK,ELCY,CAAgB,OAAhB,AKDxC,CLCAA,CKDwC;AT2D3C,AS1DK,ET4DN,ES5DM,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,KAAK,UAAN,CAAzB;ApBpGJG,AeqGE,AJ4DJ,AS5DK,GAFD,ILEKH,EKAE,ELAE,CAAC,CKAC,ELAE,CAAb,EAAgB,AKAA,CLAC,CfrGnBG,CAAI,CeqGkB,MAAM,AKAf,CLAgB,CfrG7BA,CAAI,CoBqG4B,EpBrGhCA,CeqGE,EfrGE,AeqGiC,AKAA,CLAC,EAApC,EAAwC,KKAV,EpBrGhB,EoBqGmC,KAAK,GAA3C,IAAkD,KAAK,GAAL,CAAS,QAAT,CAAkB,KAAK,UAAvB,CAAtD,EAA0F;ApBpGjGH,AeqGEA,AJ4DN,AS5DM,IAAA,EpBrGE,EeqGE,CKAC,GpBrGG,AeqGA,AKAA,GpBrGG,AeqGA,AKAA,CAAC,IpBrGI,CeqGC,CAAC,CAAD,CAAN,CAAU,CfrGvBA,GeqGEA,UKAQ,CAA4B,KAAK,UAAjC,IAA+C,CAAvD;ApBrGFA,AesGE,AJ4DN,AS5DK,GAFM,CLEL,EftGwB,GoBsGnB,EpBtGwB,CesGrB,CAAC,AKAA,CpBtGuB,GesGxB,CAAR,AKAc,CpBtGuB,EesGpB,AKAR,CAAS,EpBtGc,CAAW,CesGrB,IftG0B,EoBsG3C,EAAyB,CpBtGE,CAAlCA,IesGmB,CAAoB,IAApB,IAA4B,KAAK,IAAL,CAA5B,GAAyC,MAAM,CAAC,CAAD,CAAN,CAAU,IAAV,CAAe,MAAf,EAAuB,QAAvB,CAA1D;AACD,AJ4DL,AS5DM,QAAI,MAAM,IAAI,CAAd,EAAe;ApBtGjB,AoBsGmB,MpBtGf,KAAK,AoBsGeA,IpBtGX,AoBsGe,MpBtGT,AoBsGe,CpBtGd,EoBsGiB,GAAlB,GAAwB,EpBtG3C,EAA8B,EoBsGmB,GAAG,MAAM,CAAC,UAAxC,EAAoD;ApBtGvC,AeuGhC,AKAI,SLAG,EfvGgC,CoBuG/B,GpBvGwB,EeuGhC,CKAc,IAAI,KAAK,GAAnB,EAAwB;ApBvGe,AewG7C,AJ2DK,AS5D2B,GLGhC,MJyDc,CS5DkB,KAAK,GT4DhC,AS5DmC,CT4DhB,GAAnB,CS5D2B,CT4DH,GAAxB,EAA6B,KAA7B,EAAoC;AIxDzC,AJyDAA,AS7D+C,MT6D3C,IAAI,GAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAAXA;AXnKEA,Ae2GF,AKLsD,MpBtGhD,IAAI,GAAG,KAAK,GAAL,GAAW,KAAK,IAAL,CAAU,KAAK,IAAL,CAAU,MAAV,GAAmB,CAA7B,CAAtBA;AAAAA,Ae4GF,AJwDA,MXpKyD,AWoKrD,CAAC,IXpKyD,CWoKpD,CAAC,CXpKsD,MAAM,AWoKlE,CXpKmE,AWoKrD,IAAnB,CXpKiE,CAAa,AWoKvD,KXpK0C,CAA/DA;AACA,Ae4GF,AJuDyB,AS7DnB,SpBtGG,EWmKuB,CS7DtB,CpBtGG,CWmKY,EXnKT,EoBsGA,CAAC,GpBtGK,CAAC,KAAP,CAAa,AoBsGnB,CAAkB,IpBtGZ,EAAoB,GAApB,CAAwB,AoBsG9B,IpBtGM,AoBsG0B,CpBtG7B,GAAmC,EoBsG1C,EAA0C,CpBtG9C;AACF,Ae4GA,AJsDmC,AS7De,CpB1GlDG,EAOA;AACA,AoBkGuD;ApBjGvD,AW+JAH,AS7DF,MT6DM,OAAO,GAAG,KAAK,CAAC,OAApBA;AX9JA,AoBiGK,sBLOL,SAAA,SAAA,MAAA,CAAO,YAAP,EAAqB;AACnBA,AJsDF,MItDM,CJsDDA,IAAI,CItDG,AJsDF,GItDK,AJsDF,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,SAA1B,EAAqC,CAAC,EAAtC,EAAwC;AItDxB,AJsD0B,AS7DtC,ILOY,AJsD0B,GItDvB,CKPX,CLOa,EJsD4B,ES7DpC,CLOa,AJsD0B,GItD/B,AKPJ,CLOa,GJsD6B,AS7DnD,CT6DoD,EItDvC,CKPI,CLOV,KKPgB,CT6DqB,CAAmB,ES7DpC,GAAG,CAAC,CT6DG,SS7DP,CAAe,MAA9C,EAAoD;ApBjGxDG,AewGwC,AJsDsC,AS7DpB,ILOlB,OKPuBH,ELOd,EAAE,AKPgB4B,KpBjGnEzB,AewGwD,CfxGpD,EoBiGqE,GAAG,GLOzB,AKPO,CLOQ,CfxGlEA,CAAI,AoBiG8EyB,GpBjGlFzB,CewGmD,EfxG/C,EoBiGoF,GAAGyB,OpBjG1E,CoBiGgF,CAAC,UAAxC,EAAoD;ApBhG5G5B,AeuGa,AKNT,GLMJA,GfvGI,KAAK,CoBiGD4B,EpBjGI,KAAK,CoBiGH,IpBjGF,AoBiGM,CpBjGK,IoBiGA,CpBjGK,EoBiGxB,EAAwB,CpBjGhB,CAAZ5B;AACAA,AW6JF,AS7DgC,MpBhG1B,CW6JDA,GX7JK,AoBgGsB,CT6DvB,EX7JI,EW6JA,AS7DwB,GpBhGnB,AW6JF,AS7DwB,CT6DxC,EX7Ja,AW6JM,CS7Da,EpBhGR,CW6JD,IX7JM,CW6JD,GX7JJ,CAAU,CW6JD,CAAC,GX7JK,IAAL,CAAU,CW6JhB,IAAmB,CX7Jb,AW6JN,GX7JyB,CAA7B,AW6J4B,CX7JlDA,IW6JuD,CAAC,IAA9B,GAAqC,CAArC,GAAyC,CAA9C,CAAvB,EAAyE,IAAI,EAA7E,EAAiF;AItD/E,AJuDA,AS9D4C,MLOxC,GJuDCA,EIvDI,EJuDA,CAAC,GAAG,IAAI,CIvDjB,AJuDkB,EIvDE,GJuDpB,EAAyB,CAAC,IAAI,CAA9B,EAAiC,CAAC,EAAlC,EAAsC;AX7JtC,AesGsB,AJwDpBA,AS/DiD,ILO7B,EftGlB,IAAJ,AesG4B,AJwDtB,CIxDuB,CftGrB,EW8JE,GAAG,CAAC,IIxDQ,AJwDJ,GIxDyB,CJwDrB,CAAC,GIxDyB,EJwDnC,GAAkB,CAAlB,GAAsB,EIxDQ,CAAiB,CJwDrB,CAAC,CIxDG,CAAoB,CJwD5B,IAAY,CAAC,IIxDgB,AJwDZ,CIxDW,AJwDV,EIxDW,GJwDhB,CAAW,CAAC,GAAG,CAAf,IAAoB,IAAI,CAAC,GAAL,CAAS,CAAC,GAAG,CAAb,CAArB,IAAwC,CAApD,GAAwD,CAAC,CAAzD,GAA6D,CAA9FA;AX9JQ,AesGsD,AJyD9DA,UAAI,CX/JW,EesGoD,CAAC,CAAC,CftGjD,GW+JP,EIzDsD,CftGpD,AW+JC,CX/JW,AesGmC,GJyD1C,CAAC,CX/JN,CAAkB,GW+JjB,CAAW,CX/JZ,AW+JC,EX/JwB,GAAzB,AW+JkB,CX/JW,CAA7B,EAAgC,AW+JV,GAAG,CX/JzB,AW+JkB,CX/JzB,EW+JoC,CAAX,GAAe,CAAhC,CAAhBA;AX/JoD,AesGyB,AJ0D7EA,AShEE,KLMuC,CAArB,IJ0DhB,EShEE4B,ITgEI,GAAG,CShED,CAAC,ETgEI,CAAC,IAAL,CAAU,CAAV,CAAb5B,AShEM4B,CAAkB,SAAlBA,IAA+BA,QAAnC,EAAyC;ALMmC,AJ0D9E5B,AShE6C,UTgElB,IAAI,GAAG,KAAlCA;AX/JF,AoB+FoD,SpB/F7C,KAAK,IAAI,CAAT,GAAa,IAAb,GAAoB,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAK,GAAG,CAA1B,CAA3B;AACF,AeqGE,AJ0DE,AShEN,CpBpGEG,EAOA,GemGM,IJ0DE,IAAI,II1DM,AJ0DF,CAAZ,EAAe,CI1DG,OAAO,YAAP,IAAuB,QAA3C,EAAmD;AflGrD,AekGuD,AJ2DjD,ASjED,QTiEC,CI3DsDH,GJ2DlD,CI3DsD,EJ2DnD,EI3D0C,IAAiB,AJ2DrD,CAAC,UAAP,CI3D0C,AJ2DxB,EI3DuD,OJ2DzE,EAA6B,SAA7B,EAAwC,OAAxC,CAAP;AX5JN,AekGI,AJ2DC,ASjEF,OT+DC,GIzDI,GJ2DG,CI3DC,IAAI,KAAR,IAAiB,IAAI,IAAI,WAA7B,EACN;AAAQ,AJ2DAA,YAAI,EI3DE,IAAI,EJ2DE,GAAG,KI3DT,CAAe,AJ2DA,CAAC,cAAP,CAAsB,SAAtB,EAAiC,YAAjC,CAA8C,OAAO,CAAC,II3D/D,CAAN,KJ2D6D,CAAmB,IAAjE,CAAfA;AI3D0E,AJ4D1E,ASlEJ,QTkEI,CSlEG,CAAC,ETkEA,GAAG,ASlEE,IAAI,ITkEE,ASlEX,GAAgB,CTkED,GSlEK,GTkEC,ASlEE,CTkED,ASlEtB,GAA2B,KAA5B,IAAqC,ETkErB,CAAsB,ESlEI,OTkE1B,CSlEhB,CTkEiD,ESlEI,KAAK,ETkE1C,EAA4C,MSlEnE,ETkE2E,CAAC,CAAD,CAApD,CAAnB;AACD,ASlEL,GAEA,mBpB/FA,aAAA,SAAA,UAAA,CAAW,KAAX,EAAkB,KAAlB,EAAyB;AACvB,AekGEA,AKHJ,EpB/FE,KAAK,GAAG,AekGF,KflGO,CekGD,GAAG,QflGP,CAAkB,GekGC,CAAC,CflGpB,CAAR,EekG2B,CAAzBA;AfjGFA,AeiGEA,AJ6DA,MX9JE,IAAI,AeiG2B,AJ6D7B,GX9JK,CW8JT,CI7DsC,CJ8D5C,EX/JoB,AeiG2B,IfjGhC,CAAU,CeiG4B,CAAC,GfjGxB,CeiGiB,CAAY,CfjG1B,CAAlB,CAAXA,EeiGEA;AfjGFA,AW+JI,MX/J6B,GAAG,GAAG,GW+J5B,EX/JiC,EW+J7B,EX/JiC,CAAT,CW+JpB,CAAR,CX/JyC,CAAb,CW+JhB,EX/JiC,EW+J7B,CAAC,EX/JiC,CW+JlD,GX/J6C,AW+JtB,CX/JgC,GW+J5B,EX/JiC,CW+J9B,CAAP,CX/JwC,CAAR,CW+JrB,EX/JiC,CAAtB,CW+JP,CAAC,EX/JiC,CAAnFA,GW+J6C,CAAY,CAAC,GAAG,CAAhB,CAAX,GAAgC,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,CAAf,CAA9D;AI7DF,AJ6DiF,UI7D7E,KAAK,IAAI,AKHjB,KLGsB,CAAC,MAAnB,EAAyB,AKH7B,SAAA,WAAA,CAAY,GAAZ,EAAiB,SAAjB,EAA4B;ApB9F1B,AeiG6B,AJ8D5B,AShED,OpB/FKA,AoB+FAA,CLEwB,GfjGpB,AoB+FA,CpB/FC,EeiGyB,CfjGtB,AeiGuB,CfjGpC,AoB+Fc,EpB/FE,CAAC,AeiGkB,AKFlB,CLEY,EfjGT,CeiGwB,AKFvCA,EAAkB,EpB/FvB,CeiGiD,AKFvB,CpB/FC,AeiGuB,CfjGtB,CoB+FC,CpB/F7B,EAA8B,AoB+F9B,CLE4C,CAAa,AKFvB,GAAlC,CLE4C,CAAkB,AKFvB,GAAG,GLEE,AKFC,ELEyB,CKFtB,CAAC,GLE0B,MAAM,CAAC,AKFlF,EAA6D,CLES,CAA1B,CAAf;AfjGG,AeiGuD,AJ+DxF,AShEGA,IpBhG8B,GAAG,CoBgG7B,GpBhGiC,CoBgG7B,GpBhGiC,AoBgG9B,CpBhG+B,IoBgG1B,CpBhGqB,CAAW,CAAX,EAAc,EoBgGxC,CAAa,GAAb,CAAXA,CpBhG8B;AAA6B,AekGjE;AAAK,AJ+DH,AShEI,QAAI,CTgED,GShEK,CTgEZ,IShEiB,CAAC,SAAD,IAAc,IAAI,CAAC,IAAxB,CAAR,EAAuC;ApBhGzC,AWiKJ,AShEA,SpBjGW,GAAP;AACF,AeiGE,AKAI,GpB/FN,Me+FS,CKAC,KLAR,AKAa,IAAI,IAAI,CAAC,OAAd,IACA,EAAE,IAAI,CAAC,OAAL,CAAa,QAAb,IAAyB,CAAzB,GAA6B,IAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,GAAG,CAAC,QAAJ,IAAgB,CAAhB,GAAoB,GAApB,GAA0B,GAAG,CAAC,UAApD,CAA7B,GAA+F,IAAI,CAAC,OAAL,IAAgB,GAAjH,CADJ,EAER;ARlOA,AZkIE,Ae+FA,AKCQ,GLCR,KKDQ,CRlOD,IQkOM,GAAG,IRlOlB,CAAqB,AQkOX,QRlOV,EAA+B,CAA/B,EAAkC,MAAlC,EAA0C;AACxCA,AZkIA,AeiGA,AKFqB,MRjOjB,CQ+NE,KR/NI,CQmOZ,ERnOe,EAAbA;AZmIA,AeiGA,AKDQ,eAAO,IAAP;ARlOR,AZmIA,AeiGA,AKFmB,ORlOdA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,UAA7B,EAAyC,CAAC,EAA1C,EAA8C;AAC5CA,AGoOF,AKFK,QRlOC,KAAK,GAAG,QAAQ,CAAC,KAAT,CAAe,CAAf,CAAZA;AGqOF,AKFG;ARlOD,AGqOF,AKFA,QRnOM,KAAK,CAAC,OAAN,CAAc,AZkIpB,IYlIE,EAAsB,EZkIxB,SAAA,KAAA,GAAQ;AYlIkB,AZmIxBA,AemGF,MHtO0B,AZmIpB,KYnIyB,CZmInB,EYnIsB,CZmInB,IYnIwB,CAAC,AZmIpB,IYnIc,CAAW,CZmI3CA,UYnIsD,CAAC,KAAK,CAAC,OAAP,EAAgB,CAAhB,EAAmB,KAAnB,CAAtB,CAAR;AAAwD,AZmIhFA,AeoGF,MfpG4B,KAAK,GAAG,KAAK,AoBkGzC,KpBlGoC,EAAlCA,CADM,CAGV,CoBgGE,SAAA,OAAA,CAAQ,GAAR,EAAa;ALGb,AKFEA,MAAI,IAAI,GAAG,GAAG,CAAC,UAAfA;ARrOA,AZqIA,AemGF,MfnGM,EYrIA,IZqIM,CYrID,AZqIE,CYrID,MZqIN,CAAe,CYrInB,EAAkB,CZqId,IAAuB,CAA3B,EAA4B;AYrIR,AZqIU,AeoGhC,AKHE,MRtOoB,CQsOfA,IRtOoB,AZqIY,AoBiG5B,GRtOmB,AQsOhB,CRtOiB,AZqIY,CYrIX,AZqIY,CoBiG3B,GpBjGe,CYrID,AQsO7B,ERtOqC,AQsOhB,GAArB,EAA0B,CRtOG,EAAgB,AQsOhB,CRtOA,CAAT,CQsOY,GAAG,CAAC,MAApC,EAA0C;ARtOK,AZqID,AeqGhD,AKJ8C,GpBrGtC,CAMV,IoB+FoD,GAAG,IAAI,IAAX,EAAe;ALK7D,AKL+D,aAAO,IAAP;ARrO7D,AQqOoE,IRrOpE,MAAM,CAAC,IAAP,CAAY,KAAZ;AACD,AZsIC,AoB8FwE,MpB9FpE,KAAK,UAAT,EAAmB;AAAE,AeoGvB,AKLA,WpB/F8B,AeoG9B,CAAO,KfpG6B,CAAC,EeoGrC,GfpG8B,AeoGvB,CfpGoC,KAAb,EAAoB,CeoG3C,IfpGgB,IeoGhB,CAAS,MAAT,EAAiB,IAAjB,EAAuB,YAAvB,EAAqC;AHzO5C,AZqIuD,AeqGrD,MAAI,CAAC,EH1OA,EG0OL,EAAS,uBH1OK,SAAT,CAAmB,MAAnB,CAAP;AACD,AGyOc,EHvOf,QGuOqB,IAAI,KKJvB,KLImB,CAAe,OKJlC,SAAA,UAAA,CAAW,GAAX,EAAgB,MAAhB,ELImB,AKJK,CLIX,GKJb,EAA8B;ApB/F5BA,AemGyE,AKHzE,MpBhGI,CoBgGCA,GpBhGG,CoBgGC,EpBhGE,EoBgGE,GAAG,CpBhGC,CAAC,CoBgGlB,EAAqB,IAArB,EAA2B,CpBhGhB,CAAkB,EoBgGE,GpBhGG,AoBgGA,GpBhGG,CAA1B,AoBgG2B,CpBhGtCA,AoBgGuC,UAAvC,EAAmD;ApBhGnDA,AoBiGEA,MpBjGuC,EoBiGnC,GpBjGwC,CoBiGpC,EpBjGuC,CoBiGpC,KpBjG0C,AoBiGrC,CpBjGsC,MoBiG3C,CAAa,GpBjGuB,CAAkB,AoBiGtD,CAAXA,IpBjG+C,CAAjDA,CATM,CAUV;AACA,AekGI,IHvOS,EGuOL,CAAC,MAAM,CAAC,CHvOQ,GAAA,EGuOpB,EAAkB,SHvOE,UAAA,IAAA,EAAA;AAEtB,AGqOsB,AKFlB,QAAI,ELEoB,CHrO5B,CQmOI,ELE4B,AKFpB,QRnOZ,CAAY,CGqOgB,CAAe,EHrO3C,EAAkB,EAAlB,EAAsB,IAAtB,EAA4B,0BGqOA,CAAN;AHpOpBM,AZmIA,AeiGkF,AKFtE,IRlOZA,EZmII,CAAC,CYnILA,CAAAA,EZmIA,EYnIAA,AZmIW,AoB+FQ,CRlOd,GQkOkB,CRlOvBA,AQkOwB,ERnOE,CAE9B,YQiOuB,CAAqB,GAArB,EAA0B,MAA1B,EAAkC,IAAlC,CAAP;ARhOhB,AZiIiBN,AoB+F6C,QpB/FzC,GAAG,GAAG,IAAVA;AAAgB,AekG7BA,AKFC,IpBhG4B,EekGzB,EflG6B,GAAG,EekGzB,GflGkB,AekGf,IAAI,aAAJ,CAAkB,MAAM,CAAC,MAAzB,EAAiC,MAAM,CAAC,OAAxC,CAAdA;AHlOA,AZgI2C,AemG3CA,IfnG2C,EemGvC,GHnOC,AZgI2C,GAAG,CYhInD,CGmOY,CfnG+B,CYhI/B,CGmOG,GHnOf,CAJ0B,AGuOP,CHlOvB,UGkOmB,CAAgB,OAAhB,CAAfA;AHjOJ,AZ8H4D,AeoGxD,AKHA,ELGA,CfhHM,CAcV,KekGW,AKHA,CLGC,AKHA,CAAR,KLGA,CAAe,OAAf,CAAsB,UAAC,KAAD,EAAU;AfjGpC,AekGM,AKHJ,GAEA,KLCQ,KAAK,CAAC,IAAN,IAAc,KAAlB,EAAyB;AHlO3B,AGmOI,AKDN,MLCM,GHnOC,EAAL,GAAU,AGmOE,CAAC,CHnOb,CAP0B,CAQ9B,AGkOQ,GAAe,uBAAK,QAAL,CAAc,MAAM,CAAC,MAArB,EAA6B,IAAI,CAAC,GAAlC,CAAf;AHjOR,AGkOO,AKDL,KLDI,MAEO,IAAI,KAAK,CAAC,IAAN,IAAc,WAAlB,EAA+B;AfnGxCA,AeoGI,MfpGA,AeoGA,KfpGK,GAAG,AeoGA,CAAC,GfpGG,CAAC,KAAjBA,AeoGI,GAAqB,SAAS,CAAC,QAAV,CAAmB,QAAQ,CAAC,GAA5B,EAAiC,IAAI,CAAC,SAAtC,CAArB;AHlOJ,AGmOG,KAFM,IHjOJ,EGmOI,EHnOT,EGmOa,CHnOD,IAAZ,AGmOkB,CAAC,IAAN,IAAc,aAAlB,EAAiC;AHlO9C,AZ8HI,AeqGI,OfrGC,GeqGG,CfrGC,CAAC,EeqGE,CfrGC,AeqGA,CfrGb,EAAgB,CAAC,AoBkGnB,GpBlGsB,IeqGhB,CfrGqB,CAAC,AeqGF,AKH1B,MpBlGE,EAAkC,CAAC,AoBkGrC,EpBlGE,EACJ,EoBiGE,CAAO,GAAP,EAAY;ApBjGR,AeoGwB,AKF1B,OAAKA,CpBlGC,AeoGoB,GKFjB,CAAC,CpBlGC,CAAC,CAAD,AoBkGE,CpBlGP,AeoG4B,AKF7BA,CpBlGU,AeoGoB,CKFnB,GpBlGV,CAAc,EoBkGE,EpBlGhB,CAAmB,AoBkGA,CLEC,AKF1B,EAA4B,CLEqB,AKFpB,GAAG,CLEqB,CfpG/C,AeoGgD,GKFjB,EpBlGE,KAAjC,CeoG2C,AKFjB,CLEkC,AKFpB,GpBlGG,AeoGA,CfpGC,AeoGoB,EKFtE,EAAsD,CpBlGL,AoBkGM,CLEqB,CAAC,AKF7E,EpBlG2D,AoBkGA,CpBlGC,GeoGU,CAAc,CfpGnB,CAAC,CAAD,CAAL,CAAS,OAAT,AeoGX,CfpG4B,AeoGnD,KfpGwD,CAAC,KAAvB,CAAtD,CAAJ,EACN;AAAQ,AemG6F,AKD/FA,MpBlGE,EoBkGE,GpBlGG,EoBkGE,CpBlGC,EoBkGE,GpBlGG,CAAC,CAAC,AoBkGA,EpBlGF,CAAL,CAAW,IoBkGT,CAAc,CAAd,CAAZA,MpBlGU,CAAyB,KAAzB,CAAR;AAAsC,AeoGvC,AKFDA,KLAO,GKAuB,GLEvB,AKF0B,GAAG,MAAM,GAAG,KAAK,CAAC,IAAnDA;ApBlGyC,AeqGvC,UAAI,YAAJ,EAAgB;AAAE,AKFpB,QAAI,KLEqBA,CKFf,GLEmB,CKFf,GLEM,AKFhB,ILEiC,AKFhB,GAAG,IAAI,KLER,CKFpB,CLEmD,CKFf;ARjO1C,AZgII,AeoGMA,AKFF,ERlOR,OZgIW,IYhIX,AQkOe,CRlOf,AZgII,AeoGU,AKFE,KAAK,CLED,AKFE,GRlOtB,AGoOuB,CHpOrB,EQkOa,GRlOf,CQkOgC,ERlO9B,GGoOiC,AKFE,CLED,AKFE,ILEH,CHpOjC,AGoOQA,GKFsB,CAAe,CRlO7C,CAAM,GAAN,CQkOM,CRlOK,CQkOwC;ApBjGnD,AemGQA,AKF6C,GpB/FrD,KoB+FqD,KAAK,CLEjB,EKFoB,GLEf,EKFoB,CLEjB,AKFkB,MLEZ,CAAC,CKFK,CAAe,CAAf,CLEZ,AKFI,CLEQ,KAArDA;AHnONA,AZmIF,AoB8F8E,QRjOxE,QAAQ,GAAG,GAAG,CAAC,KAAJ,CAAU,KAAK,IAAf,EAAqB,KAAK,EAA1B,CAAfA;AAAAA,AZoIF,AegGQ,QHpOwC,KAAK,CGoOzC,EHpO4C,GAAG,CAAC,AGoO1C,CAAC,GAAP,GHpO4C,CAAY,AGoO1C,KHpO+C,AGoO1C,CAAC,GHpOwB,CAAtDA,AGoOU,IAA4B,KAA5B,IAAqC,KAAK,CAAC,QAA3C,IACA,MAAM,CAAC,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,IAArC,EAA2C,IAA3C,CADJ,EACsD;AHpO5DA,AZoIF,AeiGF,AKJQ,QRjOA,KQiOO,CRjOD,GAAG,CQiOT,IRjOc,CAAC,IAAN,CAAW,KAAK,CAAC,WAAN,CAAkB,KAAK,EAAvB,CAAX,CAAbA;AACAA,AZoIF,AeiGU,AKJL,QRjOC,IGqOI,CHrOC,GAAG,IAAI,AGqOA,CAAC,KAAK,CAAC,IAAP,CAAR,GAAuB,KAAK,CAAC,EHrOzB,CAAU,KGqOS,CAAe,IAAf,CHrOE,AGqOkB,CHrOjB,KGqOH,EAA4B,CHrOjB,CAAC,IGqOZ,EAAoC,CHrOlC,EAAiB,CGqOqB,CAAC,IAAD,CAAxC,EAAgD,CHrO1B,IAAH,EAAS,CGqO5B,CAAvB,IHrO0C,EAAoB;AACpE,AZoIJ,AeiGU,UHrOF,CAAC,IAAI,CAAC,MAAN,IAAgB,CAAC,MAAM,CAAC,IAAP,CAAY,cAAZ,CAA2Ba,MAAI,CAAC,IAALA,CAAU,IAArC,CAArB,EAA+D;AAAE,AZqIrE,AeiGS,AKLL,QAAI,GAAG,GAAG,CRjO8D,EQiOxE,ERjOiE,AQiOpD;ARjO+D,AGuOlF,AKNqB,aAAO,KAAK,CAAC,MAAN,CAAa,GAAG,GAAG,MAAN,GAAe,KAAK,CAAC,MAAlC,CAAP;ALMZ,AKN4D;ARhO/D,aAAO,IAAI,CAAC,IAAL,AZqIX,CYrIqBA,MAAI,CAAC,IAALA,CAAU,CZqI/B,OYrIqBA,CAAmB,CZqIxC,GYrI4C,CAAC,KAAxBA,CAAV,CAAP,AZqIJ,CAAY,IAAZ,EAAkB;AYpIf,AZqIDb,AeiGI,AKNF,IAAA,CRnO+B,CZwI7B,AeiGA,CHtOD,GQgOK,CpB3FC,EYxIwB,AQmOtB,CRnOC,AZwIA,AeiGA,CAAC,CHtOD,AQgOV,GpB3Fe,CeiGC,CAAC,GHtOC,CAAC,AZqIT,AeiGA,CfjGY,AeiGpB,GAAuB,KHzOf,AGyOoB,CAAC,CHtOD,AZqIpB,CAAuB,EeiGR,CAAW,EfjGE,EYrIA,CAAC,CGsOd,CfjGQ,CeiGW,CfjGlC,CAAZA,EYxIY,CAAZA,GGyO2B,CAAvB;AHrOJ,AGsOG,AKNF,WRhOM,UAAU,CAAC,WAAX,CAAuB,GAAvB,EAA4B,KAAK,IAAjC,EAAuC,KAAK,EAA5C,EAAgD,KAAhD,CAAP;AACJ,AZoII,AekGC,AKNH,GRxOF,AG2NI,AKeF,GpB9FM,CAAC,KAAD,IAAU,CAAC,KAAK,CAAC,QAArB,EAA6B;AAAE,AemG/B,SAAO,EfnG+B,IAAP,EemG/B;AHrOJ,AZkI8C,AeoG5C,CA1BA,CH5MF,CGwOE,UHxOF,CAAA,SAAA,CAAE,MAAF,GAAE,SAAA,MAAA,GAAS;AACP,AGwOF,WHxOS,IAAI,IQgOb,URhOS,CAAmB,EQgO5B,GRhOiC,IAAxB,EAA8B,AQgOvC,KRhO4C,EAAnC,EAAuC,CQgOhD,CAAW,GRhO0C,AQgOrD,EAAgB,ERhOP,CAAP,CQgOF,EAAsB;AR/NxB,AZkIIA,AesGF,AKRE,GRlOJ,GZoIQ,AoB8FA,CAAC,IpB9FI,CoB8FC,EpB9FE,KAAK,CAAC,EoB8FlB,EAAoB,CpB9FpBA;AAAAA,AeuGF,AKTwB,MpB9FG,IAAI,CoB8FA,EpB9FG,IAAI,CAAC,MAAL,CAAY,UAAZ,CAAuB,IAAI,CAAC,KAAL,EAAvB,CAAhCA;AYhIJ,AGwOE,AKVgC,ER9NlC,IQ8NkC,IAAI,EAAE,CR9NxC,CAAA,GQ8N6C,GAAZ,GR9NjC,CAAE,GAAF,GAAE,SAAA,GAAA,CAAI,OAAJ,EAAa;AACXA,AZgIA,AewGF,AKXgD,MAAA,CpB7FzC,CYhID,GZgIK,CYhID,AZgIE,AoB6F0C,EAAE,CR7N3C,AZgIE,CAAb,EAAgB,CAAC,GYhIC,AZgIE,CYhID,IZgIM,CAAC,IYhIf,CAAkB,CZgI7B,EAAkC,CAAC,CYhID,CZgIlC,EACJ,CYjIe,EAA6B,CAA7B,CAAXA;AAAAA,AZiIE,AoB4F2B,KAAP,GR7NsB,AZiItC,EYjIwC,GAAG,AZiItC,CAAC,CAAD,CAAL,CAAS,GYjIyC,CAAC,AZiInD,CAAc,IAAd,CAAmB,GYjIwB,CAAkB,KAAK,AZiIlE,EYjI2C,EAA2B,CAAC,AZiItC,CYjIU,CAAjDA,GZiIM,KAA2C,CAAC,IAAD,IAAS,CAAC,KAAK,CAAC,CAAD,CAAL,CAAS,OAAT,CAAiB,IAAI,CAAC,KAAtB,CAArD,CAAJ,EACN;AAAQ,AoB2FoD,MpB3FpD,KAAK,GAAG,KAAK,CAAC,CAAC,EAAF,CAAL,CAAW,aAAX,CAAyB,KAAzB,CAAR;AYjIJ,AZiI0C,AeuG5C,QHxOM,GGwON,CHxOU,AGwOH,CHxOI,OAAL,IAAgB,EAAE,CAAC,CGwOzB,GAAO,GHxOD,IAA8B,EGwO7B,EHxOiC,CAAC,GAAL,IAAY,EAAE,CAAC,GAAjD,AGwOK,CAAiB,CHxO8B,AGwO/C,EAAoB;AHxO6B,AZiIX,AewG3C,AKZA,ELYA,KKZKA,IAAI,ER7NoD,GGyO/C,CHzOwC,AGyOvC,AKZA,GAAG,CLYlB,AKZKA,CLYe,CAApB,AKZqB,CAAC,GAAG,CAApBA,EAAuB,KAAK,GAAG,IAApC,GAA2C,CAAC,IAAI,KAAK,GAAG,KAAxD,EAA+D;AR7NE,AG0OnE,AKZF,CLUE;AftGE,AoB6FE,SpB7FK,EoB6FE,CAAC,EpB7FV,CoB6Fa,KAAK,QAAL,CAAc,MAAlB,KAA6B,KAAK,QAAL,CAAc,CAAd,EAAiB,cAAjB,IACA,KAAK,QAAL,CAAc,CAAd,EAAiB,GAAjB,CAAqB,UAArB,IAAmC,KAAK,UADrE,CAAP,EAEN;ARhOI,AZkIF,AewGA,AKVM,GpB5FN,GoB4FM,KRhOG,AG0OT,CAAO,AKVK,GRhOC,CQgOG,KAAK,KRhOZ,CAAgB,EQgOT,CAAc,CRhOD,AG0O7B,AKV+B,CRhOD,CQgOd,CLUT,CH1OE,AQgO0B,ERhOA,EAAE,AQgO/B,CRhOgC,GAA7B,AG0OF,EH1OoC,KAAK,IAAvC,CAAP,OG0OK,CAAoB,CAApB,EAAuB;AHzOhC,AZoIE,AesGEA,AKXqC,GRnOzC,GG8OQ,KAAK,GAAG,cAAc,CAAC,OAAf,CAAuB,CAAvB,CAAZA;AfrGF;AYnIF,AGyOI,AKXEA,ER9NN,IGyOQ,EKXE,GLWG,EHzOb,AQ8Ne,CR9Nf,AGyOgB,CAAC,CAAb,AKXc,CAAC,CLWD,GKXK,ER9NvB,CAAE,EQ8N0B,GR9N5B,GAAE,EQ8NqB,CAAc,MR9NnC,AQ8NgB,GAA4B,ER9N5C,CAAM,CQ8NU,GAAmC,CR9NnD,EAAa,EQ8N2C,QAAL,CAAc,CAAd,CAA/CA;AR7NF,AGwOgB,IAAA,IHxOZ,KAAK,KGwOqB,CAAC,MHxOV,AGwOL,CAAsB,KAAtB,EAA6B,CAA7B,EHxOZ,IACA,KAAK,CAAC,IAAN,CAAW,EAAX,CAAc,KAAK,IAAnB,CADA,IAEA,KAAK,IAAL,IAAa,KAAK,CAAC,EAFnB,IAEyB,KAAK,EAAL,IAAW,KAAK,CAAC,IAF9C,EAGJ;AAAM,AGqO6C,AKV7C,QAAI,KR3NG,CQ2NG,GR3NC,CQ2NG,GAAV,CpB3FR,IoB2F0B,ER3Nf,CAAgB,CQ2NG,GR3NC,CAAC,AQ2NE,CAAR,CpB3F1B,CYhI2B,CAAS,CQ2NG,CAAC,GR3NC,EZgIzC,AoB2F0B,ER3NC,EAAoB,AQ2NE,CAAC,IR3NE,CAAC,AQ2NE,CpB3FvD,AoB2FwD,CpB3F5C,EYhIe,CAAhB,AZgIX,AoB2F0B,ER1NC,AZ+HV,EoB2F+C,ER1NjC,CAAC,EQ0NqC,CR1N1C,AQ0N2C,CR1NlC,KAAK,AQ0Nf,ER1NC,EAAkB,AQ0NoC,IAAI,CR1NnC,CAAC,CQ0NqC,CR1N7D,AQ0NsD,CR3NtE,EAC6C,CQ0NqC,IR1NhC,CQ0NrD,GR3NG,CAAP,CQ4NI,KAAK,IAAI,KAAK,CAAC,OAAf,IAA0B,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,IADnD,EACuD;AR3NO,AZgIhE,AeqGF,AKV6D,CLO7D,MflGOA,IAAI,EoB2FyD,GpB3FpD,GAAG,KAAK,KAAtB,EAA6B,KAAK,GAAG,CAArC,EAAwC,KAAK,EAA7C,EACJ;AYhIA,AZgIM,AoB2FE,GRjOR,KZsIU,AoB2FF,IAAI,CpB3FG,CoB2FD,IpB3FJ,CAAW,AoB2FF,KpB3FT,KAAqB,AoB0FuC,GpB1F5D,IAA4B,KAAK,GAAL,CAAS,KAAT,KAAmB,GAAnD,EAAsD;AAAE,AoB4FtD,QAAA,KpB5F6D,CoB4FvD,EAAE,EpB5F8C,GoB4FzC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAP,CAAX,GAAyB,KAAK,UAAL,CAAgB,UAAhB,CAA2B;AR1NzE,AZ8HqE,AeuGrEC,AKbsE,ERxNtE,EGqOM,GKbyD,MRxN/D,CAAA,IGqOoB,GAAG,EHrOvB,AGqOAA,CHrOE,CI1DF,KJ0DA,GAAE,SAAA,MAAA,GAAS;AACP,AI1DJ,AhBuL0E,AoB6FnE,WR1NI;AAAC,AIzDZ,MJyDY,QAAQ,EAAE,SAAX;AAAsB,AIxDjC,AhBsLI,AoB6FE,MR3N2B,EQ2NvB,CpB7FC,AoB6FA,CR3N0B,AZ8HjC,EY9HmC,EQ2NjC,EAAU,CR3N4B,IAAL,CAAU,MAAV,EAA5B;AACC,AIxDZ,AhBsLE,AoB4FgB,GpB1FhB,GYhIU,IAAI,EAAE,AQ0NM,IAAI,CR1NL,IADZ,AQ2Na,CAAU,sBAAsB,GAAhC,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;AY/HF,AI9CF,AhB6K8E,AoBkFtE,OJ/PHA,IJ8CI,AI9CA,CI+PG,GRjNC,AI9Cb,CI+PgB,CAAC,EJ/PA,EI+PL,CJ/PZ,EAAsB,CI+PG,CRjNhB,CAAgB,EQiNI,CAAC,ERjNA,CQiNL,CAAS,ERjNzB,EAA2B,KAAK,CQiNhB,CRjNhB,EAAoC,CQiNG,IRjNE,CQiNG,GRjN5C,CAAP,MQiNU,IAAuD,CAAC,IAAI,CAAC,YAAL,CAAkB,CAAlB,CAA5D,EAAkF;ARhN5F,AI9CIA,AI+PQ,GRnNZ,KI5CQ,EI+PI,CJ/PD,GAAG,GAAG,CAAC,EI+PI,EJ/PL,CAAbA,AI+PqB,QAAQ,CAAC,IAAI,CAAC,GAAN,CAAR,GAAqB,CAAlC;ApBlFR,AoBmFQ,SpBnFD,GAAG,GAAG,GAAN,GAAY,KAAK,YAAxB;AY7HJ,AI/CI,AhB6KF,AoBmFS,ERjNX,MI/CQ,GAAG,KJ+CX,CAAA,MI/CuB,GJ+CvB,CAAE,GAAF,CI/CI,EJ+CF,AI/C6B,SJ+C7B,GAAA,CAAI,OAAJ,EAAa;AACXA,AIhD6B,MAAA,EJgDzB,CIhD4B,GJgDxB,AIhD2B,GJgDxB,AIhD2B,CAAC,IAAJ,CAAS,CJgD1B,CAAC,EIhDgB,CAAN,MJgDlB,CAAkB,KAAK,IAAvB,EAA6B,CAA7B,CAAXA;AAAAA,AIhDiD,AhB+KnD,AoBkFQ,KJjQN,GJgD4C,AQiNtC,ERjNwC,CI/CzC,AhB8KP,CAAO,AoBkFK,CRjNuC,EI/CxC,CIgQK,GJhQD,AhB8Kf,CY/H0D,AQiNtC,CRjNuC,AQiNtC,CpBlFd,CgB9KY,EIgQX,KRjN2C,CAAkB,AZ+H9D,KY/HmE,EAAvB,AZ+H5C,CAAQ,CY/H+D,AI/CvE,CJ+CwE,CAA5B,AI/Cf,AhB8K7B,CY/HLA,CZ+HkB,GAAb,EAAkB;AgB9Ka,AhB+KpC,AoBkFK,MJjQ+B,AhB+KhC,EAAE,CgB/KiC,EhB+K9B,CgB/KiC,GhB+K7B,CAAP,IAAY,CgB/KiC,CAAC,ChB+K/B,EgB/K8B,EAAM,AhB+KhC,GAAG,CgB/KuB,AhB+KtB,EgB/KkC,EAAZ,CAAf,EhB+KX,CAAY,IAAjC,CAAJ,EAA0C;AY/H1C,AIhDkE,AhB+KtB,QY/HxC,EZ+H8C,EY/H1C,CAAC,CZ+H6C,MY/HlD,IAAgB,AZ+H8B,CAAe,CY/H3C,CAAC,OAAnB,IAA8B,CZ+H6C,GY/HzC,AZ+H2B,CY/H1B,EZ+H8C,CY/HnD,IAAY,EAAE,CAAC,GAAjD,EAAoD,EZ+HF,CAAN;AY/HU,AZ+H+C,AoBmFjG,UAAI,GRlNqD,IAAP,GQkNpC,IAAI,CAAC,CAAnB,EAAoB;ARlNyC,AI/CjE,AIiQ0B,IJjQ1B,IIiQ0B,EJjQpB,CAAC,IAAD,CAAN,EIiQoC,CJjQrB,EIiQwB,CJjQvC,AIiQ0B;AJhQ3B,AhB8KCA,AoBkFwC,MpBlFpC,IAAI,GAAG,EAAXA;AY/HA,AZgIAA,AoBkFG,MpBlFC,KYhIG,AZgIE,GAAG,CYhID,AZgIXA,cYhIO,CAAmB,IAAI,CAAC,GAAxB,EAA6B,EAAE,CAAC,GAAhC,EAAqC,KAAK,IAA1C,CAAP;AACJ,AI/CE,AhB8KEA,GYnIJ,GZmImB,GgB9KV,MAAP,GhB8K6B,GAAG,GAA9BA;AgB7KH,AIgQK,EJ9PN,MI8PU,UAAU,GAAG,CAAC,CAAd,KAAoB,GAAG,GAAG,EAAN,IAAY,CAAC,IAAI,KAAK,QAAL,CAAc,MAAd,GAAuB,CAA5D,CAAJ,EAAoE;ARhN1E,AI7CA,AhB2KI,AoBmFI,ERjNR,IQiNQ,CpBnFCA,CoBmFC,GpBnFG,AoBmFA,GAAL,CpBnFS,CY9HjB,CAAA,CZ8HoB,GAAhB,IAAuB,CY9H3B,CAAE,KAAF,GAAE,SAAA,KAAA,CAAM,KAAN,EAAa;AACX,AI7CJ,AhB2KA,QY9HQ,AZ8HR,GAAyB,EY9HZ,CZ8He,IAAI,CAAC,MY9HR,CZ8HG,CAAa,SAAb,CAAuB,EY9H3C,IACA,KAAK,CAAC,AZ6Hc,CAA5B,GY7HQ,CAAW,EAAX,CAAc,KAAK,IAAnB,CADA,IAEA,KAAK,IAAL,IAAa,KAAK,CAAC,EAFnB,IAEyB,KAAK,EAAL,IAAW,KAAK,CAAC,IAF9C,EAGJ;AAAM,AZ2HK,AoBmFH,QpBnFG,GoBmFEA,ER9MA,AZ2HF,EoBmFM6B,CpBnFN,CY3HM,CQ8MC,CpBnFP,CAAA,CoBmFU,CAAC,GpBnFX,AoBmFc,CAAjB,EAAoBA,GR9Mf,AQ8MgB,CR9MG,EQ8MA,ER9MI,CAAC,EQ8MA,CR9ML,CAAS,KAAK,CQ8Md,CAAc,ER9Md,EAAoB,EQ8M5C,EAA8CA,CR9MG,CAAC,CQ8MH,EAA/C,CR9MwB,CAAnB,AQ8M8C,ER7M3B,IAAI,CAAC,GAAL,CAAS,KAAK,EAAd,EAAkB,KAAK,CAAC,EAAxB,CADnB,EACgD,KAAK,IADrD,CAAP;AACiE,AZ0HrD,AoBoFR7B,QpBpFQ,IoBoFJ,EpBpFI,EoBoFA,CpBpFA,EoBoFG,CpBpFH,CAAA,GoBoFQ,GpBpFR,KoBoFG,CAAc6B,GAAd,CAAX7B;AR7MV,AZ0HMA,GYhIN,CI3Ca,IhB2KH,EgB3KS,ChB2KN,EgBxKX,ChBwKc,QgBxKd,IhBwK0B,EgBxK1B,CAAY,AhBwKiB,IgBxK7B,EAAkB,AhBwKdA;AgBvKN,AhBwKM,AoBmFI,IpBnFJ,IAAI,CAAC,GoBmFG,CpBnFR,CAAU,EoBmFE,CAAC,CpBnFb,EAAgB,CoBmFR,IpBnFR,AoBmFqB,EpBnFE,EoBmFE,CAAC,EpBnFE,CoBmFP,CAAS,CpBnFC,MAA/B,GoBmFqB,IAAuB,KAAK,UAAzC,IAAuD,CAAC,IAAI,CAAC,YAAL,CAAkB,CAAC,CAAnB,CAA5D,EAAmF;AR5M7F,AI9CA,AI2PY,ER7MZ,QQ6MY,MR7MZ,CAAA,CQ6MoB,GAAG,KR7MvB,CAAE,EQ6M6B,CAAC,GR7MhC,CQ6MoC,CAAC,CR7MnC,EQ6M6B,CAAnB,MR7MV,MAAA,GAAS;AACP,AI9CA,AhBuKE,AoBoFM,OJ3PH,ChBuKC,CAAC,EYzHA,CI9CP,AhBuKE,EAAQ,CgBvKG,EAAb;AJ8CQ,AZyHI,AoBqFL,MR9MC,QAAQ,EAAE,YAAX;AAAyB,AI7ChC,AhBsKiB,MYzHe,AI7C5B,IJ6CgC,AI7C5B,CAAC,CJ6C6B,II7CtC,CJ6C2C,CI7C7B,GJ6CwB,CAAU,MAAV,EAA/B;AACC,AI9CQ,AI4PV,IJ5PU,EJ8CR,EQ8MF,ER9MM,AQ8MJ,ER9MM,CI9CW,CAAC,AI4Pd,GR9MO,CI9CW,AI4Pd,CJ5Pe,AI4Pd,ER/MV,EQ+MD,CJ5PmB,EAAa,IAAb,EAAmB,KAAK,KAAxB,CAAT;AJ8CS,AI9C8B,AhBuKrD,AoBsFG,GJjQW,CAKpB,AhBsKM,EYzHuB,EAAE,AZyHrB,EYzHuB,CZyHpB,IYzHyB,AZyHrB,CAAC,KAAL,CAAW,KAAX,CAAP;AY1HK,AI3CX,KJ2CI;AAEJ,AZyHM,AoBsFE,GRlNR,KZ4HU,EoBsFE,EpBtFE,CAAC,KoBsFK,CpBtFd,EAAe,CoBsFG,CAAC,CAAjB,EAAkB;ApBtFH,AoBsFK,QAAA,QAAQ,GAAG,KAAK,UAAL,CAAgB,UAAhB,CAA2B,MAAtC;AR7M1B,AI9CE,AhBqKwB,AoBsF4C,ER7MtE,KI9CO,IAAL,GAAY,EJ8Cd,CAAO,CI9CL,OJ8CF,GAAO,SAAA,QAAA,CAAS,MAAT,EAAiB,IAAjB,EAAuB;AAC5B,AI9CA,OAAK,CJ8CD,EI9CJ,GAAW,EJ8CA,EI9CI,CAAC,CJ8CD,CAAC,CI9CL,GJ8CP,AI9CkB,IJ8CE,AI9CE,CAAC,GAAL,CAAS,GJ8C3B,AI9CO,GAA0B,CJ8CD,OAAO,CI9CG,CAAC,EJ8CA,CAAC,EAAZ,GI9CU,CJ8CQ,AI9CtD,QJ8CA,EACJ;AAAM,AI9CJ,AhBoKI,AoBsFE,GJxPN,ChBkKI,QYtHM,IAAI,AZsHE,GAAG,GAAG,GAAG,CYtHf,AZsHN,CYtHqB,2CAAf,CAAN;AAAiE,AI3CrE,AhBkKI,AoBsFC,IpBtFD,KAAK,IAAI,MAAM,GAAG,CAAlB;AACD;AYvHD,AQ6ME,IAAA,MAAM,CR7MD,EQ6MI,ER7MA,CQ6MT,aR7MK,CAAmB,IAAI,CAAC,IAAxB,EAA8B,IAAI,CAAC,EAAnC,EAAuC,MAAM,CAAC,YAAP,CAAoB,IAAI,CAAC,IAAzB,CAAvC,CAAP;AACJ,AZuHI,AoBsFC,GRjNH,MZ2HS,IAAI,WAAJ,CAAgB,GAAhB,EAAqB,IAArB,EAA2B,YAA3B,CAAP;AACF,CAfA;AoBqGE,SAAO,QJ1PT,WAAA,SAAA,QAAA,CAAS,KAAT,EAAgB;AAAE,AhBsKlB,AoBoFU,CRhQe,CAAS,EQgQxB,ERhQe,EQgQX,CJ1PW,CI0PT,CpBpFhB,CAAO,EgBtKuB,CAAC,AI0PV,KJ1Pe,GAAN,CAAZ,ChBsKlB,AoBoFS,GpBpFF,SAAA,aAAA,CAAc,GAAd,EAAmB,GAAnB,EAAwB;AgBtKS,AhBuKtC,AoBmF6B,GJvPjC,CIuPiC,GpBnFxBA,CoBmFwB,EAAE,CpBnFtB,CAAC,EoBmFH,CpBnFM,CAAb,EAAgB,CAAC,GAAG,YAAY,CAAC,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AgBnKlD,AhBoKMA,AoBkFiC,IAAA,EAAA,EpBlF7B,AoBkF+B,EAA9B,IpBlFK,GAAG,YAAY,CAAC,CAAD,CAAzBA;AYzHN,AI1CA,AIqP2C,IR3MvC,AQ2MuC,CR3MtC,MAAL,CAAY,EQ2M+B,EAAE,QR3M7C,EAA0B,AQ2Mf,cR3MX,GdxHA;AACA,AkB8EA,AhBmKM,AoBiFiD,IAAA,IpBjF7C,IoBiF6C,EpBjFvC,AoBiFyC,CpBjFxC,GAAP,IAAc,GAAd,IAAqB,MAAM,CAAC,GAAP,IAAc,GAAvC,EAA0C;AgBlKhD,AhBkKkD,AoBiFvC,GAAP,UpBjFqD,MAAP;AFhPlD,AkB+EA,AhBiK+D,AoBkF7D,StBlUO,CAAC,SAAV,CAAoB,OAApB,GAA8B,UAAS,IAAT,EAAe,EAAf,EAAmB,IAAnB,EAAyB;AkBgFvD,AhBiKK;AFhPHA,AkBgFF,MlBhFM,OAAO,GAAG,EAAdA,CsBmUA,eAAA,SAAA,YAAA,CAAa,IAAb,EAAmB;AtBnUnBA,AkBiFF,AhBgKIA,AoBmFA,MtBpUgB,AEiPZ,AoBmFA,KtBpUiB,AsBoUZ,CpBnFC,EFjPc,CEiPX,CFjPfA,CsBoUM,IAAe,CAAC,KpBnFK,AoBmFA,CpBnFC,SoBmFtB,IAAmC,CAAC,CpBnFf,CAAZ,GAAgC,AoBmFA,QAAL,CAAc,EpBnFE,CAAC,GoBmFzD,EAA4D,EpBnFf,CAAoB,GAApB,EAAyB,GAAzB,CAA7CA;AFjPFA,AkBkFF,AhBgKI,AoBkF8D,EpBlF9D,IFlP4B,KsBoUyC,GtBpUjC,EsBoU0B,CtBpUvB,AEkPxB,GAAG,CFlPpBA,AEkPqB,eAAe,GAAG,CAAnB,IAAwB,gBAA1C;AFlPFA,AkBmFF,AhBgKI,AoBiF0E,MtBpU7B,GEmPtC,GFnP4C,GAAG,AEmPtD,IFnPFA;AACA,AkBmFF,AhBgKE,CAR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AlBvFhB,AkBuFkB,AhBsJ+B,AoByF/C,CpBzFFK,EAEA,GoBuFM,CtBtUD,AsBsUEgB,EJ/OkB,ClBvFzB,CAAS,EsBsUK,CJ/OgB,AI+Of,CJ/OgB,II+OxBA,CJ/O6B,GlBvFpC,AkBuF8B,AI+ONA,CtBtUF,AkBuFJ,IlBvFlB,CsBsU+B,CtBtUH,AsBsUI,EtBtUhC,EAA8B,EsBsUxB,KAAqC,GtBtUV,GsBsUgB,CtBtUnB,EAAS,CsBsUc,EtBtUvB,EAAiB,AsBsU7C,EAAyD;AtBrUzD,AkBsFsC,AIgP/B,QtBtUH,AsBsUG,CtBtUF,GsBsUE,CtBtUE,CAAC,CsBsUH,OtBtUP,EAAkB,AsBsUX,CAAA,IAAA;AtBtUa,AsBsUP,QAAA,QAAA,GAAA,SAAA,CAAA,MAAA;AtBtUa,AE+O5BhB,sBAAAA,CAAI,MAAJA,CAAI,GAAJA,GAAI,YAAS;AAAE,AoBwFX,QAAI,CpBxFc,GoBwFV,CAAC,CpBxFc,KAAL,CAAW,CoBwFzB,GpBxFc,CAAgB,AoBwFb,CAArB,EAAwB,EpBxFe,KAArB,CAAP;AF9Ob,AE8O+C,AoByF3C,CpBzFNA,EACA,CF/OE,EsBuUI,EtBvUA,MsBuUQ,GAAGyB,QAAM,IAAI,IAAI,CAAC,SAAL,CAAeA,QAAM,GAAG,CAAxB,KAA8B,IAAnD,CADsB,CAE9B;AtBvUI9B,QAAI,QAAQ,GAAG,IAAfA;AsBwUI,UAAI,QAAQ,IAAI8B,QAAM,IAAI,IAAI,CAAC,SAAL,CAAe,MAAzC,EAAiD;AtBvUrD,AE8OFzB,AoB0FQ,QtBxUF,IAAI,CsBwUGL,IAAI,IAAI,CpB1FrBK,CAAI,CF9OkB,AsBwUE,IAAXL,EAAiB,GpB1F9BK,CAAI,CoB0F0B,EpB1F9BA,CoB0F8B,EpB1F1B,GoB0F0B,CAAtB,EAA6B,ItBxUnC,AsBwUM,EtBxUwB,AE8Of,AoB0F0B,IAAI,GAAG,IAAI,CAAC,UAA/C,EAA2D;AtBvU/DL,AE6Oe,AoB2FT,SpB3FgB,CF7OlB,GAAG,CE6OoB,AoB2FjB,EtBxUA,GE6OY,AoB2FP,CtBxUD,AE6OmB,CF7OlB,CsBwUG,GpB3FI,CF7OtBA,AE6OuC,AoB2FjB,CAAC,IpB3FqB,KAAtB,CAAP,CoB2FT,EAA8B;AtBxUpCA,AE6OkD,AoB4F1C,CpB5FZK,EACA,OF9O0B,KAAtBL,CsByUY,KAAK,CAAC,QAAN,IAAkB,IAAtB,EACd;AAAgB,cAAA,SAAS,GAAG,OAAO,GAAG;AtBzUhC,AsByUiC,atBzU1B,GsByU0B,EtBzUrB,EsByUyB,CtBzUtB,CsByUwB,GtBzUpB,CAAC,CsByUwB,CAAC,KtBzU9B,CAAa,GAAb,CAAf,AsByUgC,EtBzUE;AAC/B,AE6OPK,AoB2F6D,StBxUrD,OsBwUqD,CtBxU7C,KAAK,AE6OrBA,AoB2FmE,CpB3F/D,CoB2FiE,MtBxUxC,CE6O7BA,CAAI,AoB2FyE,CtBxU7C,AsBwU8C,EtBxU9D,AE6OhBA,CF7OO,EAA8B,AE6OjC,AoB2FyE,CAAR,GtBxU9D,AsBwUgF,CtBxU7C,KAAnC,EE6OQ;AF5OT,AE4OW,AoB2FmB,QtBvU9B,CE4OkB,EF5Of,GAAG,AE4OiB,CoB2Ff,EpB3FU,CAAS,CF5OhB,CAAC,QE4OM,CAAoB,IF5OhC,CAAoB,AE4OiB,GF5OrC,CAAN,CE4OkB,CAAP;AF3OZ,AE2OkD,AoB2FkC,CpB3FzFA;AF1OG,KAND,MAMO,IAAI,IAAJ,EAAU;AACf,AsBqUQ,UtBrUJ,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,KAAlB,CAAJ,EAA4B;AAAE,AGlDpCJ,AmBwXa,InBxXP,IHkD8B,MGlDpB,EHkD4B,CGlDzB,EHkD4B,CAAC,GGlDvB,CHkDsB,AGlDrB,CHkDU,KGlDjB,CAAc,IAAd,CAAnBA,EAEA;AHgDqD,AG/CrD;AHgDK,AG/CL,AmBqXYD,KtBxUD,MAEA,GsBsUK,IAAI,GAAG,IAAI,CAAC,UAAhBA;AtBrUN,AG/CN,MH+CM,QAAQ,GAAG,IAAI,CAAC,KAAhB;AACD,AG/CL,AmBoXY,cAAI,IAAI,IAAI,IAAI,CAAC,IAAb,IAAqB,IAAI,CAAC,IAAL,CAAU,OAAnC,EAA0C;AnBnXtD,AmBmXwD;AtBpUpD,AG9CJ,AmBkX6D,QtBpUrD,QAAQ,IAAI,QAAQ,CAAC,MAAzB,EAAiC;AAC/BA,AG9CN,AmBkXW,UtBpUD,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AqBoaV,QrBpaU,QAAQ,GAAG,MAAM,CAAC,OAAlB;AE6DR,AF5DO,OAHD,MAGO;AE6Db,AF5DQ,QAAA,QAAQ,GAAG,KAAK,QAAL,CAAc,OAAzB;AACD;;AACDN,UAAI,KE2DV,AF3De,GAAG,QAAQ,CAAC,CE2D3B,SAAA,AF3DMA,UE2DN,CAAW,GAAX,EAAgB;AAClB,AmBsWE,EAAA,InBtWF,GAAuB,GAAG,EmBsWxB,CAAO,EnBtWsB,ImBsW7B,GnBtWwB,AmBsWjB,CnBtW8B,QmBsW9B,CnBtWiB,CAAuB,GAAvB,CAA1B,AmBsWS,CAAO,MAAP,EAAe,IAAf,EAAqB,MAArB,EAA6B,IAA7B,EAAmC;AnBtWnC,AF3DD,AqBkaJA,MnBvWK,EmBuWD,GnBvWC,AF3DIA,GE2DJ,AmBuWK,CrBlaG,EE2DR,AmBuWQ,CnBvWR,GmBuWY,CAAC,CnBvWb,KF3DqB,GAAG,AqBkahB,CAAe,IrBlaM,AqBkaF,CAAC,IrBla7B,AqBkawB,CAAU,CrBlaG,GqBka5B,CAAbA,SrBlasD,IAAI,CAAtD,EAAyD,aAAa,EAAtE,EAA0E;AE2DlE,AF1DhB,AqBkaIA,MnBxWY,EmBwWR,InBxWQ,AF1DhB,AqBkaY,GnBxWI,AF1DW,AqBkaZ,GnBxWC,AF1Dc,CE0Dd,EmBwWK,ErBlac,EE0DnB,AmBwWS,MrBlaK,AqBkaC,CrBlaa,AqBkaZ,IAAD,EAAO,IAAP,EAAa,CrBlad,CAA9B,IqBka+B,CAA3BA;AnBvWA,AF3DW,SE2DJ,GF3DI,IAAA,GAAA,GAAA,CAAA,IAAA;AE2DH,AF3DS,AqBmajB,InBxWQ,IAAI,AmBwWR,CAAC,CnBxWS,EF3DG,CqBmab,EnBxWe,EF3DF,AqBmaJ,CAAC,ErBnaG,EE2DH,AmBwWI,CnBxWS,AF3DV,AqBmaE,CrBnaF,EqBmajB,EACJ,CrBpaqB,IE2DH,CAAwB,KAAxB,CAAP;AAAqC,AF3DU,AqBoapD,InBzW0C,EmByW1C,GnBzW0C,CmByWtC,CnBzWwC,CF3DU,CqBoa/C,GnBzWF,AF3DiD,GAAA,KAAA,CAAF,oBqBoa/B,UAAd,CAAyB,QAAzB,EAAmC,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,KAAf,CAAqB,IAArB,EAA2B,MAA3B,CAAnC,CAAP;AnBzWiD,AF3DG,AqBoayB,InBzW5B,MAAA,EAAE,AF3DS,MAAA,GAAA,KAAA,CAAR,CADwB,CAElF;AE0DW,AFzDX,GEyDI;AACF,AFzDF,AqBkaI,GnBvWF,QmBuWS,IAAI,YAAJ,CAAiB,MAAjB,EAAyB,IAAzB,EAA+B,IAAI,CAAC,GAApC,EAAyC,IAAI,CAAC,UAAL,IAAmB,IAAI,CAAC,GAAjE,CAAP;AnBtWF,AmBuWF,GANE;AnBhWA,AF5DQ,YAAI,IAAI,IAAI,CAAR,KAAc,KAAK,GAAG,KAAK,CAAC,SAAN,CAAgB,KAAK,CAAC,IAAtB,MAAgC,MAAM,GAAG,KAAK,CAAC,UAAN,CAAiB,2BAAS,IAAT,CAAc,KAAd,CAAjB,EAAuC,KAAvC,CAAzC,CAAH,GACH,IAAI,CAAC,iBAAL,CAAuB,MAAM,CAAC,IAA9B,CADhB,CAAJ,EAEV;AE2DE,AF3DU,AqBkaZ,EAAA,YAAA,CAAA,ErBlamB,OqBkanB,CAAE,SAAF,GAAE,SAAA,SAAA,GAAY;ArBlaK,AqBkaH,WAAO,CrBlaJ,UAAA,EAAC,UAAD;AAAW,AqBkaN,MAAA,IAAI,ErBlaE,AqBkaA,KAAK,IAAL,CAAU,GrBlaV,CqBkaA,CrBlaE,AqBkaa,IAAtB,SrBlaJ;AAA0B,AqBkaM,MAAA,KAAK,CrBlaX,CqBkaa,EnBtWxD,GF5D2C,AqBkakB,ErBlahB,EqBkaW,CAAU,GrBlajD,EqBkaI,CnBtWrB,SAAA,WAAA,CAAY,GAAZ,EAAiB;AACf,AF7DiD,AqBkasB,MnBrWnE,AmBqWmE,GnBrWhE,GF7D0C,CE6DtC,CAAX,EAAY,EF7DqC,EAAE,AqBkakC,EAAE,KAAK;AnBrW9E,AF7DC,AqBkaI,KAAP,MnBrWS,AF7Db;AE6Dc,AF7DoC,AqBka6C,GAA3G,GnBrW0B,GF/DhB,CE+DoB,AF5D9B,EE4DgC,IAAP;AAAa,AF3DtC,ME2DsC,KAAK,EAAE,CAApB;AAAuB,AF/DtC,AqBsaV,EAAA,InBvWgD,MAAM,CF1DvC,CE0DyC,AmBuWxD,CAAA,ErBjamB,IAAI,GqBiavB,CrBja2B,AqBiazB,CrBjaiB,IAAa,KAAb,CqBianB,GAAE,CrBjawC,IAAI,GAAG,CqBia/C,IrBjaoD,CAAC,MqBiarD,CAAY,IAAZ,CrBja+C,CAAmB,AqBiahD,KrBjaqD,CAAC,IAAzB,CAA9B,CAAJ,EACf;AEyDyB,AFzDb,AqBgaU,KnBvWJ,MmBuWW,KAAK,GrBhaf,EqBgaU,IAAc,UAAd,IAA4B,KAAK,IAAL,CAAU,EAAV,CAAa,IAAb,CAAnC;AnBvWoC,AFzDvC,AqBgawD,GAA3E,WrBhamB,UAAA,EAAC,UAAD;AAAW,cAAA,aAAA,EAAE,aAAb;AE0DnB,AF1D6C,AqBka7C,EAAA,InBxWA,GAAuB,GAAG,EF1DmB,AqBka7C,CAAA,EnBxW+B,GF1Dc,EAAE,EE0DrB,AmBwW1B,CnBxWuC,AmBwWrC,GrBlaiB,ME0DO,AmBwW1B,CnBxWiD,EmBwW/C,CnBxWwB,CAA1B,OmBwWE,SAAA,CAAU,IAAV,EAAgB,EAAhB,EAAoB;AnBxWb,AF1D4C,AqBmajDM,IAAAA,EnBzWK,KAAA,CmByWLA,CAAAA,CnBzWK,AF1D4C,GE0D5C,CAAA,AF1D4C,EAAE,EqBmanDA,CnBzWK,AmByWC,SAANA,CAAM,IAANA,CAAe,IAAfA,EAAgB,IAAhBA,EAAsB,EAAtBA,EADkB,CAEtB;AnB1WgB,AF1DG,ME0DH,MAAA,CF1DJ,EE0DI,GAAA,CAAA,MAAA;AF1D4C,AqBqaxD,QAAI,GrBhb0E,CAYlF,CqBoaa,KAAL,IAAc,SAAlB,EAA6B;AnB1W7B,AFzDJ,AqBoaMN,MnB3WE,ImB2WE,EnB3WI,GAAG,CmB2WD,EnB3WZ,CmB2We,CnB3WC,ImB2WI,MAAlBA;AnB3WgB,WAAO;AAAC,AmB4WxB,MnB5WwB,IAAI,EAAE,CmB4WvB,CAAC,GnB5W2B,GmB4WrB,CAAC,GnB5We,CAAa,AmB4W3C,EAAmB,GnB5WW,CAAmB,KAAnB,CAAP;AAAgC,AFxDnD,AqBoaiB,MnB5WkC,EmB4WlC,GnB5WkC,CFxD/C,CEwDiD,CmB4W9B,GAAG,CnB5WP,AFxDT,IAAI,CqBoakB,CAAC,GrBpad,CAAC,EqBoaH,OrBpaH,CAAgB,MAA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aW,ErBhaR,CqBgaC,OrBhaO,CAAC,UAAxB,EAAoC;AE6DtC,AF5DIA,AqB+ZwB,QrB/ZpB,IAAI,GAAG,QAAQ,CAAC,KAAT,CAAe,KAAf,CAAXA;AE6DJ,AF7DIA,QAAkC,OAAO,GAAG,KAAK,CAAC,SAAN,CAAgB,IAAI,CAAC,IAArB,CAA5CA;AqBgaA,UAAI,OAAO,CAAC,MAAZ,EAAkB;ArB/ZlB,AqB+ZoB,QrB/ZhB,CAAC,MqB+ZsB,CrB/Z3B,EAAY,IqB+ZsB,CAAC,MAAR,CAAe,cAAf,CAA8B,OAA9B,CAAP;AnBlWxBG,AF7DkB,AqB+ZmD,oBnBlWrEA,CAAI,MAAJA,CAAI,GAAJA,GAAI,YAAS;AAAE,AF7DQ,AqBgapB,KAL0B,EAKxB,EnBnWiB,KAAK,EmB8VE,EnB9VP,AmBmWN,CnBnWgB,MAAjB,EmB8Vc,CAA3BH;AnB9VoC,AmBqWpCA,CnBrWFG,EAEA,KmBmWM,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,GAAvBH;AnBlWF,AF/DI,AqBiaFA,IrBjaE,IqBia0B,CrBjarB,SqBia+B,GAAG,IAAI,IAAI,IAAI,CAAC,UAAtDA;AnBjWF;AF/DI,AqBiaF,QrBjaM,AqBiaF,IAAI,CrBjaG,AqBiaF,GrBjaK,CAAR,EqBiaN,ErBjamB,AqBiaF,SrBjaW,IAAI,CAA1B,IAA+B,IAAI,CAAC,OAAL,CAAa,IAAhD,EAAsD;AAAA,AqBkatD,UAAI,CAAC,GAAL,EAAQ;ArBjaN,AqBiaQ,MrBjaR,EqBiaQ,GrBjaH,AqBiaM,GrBjaH,AqBiaM,CnBlWpB,MF/DM,CqBiasB,CAAC,GnBlW7B,SAAA,EmBkWoB,CAAwB,IAAI,CnBlWhD,AmBkWiD,GnBlWtC,CmBkWS,CAAN;AnBjWZ,AF/DI,AqBgagD,MnBjWhD,AF/DA,CqBgaF,ErBhaK,CAAC,CE+DC,EmBkWF,CrBjaH,CE+DA,AF/DS,CE+DC,CmBkWH,GnBlWP,AmBkWU,CnBlWK,AmBkWJ,QrBjaY,AqBiahB,CrBjaiB,GqBiaD,CnBlW3B,AF/DgC,AqBiazB,CrBja0B,CE+DD,AmBkWJ,GrBjaA,CAAU,IAAI,CAAC,YAAL,CAAkB,IAAI,CAAC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,GAAI,YAAO;AnB/VX,AF3Dc,AqB0ZD,WAAO,KAAK,IAAL,CAAU,QAAjB;ArB1ZS,AqB0ZgB,GAAtC;;ArBzZI,AqB2ZJ,EAAA,OrB3ZSA,IAAI,CAAC,CE2Dd,EF3DiB,CAAC,GAAG,CAAjB,AqB2ZJ,CAAI,CrB3ZoB,CAAC,EE2DzB,EF3D6B,AqB2Z7B,CrB3ZI,AqB2ZA,ErB3Z4B,CAAC,AqB2ZjC,ErB3ZI,CE2DJ,AmBgWI,CrB3ZiC,QE2DrC,CAAU,EmBgWG,GnBhWb,EAAiB;AACf,AF3DJ,AqB0ZiB,MnB/VT,IF3DR,CE2Da,AmB+VW,CnB/VV,GF3DW,CqB0ZI,ErB1ZD,CE2DpB,CAAc,AmB+VE,CAAU,ErB1ZD,CE2D7B,EAAsB,CmB+VF,GAAmB,CrB1Zf,AqB0ZJ,CrB1ZkB,CAAd,CAA5B,AqB0Z+C,CAA9B;AnB/VW,AF3Df,AqB0ZmC,GAA9C,CA1EgB,CA4ElB,KrB5Za,CE2DsB,KAAK,CF3D3B,GAAA,KAAA,CE2DsB,AF3DtB,CE2DsC,IF3DtC,CE2D2C,UAArB,EAAiC,KAAK,UAAtC,EAAkD,KAAK,CAAC,OAAxD,CAAP;AAAuE,AF3D/E,AqB6ZpB,GnBlWI,MACJ,CF5DoB,MAAA,GAAA,KAAA,CAAA,IAAA;AE4DX,AF3DDA,AqB6ZR,UrB7ZY,CE2DI,KAAK,CF3DF,GE2DH,AF3DM,CE2DI,eF3DY,CAAC,CE2DvB,CAA4B,CF3DN,EAAM,CAAN,CE2DW,CAAC,AF3DHO,IE2D/B,CAAP,CF3D6B,EAAea,OAAf,EAAsB,IAAtB,CAA9BpB;AE2D+C,AmBmWvD;AnBlWE,AF3DM,GE6DN,OF7DU,CAAC,OAAD,IAAY,OAAO,CAAC,UAAxB,EAAkC;AE8DxC,AF9D0C,iBAAS,IAAT;AE+D1C,AF/DuD,AqB8ZzD,EAAA,YAAA,CAAA,SAAA,CAAE,cAAF,GAAE,SAAA,cAAA,CAAe,IAAf,EAAqB,GAArB,EAA0B;ArB7ZrB;AqB8ZHA,QAAI,MAAM,GAAG,KAAK,IAAL,CAAU,aAAvBA;ArB7ZE,AqB6ZFA,QAAsC,GrB7Z7B,AqB6ZgC,GAAG,CnB/V9C,EmB+VEA,MnB/VF,SAAA,KAAA,GAAQ;AACN,AF/DU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AiB,IAAI,CEwD/B,AFxDgC,CEwD5B,GAAJ,GAAI,AFxDM,EAA+B,IAA/B,EAAqC,IEwD7B,CFxDR,CAAVA;AEwDoB,AFvDpB,AqBqaE,SrBraK,AqBqaA,EnB9WoB,CFvDjB,IEuDsB,AFvDlB,CAAC,AqBqab,GnB9WkB,AmB8WF,SrBraS,CAAC,EqBqaE,CAAC,CrBraJ,EAAO,EqBqaE,ErBraE,CAAC,KqBqaT,ErBraH,AqBqamB,ErBraE,CqBqalB,EAAqB,ErBraxB,CAApB,AqBqa+C,GrBraG,AqBqaA,GrBralD,CqBqasD,CAAC,CrBraC,IAA/D,CqBqa8B,EAAwC,IAAxC,EAA8C,IAA9C,CAA5B;AnB9WkC,AFtDrC,AqBqaD,GnB/WE,AmB8VF,CAzIkB,CA4JlB;AACA;AnBhXA,AFtDA,AqBuaA,EnBjXA,OFtDS,CEsDT,CAAA,SAAA,CAAE,AFtDF,CAAsB,IAAtB,EAA4B,IEsD5B,GAAE,CFtDF,EAAsC,KAAtC,CEsDE,CFtD2C,UEsD3C,CAAY,IAAZ,EAAkB,EAAlB,EAAsB;AAAE,AFrDxB,OAAKA,IEqD0B,AFrDtB,CAAC,GAAG,CEqDuB,IAAL,AFrD/B,CEqDyC,CFrDrB,CAAC,GEqDU,AFrDP,CEqDuB,IAAhB,EAAsB,CFrDrB,CEqDD,AFrDE,CEqDT,SFrDxB,EAA6C,CAAC,EAA9C,EACF;AEoD0D,AFpDtD,GEoDJ,KFpDQ,CAAC,IAAI,CAAC,WAAL,CAAiB,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,KAAnC,CAAL,EAA8C;AAAE,AqBsapD,EAAA,WrBta2D,CqBsa3D,CAAA,ErBtaoD,OqBsapD,CAAE,MAAF,GAAE,SAAA,MAAA,CAAO,IAAP,EAAa,SAAb,EAAwB,SAAxB,EAAmC,IAAnC,EAAyC;AnBhXzC,AFtDyD,AqBuavD,EnBjXF,MmBiXM,KAAK,KAAL,InBjXN,AmBiXoB,CnBjXhB,QAAJ,CAAI,AmBiXE,GnBjXN,CmBkXM,CAAC,CnBlXH,GmBkXO,CAAC,QnBlXG,EmBkXR,CAAgB,KAAK,IAArB,CADL,EAC+B;AnBlXhB,AFtD4C,AqBwa1B,WnBlXX,EmBkXkB,GnBlXb,EmBkXM,EnBlXX,CAAU,MAAjB;AAAuB,AmBkXO,GnBlX/C;AFrDA,SAAO,KAAP;AEuDF,AFtDC,AqBuaG,EnBjXJ,AFpDA,OqBqaS,CnBjXT,CAAA,SAAA,AmBiXI,CnBjXF,AmBiXmB,InBjXrB,AmBiXI,EAAuB,CnBjXzB,QmBiXE,CnBjXF,CmBiXoC,GnBjXpC,CAAK,KAAL,AmBiXE,EnBjXU,AmBiXmC,IAA7C;AnBhXA,AFpDJ,AqBqaI,WnBjXO,AmBiXA,IAAP,CnBjXY,IAAI,KAAK,KAAd,GAAsB,IAAtB,GAA6B,IAAI,QAAJ,CAAa,KAAK,IAAlB,EAAwB,KAAK,KAA7B,EAAoC,KAAK,IAAzC,EAA+C,KAA/C,CAApC;AACJ,AFpDA,AqBqaA,GnBnXA,AmB8WA;ArB/ZA;AEqDA,AFpDA,AqBqaA,EnBjXA,AmBiXA,QnBjXA,CAAA,GmBiXA,CAAA,KnBjXA,CAAE,GmBiXF,CAAE,InBjXF,GAAE,ImBiXF,GAAE,EnBjXA,OmBiXA,CnBjXA,CAAS,IAAT,EAAe,GmBiXf,CAAY,IAAZ,EAAkB,SAAlB,EAA6B,SAA7B,EAAwC,IAAxC,EAA8C;AnBhX5C,AFpDJ,AqBqaI,QnBjXI,CmBiXC,GnBjXG,IAAI,KAAK,GmBiXjB,CnBjXA,AmBiXqB,EnBjXA,OmBiXrB;AnBjXuB,AFnD3B,AqBqaI,SAAK,InBlXyB,AmBkX9B,GAAY,CnBlXW,GmBkXvB;AnBlXkC,AFlDtC,AqBqaI,SAAK,SAAL,GAAiB,SAAjB;ArBpaJ;AEkDI,AFjDJ,AqBoaI,QAAI,GnBnXG,EmBmXE,EnBnXE,QAAJ,AmBmXP,CnBnXoB,CmBmXD,InBnXM,IAAlB,EAAwB,KAAK,KAA7B,EAAoC,IAApC,EAA0C,KAAK,KAA/C,CAAP;AACJ,AFjDA,AqBmayB,GnBrXzB,QmBqX8B,cAAL,CAAoB,IAApB,EAA0B,KAAK,UAA/B;ArBlazB,AqBkamE;AnBhXnE,AFjDA,EEiDA,QAAA,CAAA,SAAA,CAAE,GAAF,GAAE,SAAA,GAAA,CAAI,IAAJ,EAAc,EAAd,EAAqC;AFhDvC,AqBiaI,SAAK,KAAL,GAAa,SAAb,GnBjXM,GAAG;AF/Cb,AqBiaA,GANA,sBnB5WkB,GAAG,KAAK,IAAL,CAAU;AF9C/B;AE+CI,AmBmXJ,EAAA,MnBnXQ,IAAI,EmBmXZ,CAAA,CnBnXgB,CAAR,IAAa,EAAE,CmBmXvB,CAAE,EnBnXyB,KAAK,IAAL,CAAU,GmBmXrC,GnBnXI,AmBmXF,EnBnXyC,OmBmXzC,eAAA,CAAgB,SAAhB,EAA2B;AnBnXgB,AmBoXzC,QAAI,KnBpX4C,IAAP,ImBoXxB,CAAC,SAAD,EAAY,KAAK,SAAjB,CAAjB,EAA4C;AnBpXQ,AF9CxD,AqBkakD,SrBlazC,CAAC,SAAV,CAAoB,YAApB,GAAmC,UAAS,IAAT,EAAe,EAAf,EAAmB,KAAnB,EAA0B;AAC3D,AqBiasD,MrBjalD,CAAC,KAAK,CAAC,IAAX,EAAe;AE8Cb,AF9Ce,WE8CR,AF9Ce,KE8CV,AF9Ce,QE8CpB,CAAc,EF9CC,CAAiB,EE8Cb,EF9CJ,EE8CD,AF9CwB,CE8Cd,CF9CT,CAAP,GE8CM,CAAgB,IAAhB,EAAsB,EAAtB,CAAd,CAAP;AACJ,AF/CoD,AqBkahDA,GnBtXJ,KmBsXQ,SAAS,GAAG,KAAK,OAAL,CAAa,QAAb,IAAyB,CAAzCA;AACAA,QAAI,MAAM,GAAG,KAAK,GAAlBA;AnBlXJ,AF/CEA,AqBkaE,EnBnXJ,IF/CM,GqBkaG,CnBnXT,CAAA,AF/CW,CqBkaP,ErBlaU,CqBkaC,IrBlaI,CE+CnB,CAAE,CF/CY,CE+Cd,AF/CuB,GE+CrB,GmBmX2B,CrBlaf,AqBkagB,CrBlaC,IE+C7B,AF/CY,AqBkaqB,CrBlajCA,CE+CA,CAAG,AmBmXwB,EAAW,GnBnXtC,EAAU,AmBmXiC,OAAhB,EACC,gBAAgB,CAAC,KAAK,SAAN,EAAiB,KAAK,IAAtB,EAA4B,SAA5B,CADjB,EAEC,gBAAgB,CAAC,SAAD,EAAY,KAAK,IAAjB,EAAuB,SAAvB,CAFjB,CAAzB;AnBlXA,AFhDFA,MAAoC,GAAG,EEgD9B,CFhDiC,IEgD5B,CFhDiC,GAAL,CAAS,KEgD1C,CAAgB,CFhDiB,CAAiB,EAAjB,CEgDjC,AFhDTA,KEgDmC,KAAK,IAAL,IAAa,KAAK,CAAC,IAApD;AACJ,AmBoXI,GnBtXJ,KmBsXQ,KAAK,GAAL,IAAY,MAAhB,EAAwB;ArBpa1B,AqBqaI,MrBraA,AqBqaA,MAAM,CAAC,MrBraM,CAAC,GqBqad,ErBraa,CqBqaO,CrBraC,GAAR,AqBqab,ErBra0B,KAAb,CAAjB,EACF;AEiDA,AFjDI,AqBqaE,EnBpXN,QAAA,CAAA,AFjDW,AqBqaA,GAAL,CAAS,CrBraC,IEiDhB,AFjDW,CEiDT,AFjDmB,IAAI,AqBqanB,EnBpXN,CmBoX4B,EnBpX1B,EmBoXI,IrBrae,CAAgB,EEiDnC,EFjDmB,EAAsB,EEiDzC,AFjDmB,EAA0B,CEiDpC,IFjDU,CAAV,CAAP;AEkDAA,AFlDkD,AqBsajD,QnBpXG,IAAI,GAAGM,IAAAA,CAAAA,SAAAA,CAAM,MAANA,CAAM,IAANA,CAAY,IAAZA,CAAXN;AACA,IAAA,IAAI,CAAC,IAAL,GAAY,KAAK,IAAjB;AACA,AFlDFA,AqBqaE,MrBraE,GqBqaG,EnBnXE,IAAP,GFlDc,AqBqad,GrBraiB,AqBqaA,SAAjB,IrBra8B,CAAC,KAAD,EAAQ,KAAK,GAAL,CAAS,OAAT,CAAiB,EAAjB,CAAR,CAAhCA,CAP2D,CAQ7D;AEkDA,AmBmXA,GnBvXA,AmB2WA,CA9KkB,CA4LlB;ArBtaE,MAAI,YAAY,CAAC,YAAY,CAAC,MAAb,GAAsB,CAAvB,CAAZ,IAAyC,CAA7C,EAA8C;AAAE,IAAA,YAAY,CAAC,GAAb;AAAkB,AqBuapE,EAAA,CrBhb6D,CAU7D,UqBsaA,CAAA,SAAA,CAAE,UAAF,GAAE,SAAA,UAAA,GAAa;ArBraf,AqBsaI,CnBjaiB,CAAS,IAAT,CAAd,EmBiaE,OAAL,CAAa,SAAb,CAAuB,GAAvB,CAA2B,0BAA3B;;AnBpXJ,AmBqXI,QAAI,CnBrXC,ImBqXI,KnBrXb,CAAmB,ImBqXX,CnBrXR,EAA0B,CmBqXC,CAAC,CnBrX5B,EAA+B,EmBqXE,IAAL,CAAU,IAAV,CAAe,IAAf,CAAoB,SAA5C,EAAqD;AnBpXvD,AFlDAA,AqBsayD,MrBtarD,CEkDCA,IAAI,AmBoXqD,CnBpXpD,EmBoX+C,CnBpX5C,AmBoXqD,KnBpXhD,CAAC,AFlDA,GAAG,AqBsamC,ErBtajC,CEkDX,AmBoXiE,GnBpXlD,CAA5B,AFlD6B,AqBsa4B,CrBta3B,CEkDC,CAAC,GFlDR,CEkDY,CAApC,CFlDsC,CEkDC,AFlDjB,CEkDkB,AFlDxCA,EEkDA,EACF;AAAI,AFlDF,AqBqakF,ErBralF,EEkDE,GAAG,GAAG,IFlDI,CEkDC,AFlDA,CEkDC,CAAD,CAAL,CAAS,GFlDjB,CEkDQ,AFlDa,CEkDC,IAAd,GAAqB,GAArB,GAA2B,CFlDnC,EEkDQ,AF/DmD,CAc7D,EEiD2C,GAAvC;AAA0C,AFhD9C,AqBoaA,GAHA,CA7LkB,CAkMlB;ArBraA;AEgDE,AF/CF,SE+CS,GAAP;AACF,AmBqXA,ElBrxBA,AkBqxBA,YAAA,CAAA,SAAA,CAAE,YAAF,GAAE,SAAA,YAAA,GAAe;AlBpxBjB,AHgXE,AqBqaE,OrBraGA,EqBqaE,ErBraE,CAAC,GAAG,CqBqaX,CAAa,GrBraG,CAAC,KAAdA,AqBqaH,CAAuB,CrBraC,GAAG,EqBqa3B,CrBra8B,AqBqaA,KrBraK,CAAC,GAAN,GAAY,CAA5C,EAA+C,CAAC,GAAG,CAAnD,EAAsD,CAAC,GqBqarD,CrBrayD,GAAG,EAA9D,EAAkE;AG/WpE,AHgXIA,QAAI,IAAI,GAAG,KAAK,CAAC,IAAN,CAAW,CAAX,EAAc,IAAd,CAAmB,IAA9BA;AG/WJ,AkBoxBI,QAAI,KAAK,UAAL,IAAmB,CAAC,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAAoB,SAA5C,EAAqD;ArBparD,AqBoauD,QrBpanD,GqBoawD,CrBpapD,CAAC,CqBoa8C,CAAS,MrBpa5D,IAAiB,IAAI,CAAC,AqBoa6B,CAAyB,QrBpahF,EAAmC,CqBoaoB;ArBpalB,AqBoauD;ArBpalD,AqBqa9C,GAHA,ClBjxBa,YAAY,GACvB,SAAA,YAAA,CAAY,QAAZ,EAAsB;AACxB;AACA,AH6WI,AqBsaF,EAAA,MrBtaM,YAAY,CAAC,CqBsanB,CAAI,KrBtaE,CAAqB,CAArB,AqBsaN,CAAI,GrBta4B,AqBsahC,CrBtaiC,CAA/B,CqBsaE,CrBta8B,WqBsapB;AlBlxBZ,AH4WkC,AqBsapB,MrBtaoB,CG5W7B,IkBkxBgB,IlBlxBrB,CkBkxB0B,ElBlxBV,EkBkxBK,CrBta4B,AqBsalB,GrBtaqB,CAAlB,CG5WlC,CkBkxBc;AlBjxBd,AH2WqD,AqBsahB,GAAvC,ErBtaE,EG3WK,IAAL,AH4WK,GG5WO,CH4WH,CG5WT,IH4Wc,CAAC,MAAN,CAAa,CAAb,KAAmB,GAAvB,EAA0B;AG3W/B,AH2WiC,MAAA,CG3W5B,SAAL,EH2W6C,CG3W5B,AH2W6B,EG3W9C,IH2WiC,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,CAA3B;AG1WnC,AH0WgE;AAC/D,GAvB0D,CAwB7D;AACA,CqB0NkB,CAAS,QAAT,CAAlB,EA2MA;AACA;;ArBraEA,MAAI,oBAAoB,GAAG,YAAY,CAAC,OAAb,CAAqB,eAArB,CAA3BA;AAEAA,AqBoaK,MrBpaD,GqBoaU,MrBpaD,GAAG,EAAhBA,AqBoaK,CAAqB,GAArB,EAA0B,SAA1B,EAAqC,SAArC,EAAgD,GAAhD,EAAqD,IAArD,EAA2D;ArBpahEA,AqBqaA,EAAA,IrBraoB,UqBqaN,CAAC,GrBramB,AqBqapB,EAAM,CrBraiB,KAAK,CAAC,EqBqa7B,EAAiB,GAAjB,CAAd,CrBraAA;AqBsaA,SAAO,IAAI,YAAJ,CAAiB,IAAjB,EAAuB,GAAvB,EAA4B,SAA5B,EAAuC,SAAvC,EAAkD,GAAlD,EAAuD,GAAvD,EAA4D,GAA5D,EAAiE,IAAjE,EAAuE,CAAvE,CAAP;ArBraA,AqBsaD,OrBtaMA,IAAI,OAAO,GAAG,KAAK,CAAC,OAApBA,EAA6B,CAAC,GAAG,CAAtC,GAA0C,CAAC,EAA3C,EAA+C;AAC7CA,QAAI,IAAI,GAAG,OAAO,CAAC,UAAnBA;AACA,AqBsaJ,IrBtaI,AqBsaE,SrBtaO,CAAC,EqBsaI,ErBtad,CAAe,AqBsaD,IrBtad,SqBsac,UAAA,YAAA,EAAA;AAChB,WAAA,YAAA,CAAY,MAAZ,EAAoB,IAApB,EAA0B,SAA1B,EAAqC,SAArC,EAAgD,GAAhD,EAAqD,OAArD,EAA8D,IAA9D,EAAoE;ArBtalE,AqBuaAM,IAAAA,IrBvaI,CAAC,IAAI,GqBuaTA,CAAAA,CrBvac,CAAC,EqBuafA,CAAK,IAALA,ErBvaA,AqBuaM,ErBvakB,IqBuaxBA,EAAc,IAAdA,EAAoB,SAApBA,EAA+B,SAA/BA,EAA0C,GAA1CA,EAA+C,IAA/CA,EAAqD,OAArDA,EAA8D,IAA9DA;ArBva0B,AqBwa9B;AlB1xBE,AHkXiC,YGlXjC,CAAO,KAAP,GAAO,SAAA,KAAA,CAAM,MAAN,EAAc,SAAd,EAAyB;AAC9BN,MAAI,MAAM,GAAG,IAAI,WAAJ,CAAgB,MAAhB,EAAwB,SAAxB,CAAbA;AHkXA,IAAA,OAAO,GAAG,IAAI,CAAC,OAAf;AGjXA,AHkXD,GAlC0D,CAmC7D,EGnXQ,MAAM,CAAC,IAAP,IAAe,IAAnB,EAAuB;AAAE,AHoX7B,WGpXoC,YAAY,CAAC,KAApB;AAAyB;;AAClDA,AHoXF,MGpXM,AHoXF,IGpXM,GAAG,OHoXK,EGpXI,CAAC,AHoXF,CAAjB,IAAsB,CGpXJ,CAApBA,OHoXiC,CAAC,cAAc,GAAG,CAAlB,CAAT,CAA8B,IAA9B,CAAmC,IAAnC,CAAwC,QAA9D,IACA,KAAK,CAAC,IAAN,CAAW,oBAAX,EAAiC,IAAjC,IAAyC,SAAS,CAAC,cAAc,GAAG,CAAlB,CAAT,CAA8B,IAD3E,EAEF;AAAI,IAAA,cAAc,IAAI,CAAlB;AGrXA,AHqXmB,GAFrB,GGnXM,GHsXD,GGtXO,CAAC,AHsXJ,IGtXP,EAAe,QHsXM,IAAI,CAAlB,IAAuB,SAAS,CAAC,cAAc,GAAG,CAAlB,CAAT,CAA8B,WAArD,IAAoE,SAAS,CAAC,cAAc,GAAG,CAAlB,CAAT,CAA8B,IAA9B,CAAmC,IAAnC,CAAwC,QAA5G,IACA,KAAK,CAAC,IAAN,CAAW,oBAAX,EAAiC,IAAjC,IAAyC,SAAS,CAAC,cAAc,GAAG,CAAlB,CAAT,CAA8B,IAD3E,EAEP;AGxXqB,AHwXjB,AqBgaJ,EAAA,ElBxxBqB,AHwXjB,MGxXuB,CAAC,GAAP,AkBwxBrB,ClBxxBgC,AkBwxBhC,GrBhakB,IAAI,CAAlB,CqBgaJ,CAAE,SAAF,GAAE,IlBxxBmB,KkBwxBnB,SAAA,GAAY;AlBxxB6C,AHwXpC,AqBianBA,QAAI,IAAI,GAAG,KAAK,OAAL,CAAa,UAAxBA;;AlBxxBAA,AHyXF,AqBgaE,MlBzxBI,CHyXDA,IGzXM,AHyXF,AqBgaA,CrBhaC,EGzXI,CHyXD,AqBgaA,ElBzxBI,CAAC,CkByxBD,CrBhaC,CGzXG,AHyXF,CGzXG,CkByxBD,GlBzxBA,CAAJ,AkByxBQ,ClBzxBvBA,EHyXF,EAA8B,AqBgaA,CrBhaC,EqBgatB,ErBha0B,CAAnC,CqBgaqC,CrBhaC,AqBgaA,CrBhaC,EAAvC,CqBga0C,CrBhaC,AqBgaA,QAAzC,EAAiD;AlBxxBjD,AHyXAA,AqB+ZmD,ElBxxBnD,IkBwxBmD,ErB/Z/C,EqB+ZmD,GAAG,IrB/Z7C,AqB+ZiD,ClBxxB9C,AkBwxB+C,ClBxxB9C,CHyXD,CAAC,CAAC,EGzXF,CHyXK,CGzXG,EkBwxB2B,IlBxxBnC,CAAhB,MHyXiB,GAAqB,CAAtB,KAA4B,KAAK,CAAC,SAAN,GAAkB,CAA9C,CAAhBA;AGxXA,AHyXAA,AqB8ZyE,QrB9ZrE,CGzXG,KAAP,AHyXU,GAAG,SAAS,CAAC,SAAD,CAAtBA;AGxXF,CARA,EAUA;AACA,AHsXE,AqB8ZA,QrB9ZI,CAAC,EqB8ZE,IrB9ZP,EAAW;AGrXb,AHqXe,AqB8ZL,MAAA,IAAI,EAAE,IAAI,IAAI;ArB9ZD,AqB8Zd,KAAP;AACJ,GAJA;ArB1ZI,SAAKA,IAAI9B,GAAC,GAAG,CAAb,EAAgBA,CGrXlB,EHqXmB,GAAG,OGrXtB,KHqXkC,CAAC,GGrXnC,GHqXE,EAAyCA,GAAC,CGrX5C,CAAU,AHqXR,EAA8C,EGrXhD,EAAgB;AACd,AHqXJ,AqB+ZA,EAAA,KlBpxBS8B,IAAI,CAAC,EkBoxBd,ClBpxBiB,AkBoxBjB,ClBpxBI,EAAgB,CAAC,GAAG,EkBoxBxB,CAAE,ElBpxB2B,IAAL,AkBoxBxB,ClBpxBkC,EkBoxBhC,IlBpxBE,EAAsC,CAAC,EkBoxBzC,ElBpxB6C,CAA3C,EACJ,CkBmxBE,CAAO,IAAP,EAAa,SAAb,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC;AlBnxB7B,AHqXN,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B,GAAhB,EAAqB,MAArB,EAA6B,IAA7B,EAAmC;AlB/wBnC,AkBgxBE,ClBrxBFG,OkBqxBM,GAAG,IAAI,KAAK,OAAhB,EAAuB;ArBha3B,AqBga6B,SrBhapB,IqBga2B,KAAK,IrBhazC,CAAuB,KqBgaa,GrBhapC,AqBgasD,ErBharB,EqBgayB,CAAC,ErBha3D,CqBgasD,CrBhad,AqBgauB,MAAT,CrBhatD,CqBgauE,CrBhatB,IqBga2B,GrBha5E,CqBgauE,CrBhab,AqBgauB,IAAV,CAAe,CrBhatF,EAAkE,GqBgaZ,CAAzB;ArB/Z3B,AqB+Z2F,MrB/ZvF,KAAK,GAAG,OAAZ,EG/WA,AH+WqB,aG/WrB,SAAA,UAAA,CAAW,KAAX,EAAkB;AAChB,AH+WAH,OG/WKA,CH+WD,GG/WK,CAAC,CH+WD,EG/WI,CAAb,AH+WY,EG/WI,CAAC,GAAG,EH+WA,CAAC,EG/WI,IAAL,CAAU,GH+W9BA,GG/WA,EAAsC,CAAC,IAAI,CAA3C,EACJ;AAAM,AH+WF,AqB8ZA,IrB9ZA,KG/WOA,EkB6wBAM,CrB9ZC,CG/WG,CAAC,CH+WD,EG/WI,CAAb,EAAgB,CAAC,EH+WA,AqB8ZZA,ClB7wBe,AH+WF,AqB8ZbA,KlB7wBoB,CAAC,GkB6wBrBA,ClB7wBe,AkB6wBT,ClB7wBoB,CH+WtB,CAAsB,CAAtB,EAAyB,CG/WlC,EAAuC,CAAC,CH+WD,CAAC,EG/WI,CAA5C,AkB6wBKA,CrB9Z6B,AqB8ZvB,ClB5wBjB,AH8WmD,GqB8ZxCA,CAAqB,IAArBA,EAAsB,GrB9Z+B,AqB8ZrDA,CrB9ZsD,CqB8Z3B,IrB9ZgC,CAAC,CqB8Z5DA,EAAmC,IrB9ZkB,AqB8ZrDA,CAAP,CrB9Z4E,KAAK,GAAG,CAAxB,EAA2B,OAA3B,EAAoC,OAApC,EAA6C,KAA7C,CAAxB,CAAzB,CAAX;AG9WI,AH+WL,AqB8ZH,GAHA,OlB1wBY,KAAK,IAAL,CAAU,CAAV,KAAgB,KAAK,CAAC,IAAN,CAAW,CAAX,CAApB,EAAiC;AAAE,eAAO,IAAP;AAAO,AHgXhD,AqB+ZF,EAAA,IrB/ZM,KAAK,GAAG,AqB+Zd,CAAA,MrB/ZE,EAAq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9MJ,IlB8MI,GkB9MG,ClB8MC,CkB9MC,AlB8MA,IAAL,GAAY,IAAZ;AkBxNqC,AlByNtC,GkBzNiB,CAAtBA,GlBsNe;AAGT;AkB7MN,AlB8MF,GANA,GkBxMM,IAAI,IAAI,IAAI,CAAC,CAAD,CAAJ,CAAQ,GAAR,IAAe,IAA3B,EAAiC;AAC/BA,QAAIgC,QAAM,GAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,GAArBhC;AAAAA,AlBuMA,OAAKA,CkBvMqB,GlBuMjB,CkBvMqB,GAAG,AlBuMjC,IkBvMqC,AlBuMpB,CkBvMqB,CAAD,CAAJ,GlBuMV,CkBvMqB,AlBuMpB,IkBvMwB,CAAC,AlBuMjD,CkBvMgD,CAAJ,AlBuMf,CkBvMuB,GAApDA,AlBuM6B,CAAA,IAAA,CAAA;;AkBtM7B,AlB6MJ,MAAA,EkB7MQ,IAAI,AlB6MZ,GAAA,CkB7MgB,IAAZ,EAAgB,GlB6MpB,IAAA,EAAmC;AkB7Mb,AlB8MhBA,MkB9MgB,ElB8MZc,EkB9MgB,GAAGkB,ElB8Md,GAAG,GkB9MI,GlB8ME,CAAC,KAAP,CAAajB,MAAb,EAAmB,IAAnB,CAAwB,QAApCf;AkB9M6B;AlB+M7B,QAAIc,OAAJ,EAAS;AkB9MX,AlB8MaA,IkB9Mb,ElB8MaA,CkB9MV,GAAG,GlB8MY,CAAC,OAANA,CAAa,UAAC,IAAD,EAAS;AkB9M5B,AlB+MH,MkB/MG,ElB+MH,IkB/MS,EAAEkB,AlB+ML,CAAC,IAAI,GkB/MM,AlB+MH,GkB/MM,ClB+MF,CAAC,EkB/MjB,ElB+MgB,CAAZ,CAAN;AkB/M0B,AlBgN1B,MkBhN0B,ElBgN1B,EkBhN8B,EAAE,AlBgN5B,CAAC,GkBhN+B,ClBgNpC,EkBhNuC,ClBgN3BjB,MAAZ;AkBhNE,AlBiNH,KkBjNH,ElB8MaD;AkB7Md,AlBgNK;AACR,GANA;AkB1ME,SAAO;AAAA,AlB0ML,IkB1MK,GAAA,AlB0MAd,EkB1MC,ElB0MGe,CkB1MJ,KlB0ML,IAAiB,MAAM,CAAC,KAAxB,EAA6B,MAAA;AkB1MpB,IAAA,GAAA,EAAE,GAAN;AAAS,AlBiNd,IkBjNc,IAAA,ClBiNP,CkBjNS,IAAX,ClBiNL;AkBjNoB,AlBkNtB,CA1BA,EA4BA,CkBpNsB,EAAA,EAAE;AAAjB,AlBqNP,GkBrNA;AACD,AlBqNC;AACA;AkBpNF,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzBf,MAAI,IAAI,GAAG,GAAG,CAAC,UAAfA;AlBoNA,SAAA,CAAO,UAAP,GAAO,SAAA,UAAA,CAAW,MAAX,EAAmB;AkBnN1B,AlBoNE,MkBpNE,GlBoNK,CkBpNT,EAAU,GlBoNK,CAAC,MAAP,CAAc,SAAd,KACJ,MAAM,CAAC,MAAP,CAAc,SAAd,GAA0B,IAAI,SAAJ,CAAc,MAAd,EAAsB,SAAS,CAAC,WAAV,CAAsB,MAAtB,CAAtB,CADtB,CAAP;AkBnNA,AlBqNF,CAHA,EAMF,QkBxNW,IAAI,CAAC,SAAL,EAAP;AACD,GAFD,MAEO,IAAI,GAAG,CAAC,QAAJ,IAAgB,IAAhB,IAAwB,GAAG,CAAC,UAAhC,EAA4C;AACrD;AACA,AlBsNAC,IAAM,SAAS,GAAG;AkBrNlB,AlBsNE,EAAA,OAAO,EAAE,IADO;AkBpNd,AlBqNa,EAAA,MkBrNToB,ClBqNgB,EAAE,GkBrNX,CAAC,AlBoNE,MkBpNVA,IAAkB,aAAa,IAAb,CAAkB,GAAG,CAAC,UAAJ,CAAe,QAAjC,CAAtB,EAAkE;AAChErB,AlBoN0B,EAAA,KAAK,EAAE,CkBpN7B,GlBmNQ,CkBnNJ,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAXA;AACA,AlBmNuC,EAAA,IkBnNvC,IAAI,CAAC,ClBmN4C,EAAE,IADvC,IkBlNZ,CAAiB,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAjB;AACA,AlBkNyD,EAAA,MAAM,EAAE,GkBlN1D,ClBiNK;AkBjNL,AlBmNX,EAAA,EAAE,EAAE,EkBnNO,ElBiNK,EkBjNL,EAAC;AAAD,AlBmND,EAAA,GAAG,EkBnNT,AlBmNW,IAFC;AkBhNb,AlBkNkB,EAAA,EAAE,CkBtNrB,ClBsNuB,IAFT,CkBhNP,IAAI,GAAG,CAAC,UAAJ,CAAe,SAAf,IAA4B,GAA5B,IAAmCqB,MAAO,CAAC,MAARA,IAAkB,gBAAgB,IAAhB,CAAqB,GAAG,CAAC,UAAJ,CAAe,QAApC,CAAzD,EAAwG;AAC7G,AlBiN2B,EAAA,QAAQ,EAAE,CkBjN9B,GlB+MK;AkB/MJ,AlBiNmC,EAAA,MkBjNnC,IlBiN6C,EkBjNvC,AlBiNyC,EkBjNvC,ElB+MJ;AkB/ML,AlBiNsD,EAAA,KkBjN7D,ClBiNmE,EAAE,IAFzD;AkB9Mb,AlBiNH,EAAA,MAAM,EAAE,IAHQ;AkB7Mf,AlBgNa,EAAA,CkB3NP,GlB2NW,EAAE,CkBhNb,GlB6MS,CkB7ML,GAAG,CAAC,QAAJ,IAAgB,KAAhB,IAAyB,GAAG,CAAC,YAAJ,CAAiB,kBAAjB,CAA7B,EAAmE;AACxE,AlB+MwB,EAAA,EAAE,EAAE,IAHd,CkB5MP;AAAC,AlB+M0B,EAAA,EAAE,EkB/M5B,AlB+M8B,IAHxB,EkB5MA,EAAE;AAAT,AlB+MqC,EAAA,EAAE,CkB/M9C,ClB+MgD,IAHlC;AkB3Mf,AlB8MuD,EAAA,EAAE,EAAE,IAH5C;AkB1MjB,AlB6MmE,EAAA,EAAE,EAAE,IAHtD;AAIhB,EAAA,EAAE,EAAE,IAJY;AkBxMX,AlB4MK,EAAA,MAAM,CkB5MF,ClB4MI,IAJF,QkBxMX,CAAuB,IAAvB,EAA6B,IAA7B,EAAmC,EAAnC,EAAuC,QAAvC,EAAiD,UAAjD,EAA6D;AAClE,AlB2MwB,EAAA,IkB3MpB,ElB2M0B,EkB3MtB,AlB2MwB,GkB3MrB,CAAX,AlBuMgB,EkBvMF;AACZrB,AlB0MoC,EAAA,EAAE,EAAE,EkB1MpC,ElBsMU,IkBtMJ,GAAG,IAAI,CAAC,iBAAL,GAAyB,IAAI,CAAC,GAAL,KAAa,EAAtC,GAA2C,IAAI,CAAC,mBAAhD,GAAsE,IAAnFA;AACAA,AlByM8C,EAAA,EAAE,EAAE,EkBzM9C,ElBqMU,IkBrMJ,GAAG,gBAAgB,CAAC,IAAD,EAAO,MAAP,CAA7BA;AlByMwD,EAAA,QAAQ,EAAE,IAJpD;AkBpMd,AlBwMwE,EAAA,EAAE,EAAE,EkBxMxE,ElBoMU,IkBpMJ,IAAI,CAAC,IAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,EAArB,CAAwB,MAAxB,CAAf,EAAgD;AAC9CA,AlBwMJ,EAAA,MAAM,EkBxMEiC,AlBwMA,IkBxME,AlBmMM,GkBnMH,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,YAAd,CAA2B,MAA3B,CAATjC;AlBwMU,EAAA,CAAC,EAAE,IALD;AkBlMZ,AlBuMmB,EAAA,GAAG,EAAE,GkBvMpB,ClBkMQ,KkBlMF,IAAI,SAAd,EAAuB;AAAEiC,AlBuMK,EAAA,MkBvMLA,ClBuMY,EAAE,CkBvMZ,CAAC,ElBkMhB,KkBlMaA,CAAW,SAAXA,EAAsB,IAAtBA;AAA2B,AlBuMP,EAAA,KkBvM7C,AlBuMkD,EAAE,IkBtM/C,AlBiMO,IkBjMH,MAAM,IAAI,KAAd,EAAmB;AAAEA,AlBsMgC,EAAA,KAAK,CkBtMrCA,ClBsMuC,GkBtMrC,CAAC,AlBiMjB,ckBjMcA;AAAmB,AlBsM0B,EAAA,EAAE,EAAE;AAL/D,CAAlBhC,EAQA;AkBxMM,MAAA,IAAI,CAAC,QAAL,CAAcgC,IAAd;AACD,AlBwMLhC,IAAM,UAAU,GAAG;AACjB,EAAA,IAAI,EAAE,IADW;AkBvMf,AlBwMU,EAAA,QAAQ,EAAE,IADL;AkBtMhB,AlBuM2B,EAAA,MAAM,EAAE,IADnB;AACyB,EAAA,MAAM,EAAE,IADjC;AkBpMjBD,AlBqMwD,EAAA,IkBrMpD,ClBqMyD,EAAE,IkBrMpD,AlBoMM,GkBpMH,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,OAAf,CAAuB,IAAvB,CAAdA;AACAA,AlBoMqE,EAAA,IkBpMjE,ClBoMsE,EAAE,GkBpMlE,GAAG,OAAO,CAAC,WAAR,CAAoB,EAApB,CAAbA;AACA,AlBkMiB,CAAnBC,CkBlME,ClBsMF,GkBtMM,GAAG,OAAO,CAAC,MAAR,CAAe,MAAM,GAAG,CAAxB,CAAP;AACA,EAAA,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,OAAf,CAAuB,EAAvB,EAA2B,KAA3B,CAAiC,MAAM,GAAG,CAA1C,CAAL;AAEAD,AlBoMFC,IAAM,EkBpMA,GAAG,GAAG,AlBoME,GAAG,CkBpMD,CAAC,KAAL,CAAW,SAArBD;AACAA,AlBmMgB,EAAA,EAAE,EkBnMd,AlBmMgB,IAAL,CkBnMN,GAAG,YAAY,CAAC,IAAD,EAAO,IAAP,EAAa,EAAb,CAAxBA,CAnBkE,CAoBpE;AACA,AlBiM4B,EAAA,EAAE,EAAE;AAAf,CAAjBC,EAEA;AkBlME,MAAIoB,MAAO,CAAC,MAARA,IAAkB,IAAI,CAAC,aAAvBA,IAAwC,KAAK,CAAC,GAA9CA,IAAqD,KAAK,CAAC,GAAN,CAAU,MAAV,IAAoB,IAAI,CAAC,aAAL,CAAmB,IAAnB,CAAwB,IAArG,EAA2G;AACzGrB,AlBkMJC,IAAM,IkBlME,IAAI,GAAG,IAAI,AlBkME,CkBlMD,ElBkMI,CAAxBA,UkBlMe,CAAmB,IAAnB,CAAwB,IAAxB,CAA6B,KAA7B,CAAmC,WAA9CD;AACAA,AlBiMJC,IAA2B,IkBjMnB,IAAI,GAAG,IAAI,IAAI,ClBiMwB,GkBjMpB,AlBiMuB,CkBjMtB,AlBiM5BA,SkBjMe,GAAyB,IAAI,CAAC,SAAL,CAAe,MAAxC,GAAiD,CAA5DD;AACA,AlBgMJC,IkBhMI,AlBgMiD,KkBhM5C,CAAC,GAAN,GAAY,ClBgMkD,GAAG,CAArEA;AkBhMiB,MAAA,MAAM,EAAE,KAAK,CAAC,GAAN,CAAU,MAAV,GAAmB,IAA5B;AAAkC,AlBkMlD,MkBlMkD,GlBkMzC,CkBlM6C,EAAE,KAAK,CAAC,GAAN,AlBkMxD,CkBlMkE,AlBkM5C,MkBlMkC,GAAmB,SlBkM3E,EAA0C;AkBlM1B,AlBmMd,KkBnME,IlBmMK,CAAC,kBAAkB,GAAG,eAAH,GAAqB,CAAxC,KAA8C,kBAAkB,KAAK,MAAvB,GAAgC,oBAAhC,GAAuD,CAArG,CAAP;AkBlMC,AlBmMF;;AkBjMCD,AlBmMF,IAAM,EkBnMA,GAAG,GAAG,GlBmMK,CkBnMD,CAAC,ClBoMf,IkBpMU,CAAW,GAArBA,ClBoMA,WAAA,CAAY,IAAZ,EAAkB,KAAlB,EAAyB,KAAzB,EAAgC,YAAhC,EAA8C,KAA9C,EAAqD,KAArD,EAA4D,OAA5D,EAAqE;AkBpMrEA,AlBqME,MkBrMwB,ClBqMnB,IAAL,EkBrM+B,ClBqMnB,EkBrMsB,ElBqMlC,CkBrMqC,CAAC,KAAJ,CAAU,KAAK,CAAC,IAAhB,EAAsB,KAAK,CAAC,EAA5B,CAApCA;AACAA,AlBqME,MkBrME,ClBqMG,KAAL,GAAa,GkBrMfA,EAAkB,AlBqMhB,akBrMFA,CA7BkE,CA8BpE;AlBqMI,OAAK,KAAL,GAAa,KAAb;AkBpMF,AlBqME,MkBrME,ClBqMG,GkBrMC,CAAC,ClBqMP,GAAa,KAAK,EkBrMhB,GlBqMqB,EkBrMA,CAArB,IAA0B,AlBqME,GAAG,CkBrMD,CAAC,GAAL,KAAa,GAAb,AlBqML,GkBrMwB,AlBqME,IkBrME,AlBqM5B,CkBrM6B,ElBqMI,IAAI,CAAC,QkBrM/D,EAAuE,ElBqMnD,CAAlB;AkBpMA,AlBqMA,IkBrMA,GlBqMK,OAAL,EkBrMY,ClBqMG,EkBrMA,IAAI,CAAC,AlBqMpB,KkBrMe,CAAW,SAAX,CAAqB,EAApC;AACA,AlBqMA,IkBrMA,GlBqMK,OAAL,GkBrMa,AlBqME,EAAf,CkBrMgB,AlB+LmD,CAOvE,IkBtMI;AACD,GAHD,MAGO;AACL,AlBqMA,IkBrMA,GlBqMK,KAAL,GAAa,CkBrMD,GAAG,ClBqMf,CARmE,CASvE,CkBtMuB,CAAC,KAAL,CAAW,SAAX,CAAqB,IAApC;AACA,IAAA,aAAa,GAAG,OAAhB;AACD,AlBqMC,OAAK,WAAL,GAAmB,IAAI,CAAC,IAAxB,CAVmE,CAWvE;;AkBrME,AlBsME,EkBtMF,IAAI,CAAC,AlBsME,WkBtMP,ClBsME,EkBtMiB,ClBsMG,GkBtMtB,SlBsME,CAZmE,CAavE;AkBrMEA,MAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAT,EAAkB,KAAK,CAAC,GAAN,CAAU,OAA5B,EAAqC,KAAK,CAAC,IAA3C,EAAiD,YAAjD,EAA+D,aAA/D,CAArBA;AlBsME,OAAK,UAAL,GAAkB,EAAlB;AkBrMF,AlBsMA,CAhBF,KkBtLM,CAAC,MAAL,EAAa;AACX,QAAI,QAAQ,IAAI,GAAG,YAAY,+BAA3B,IAA4C,CAAC,GAAG,CAAC,KAAjD,IAA0D,GAAG,CAAC,KAAJ,CAAU,UAAV,CAAqB,GAAG,CAAC,OAAzB,CAA1D,IACA,CAAC,IAAI,CAAC,SADN,IACmB,EAAE,KAAK,CAAC,GAAN,IAAa,KAAK,CAAC,GAAN,CAAU,MAAV,IAAoB,KAAK,CAAC,GAAN,CAAU,IAA7C,CADvB,EAC2E;AACzE,MAAA,MAAM,GAAG,OlBqMb,eAAA,SAAA,YAAA,CAAa,IAAb,EAAmB;AkBrML,AlBsMZ,MAAI,CAAC,CkBtMO,IlBsMF,CkBtMO,EAAE,ElBsMnB,CkBtMsB,CAAC,AlBsMN,IkBtMN;AAAkB,AlBuM3B,QkBvM2B,AlBuMvB,CAAC,GkBvM0B,EAAE,AlBuMvB,GkBvM0B,CAAC,AlBuMrC,EkBvMS,AlBuMK;AkBvM2B,AlBuMzB,QkBvMyB,IAAI,ClBuMtB,CkBvMwB,ClBuM/B,EkBvMkC,CAAC;AAA1C,AlBuMgB,OkBvMzB;AACD,KAHD,MAGO,IAAI,CAACqB,MAAO,CAAC,GAARA,IAAe,IAAI,CAAC,YAAL,GAAoB,IAAI,CAAC,GAAL,KAAa,GAAhDA,IAAuDA,MAAO,CAAC,OAAhE,KACA,UAAU,CAAC,IAAX,CAAe,UAAC,CAAD,EAAC;AAAA,AlBsMzBrB,QAAI,IAAI,CkBtMsB,CAAC,CAAC,AlBsMrB,KAAK,GkBtMc,ClBsMnB,CAAU,EkBtMuB,KAAd,IAAuB,CAAC,AlBsM3C,CkBtM4C,AlBsMrB,QkBtMmB,ElBsM1C,CAAkC,CkBtMsB,GAA1C,IlBsM4B,CAAC,IAAT,CAAc,IAAd,CAAlC,CAAXA;AkBtMsE,KAA7D,CADA,IAEA,IAAI,CAAC,QAAL,CAAc,eAAd,EAA6B,UAAE,CAAF,EAAE;AAAA,AlBsMxC,QAAI,IAAJ,CkBtM6C,CAAC,AlBsMpC,CkBtMqC,IAAD,EAAO,QAAQ,CAAC,EAAD,EAAK,OAAL,CAAf,CAAN;AAAmC,AlBuMzE,KkBvMO,CAFJ,EAEyE,GlBuMvE,KAAL,GAAa,KAAK,IAAL,CAAU,YAAV,CAAuB,aAAvB,CAAqC,IAArC,CAAb;AkBtMF,AlBuMC,KAFD,CkBrMA,IAAI,CAAC,AlBuME,YkBvMP,GAAoB,CAApB;AACA,AlBuMEA,UAAI,KAAK,GAAG,KAAK,IAAL,CAAU,YAAtBA;AkBtMH,AlBsMGA,KkB3MG,KlB2MiC,CkBtMjC,GlBsMHA;AkBrMF,UAAI,KAAK,CAAC,GAAV,EAAe;AACbA,AlBqMA,UAAI,EkBrMAkC,ElBqMI,GkBrMD,AlBqMI,GkBrMD,ElBqMM,CAAC,YAAN,CkBrMe,AlBqMI,CkBrMH,GlBqMO,CkBrMR,AlBqMS,EkBrMF,ElBqMtB,CAAX,CkBrMqC,CAAC,AlBqMI,KkBrMT,CAAW,GAAlB,EAAuB,KAAK,CAAC,GAA7B,CAA1BlC;AlBsME,aAAK,KAAL,GAAa,KAAb;AkBrMF,AlBsME,YkBtMEkC,GlBsMK,EkBtMF,ElBsML,EkBtMS,CAACA,KAAG,CAAC,EAAJA,CAAO,IAAI,CAAC,KAAL,CAAW,SAAlBA,CAAZ,EAAwC;AAAE,AlBuMzC,OAHD,GkBpM0C,GlBuMnC,CkBvMuC,CAAC,QAAL,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,YAAd,CAA2BA,KAA3B,CAAd;AAA8C,AlBwMtF,eAAO,IAAP;AkBvMH,AlBwME;AACF;AkBxMD,AlByMD;AkBxMA;AACF,AlBwMC,SAAO,KAAK,KAAL,CAAW,YAAX,CAAwB,IAAI,CAAC,IAA7B,CAAP;AACF;AkBxMA,EAAA,IAAI,CAAC,cAAL,GA1DkE,CA2DpE;AACA,sBlBwME,SAAA,SAAA,MAAA,CAAO,OAAP,EAAgB;AkBvMlB,AlBwMI,MAAI,EAAE,KAAK,OAAL,GAAe,eAAjB,CAAJ,EAAuC;AAAA;AkBvMzC,AlBwMIlC,MkBxMA,ElBwMI,EkBxMA,CAAC,ClBwMG,GAAG,CkBxMX,CAAW,GlBwMK,MkBxMhB,CAAqB,AlBwMV,CAAa,GkBxMxB,ElBwM6B,CkBxMD,IAAI,CAAC,ClBwMT,CAAa,GkBxMT,CAAW,ElBwMf,GAAsB,CAAnC,CAAXA,EkBxM4B,CAAqB,EAAjD,IACA,MAAM,CAAC,KAAP,IAAgB,MAAM,CAAC,IADvB,IAEA,IAAI,CAAC,KAAL,CAAW,SAAX,YAAgC,+BAFpC,EAEmD;AACjD,AlBqMEA,QkBrME,AlBqMgD,CAAlDA,KkBrMQ,CAAC,KAAP,GAAe,IAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,IAApC,IAA4C,MAAM,CAAC,KAAP,IAAgB,IAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,IAArB,GAA4B,CAA5F,EAA+F;AAC7F,MAAA,MAAM,CAAC,KAAP,GAAe,IAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,IAApC;AACD,AlBoMC,KkBtMF,GlBsMM,GkBpMC,ClBoMG,GkBpMC,ClBoMG,IAAI,CkBpMD,AlBoME,CkBpMD,IAAP,ClBoML,EkBpMmB,GlBoMK,CkBpMD,AlBoME,CkBpMD,ElBoMI,GkBpMT,CAAW,SAAX,CAAqB,EAAnC,IAAyC,AlBoME,IAApB,CAAyB,CkBpMD,CAAC,ElBoMI,CAAC,CkBpMZ,GlBoMlB,CkBpMiC,AlBoM7D,CAAJ,EAAsE,CkBpMD,CAAC,KAAL,CAAW,SAAX,CAAqB,EAArB,GAA0B,CAAtF,EAAyF;AAC9F,AlBoME,MkBpMF,IlBoMM,EkBpMA,CAAC,ClBoMG,CAAC,EkBpMX,ElBoMM,CAAU,CkBpMA,IAAI,CAAC,AlBoMf,IAAoB,CkBpMV,AlBoMW,CkBpMA,AlBoMC,CAAD,CAAD,CAAK,MkBpMf,AlBoMd,CkBpMmC,ClBoMA,CkBpMrB,GAA0B,MAAM,CAAC,IAAjD;AACA,AlBmMuC,MkBnMvC,MAAM,CAAC,AlBmMqC,IkBnM5C,GAAc,AlBmMyB,CAAa,GkBnMlC,AlBmMqB,CkBnMpB,KAAL,CAAW,SAAX,CAAqB,EAAnC;AACD,AlBkM0D,OAAvD,MACR;AkBlMG,AlBkMU,GkBzQuD,CAyEpE,SlBgMkB,OAAL,CAAa,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAnC,IAAwC,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,CAAhB,EAAmB,IAAI,CAAC,IAAL,CAAU,MAAV,GAAmB,CAAC,CAAC,CAAD,CAAD,CAAK,MAA3C,CAAd,CAAxC;AkB/Lb,AlB+LsH;AkB9LtH,AlB+LO;AACF;;AkB/LH,AlBgMEA,MkBhMEqB,AlBgME,MkBhMK,CAAC,AlBgMC,EkBhMTA,ClBgMY,GkBhMEA,KlBgMM,CkBhMC,AlBgMA,CkBhMC,GlBgMV,CAAc,KAAK,CkBhMjBA,IAAsB,EAApCA,AlBgMY,CAAdrB,GkBhM4C,MAAM,CAAC,IAAP,IAAe,MAAM,CAAC,KAAP,GAAe,CAAxEqB,IACA,MAAM,CAAC,IAAP,IAAe,MAAM,CAAC,KADtBA,IAC+B,MAAM,CAAC,KAAP,GAAe,KAAK,CAAC,IADpDA,IAEA,KAAK,CAAC,GAAN,CAAU,WAAV,CAAsB,MAAM,CAAC,KAAP,GAAe,KAAK,CAAC,IAArB,GAA4B,CAAlD,EAAqD,MAAM,CAAC,KAAP,GAAe,KAAK,CAAC,IAArB,GAA4B,CAAjF,KAAuF,SAF3F,EAEsG;AACpG,IAAA,MAAM,CAAC,KAAP;AACA,AlB6LA,IkB7LA,ElB6LI,CAAC,GkB7LC,CAAC,GlB6LH,CkB7LJ,GlB6LgB,KAAK,KAArB,EACJ;AkB7LI,AlB6LE,IkB7LF,AlB6LE,MkB7LI,CAAC,AlB6LE,GAAG,CkB7LZ,MlB6LmB,CAAC,MAAR,CAAe,KAAK,KAAL,CAAW,UAAX,CAAsB,QAAQ,CAAC,KAA/B,EAAsC,IAAtC,CAAf,CAAV;AkB5LH,AlB4LwE;;AkB1LzErB,AlB2LE,MkB3LE,GlB2LK,EkB3LA,GAAG,AlB2LE,IAAL,CkB3LQ,CAAC,ClB2LG,EkB3LT,CAAU,ElB2LI,IAAL,CAAU,MAAV,CkB3LT,AlB2L0B,CkB3LD,IlB2LM,EkB3LA,CAAC,ElB2LvB,EAA6B,CkB3Lb,GAAe,GlB2L/B,EkB3LoC,AlB2LE,CkB3LD,IAA9C,AlB2LoD,CkB3LhEA,IlB2LqB,CAAZ,GAAgE,OAAvE;AkB1LFA,AlB2LA,MkB3LI,GAAG,GAAG,KAAK,CAAC,GAAN,CAAU,cAAV,CAAyB,MAAM,CAAC,IAAP,GAAc,KAAK,CAAC,IAA7C,CAAVA;AACAA,MAAI,YAAY,GAAG,KAAK,CAAC,UAAN,CAAiB,GAAjB,KAAyB,KAAK,CAAC,MAAN,CAAa,aAAzDA;AACAA,MAAI,OAAJA,CAvFkE,CAwFpE,OlB0LE,mBAAA,SAAA,gBAAA,CAAiB,IAAjB,EAAuB;AkBzLzB,AlB0LI,OAAKA,IAAI,CAAC,GAAG,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAAtC,EAAyC,CAAC,IAAI,CAA9C,EAAiD,CAAC,EAAlD,EACJ;AAAM,QAAI,IAAI,CAAC,EAAL,CAAQ,KAAK,UAAL,CAAgB,CAAhB,CAAR,CAAJ,EAA+B;AkB1LnC,AlB0LqC,MkB1LjC,CAAEqB,MAAO,AlB0L+B,CkB1L9B,GAARA,ClB0L2C,GkB1L5B,IAAI,CAAC,ElB0LkB,CAAgB,MAAhB,CAAuB,CAAvB,CkB1LvB,ClB0LiD,CAA1B,CkB1LH,ClB0LgC,CAA7B,CAAP,CkB1LQ,CAAC,GAAL,KAAa,GAAhDA,KACC,CAAC,YAAD,IAAiB,UAAU,CAAC,IAAX,CAAe,UAAC,CAAD,EAAC;AAAA,AlByLkC,WkBzL7B,CAAC,CAAC,QAAF,IAAc,KAAd,IAAuB,CAAC,CAAC,QAAF,IAAc,GAA1C;AAA6C,AlByLV,GkBzLnD,CADlBA,CAAD,IAEC,CAAC,YAAD,IAAiB,KAAK,CAAC,GAAN,GAAY,KAAK,CAAC,GAAN,CAAU,OAAV,CAAkB,IAA/C,KACC,OAAO,GAAG,4BAAU,QAAV,CAAmB,KAAK,CAAC,GAAN,CAAU,OAAV,CAAkB,KAAK,CAAC,GAAN,GAAY,CAA9B,CAAnB,EAAqD,CAArD,EAAwD,IAAxD,CADX,KAEA,OAAO,CAAC,IAAR,IAAgB,GAAG,CAAC,GAJtB,KAKA,IAAI,CAAC,QAAL,CAAc,eAAd,EAA6B,UAAE,CAAF,EAAE;AAAA,AlBsLnC,WkBtLwC,CAAC,CAAC,IAAD,EAAO,QAAQ,CAAC,EAAD,EAAK,OAAL,CAAf,CAAN;AAAmC,GAAlE,CALJ,EAKyE;AACvE,IAAA,IAAI,CAAC,YAAL,ClBuLF,EkBvLsB,CAApB,YlBuLF,SAAA,YAAA,CAAa,QAAb,EAAuB;AkBtLrB,AlBuLA,OAAKrB,IAAI,CAAC,GAAG,CAARA,EAAW,OAAO,GAAG,KAAK,YAA/B,EAA6C,CAAC,GAAG,OAAO,CAAC,MAAzD,EAAiE,CAAC,EAAlE,EAAsE;AkBtLvE,AlBuLGA,GkBzR8D,CAmGpE,IlBsLU,IAAI,GAAG,OAAO,CAAC,CAAD,CAAlBA;;AACA,QAAI,CAAC,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,cAAV,CAAyB,IAAI,CAAC,IAA9B,CAAZ,GAAkD,YAAY,CAAC,IAAI,CAAC,IAAN,EAAY,QAAZ,CAA/D,KACA,CAAC,IAAI,CAAC,OAAL,CAAa,KAAK,WAAlB,CADL,EACqC;AkBvLzC,AlBwLM,MkBxLF,IAAI,CAAC,AlBwLE,KkBxLP,CAAW,KlBwLT,GAAmB,CkBxLrB,CAAqB,ElBwLI,CAAC,GkBxL1B,GAA8B,ElBwLT,CAAc,GkBxLC,CAAC,ClBwLG,IkBxLxC,IACA,GlBuLqB,CAAnB,SkBvLW,CAAC,GAAD,EAAM,MAAM,CAAC,KAAb,EAAoB,MAAM,CAAC,IAA3B,EAAiC,KAAjC,EAAwC,GAAxC,CADb,IAEA,IAAI,CAAC,QAAL,CAAc,eAAd,EAA6B,UAAE,CAAF,EAAE;AAAA,AlBuL7B,WkBvLkC,AlBuL7B,CkBvL8B,CAAC,IAAD,EAAO,IlBuL1C,GAAoB,CkBvL8B,CAAC,CAAD,ClBuL1B,CkBvL8B,AlBuL7B,WkBvLyB,CAAf,CAAN,AlBuLT,CAAmB,KAAK,YAAxB,CAApB;AkBvLmE,AlBwLpE,GkBxLD,CAFJ,EAE4E;AAC1E,AlBwLC,QkBxLGqB,MAAO,CAAC,OAARA,IAAmBA,MAAO,CAAC,MAA/B,EAAqC;AAAE,AlByLzC,MkBzLyC,IAAI,CAAC,WAAL,CAAiB,wBAAjB;AAA2C,KADR,CACQ;sBlB2LpF,gBAAA,SAAA,aAAA,CAAc,IAAd,EAAoB;AAClB,MAAI,KAAK,IAAT,EAAa;AkB3Lb,AlB2Le,WAAO,KAAK,IAAL,CAAU,aAAjB;AkB1LhB,AlB0L8C,GkBnSmB,CA2GpE;AACA;AACA,AlBuLI,MAAI,KAAK,OAAL,CAAa,MAAjB,EAAuB;AAAE,WAAO,KAAK,OAAL,CAAa,CAAb,EAAgB,QAAvB;AAA+B;AkBtL1D,MAAIA,MAAO,CAAC,MAARA,IAAkBA,MAAO,CAAC,OAA1BA,IAAqC,MAAM,CAAC,GAAP,IAAc,MAAM,CAAC,IAA9D,EACF;AAAI,AlBsLA,IkBtLA,IAAI,CAAC,AlBsLE,IAAI,CAAC,UAAL,EkBtLP,ElBsL0B,CkBtLD,AlBsLE,IkBtLE,CAAC,GAAL,ClBsLW,CkBtLpC,AlBsLqC,cAAV,CAAyB,IAAI,CAAC,UAAL,CAAgB,QAAhB,CAAyB,WAAzB,EAAzB,CAA3B;AkBtLmC,AlBuLrC,GkBtSkE,CAiHpE;AACA;AACA,AlBsLA,IAAM,YAAY,GAEhB,SAAA,YAAA,CAAY,MAAZ,EAAoB,OAApB,EAA6B,IAA7B,EAAmC;AkBvLrC,AlBwLA;AkBvLA,AlBwLI,OAAK,MAAL,GAAc,MAAd,CAFiC,CAGrC;AkBxLA;AACA,AlBwLI,OAAK,OAAL,GAAe,OAAf;AkBvLJ,AlBwLI,OAAK,MAAL,GAAc,IAAd;AACArB,MAAI,OAAO,GAAG,OAAO,CAAC,OAAtBA;AAAAA,MAA+B,UAA/BA;AkBxLF,AlByLEA,MkBzLEqB,AlByLE,MkBzLK,CAAC,GlByLI,GAAG,CkBzLfA,IAAmB,CAAC,MlByLO,CAAC,KkBzL5BA,ElByLmC,CAAC,CkBzLA,KAAK,CAAC,KAAN,MAAiB,AlByL1B,CAAZ,EkBzLyC,CAAC,ClByLE,IkBzLN,AlByLU,EkBzL/DA,ClByLkE,GkBzLE,GAAG,CAAC,MlByLT,GAAmB,CAAnE,CAAjBrB,CkBzLsE,IAAoB,CAAxFqB,IAA6F,KAAK,CAAC,KAAN,IAAe,GAAG,CAAC,KAAhHA,IACA,KAAK,CAAC,GADNA,IACa,KAAK,CAAC,GAAN,CAAU,MAAV,IAAoB,KAAK,CAAC,GAAN,CAAU,IAD3CA,IACmD,KAAK,CAAC,GAAN,CAAU,IAAV,IAAkB,MAAM,CAAC,IADhF,EACsF;AACpF,IAAA,MAAM,CAAC,IAAP,IAAe,CAAf;AACA,AlBuLA,IkBvLA,ElBuLI,CkBvLD,GAAG,GlBuLN,EkBvLW,AlBwLf,CkBxLgB,GAAN,CAAU,cAAV,CAAyB,MAAM,CAAC,IAAP,GAAc,KAAK,CAAC,IAA7C,CAAN;AACA,AlBuLE,IkBvLF,AlBuLE,UkBvLQ,AlBuLE,CkBvLF,ElBuLK,IAAI,MkBvLF,KlBuLF,CAAgB,OAAO,CAAC,IAAxB,EAA8B,OAAO,CAAC,KAAtC,EAA6C,IAAI,CAAC,IAAlD,EAAwD,IAAI,CAAC,IAA7D,EAAmE,IAAnE,EACgB,OAAO,CAAC,QAAR,IAAoB,OAAO,CAAC,IAAR,CAAa,YADjD,EAC+D,UAD/D,CAAb;AkBtLA,AlBuLuF,GAFzF,GkBrLE,GlBwLG,CkBxLC,CAAC,ElBwLE,IAAJ,EkBxLH,AlByLN,CkBzLoB,eAAd,EAA+B,UAAU,CAAV,EAAa;AAAE,AlByL9C,IAAA,UAAU,CkBzL2C,CAAC,CAAC,AlByL1C,IkBzLyC,AlByLrC,EkBzL4C,QAAQ,CAAC,AlByLzD,CAAgB,CkBzLwC,EAAK,ClByL7D,EAAsB,IkBzLkC,AlByLxD,CkBzLyC,CAAR,AlByLL,IAAI,CAAC,IAAjC,EAAuC,IAAI,CAAC,IAA5C,EAAkD,IAAlD,EAAwD,IAAxD,EAA8D,UAA9D,CAAb;AkBzLsF,AlByLA,GADnF,IkBxLH,ElB2LN;AkB1LK,AlB0LC,IAAA,CkB5LQ,EAEP,EAFO,CAAV,IlB4LY,GAAG,IAAI,WAAJ,CAAgB,MAAM,CAAC,MAAP,CAAc,WAA9B,EAA2C,IAA3C,EAAiD,IAAI,CAAC,IAAtD,EAA4D,IAAI,CAAC,IAAjE,EAAuE,IAAvE,EAA6E,IAA7E,EAAmF,UAAnF,CAAb;AkBzLH,AlByL8G;;AkBvL/GrB,AlBwLE,MkBxLE,ClBwLG,KkBxLG,AlBwLR,GkBxLW,AlBwLE,CAAC,KkBxLG,CAAC,IlBwLL,CkBxLfA,AlBwLE,CAfiC,CAgBrC;AkBzLEA,MAA2B,IAAI,GAAG,MAAM,CAAC,IAAzCA;AAEAA,AlBwLE,MkBxLE,ClBwLG,CkBxLPA,EAAQ,ClBwLN,GAAY,CAAZ,MkBxLFA,EAAqB,UAArBA,EAAiC,MAAjCA;AlByLE,OAAK,IAAL,GAAY,OAAO,CAAC,aAApB;AkBxLF,AlByLE,MkBzLE,ClByLG,UAAL,CkBzLF,EAAkB,AlByLE,KAAlB;AkBxLA,AlByLF,CAtBF,OkBnKQ,KAAK,CAAC,GAAN,IAAa,GAAG,CAAC,GAArB,EAA0B;AAAA;AAC9B;AACA;AACM,UAAIqB,MAAO,CAAC,EAARA,IAAcA,MAAO,CAAC,UAARA,IAAsB,EAApCA,IAA0C,KAAK,CAAC,YAAN,IAAsB,CAApE,EAAuE;AACrE,QAAA,IAAI,CAAC,WAAL,CAAiB,wBAAjB;AACA,QAAA,UAAU,CAAA,YAAA;AAAA,iBAAO,cAAc,CAAC,IAAD,CAArB;AAA2B,SAA3B,EAA6B,EAA7B,CAAV;AACD;;AACD,AlBoLJlB,MkBpLI,EAAE,GAAG,IAAI,CAAC,IlBoLdA,CkBpLS,AlBoLL,CkBpLgB,EAAX,AlBoLTA,CkBpLuB,AlBoLnB,GAAJA,GkBpLS,AlBoLL,CkBpL0B,MAArB,EAA6B,GlBoL5B,CkBpLD,CAAL;AACA,AlBoLF,MkBpLE,GlBoLK,KAAK,GkBpLC,ElBoLN,CkBpLS,AlBoLE,GkBpLC,CAAC,ClBoLG,IAAhB,CAAP,CkBpLgB,CAAY,MAAM,CAAC,KAAnB,EAA0B,WAA1B,CAAsC,GAAG,CAAC,OAAJ,CAAY,MAAM,CAAC,IAAnB,CAAtC,CAAd;AACD,AlBoLH,CAFAA,EAIA,EkB/LE,MASO,KAAA;AACL,AlBsLJ,IkBtLI,MAAM,CAAC,IAAP,IAAe,MAAM,CAAC,IAAtB,KAA+B,MAAM,GAAG,GAAG,CAAC,OAAJ,CAAY,MAAM,CAAC,KAAnB,CAAxC,MACC,UAAU,GAAG,YAAY,CAAC,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,GAArB,CAAyB,KAAK,CAAC,YAA/B,EAA6C,GAAG,CAAC,YAAjD,CAAD,EACC,MAAM,CAAC,MAAP,CAAc,OAAd,CAAsB,GAAtB,CAA0B,MAAM,CAAC,YAAjC,EAA+C,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,KAAP,EAA7D,CADD,CAD1B,CADK,EAIL;AACA,AlBmLJ,MkBnLI,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,EAAhB;AlBoLJ;AkBnLI,UAAI,UAAU,CAAC,IAAX,IAAmB,KAAvB,EAA4B;AAAE,QAAA,EAAE,CAAC,OAAH,CAAW,MAAX,EAAmB,IAAnB,EAAyB,UAAU,CAAC,IAApC;AAAyC,OAAvE,MACN,UlBmLE,SAAA,SAAA,MAAA,CAAO,GAAP,EAAY;AkBnLH,AlBoLP,MAAI,EkBpLG,ClBoLA,CkBpLE,AlBoLD,CkBpLE,OlBoLN,GkBpLG,CAAc,AlBoLD,CAApB,EAAuB,GkBpLhB,EAAsB,IAAtB,EAA4B,UAAU,CAAC,IAAvC;AAA4C,AlBqLjD,SAAK,WAAL,CAAiB,GAAjB;AkBpLD,AlBqLA,GAFD,EkB3LO,IlB6LA,EkBrLA,ElBqLI,EkBrLA,ClBqLG,CAAC,GkBrLC,CAAC,IlBqLN,EkBrLA,CAAa,ClBqLG,CAApB,EAAuB,CkBrLnB,CAAmB,KAAK,CAAC,KAAN,EAAnB,EAAkC,MAAlC,IAA4C,KAAK,CAAC,KAAN,MAAiB,GAAG,CAAC,KAAJ,MAAe,GAAG,CAAC,UAAJ,GAAiB,CAAjB,GAAqB,CAApC,CAAjE,EAAyG;AACpH,AlBqLMH,QAAI,KAAK,GAAG,GAAG,CAAC,YAAJ,CAAiB,OAAjB,CAAZA;AkBpLAA,AlBqLAA,QAAI,EkBrLAW,GlBqLK,GkBrLD,AlBqLI,GkBrLD,ElBqLM,GkBrLD,AlBqLI,CkBrLH,IlBqLQ,EkBrLd,CAAa,OlBqLJ,CAAgB,GkBrLzB,CAAyB,KAAK,CAAC,ClBqLK,CAAC,KAAD,CAA3B,CAAH,GkBrLN,AlBqL+C,EkBrLF,ElBqLxDX,CkBrL2D,CAAC,YAAjD,CAAXA;AlBqLAA,QAAgE,GAAG,GAAG,KAAK,GAA3EA;AkBpLA,UAAI,IAAI,CAAC,QAAL,CAAc,iBAAd,EAA+B,UAAE,CAAF,EAAE;AAAA,AlBqLrC,QAAI,KAAK,EkBrLiC,CAAC,CAAC,AlBqL/B,IkBrL8B,AlBqL3C,EkBrLkD,AlBqLjC,MkBrL0B,EAAe,IAAf,EAAqBW,MAArB,CAAN;AAAgC,AlBqLlD,OkBrLf,CAAJ,EAAsE,ClBqL9CX,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAqC;AkBrLgB,AlBqLd,aAAK,cAAL,CAAoB,KAAK,CAAC,CAAD,CAAzB;AkBrLoB,AlBqLQ;AAAC;AkBpLvF,MAAA,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,UAAd,CAAyBW,MAAzB,EAA+B,MAA/B,EAAuC,IAAvC,CAAL;AACD,AlBoLC,SAAK,UAAL,CAAgB,GAAhB;AkBnLH;AlBoLG,QAAI,KAAK,IAAI,IAAb,EAAiB;AkBlLrB,AlBkLuB,MkBlLnB,CAAC,EAAL,EACF,AlBiL8BX,IAAI9B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAK,CAAC,MAA1B,EAAkCA,GAAC,EAAnC,EAAqC;AkBjL1D,AlBiL4D,IkBjL5D,EAAE,GAAG,IAAI,AlBiLwD,CkBjLvD,KAAL,CAAW,EAAX,CAAc,OAAd,AlBiLuD,CkBjLjC,AlBiLwD,KAAK,CkBjLnF,AlBiLoFA,EkBjLtD,ClBiLqD,CAA5B,EkBjLvD,AlBiLwF,EkBjLpD,ClBiLmB,IkBjLd,CAAC,GAAN,CAAU,KAAV,CAAgB,MAAM,CAAC,KAAP,GAAe,KAAK,CAAC,IAArC,EAA2C,MAAM,CAAC,IAAP,GAAc,KAAK,CAAC,IAA/D,CAApC,CAAL;AAA8G,AlBiLd;AAAC;AkBhLnG,AlBiLG,MkBjLC,KAAK,CAAC,GAAV,EAAe;AACb8B,AlBiLF,QkBjLMkC,KAAG,GAAG,gBAAgB,CAAC,IAAD,EAAO,EAAE,CAAC,GAAV,EAAe,KAAK,CAAC,GAArB,CAA1BlC,CADa,CAEjB;AACA;AACA,uBlBgLE,cAAA,SAAA,WAAA,CAAY,GAAZ,EAAiB;AkB/KnB,AlBgLIA,MAAI,KAAK,GAAG,GAAG,CAAC,SAAhBA;AkB/KJ,AlBgLIA,MAAI,GAAG,GAAG,KAAK,GAAfA;;AkB/KA,AlBgLA,MAAI,EkBhLAkC,ClBgLG,CAAC,GkBhLD,IAAI,AlBgLP,EkBhLSb,ClBgLK,KkBhLE,CAAC,MAARA,IAAkBA,IlBgL3B,EkBhLkC,CAAC,ClBiLnC,GAAG,CAAC,EkBjLKA,IAAqC,IAAI,CAAC,ElBiLnD,CAAkB,GAAlB,CADA,EkBhLSA,ElBkLT,EkBlLgEa,KAAG,CAAC,KAA3Db,KACC,ClBiLS,IAAnB,CkBjLgB,AlBiLQ,CkBjLP,IlBiLjB,CkBjLU,AlB+Kd,EAEoC,EkBjLN,MAAM,CAAC,IAAvB,IAA+B,IAAI,CAAC,iBAAL,GAAyB,IAAI,CAAC,GAAL,KAAa,GADtEA,MAECa,KAAG,CAAC,IAAJA,IAAY,MAAZA,IAAsBA,KAAG,CAAC,IAAJA,IAAY,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,IAAf,IAAuB,CAF1Db,KAGAA,MAAO,CAAC,EAARA,IAAca,KAAG,CAAC,KAAlBb,IAA2Ba,KAAG,CAAC,IAAJA,IAAY,MAHzC,CAAX,EAIJ;AAAM,AlB+KA,MkB/KA,EAAE,AlB+KE,CkB/KD,ClB+KG,GAAG,CAAC,OkB/KV,AlB+KM,CkB/KUA,ElB+KI,GkB/KpB,YlB+KI,CAAJ,EAAsC;AkB/KlB,AlBgLlB,MAAA,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc,mBAAd,EAAmC,GAAnC,CAAR,CADoC,CAE5C;AkBhLG,AlBiLH;AACA;AkBjLE,MAAI,WAAJ,EAAe;AAAE,AlBkLX,IkBlLW,EAAE,CAAC,GlBkLV,QkBlLO,CAAe,UlBkLH,CkBlLZ,GlBkLP,CAAwB,KAAxB,KAAkC,KAAK,IAAL,IAAa,KAAK,KAAL,CAAW,MAAX,GAAoB,CAAvE,EAA0E;AkBlLpC,AlBmLpClC,YAAI,UAAU,GAAG,GAAG,CAAC,OAAJ,CAAY,GAAG,CAAC,OAAJ,CAAY,MAAZ,GAAqB,CAAjC,CAAjBA;AACAA,YAAI,aAAa,GAAG,GAAG,CAAC,eAAxBA;AkBnLR,EAAA,IAAI,CAAC,QAAL,CAAc,EAAE,CAAC,cAAH,EAAd;AACD,AlBmLS,YAAI,CAAC,UAAD,IACC,aAAa,IAAI,aAAa,CAAC,QAAd,IAA0B,IAD5C,IAEC,UAAU,CAAC,MAAX,IAAqB,mBAAmB,IAAnB,CAAwB,UAAU,CAAC,IAAnC,CAF1B,EAGV;AAAY,UAAA,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,CAAZ,CAAR;AkBpLZ,AlBoLkC,SkBpLzB,gBAAT,CAA0B,IAA1B,EAAgC,GAAhC,EAAqC,SAArC,EAAgD;AAC9C,AlBoLO,MkBpLH,IAAI,CAAC,GAAL,CAAS,SAAS,CAAC,MAAnB,EAA2B,SAAS,CAAC,IAArC,IAA6C,GAAG,CAAC,OAAJ,CAAY,IAA7D,EAAiE;AAAE,AlBqL9D,KAbD,MkBxKsE,AlBqL/D,IkBrLwD,AlBqLpD,EAAE,GAAG,CAAC,OAAJ,GAAc,oBAAhB,CAAJ,EAA2C;AkBrLwB,AlBsLxE,MAAA,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc,WAAd,EAA2B,GAA3B,CAAR;AACD,KAFM,MAEA;AkBtLX,AlBuLM,MAAA,GkBvLC,ElBuLI,GAAG,KAAK,CAAC,KkBvLG,CAAC,ClBuLV,CAAc,EkBvLL,EAAO,GAAG,CAAC,AlBuLpB,EAAwB,IAAxB,CkBvLgB,AlBuLxB,CkBvLoC,SAAS,CAAC,MAAtB,CAAP,EAAsC,GAAG,CAAC,OAAJ,CAAY,SAAS,CAAC,IAAtB,CAAtC,CAAvB;AACD,AlBuLM,EkBrLP;AACA;AACA,AlBoLM,QAAI,KAAJ,EAAS;AkBnLf,AlBmLiB,WAAK,UAAL,CAAgB,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,CAAwB,KAAxB,CAAhB;AAA+C;;AkBlLhE,AlBmLM,SkBnLG,AlBmLE,UAAL,CAAgB,CkBnLtB,CAAsB,ClBmLhB,EkBnLN,EAA2B,IAA3B,EAAiC;AAC/BA,AlBmLG,GAvBD,GkB5JE,GlBmLK,KkBnLG,GAAG,GAAG,CAAC,UAAJ,CAAe,KAA9BA;AAAAA,AlBoLI,MkBpLiC,GlBoL5B,MkBpLqC,GAAG,ClBoL7C,CAAgB,EkBpLiC,CAAC,AlBoLlD,UkBpL6C,CAAgB,KAAjEA;AACAA,AlBoLG,MkBpLC,KAAK,GAAG,QAAZA;AAAAA,AlBqLA,GAEA,GkBvLsB,OAAO,GAAG,SAAhCA;AAAAA,AlBwLA,MkBxL2C,IAA3CA;AAAAA,AlByLA,MkBzLiD,IAAjDA;AAAAA,MAAuD,MAAvDA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,ClByLpB,QkBzL6B,CAAC,IlByL9B,EkBzLA,EAAsC,CAAC,EAAvC,EAAyC,AlByLzC,UAAA,CAAW,GAAX,EAAgB,UAAhB,EAA4B;AkBzLe,AlB0LzCA,IkB1LyC,ElB0LrC,GkB1L0C,ClB0LtC,EkB1LyC,ClB0LtC,GAAG,CAAC,IkB1L2C,CAAC,CAAD,CAAT,CAAa,AlB0LnD,CAAa,WAAb,CkB1LsC,CAA2B,AlB0L5EA,KkB1LiD,CAAR;AAAyC,AlB0LlFA,MAAuC,MAAvCA;;AkBzLF,AlB0LE,MAAI,CkB1LDA,IAAI9B,GAAC,AlB0LI,CAAC,EkB1LF,CAAb,EAAgBA,GAAC,GAAG,GlB0Ld,CAAwB,IkB1LF,AlB0LtB,CkB1LuB,IlB0LU,EkB1LvC,EAAqCA,ClB0LO,EkB1LN,EAAtC,EAAwC,AlB0LD,CAAY,cAAjD,EAA+D;AkB1LvB,AlB0LyB,IkB1LzB,AlB0LyB,OkB1LlB,GAAG,GlB0L4B,CAAC,GAAD,CkB1LpB,AlB0LO,CkB1LNA,GAAD,CAAR,CAAY,aAAZ,CAA0B,OAA1B,CAAV;AAA4C,AlB0LD;;AkBzLrF,AlB0LE8B,MkB1LE,AlB0LE,IAAI,CkB1LD,CAAC,ClB0LI,KkB1LV,AlB0Le,IkB1LC,CAAhB,ElB0LU,CAAa,CkB1LF,OAAO,CAAC,GlB0LnB,GkB1LW,ClB0LkB,GkB1LA,CAA3C,ClB0LgD,CkB1LF,MlB0LH,CAAa,YAAb,CAA0B,GAA1B,CAA9B,KACN,MAAM,GAAG,KAAK,MAAL,CAAY,QAAZ,CAAqB,GAArB,EAA0B,IAA1B,EAAgC,UAAhC,CADH,CAAXA;AkBzLA,IAAA,IAAI,GAAG,KAAK,CAAC,CAAD,CAAZ;AACA,AlB0LA,IkB1LA,ElB0LI,EkB1LA,ElB0LI,CkB1LD,ElB0LI,GkB1LX,ClB0Le,CAAC,MAAR,GAAiB,UAAU,CAAC,cAAX,CAA0B,IAA1B,CAAzB,EAA0D;AACxD,SAAK,UAAL,CAAgB,GAAhB;AkB1LF,AlB2LE,IkB3LF,KlB2LO,CkB3LD,GAAA,UAAG,AlB2LP,CAAoB,GkB3LhB,AlB2LJ,EkB3LO;AAAA,AlB4LR,GAHD,MAGO,IkB5LU,AlB4LN,CAAC,GkB5LS,CAAC,AlB4LX,IkB5LM,AlB4LG,CkB5LO,GlB4LH,CkB5LO,AlB4LN,CkB5LO,GlB4LrB,IAAsB,CkB5LN,CAAc,ElB4LJ,CAAC,CkB5LO,CAAC,KAAnB,CAAV,CAAR,ElB4LF,EAA4C;AkB5LC,AlB6LlD,KkB7LF,GlB6LM,IAAI,IAAI,IAAI,CAAC,WAAjB,EAA4B;AkB5L/B,AlB4LiC,GkBhMlC,MAIO,ElB4LgC,EkB5L5B,ElB4LuB,GkB5LlB,AlB4L8B,CkB5L7B,GlB4LiC,CAAC,EkB5LxC,ClB4LmC,CAAS,CAAT,CkB5LnB,CAAhB,AlB4L+C,IkB5L1B,ClB4L+B,IAAL,EkB5LnB,CAAC,AlB4L8B,CAAxB,CAAZ,IkB5LF,IAAkB,CAA3C,EAA8C;AACnD,AlB2LsE,IkB3LtE,ClB2LE,GkB3LE,GAAG,AlB4LA,IAAI,GkB5LG,CAAC,AlB4LA,CkB5LD,CAAd,ElB4LmB,IAAI,CAAC,IAAL,CAAU,QAAtB,EAA8B;AkB3LrC,AlB2LuC,IkB3LvC,ElB2LuC,EkB3LnC,ClB2LsC,EkB3LnC,ClB2LsC,IAAI,CAAC,EkB3LlD,ElB2LuC;AAAe;AkB1LtD,IAAA,MAAM,GAAA,UAAG,IAAH,EAAG;AAAA,AlB2LPA,QAAI,IAAJA,CkB3Le,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,aAAL,CAAmB,IAAI,CAAC,KAAxB,CAAV,CAAR;AAAgD,AlB2LvDA,KkB3LF,GlB2LY,GAAG,GAAG,KAAK,GAArBA;AkB1LH,AlB0LGA,GkB9LG,KlB8LuB,CkB1LvB,YlB0LoC,GAAG,KAAK,UAA/CA;AkBzLF,WAAO,IAAP;AACD,AlByLG,QAAI,SAAS,CAAC,cAAV,CAAyB,IAAzB,CAAJ,EAAoC;AAClC,MAAA,IAAI,GAAG,IAAP;AkBzLNA,MAAI,OAAO,GAAG,EAAdA;AlB0LM,UAAI,CAAC,GAAG,CAAC,IAAT,EAAa;AkBzLnB,AlByLqB,OkBzLhBA,IAAI9B,ElByLiB,CkBzLhB,GAAG,CAAb,EAAgBA,GAAC,AlByLI,GkBzLD,AlByLmB,IkBzLf,AlByLH,CkBzLI,UAAzB,EAAqCA,GAAC,EAAtC,EAAwC;AAAE,AlByLC,IkBzLD,OAAO,CAAC,IAAR,CAAa,MAAM,CAAC,IAAI,CAAC,KAAL,CAAWA,GAAX,CAAD,CAAnB;AAAmC,AlB0LxE,KAHD,MAGO,IAAI,CAAC,GAAG,CAAC,UAAT,EAAqB;AAC1B,WAAK,YAAL,CAAkB,GAAlB;AkB1LN,AlB2LM,MkB3LF,2BAAS,IAAT,CAAc,OAAd,EAAuB,EAAvB,CAA0B,GAA1B,CAAJ,EAAkC;AAAE,AlB4L/B,WkB5LsC;AAAA,MAAA,IAAA,EAAC,IAAD;AAAK,AlB6L5C,MkB7L4C,GlB6LvC,CkB7LuC,EAAE,GlB6L9C,CAAY,GAAZ;AkB7LuC,KAAP;AAAmB,AlB8LnD,QAAI,IAAJ,EAAQ;AkB7Lb,AlB6Le,WAAK,IAAL,CAAU,GAAV;AAAc;AkB3L9B,SAAS,aAAT,CAAuB,GAAvB,EAA4B,KAA5B,EAAmC,GAAnC,EAAwC,SAAxC,EAAmD,OAAnD,EAA4D;AAC1D,AlB2LI,MkB3LA,CAAC,ElB2LI,OkB3LK,CAAC,ElB2LX,GAAkB,CkB3LjB,CAAiB,WAAlB,AlB2LA,IkB1LN;AACM,AlB0LD,EkB1LC,ClB4KK,EkB5KF,GAAG,ClB0LD,IkB1LL,IAAe,OAAO,CAAC,GAAR,GAAc,SAAS,CAAC,GAFvC,IAGN;AACM,AlByLA,EkBzLA,OlByLK,ckBzLgB,CAAC,ClByLtB,CAAsB,GAAtB,EAA2B,EkBzLN,EAAY,AlByLjC,EAAiC,EkBzLZ,EAAkB,AlByLF,CAAC,IkBzLjB,CAArB,GAAgD,ClByLf,KAAmB,CkBzLG,CAAC,GAJ5D,AlB6LqC,EkBxLvC,ClBwLkE,MAA3B,GAAoC,IAArE;AkBxLF,AlByLC,WkBzLM,KAAP;AAAY,AlB0Ld,GAEA;;AkB1LA8B,MAAI,MAAM,GAAG,GAAG,CAAC,OAAJ,CAAY,KAAZ,CAAbA,CAR0D,CAS5D;uBlB0LE,eAAA,SAAA,YAAA,CAAa,GAAb,EAAkB;AkBzLlB,AlB0LE,MkB1LE,AlB0LE,GAAG,CAAC,EkB1LA,CAAC,KlB0LL,IAAgB,GkB1LlB,ClB0LE,EkB1LoB,ElB0LI,IkB1LE,CAAC,AlB0LE,GAAL,CAAS,EkB1Lb,CAAc,ClB0LlC,IAAyC,EkB1LrB,CAAsB,ElB0LI,EkB1LhD,ClB0L2C,CAAS,EkB1LA,CAAC,ClB0LV,CAAc,IkB1LE,CAAC,MAAP,CAAc,ClB0LrE,EACJ,QkB3LE,EACF;AAAI,AlB0LE,SAAK,EkB1LA,KAAP,IlB0LE,CAAiB,GAAG,CAAC,aAAJ,CAAkB,cAAlB,CAAiC,IAAjC,CAAjB;AkB1LU,AlB0L8C;AAC5D,GAEA;AkB5LAA,MAAI,KAAK,GAAG,GAAG,CAAC,OAAJ,CAAY,qBAAqB,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,CAAjC,CAAZA,CAZ0D,CAa5D;;AACE,MAAI,CAAC,KAAK,CAAC,MAAN,CAAa,GlB2LlB,QkB3LI,IAA6B,KAAK,AlB2LtC,CkB3LuC,GAAN,GAAY,ElB2L7C,CkB3LI,IACA,SlB0LJ,CAAe,GAAf,EAAoB,MkB1LK,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,CAArB,GAA4C,GADhD,EAEF;AAAI,AlB0LJ,WkB1LW,KAAP;AAAY,AlB2LZ,GkB3MwD,CAkB5D,ElByLQ,GAAG,CAAC,QAAJ,IAAgB,IAAhB,KAAyB,CAAC,KAAK,GAAL,CAAS,IAAV,IAAkB,CAAC,KAAK,GAAL,CAAS,IAAT,CAAc,aAA1D,CAAJ,EACJ;AAAM,SAAK,SAAL,CAAe,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,CAAwB,GAAxB,CAAf;AAA4C;AkBzLhD,AlB0LA,GAEA,MkB5LO,SAAS,CAAC,MAAV,CAAiB,OAAjB,CAAyB,GAAzB,CAA6B,SAAS,CAAC,YAAvC,EAAqD,EAArD,CAAwD,KAAK,CAAC,MAAN,CAAa,OAArE,CAAP;AACD,AlB4LC;AACA;AkB3LF,SAAS,qBAAT,CAA+B,IAA/B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD;AACrDA,MAAI,KAAK,GAAG,IAAI,CAAC,KAAjBA;AAAAA,MAAwB,GAAG,GAAG,OAAO,GAAG,ClB2LxC,GkB3L4C,CAAC,GAAL,EAAH,GAAgB,ClB2LrD,GkB3LyD,CAAC,GAA1DA,ElB2LA,UAAA,CAAW,MAAX,EAAmB;AACjBA,MAAI,KAAK,GAAG,IAAI,CAAC,IAAjBA;AkB3LF,SAAO,KAAK,GAAG,CAAR,KAAc,OAAO,IAAI,IAAI,CAAC,UAAL,CAAgB,KAAhB,KAA0B,IAAI,CAAC,IAAL,CAAU,KAAV,EAAiB,UAApE,CAAP,EAAwF;AACtF,AlB2LA,EAAA,EkB3LA,GlB2LK,EkB3LA,AlB2LE,KAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,IAAI,CAAxC,EAA2C;AkB1LlD,AlB2LE,IkB3LF,GAAG,ElB2LIA,IAAI,KAAK,GAAG,IAAjB,IAAyB;AkB1L3B,AlB2LIA,IkB3LJ,MlB2LQ,CkB3LD,GAAG,AlB2LE,GAAG,EkB3Lf,GlB2LoB,MAAL,CAAY,UAAZ,CAAuB,MAAM,CAAC,CAAD,CAA7B,EAAkC,MAAM,CAAC,CAAC,GAAG,CAAL,CAAxC,EAAiD,IAAjD,EAAuD,KAAvD,CAAXA;AkB1LL;AlB2LK,UAAI,CAAC,IAAL,EAAS;AkB1Lf,AlB0LiB,MkB1Lb,OAAJ,EAAa,ElB0La,KAAT;AkBzLfA,AlByL6B,QkBzLzB,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,KAAV,EAAiB,UAAjB,CAA4B,IAAI,CAAC,UAAL,CAAgB,KAAhB,CAA5B,CAAXA;;AACA,AlByLI,UAAI,CkBzLD,GlByLK,CkBzLD,AlByLE,IkBzLE,CAAC,ClByLZ,EAAe,CkBzLC,CAAC,MAArB,EAA6B;AAC3B,AlBwLmB,MkBxLnB,IAAI,GAAG,ElBwLmB,EkBxLf,CAAC,ClBwLO,SkBxLnB;AACA,AlBuL8B,MkBvL9B,GAAG;AACJ;AACF,AlBsLK,MAAA,KAAK,GAAG,KAAK,MAAL,CAAY,MAAZ,CAAmB,KAAnB,CAAyB,IAAI,CAAC,IAA9B,EAAoC,MAApC,CAA2C,IAAI,CAAC,KAAhD,EAAuD,QAAvD,CAAgE,KAAhE,CAAR;;AkBrLN,AlBsLM,SkBtLC,ClBsLG,EkBtLV,ElBsLc,CAAC,SAAL,KAAmB,KAAvB,EAA4B;AkBrLnC,AlBqLqC,QAAA,KAAK,GAAG,IAAR;AAAY,OAA1C,MACR;AkBpLA,AlBoLa,SkBpLJ,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,GAAxB,EAA6B,YAA7B,EAA2C,aAA3C,EAA0D;AACxDA,AlBmLgB,MkBnLZ,KAAK,GAAG,CAAC,CAAC,aAAF,CAAgB,CAAhB,EAAmB,GAAnB,CAAZA;AlBoLK;AkBnLL,AlBoLG,MkBpLC,KAAK,IAAI,IAAb,EAAiB;AAAE,WAAO,IAAP;AAAW,AlBqL5B,SAAO,KAAP;AACF,GAEA;AkBvLF,AlBwLE,MkBxLF,GAAwB,GAAG,CAAC,CAAC,WAAF,CAAc,CAAd,EAAiB,GAAG,GAAG,CAAC,CAAC,IAAzB,EAA+B,GAAG,GAAG,CAAC,CAAC,IAAvC,CAA3B;AAAU,AlByLR,MkBzLQ,IAAA,GAAA,GAAA,CAAA,CAAA;AAAS,AlB0LjB,MkB1LiB,IAAA,GAAA,GAAA,CAAA,CAAA;;AACjB,MAAI,aAAa,IAAI,KAArB,EAA4B;AAC1BA,QAAI,MAAM,GAAG,IAAI,CAAC,ClByLpB,EkBzLe,CAAS,CAAT,EAAY,KAAK,GAAG,IAAI,CAAC,AlByLxC,GkBzLmC,CAAS,IAAT,ClByLnC,CkBzLkD,IAAf,CAApB,CAAbA,SlByLF,CAAiB,GAAjB,EAAsB,IAAtB,EAA4B,aAA5B,EAA2C;AkBxLzC,IAAA,YAAY,IAAI,IAAI,GAAG,MAAP,GAAgB,KAAhC;AACD,AlBwLCA,MAAI,IAAJA,EAAU,QAAVA,EAAoB,QAApBA,EAA8B,IAA9BA;;AkBvLF,AlBwLE,MkBxLE,AlBwLE,IkBxLE,AlBwLE,CAAC,EkBxLA,ElBwLT,EAAe,CkBxLb,IAAgB,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,IAA/B,EAAqC;AACnCA,AlBwLE,IAAA,IkBxLE,IAAI,AlBwLE,GkBxLC,AlBwLE,KAAK,MAAL,CkBxLU,AlBwLE,IkBxLE,ElBwLd,CAAmB,EkBxLrB,GlBwLE,CkBxLuB,AlBwLE,IAAI,CAAC,IAA9B,CAAX,EkBxL8C,IAAI,IAAzC,GAAgD,KAAK,GAAG,YAAxD,GAAuE,CAAlFA;AACA,IAAA,KAAK,IAAI,IAAT;AACA,AlBuLE,IkBvLF,IAAI,AlBuLE,CAAC,EkBvLA,KAAK,ClBuLG,CAAC,EkBvLA,IAAI,AlBuLlB,EAAsB,CkBvLD,IAAX,CAAZ;AACA,AlBuLI,IkBvLJ,ElBuLI,EkBvLA,ElBuLI,CkBvLD,ElBuLI,GkBvLX,ElBuLgB,KAAL,CAAW,QAAX,EAAqB,IAAI,CAAC,KAA1B,EAAiC,IAAI,CAAC,kBAAtC,CAAP;AkBtLL,AlBuLI,GkB5LL,ElB0LI,IkBrLG,ElBuLI,EkBvLA,ElBuLI,CAAC,CkBvLD,GAAG,ClBuLG,IkBvLd,EAAkB,IlBuLT,CAAgB,QAAQ,CAAC,MAAT,CAAgB,IAAI,CAAC,KAArB,CAAhB,CAAL,EAAmD;AkBtL5DA,AlBuLI,QkBvLAmC,GlBuLK,GkBvLD,GAAG,MlBuLP,CAAkB,GAAlB,EkBvLmB,IAAI,KAAhB,IAAyB,YAAY,IAAI,IAAzC,GAAgD,KAAK,GAAG,YAAxD,GAAuE,CAAlFnC;AACA,AlBuLG,IkBvLH,KAAK,IAAImC,MAAT;AACA,AlBuLC,GAPD,CkBhLA,IAAI,ClBuLG,EkBvLA,KAAK,IAAI,IAAI,GAAG,IAAX,CAAZ;AACA,AlBuLE,IkBvLF,AlBuLE,IkBvLE,GAAG,ClBuLG,GAAG,CkBvLb,IlBuLkB,MAAL,CAAY,MAAZ,CAAmB,KAAnB,CAAyB,IAAI,CAAC,IAA9B,CAAX;AkBtLH,AlBuLG,IAAA,IAAI,GAAG,QAAQ,CAAC,MAAT,CAAgB,IAAI,CAAC,KAArB,CAAP;AACA,SAAK,cAAL,CAAoB,IAApB;AkBvLJ,AlBwLG,SkBxLI;AAAA,IAAA,KAAA,EAAC,KAAD;AAAM,AlByLXnC,IkBzLW,ElByLP,EkBzLO,EAAE,GlByLF,CkBzLN,ElByLS,KAAK,GAAnBA;AkBzLiB,IAAA,IAAA,EAAE;AAAd,AlB2LL,GkB3LF,GlB2LM,QAAQ,IAAI,QAAQ,CAAC,MAAzB,EAAiC;AkB1LrC,AlB2LM,SAAK,UAAL,CAAgB,GAAhB;AACD,GAFD,MAEO,IAAI,aAAJ,EAAmB;AmBhhBvB,AnBihBD,SmBjhBU,AnBihBL,UAAL,CAAgB,GAAhB,EAAqB,KmBjhBpB,CAA+B,IAA/B,EAAqC,CnBihBtC,ImBjhBC,EAA4C;AACjDA,AnBihBG,GAFM,GmB/gBL,GnBihBK,ImBjhBE,AnBihBE,GmBjhBC,CnBihBG,CmBjhBjBA,AnBihBkB,UAAT,EAAqB;AmBjhBX,AnBkhBf,MmBlhBe,GnBkhBV,ImBlhBU,GAAA,GnBkhBf,CAAgB,CmBlhBD,CAAA,CnBkhBf,MmBlhBe;AAAS,AnBmhBxB,IAAA,EmBnhBwB,EnBmhBpB,CAAC,MmBnhBmB,GAAA,CnBmhBxB,CAAgB,GmBnhBQ,AnBmhBxB,CmBnhBwB,CnBmhBH,KAAK,GmBnhBF,GnBmhBH,CAAY,MAAjC,EAAyC,OAAzC,CAAgD,UAAC,IAAD,EAAC;AmBnhBd,AnBmhBc,MmBnhBd,OAAA,AnBmhBsBa,GmBnhBtB,GnBmhB0B,CAAC,CmBnhB3B,CAAA,OAAA,CnBmhBsBA,CAAgB,IAAhBA,CAAR;AAA6B,KAA9E;AmBlhBJ,AnBmhBG,GAHM,MmBhhBF,AnBmhBE,SmBnhBO,GAAG,CAAZ,IAAiB,OAAO,GAAG,CAA3B,IAAgC,OAAO,CAAC,UAAR,IAAsB,CAAtD,IAA2D,OAAO,CAAC,UAAR,CAAmB,UAAnB,IAAiC,CAAnG,EAAsG;AACpG,AnBmhBEb,ImBnhBF,InBmhBM,KmBnhBG,KnBmhBO,GAAG,IAAI,CAAC,cAAtBA;AmBlhBF,IAAA,OAAO;AACPA,AnBkhBE,QmBlhBE,AnBkhBE,ImBlhBE,GAAG,AnBkhBE,OmBlhBK,CAAC,EnBkhBb,IAAqB,ImBlhB3BA,InBkhBE,EAAiC;AmBjhBnC,AnBihBqC,ImBjhBrC,EnBihBqC,KmBjhB9B,CAAC,IAAR,AnBihB+C,CmBjhBlC,EnBihBqC,EmBjhBjC,CAAC,AnBihBmC,CAAC,GmBjhBzC,CAAU,IAAvB,EAA6B,GnBihBqB,CmBjhBjB,AnBihBmC,CmBjhBlC,KAAL,IAAc,AnBihBO,CAAb,GmBjhBU,CAAC,IAAL,CAAU,YAAxB,GAAuC,IAAI,CAAC,KAA5C,GAAoD,IAAjF;AACA,AnBghB+E,ImBhhB/E,CnBghBE,MmBhhBK,AnBihBA,GmBjhBG,CnBihBC,GmBjhBG,CAAC,GnBihBG,ImBjhBlB,MnBihBW,IAAqB,UAAzB,EAAmC;AmBhhB3C,AnBghB6C,MAAA,UAAU,GAAG,UAAU,CAAC,GAAD,CAAvB;AAA4B;AmB9gB1EA,MAAI,UAAU,GAAG,IAAI,CAAC,QAAL,CAAc,qBAAd,KAAwC,gCAAc,UAAd,CAAyB,IAAI,CAAC,KAAL,CAAW,MAApC,CAAzDA;AnB+gBI,QAAI,CAAC,UAAL,EAAe;AmB9gBnBA,AnB8gBqB,MmB9gBjB,AnB8gBiB,GmB9gBd,GAAG,InB8gBqB,GAAG,GAAb,CmB9gBA,EAArBA;AAAAA,AnB8gBqC,MmB9gBZ,IAAI,GAAG,GAAG,CAAC,aAAJ,CAAkB,KAAlB,CAAhCA;AACA,EAAA,IAAI,CAAC,WAAL,CAAiB,UAAU,CAAC,iBAAX,CAA6B,OAA7B,EAAsC;AAAC,AnB8gBpD,ImB9gBoD,KnB8gB/C,GmB9gBuD,EAAE,KnB8gB9D,CAAgB,GAAhB,EAAqB,UAArB,EAAiC,IAAjC;AmB9gBmD,AnB+gBnD,GmB/gBa,CAAjB,KnB+gBS,MAAL,CAAY,UAAZ,EAAwB,IAAxB;AmB7gBJA,AnB8gBG,MmB9gBC,UAAU,GAAG,IAAI,CAAC,UAAtBA;AAAAA,MAAkC,SAAlCA;AnB+gBE,MAAI,IAAJ,EAAU;AmB9gBZ,AnB8gBc,SmB9gBP,AnB8gBY,IAAL,CAAU,KmB9gBP,EnB8gBH,EmB9gBO,UAAU,CAAC,QAAX,IAAuB,CAArC,KAA2C,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,QAAX,CAAoB,WAApB,EAAD,CAA9D,CAAP,EAA2G;AACzG,AnB6gBgC,SmB7gB3BA,AnB6gBgC,ImB7gB5B,AnB6gBuB,CmB7gBtB,GAAG,SAAS,CAAC,MAAV,GAAmB,CAAhC,EAAmC,CAAC,IAAI,CAAxC,EAA2C,CAAC,EAA5C,EAAgD;AAC9CA,AnB4gB2C,UmB5gBvC,OAAO,GAAG,GAAG,CAAC,aAAJ,CAAkB,SAAS,CAAC,CAAD,CAA3B,CAAdA;;AACA,AnB4gBF,MAAI,IAAJ,EAAQ,CmB5gBC,IAAI,CAAC,UAAZ,EAAsB;AAAE,AnB4gBhB,QmB5gBgB,CnB4gBX,MmB5gBkB,CAAC,UnB4gBxB,CmB5gBgB,AnB4gBO,CmB5gBa,GnB4gBpC,CmB5gBwC,CAAC,AnB4gBZ,OAA7B,GmB5gBgB;AAAoC,AnB4gBf;AACjD,GAEA;AmB9gBI,AnB+gBJ,MmB/gBI,IAAI,CAAC,WAAL,CAAiB,OAAjB;AACD,AnB+gBH;AACA;AmB/gBE,IAAA,UAAU,GAAG,IAAI,CAAC,UAAlB;AACD;uBnB+gBD,SAAA,SAAA,MAAA,CAAO,MAAP,EAAe,IAAf,EAAqB,UAArB,EAAiC,QAAjC,EAA2C;AmB7gB3C,AnB8gBEA,MmB9gBE,AnB8gBE,KAAK,GAAG,EmB9gBA,IAAI,InB8gBM,IAAI,CAA1BA,CmB9gB0B,CAAC,QAAX,IAAuB,CAAzC,EACF;AAAI,IAAA,UAAU,CAAC,YAAX,CAAwB,eAAxB,EAA4C,SAAS,GAAA,GAAT,GAAa,OAAb,GAAoB,GAApB,GAAwB,IAAI,CAAC,SAAL,CAAe,OAAf,CAApE;AAA8F,AnB8gB9F,OAAKA,IAAI,GAAG,GAAG,UAAU,GAAG,MAAM,CAAC,UAAP,CAAkB,UAAlB,CAAH,GAAmC,MAAM,CAAC,UAA9DA,EACI,GAAG,GAAG,QAAQ,IAAI,IAAZ,GAAmB,IAAnB,GAA0B,MAAM,CAAC,UAAP,CAAkB,QAAlB,CADzC,EAEK,GAAG,IAAI,GAFZ,EAEiB,GAAG,GAAG,GAAG,CAAC,WAAV,EAAuB,EAAE,KAF1C,EAEiD;AAC/C,SAAK,WAAL,CAAiB,MAAjB,EAAyB,KAAzB;AmB/gBJA,AnBghBI,MmBhhBA,GnBghBK,CmBhhBD,GAAG,EnBghBP,CAAY,CmBhhBD,CAAC,CnBghBZ,OmBhhBO,CAAc,yBAAd,EAAuC,UAAE,CAAF,EAAE;AAAA,WAAK,CAAC,CAAC,KAAD,CAAN;AAAa,AnBihB7D,GmBjhBO,KACP,AnBghBI,IAAI,CmBhhBH,CAAC,EnBghBM,KmBhhBZ,CAAc,GnBghBO,CAAC,OmBhhBtB,CAA0B,CAA1B,EAA6B,GnBghBjB,CAAyB,CmBhhBH,CAAC,CnBghBK,CAAC,KmBhhBZ,CAAc,EnBghBN,CAAa,CmBhhBlD,EAAiD,MAAjD,CADJA,CnBihByC,EAAzB,CAAZ,EACN;AmB/gBE,AnB+gBM,SmB/gBC,EnB+gBI,IAAL,CAAU,IAAV;AmB/gBE,AnB+gBa,ImB/gBb,GAAG,EAAE,IAAN;AAAU,AnBghBd,ImBhhBc,IAAA,EAAE;AAAZ,GAAP;AACD,AnBghBG,EmB9gBJ,KnB8gBS,WAAL,CAAiB,MAAjB,EAAyB,KAAzB;AmB7gBJ,AnB8gBE,GAEA;AACA;AACA;AmBjhBK,SAAS,kBAAT,CAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,SAA9C,EAAyD,QAAzD,EAAmE;AACxEA,MAAI,GAAJA;AAAAA,MAAS,MAAM,GAAG,QAAQ,AnBihB1B,CmBjhB2B,MAAT,CAAgB,IAAhB,AnBihBlB,CmBjhBuC,IAArB,CAA0B,GnBihB5C,CmBjhBAA,QnBihBA,CAAU,IAAV,EAAgB;AmBjhBhBA,AnBkhBEA,MmBlhBgD,AnBkhB5C,KmBlhBNA,AnBkhBEA,EAAW,IAAXA;;AmBjhBF,AnBkhBE,MmBlhBE,CAAC,AnBkhBEA,ImBlhBH,AnBkhBO,ImBlhBE,CAAC,AnBkhBE,GAAG,CmBlhBnB,EAAkB,EnBkhBM,IAAtB,EAA4B,KAAK,IAAI,CAArC,EAAwC,KAAK,EAA7C,EAAiD;AmBlhB/B,AnBmhBhBA,QAAI,EAAE,CmBnhBiB,EnBmhBd,EmBnhBO,GnBmhBF,KAAL,CAAW,KAAX,CAATA;AmBnhB2B,AnBohB3BA,QAAI,KAAK,GAAG,EAAE,CAAC,YAAH,CAAgB,IAAhB,CAAZA;;AmBnhBJA,AnBohBI,MmBphBA,EnBohBI,ImBphBE,CnBohBG,EmBphBA,GnBohBK,CmBphBD,AnBohBE,KmBphBG,AnBohBJ,IAAU,KmBphBG,AnBohBE,CAAC,GmBphBC,GnBohBP,GmBphBN,AnBohBqB,ImBphBE,CAAC,AnBohBE,CAAC,GmBphBhC,CAAjBA,EnBohBa,CAAT,EAAsD;AACpD,MAAA,KAAK,GAAG,KAAR;AmBphBN,AnBqhBM,MmBrhBF,AnBqhBE,IAAI,EmBrhBV,CnBqhBa,CmBrhBD,CnBqhBN;AmBphBJ,IAAA,IAAI,CAAC,QAAL,CAAc,qBAAd,EAAmC,UAAE,CAAF,EAAO;AAAE,AnBqhBxC,MmBrhBwC,IAAI,AnBqhBxC,CAAC,EmBrhB0C,CAAC,CAAC,CnBqhBvC,CAAC,EmBrhBqC,EAAO,EnBqhBvD,EAAiB,EmBrhB4C,IAAI,SAAjB,CAAR;AAAqC,AnBqhB1D,KmBrhBvB;AnBqhB4B;AmBphB5B,AnBqhBG,QmBrhBC,MAAJ,EAAU;AAAE,aAAO,IAAI,uBAAJ,CAAU,2BAAS,IAAT,CAAc,IAAI,CAAC,KAAL,CAAW,MAAX,CAAkB,IAAlB,CAAuB,IAAI,CAAC,OAAL,CAAa,QAAb,EAAuB,IAAvB,CAAvB,CAAd,CAAV,EAA+E,CAA/E,EAAkF,CAAlF,CAAP;AAA2F,AnBshBrG,QAAI,EAAE,CAAC,KAAP,EAAY;AAAE;AmBrhBhBA,AnBqhBqB,QmBrhBjB,MAAM,GAAG,IAAI,CAAC,QAAL,CAAc,qBAAd,EAAmC,UAAE,CAAF,EAAE;AAAA,AnBshBjD,amBthBsD,CAAC,CAAC,IAAD,EAAO,QAAP,EAAiB,SAAjB,CAAN;AAAiC,KAAtE,CAAbA;AnBuhBA,MAAI,CAAC,KAAL,EAAU;AmBthBV,AnBshBY,QmBthBR,GnBshBe,GmBthBnB,EAAY,AnBshBA;AmBrhBV,AnBqhBsB,MmBrhBtB,KAAK,GAAG,MAAR;AACD,KAFD,MAEO;AACL,AnBohBF,MmBphBE,CnBohBG,EmBphBA,EnBohBL,CmBphBQ,AnBohBE,IAAV,ImBphBgB,CAAC,aAAT,CAAuB,KAAvB,CAAN;AACA,MAAA,IAAI,CAAC,IAAL,GAAY,KAAZ,CAAkB,eAAlB,EAAmC,OAAnC,CAA0C,UAAC,KAAD,EAAU;AAClD,AnBmhBJ,OAAKA,CmBnhBD,GAAG,AnBmhBE,CmBnhBD,AnBmhBE,GAAG,CAAb,EAAgB,CAAC,GAAG,CmBnhBhB,CAAgB,GnBmhBK,CAAC,ImBnhBE,CAAC,CnBmhB7B,EAAkC,CAAC,EAAnC,EACJ,KmBphBwB,CAAuB,GAAvB,CAAhB,EAA6C,WAA7C,GAA2D,KAA3D;AACD,AnBmhBD,OmBrhBA,EnBqhBK,UAAL,CAAgB,KAAK,CAAC,CAAD,CAArB,EAA0B,IAA1B,EAAgC,KAAhC;AmBlhBD,AnBkhBuC;AmBjhBzC,GAZD,MAYO;AACL,AnBihBA,ImBjhBA,IAAI,CAAC,AnBihBE,IAAP,ImBjhBA,CAAc,qBAAd,EAAmC,UAAE,CAAF,EAAO;AAAE,AnBkhB9C,GAEA,GmBphB8C,IAAI,GAAG,CAAC,CAAC,IAAD,CAAR;AAAgB,AnBqhB9D,KmBrhBE;AACA,IAAA,GAAG,GAAG,QAAQ,CAAC,IAAD,CAAd;AACD;uBnBohBD,aAAA,SAAA,UAAA,CAAW,IAAX,EAAiB;AmBlhBjBA,AnBmhBE,MmBnhBE,AnBmhBE,IAAI,CAAC,MmBnhBI,EnBmhBT,CmBnhBY,GAAG,AnBmhBE,ImBnhBE,CnBmhBG,EmBnhBA,CAAC,OnBmhBvB,IAAoC,CAAC,CmBnhBlB,CAAkB,GnBmhBK,GAAL,CAAS,IAAlD,EAAwD,ImBnhBjC,CAAzBA;AACAA,AnBmhBIA,MmBnhBA,EnBmhBI,KAAK,EmBnhBA,CnBmhBG,EmBnhBA,GnBmhBK,QmBnhBM,IAAI,QnBmhBf,EAAZA,UmBnhB+C,IAApB,CAAyB,WAAW,CAAC,YAAZ,CAAyB,eAAzB,CAAzB,CAA/BA;;AACA,AnBmhBI,MmBnhBA,CAAC,CnBmhBG,ImBnhBR,CnBmhBI,CmBnhBQ,CnBmhBC;AmBlhBXA,AnBkhBa,QmBlhBT,GnBkhBc,GmBlhBR,GAAG,IAAI,AnBkhBJ,CmBlhBK,AnBkhBW,KAAhB,GmBlhBA,CAAc,iBAAd,KAAoC,IAAI,CAAC,QAAL,CAAc,WAAd,CAApC,IAAkE,4BAAU,UAAV,CAAqB,IAAI,CAAC,KAAL,CAAW,MAAhC,CAA/EA;AnBkhBmC;AmBjhBnC,AnBkhBC,ImBlhBD,KAAK,GAAG,MAAM,CAAC,UAAP,CAAkB,GAAlB,EAAuB;AAAC,MAAA,kBAAkB,EAAE,CAAC,EAAE,MAAM,IAAI,SAAZ,CAAtB;AAA8C,AnBmhB7E,MmBnhB6E,AnBmhBzE,KAAK,EmBnhB2E,EAAE,KnBmhBlF,CAAe,IAAf,CAAJ,EAA0B;AmBnhBK,AnBohB7B,KmBphBM,CAAR,GnBohBO,UAAL;AmBnhBH,AnBohBGA,QAAI,GAAG,GAAG,KAAK,GAAfA;AACA,IAAA,GAAG,CAAC,YAAJ,CAAiB,IAAI,CAAC,IAAtB;AmBphBJ,MAAI,SAAJ,EACF;AAAI,AnBohBE,ImBphBF,InBohBM,CmBphBD,EnBohBI,CmBphBD,AnBohBE,KAAR,EAAa,GmBphBG,CAAC,UAAU,CAAC,KAAD,EAAQ,CAAC,SAAS,CAAC,CAAD,CAAlB,EAAuB,CAAC,SAAS,CAAC,CAAD,CAAjC,CAAX,EAAkD,SAAS,CAAC,CAAD,CAA3D,CAAlB;AAAiF,AnBohBhE,GmBrhBnB,GnBqhBmB,GmBnhBrB,AnBmhBwB,CAAC,KAAJ,GAAY,GAAG,CAAC,KAAJ,CAAU,SAAV,CAAoB,IAAI,CAAC,IAAzB,CAAZ;AmBlhBrB,AnBkhB+D;AmBlhB3D,MAAA,KAAK,GAAG,wBAAM,OAAN,CAAc,iBAAiB,CAAC,KAAK,CAAC,OAAP,EAAgB,QAAhB,CAA/B,EAA0D,KAA1D,CAAR;AAAwE,AnBmhBtEA,QAAI,KAAK,GAAG,GAAG,CAAC,WAAhBA;;AmBjhBJ,AnBkhBI,EmBlhBJ,IAAI,CAAC,EnBkhBIA,IAAI,CAAC,CmBlhBd,CAAc,CnBkhBG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,ImBlhB7B,CnBkhBwB,CmBlhBO,AnBkhBI,MAA/B,EAAuC,CAAC,CmBlhBX,CAAF,AnBkhB3B,EmBlhBkC,AnBmhBxC;AmBnhB0C,AnBmhBlC,ImBnhBkC,KAAK,CnBmhBnC,CAAC,CmBnhBqC,CAAC,CAAC,AnBmhBpC,CAAC,ImBnhBkC,AnBmhBvC,CmBnhB8B,GnBmhBjB,GAAG,CAAC,IAAJ,CAAS,cAAT,CAAwB,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,IAAtC,CAAjB,EACR;AmBphB4D,AnBohBlD,GmBphBR,KnBohBQ,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,QAAd,CAAuB,KAAvB,CAAR;AmBnhBR,AnBmhB4C,SmBnhBrC,KAAP;AACD,AnBkhB8C,EmBhhB/C;AACA;AACA,AnB+gBM,IAAA,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,IAAI,CAAC,IAAL,CAAU,KAAV,CAAjB;AmB9gBN,AnB+gBM,WAAO,IAAP;AmB9gBN,AnB+gBK;AmB9gBL;AACA,AnB8gBI,SAAO,KAAP;AmB7gBJ,AnB8gBE,GAEA;AACA;AACA;AmBjhBF,SAAS,iBAAT,CAA2B,QAA3B,EAAqC,QAArC,EAA+C;AAC7C,MAAI,QAAQ,CAAC,UAAT,GAAsB,CAA1B,EAA2B;AAAE,WAAO,QAAP,InBihB7B,QAAA,SAAA,KAAA,CAAM,IAAN,EAAY,KAAZ,EAAmB,UAAnB,EAA+B;AmBjhBa,AnBkhB1CA,MAAI,EAAE,GAAG,KAAK,SAAL,CAAe,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAf,CAATA;;AmBjhBJ,AnBkhBI,MmBlhBJ,AnBkhBQ,EAAJ,EmBlhBJ,AnBkhBU,GmBlhBV,UAAA,CAAA,EAA4C;AACxCA,AnBihBQ,QmBjhBJ,CnBihBS,KmBjhBH,GAAG,EnBihBL,CAAgB,IAAhB,CmBjhBa,CAAC,AnBihBQ,ImBjhBjB,CAAc,AnBihBnB,CmBjhBK,CAAbA,AnBihBqC,IAA7B,EAAmC,UAAnC;AmBhhBRA,AnBghBsD,QmBhhBlD,KAAK,GAAG,MAAM,CAAC,cAAP,CAAsB,QAAQ,CAAC,KAAT,CAAe,CAAf,CAAtB,CAAZA;AACAA,QAAI,QAAA,GAAA,KAAA,CAAJA;AAAAA,AnBghBA,QmBhhBc,CnBghBP,EAAP,GmBhhBoB,GAAG,EAAvBA;AACA,AnBghBF,GAEA,CmBlhBE,QAAQ,CAAC,OAAT,CAAgB,UAAC,IAAD,EAAS;AACvB,UAAI,CAAC,MAAL,EAAW;AAAE;AAAM,uBnBkhBvB,aAAA,SAAA,UAAA,CAAW,IAAX,EAAiB,KAAjB,EAAwB,KAAxB,EAA+B,UAA/B,EAA2C;AACzC,OAAK,UAAL;AmBlhBEA,AnBmhBFA,MAAI,GAAG,CmBnhBD,EnBmhBI,EmBnhBA,GAAG,AnBmhBE,GAAfA,EmBnhBkB,CAAC,YAAN,CAAmB,IAAI,CAAC,IAAxB,CAAXA;AAAAA,AnBohBF,EAAA,GAAG,CAAC,ImBphBwC,MAA1CA,EnBohBF,CAAiB,IAAjB;AACA,EAAA,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,KAAJ,IAAa,GAAG,CAAC,KAAJ,CAAU,SAAV,CAAoB,IAApB,EAA0B,KAA1B,CAAzB;AmBphBE,AnBqhBFA,MAAI,ImBrhBE,CAAC,EnBqhBI,EmBrhBT,CnBqhBY,CmBrhBH,SnBqhBa,IAAI,IAAd,GAAqB,GAAG,CAAC,OAAJ,GAAc,CAAC,aAApC,GAAoD,YAAY,CAAC,UAAD,CAA9EA;AmBrhBa,eAAO,MAAM,GAAG,IAAhB;AAAoB,AnBshBjC,MAAK,GAAG,CAAC,OAAJ,GAAc,aAAf,IAAiC,GAAG,CAAC,OAAJ,CAAY,MAAZ,IAAsB,CAA3D,EAA4D;AAAE,IAAA,OAAO,IAAI,aAAX;AmBrhB5D,AnBqhBoF,UmBrhBhF,MAAM,GAAG,MAAM,CAAC,MAAP,IAAiB,QAAQ,CAAC,MAA1B,IAAoC,YAAY,CAAC,IAAD,EAAO,QAAP,EAAiB,IAAjB,EAAuB,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAA7B,EAAkD,CAAlD,CAA7D,EAAmH;AACjH,QAAA,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAAN,GAA4B,MAA5B;AACD,AnBohBH,OmBthBE,AnBshBG,KAAL,CmBphBS,AnBohBE,IAAX,CAAgB,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,KAAtB,EAA6B,GAAG,CAAC,WAAjC,EAA8C,GAAG,CAAC,YAAlD,EAAgE,KAAhE,EAAuE,IAAvE,EAA6E,OAA7E,CAAhB;AmBnhBI,AnBohBJ,OAAK,IAAL,CmBphBQ,MAAM,CAAC,MAAX,EAAiB;AAAE,AnBqhBzB,GAEA,OmBvhByB,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAAN,GAA4B,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAAP,EAA4B,QAAQ,CAAC,MAArC,CAAtC;AAAkF,AnBwhB3G;;AmBvhBMA,YAAI,OAAO,GAAG,YAAY,CAAC,IAAD,EAAO,IAAP,CAA1BA;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,GnBuhBlB,ImBvhBM,SnBuhBN,SAAA,UAAA,CAAW,OAAX,EAAoB;AmBthBd,AnBuhBJA,MAAI,CAAC,CmBvhBD,EnBuhBI,GmBvhBC,EnBuhBI,CmBvhBD,InBuhBJ,CmBvhBS,AnBuhBE,CmBvhBD,KnBuhBV,GAAoB,CmBvhBhB,AnBuhBZA,CmBvhB4B,OAAO,CAAC,IAAxB,EAA8B,OAAO,CAAC,KAAtC,CAAR;AACA,QAAA,QAAQ,GAAG,IAAX;AACD,AnBshBH,MAAI,CAAC,GAAG,KAAK,IAAb,EAAmB;AmBrhBlB,AnBshBC,KmBniBF,MnBmiBS,CAAC,GAAG,KAAK,IAAhB,EAAsB,CAAC,EAAvB,EAAyB;AAAE,WAAK,KAAL,CAAW,CAAC,GAAG,CAAf,EAAkB,OAAlB,CAA0B,IAA1B,CAA+B,KAAK,KAAL,CAAW,CAAX,EAAc,MAAd,CAAqB,OAArB,CAA/B;AmBrhB7B,AnBqhB0F,QmBrhBtF,MAAJ,EAAU;AAAE,aAAA;AAAA,AnBshBV,QmBthBU,CAAA,AnBshBL,EmBthBY,GnBshBjB,CAAW,MAAX,GAAoB,KAAK,IAAL,GAAY,CAAhC,CmBthB0B,IAAT,CAAc,MAAd;AAAP,AnBuhBX,OmBvhBW;AAA4B,AnBwhB1C;AmBvhBF,GAnBA;uBnB4iBE,SAAA,SAAA,MAAA,GAAS;AmB5iBT,AnB6iBE,OmB7iBGA,AnB6iBE,ImB7iBEiB,AnB6iBP,CmB7iBQ,EnB6iBI,CmB7iBD,AnB6iBX,QmB7iBmB,CAAC,KAAtB,EAA6B,CAAC,IAAI,CAAlC,EAAqC,CAAC,EAAtC,EAAwC;AnB8iBtC,OAAK,UAAL,CAAgB,KAAK,MAArB;AACA,SAAO,KAAK,KAAL,CAAW,CAAX,EAAc,MAAd,CAAqB,KAAK,MAAL,IAAe,KAAK,OAAL,CAAa,OAAjD,CAAP;AmB5hBD,AnB6hBD;;AmB5hBA,SAAO,QAAP,MnB8hBA,OAAA,SAAA,IAAA,CAAK,EAAL,EAAS;AmB7hBV,AnB8hBG,OAAKjB,IAAI,CAAC,GAAG,KAAK,IAAlB,EAAwB,CAAC,IAAI,CAA7B,EAAgC,CAAC,EAAjC,EAAmC;AAAE,QAAI,KAAK,KAAL,CAAW,CAAX,KAAiB,EAArB,EAAyB;AmB5hBlE,AnB6hBM,SmB7hBG,EnB6hBE,IAAL,GAAY,CAAZ,EmB7hBN,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAA4C;AnB8hBtC,2BmB9hBgC,GAAG;AnB+hBzC;AmB9hBE,AnB8hBG,OmB9hBEA,IAAI,CAAC,GAAG,IAAI,CAAC,MAAL,GAAc,CAA3B,EAA8B,CAAC,IAAI,IAAnC,EAAyC,CAAC,EAA1C,EACF;AAAI,AnB8hBF,ImB9hBE,IAAI,GAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAe,IAAf,EAAqB,2BAAS,IAAT,CAAc,IAAd,CAArB,CAAP;AAAgD;AnBgiBlDG,oBAAAA,CAAI,UAAJA,CAAI,GAAJA,GAAI,YAAa;AmB/hBjB,AnBgiBE,OAAK,EmBhiBA,IAAP,InBgiBE;AmB/hBH,AnBgiBGH,EmB9hBJ,InB8hBQ,GAAG,GAAG,CAAVA;AmB7hBJ;AnB8hBI,OAAKA,IAAI,CAAC,GAAG,KAAK,IAAlB,EAAwB,CAAC,IAAI,CAA7B,EAAgC,CAAC,EAAjC,EAAqC;AACnCA,QAAI,OAAO,GAAG,KAAK,KAAL,CAAW,CAAX,EAAc,OAA5BA;AmB9hBN,SAAS,YAAT,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC,IAAtC,EAA4C,OAA5C,EAAqD,KAArD,EAA4D;AAC1D,AnB8hBI,MmB9hBA,GnB8hBKA,EmB9hBA,EnB8hBI,CmB9hBD,AnB8hBE,GAAG,CmB9hBD,CAAC,KnB8hBO,CmB9hBpB,AnB8hBqB,ImB9hBE,EnB8hBV,GmB9hBe,AnB8hBE,CAA9B,EmB9hB+B,AnB8hBE,CAAC,IAAI,CAAtC,EmB9hBuC,AnB8hBE,CmB9hBD,AnB8hBE,EAA1C,EACN,EmB/hBM,IAAkD,IAAI,CAAC,KAAD,CAAJ,IAAe,QAAQ,CAAC,KAAD,CAA7E,EAAsF;AACpFA,AnB8hBI,MAAA,EmB9hBA,CnB8hBG,ImB9hBE,AnB8hBE,GmB9hBC,InB8hBM,CAAC,CAAD,CAAP,CAAW,ImB9hBE,CAAC,GnB8hBrB,CmB9hBoB,EAAO,QAAP,EAAiB,IAAjB,EAAuB,OAAO,CAAC,SAA/B,EAA0C,KAAK,GAAG,CAAlD,CAAxBA;AnB8hB8B;AmB7hB9B,QAAI,KAAJ,EAAS;AAAE,AnB8hBT,QAAI,CAAJ,EAAK,EmB9hBW,OAAO,CAAC,IAAR,CAAa,OAAO,CAAC,OAAR,CAAgB,YAAhB,CAA6B,OAAO,CAAC,UAAR,GAAqB,CAAlD,EAAqD,KAArD,CAAb,CAAP;AAAgF,AnB8hBlF,MAAA,GAAG;AAAE;AmB7hBdA,AnB8hBC,QmB9hBG,KAAK,GAAG,OAAO,CAAC,cAAR,CAAuB,OAAO,CAAC,UAA/B,CAAZA;;AACA,AnB8hBA,QmB9hBI,CnB8hBG,GAAP,CmB9hBS,CAAC,SAAN,CAAgB,KAAK,IAAI,IAAI,CAAC,MAAL,GAAc,CAAvB,GAA2B,IAAI,CAAC,IAAhC,GAAuC,IAAI,CAAC,KAAK,GAAG,CAAT,CAA3D,CAAJ,EACJ;AAAM,AnB8hBJ,CAVAG,YmBphBW,OAAO,CAAC,IAAR,CAAa,OAAO,CAAC,OAAR,CAAgB,MAAhB,CAAuB,2BAAS,IAAT,CAAc,YAAY,CAAC,IAAD,EAAO,IAAP,EAAa,KAAK,GAAG,CAArB,CAA1B,CAAvB,CAAb,CAAP;AAA+F;AAClG,uBnB+hBD,cAAA,SAAA,WAAA,CAAY,MAAZ,EAAoB,MAApB,EAA4B;AmB9hB7B,AnB+hBG,MAAI,KAAK,IAAT,EAAa;AAAE,SAAKH,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,IAAL,CAAU,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AmB7hB9D,AnB8hBM,SmB9hBG,CnB8hBC,KAAK,ImB9hBf,AnB8hBU,CmB9hBU,AnB8hBA,CAAV,EAAa,CmB9hBvB,EAA0B,CnB8hBhB,ImB9hBV,AnB8hB+B,EmB9hBE,InB8hBvB,IAA+B,KAAK,IAAL,CAAU,CAAV,EAAa,MAAb,IAAuB,MAA1D,EACN;AmB9hBE,AnB8hBM,MmB9hBF,KAAK,EnB8hBE,EmB9hBE,CAAb,CnB8hBM,CmB9hBQ,AnB8hBE,CAAV,EAAa,GAAb,GAAmB,KAAK,UAAxB;AmB9hBU,AnB8hBwB,WmB9hBjB,IAAP;AAAW,AnB+hB7B;AAAK;AmB9hBHA,AnB+hBA,MmB/hBI,QAAQ,GAAG,IAAI,CAAC,OAAL,CAAa,YAAb,CAA0B,IAAI,CAAC,UAAL,GAAkB,CAA5C,EAA+C,UAAU,CAAC,IAAI,CAAC,SAAN,EAAiB,KAAK,GAAG,CAAzB,CAAzD,CAAfA;AACAA,MAAI,IAAI,GAAG,IAAI,CAAC,cAAL,CAAoB,IAAI,CAAC,UAAzB,EAAqC,UAArC,CAAgD,2BAAS,KAAzD,EAAgE,IAAhE,CAAXA;AACA,SAAO,IAAI,CAAC,IAAL,CAAU,InB+hBjB,ImB/hByB,CAAC,MAAT,CAAgB,CnB+hBjC,GmB/hBiB,CAAV,CAAP,InB+hBA,UAAA,CAAW,MAAX,EAAmB;AmB9hBpB,AnB+hBG,MAAI,KAAK,IAAT,EAAa;AAAE,SAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,IAAL,CAAU,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AmB7hB9D,AnB8hBM,SmB9hBG,CnB8hBC,KAAK,ImB9hBf,AnB8hBU,CmB9hBU,AnB8hBA,CAAV,EAAa,GAAb,EmB9hBV,EAA8B,AnB8hBA,ImB9hB9B,AnB8hBU,EmB9hB0B,EnB8hBE,EmB9hBtC,EAA0C,EAA1C,AnB8hB4C,CAAC,CmB9hBC,KAA9C,EAAqD,AnB8hBf,IAAmB,CAA/C,EmB9hBV,EAA8D,AnB8hBA,MAAM,CAAC,QAAP,CAAgB,KAAK,IAAL,CAAU,CAAV,EAAa,IAA7B,CAAxD,EACN;AmB9hBEA,AnB8hBM,MmB9hBF,IAAI,GAAG,AnB8hBA,ImB9hBI,AnB8hBT,CAAU,CAAV,CmB9hBY,CAAP,AnB8hBQ,GmB9hBG,AnB8hBhB,GAAmB,KmB9hBK,AnB8hBA,CmB9hBC,SnB8hBzB,CmB9hBK,GAAiC,QAAQ,CAAC,SAArDA;AAAAA,AnB8hBwC,MmB9hBwB,KAAK,GAAG,IAAI,CAAC,OAA7EA;AnB+hBF;AmB9hBE,AnB8hBG,MmB9hBC,KAAK,GAAG,EAAE,GAAG,CAAjB,EAAkB;AAAE,AnB+hBpB,ImB/hBoB,KAAK,GAAG,UAAU,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,EAApB,EAAwB,KAAK,GAAG,CAAhC,EAAmC,OAAnC,CAAlB;AAA6D;uBnBiiBjF,aAAA,SAAA,UAAA,CAAW,MAAX,EAAmB,OAAnB,EAA4B,MAA5B,EAAoC;AmBhiBpC,AnBiiBE,MmBjiBE,AnBiiBE,KmBjiBG,CnBiiBG,GmBjiBC,CnBiiBG,GmBjiBhB,EACF,EnBgiBQ,IAAqB,KAAK,IAA9B,EAAkC;AmBhiBlC,AnBgiBoC,ImBhiBpC,KAAK,AnBgiBoCA,GmBhiBjC,CnBgiBqC,CAAC,EmBhiBlC,CnBgiBqC,CAAb,CmBhiBrB,CAAP,AnBgiB4C,CAAC,EmBhiBlC,CnBgiBqC,GmBhiBjC,CAAC,CnBgiBqC,IAAL,CAAU,MAA9B,EmBhiBjB,AnBgiBuD,CmBhiBnC,AnBgiBoC,CmBhiBxD,CnBgiBiB,CmBhiBM,CnBgiBqC,SmBhiB5D,CAAkC,KAAlC,EAAyC,QAAQ,CAAC,UAAT,GAAsB,CAAtB,IAA2B,OAAO,IAAI,KAA/E,EAAsF,MAAtF,CAA6F,KAA7F,CAAX,GACJ,KAAK,CAAC,MAAN,CAAa,IAAI,CAAC,cAAL,CAAoB,IAAI,CAAC,UAAzB,EAAqC,UAArC,CAAgD,2BAAS,KAAzD,EAAgE,IAAhE,CAAb,CADJ;AACuF,AnBgiBrF,UAAI,KAAK,IAAL,CAAU,CAAV,EAAa,GAAb,IAAoB,IAApB,IAA4B,MAAM,CAAC,QAAP,IAAmB,CAA/C,IAAoD,MAAM,CAAC,QAAP,CAAgB,KAAK,IAAL,CAAU,CAAV,EAAa,IAA7B,CAAxD,EAA4F;AAC1FA,YAAI,GAAG,GAAG,OAAO,CAAC,uBAAR,CAAgC,KAAK,IAAL,CAAU,CAAV,EAAa,IAA7C,CAAVA;AmBhiBN,SAAO,QAAQ,CAAC,YAAT,CAAsB,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe,QAAQ,CAAC,UAAT,GAAsB,CAA3D,EAA8D,IAAI,CAAC,IAAL,CAAU,KAAV,CAA9D,CAAP;AACD,AnBgiBO,YAAI,GAAG,IAAI,MAAM,GAAG,CAAH,GAAO,CAAjB,CAAP,EACR;AAAU,eAAK,IAAL,CAAU,CAAV,EAAa,GAAb,GAAmB,KAAK,UAAxB;AmB/hBV,AnB+hB4C,SmB/hBnC,UAAT,CAAoB,KAApB,EAA2B,SAA3B,EAAsC,OAAtC,EAA+C;AAC7C,AnB+hBK,MmB/hBD,SAAS,GAAG,KAAK,CAAC,SAAtB,EACF;AAAI,AnB+hBJ,ImB/hBI,KAAK,GAAG,IAAI,uBAAJ,CAAU,UAAU,CAAC,KAAK,CAAC,OAAP,EAAgB,CAAC,CAAjB,EAAoB,SAApB,EAA+B,KAAK,CAAC,SAArC,EAAgD,CAAhD,EAAmD,KAAK,CAAC,OAAzD,CAApB,EAAuF,SAAvF,EAAkG,KAAK,CAAC,OAAxG,CAAR;AAAwH,AnB+hBvH;AACH;AmB/hBA,MAAI,OAAO,GAAG,KAAK,CAAC,OAApB,EACF;AAAI,IAAA,KAAK,GAAG,IAAI,OnBgiBd,aAAA,GmBhiBU,CAAU,KnBgiBpB,KmBhiB8B,CAAC,InBgiB/B,CmBhiBoC,AnBgiBzB,CmBhiB0B,OAAP,AnBgiB9B,EmBhiB8C,AnBgiBzB,CmBhiBS,EAAmB,OAAnB,EAA4B,KAAK,CAAC,OAAlC,EAA2C,CAA3C,EAA8C,CAA9C,CAApB,EAAsE,KAAK,CAAC,SAA5E,EAAuF,OAAvF,CAAR;AAAuG,AnBiiBvG,MAAI,KAAK,IAAT,EAAa;AAAE,SAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,IAAL,CAAU,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AmBhiB5D,AnBiiBI,SmBjiBG,CnBiiBC,ImBjiBR,CnBiiBa,IAAL,CAAU,CAAV,EAAa,IAAb,IAAqB,QAAzB,EACN;AmBjiBC,AnBiiBO,EmB/hBR,WnB+hBa,IAAL,CAAU,CAAV,EAAa,GAAb,GAAmB,KAAK,UAAL,IAAmB,QAAQ,CAAC,SAAT,CAAmB,MAAnB,GAA4B,KAAK,IAAL,CAAU,CAAV,EAAa,MAA5D,CAAnB;AmB9hBR,AnB8hB8F;AmB7hB9F,AnB8hBA;AAAK;AACH,GAEA;AmBhiBFC,AnBiiBE,ImBjiBI,OAAO,GAAG;AACd,AnBiiBA,EmBjiBA,KAAK,EAAE,CAAC,OAAD,CADO;AAEd,EAAA,KAAK,EAAE,CAAC,OAAD,CAFO;AAGd,EAAA,KAAK,EAAE,CAAC,OAAD,CAHO;AAId,EAAA,OAAO,EAAE,CAAC,OAAD,CAJK,GnBmiBd,iBAAA,SAAA,cAAA,CAAe,OAAf,EAAwB;AmB9hBxB,EAAA,QAAQ,EAAE,CAAC,OAAD,CALI;AAMd,EAAA,GAAG,EAAE,CAAC,OAAD,EAAU,UAAV,CANS;AAOd,AnB6hBE,EmB7hBF,EAAE,EAAE,AnB6hBE,CmB7hBD,MnB6hBQ,CmB7hBT,AnB6hBU,EmB7hBA,KnB6hBR,CAAgB,CmB7hBlB,CAPU,CnBoiBR,IAAuB,CAAC,CAA5B,EACJ;AmB7hBE,AnB6hBI,EmB7hBJ,EAAE,EAAE,CAAC,InB6hBM,GmB7hBP,EAAU,EnB6hBI,CAAC,ImB7hBf,CnB6hBO,CmB7hBY,AnB6hBE,ImB7hBrB,CARU,KnBqiBH,EAA0B,IAA1B,CAA+B,KAAK,cAApC,EAAoD,IAApD,CAAP;AmB5hBJ,AnB4hBoE,EmB5hBpE,EAAE,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,IAAnB;AATU,CAAhBA;AAYAD,AnB2hBIA,ImB3hBA,EnB2hBI,KAAK,GAAG,EmB3hBA,GAAG,EnB2hBI,CAAC,CmB3hBxBA,InB2hBgB,CAAc,GAAd,CAAZA;AACAA,MAAI,MAAM,GAAG,KAAK,OAAL,CAAa,OAA1BA;AmB3hBJ,AnB4hBIA,MAAI,GmB5hBC,InB4hBM,GAAG,CAAC,GmB5hBnB,EnB4hBwB,CmB5hBD,KnB4hBL,KAAiB,CAAC,MAAD,IAAW,MAAM,CAAC,MAAP,CAAc,IAAd,IAAsB,KAAK,KAAL,CAAW,CAAX,EAAc,IAAhE,CAAdA;AmB3hBF,AnB4hBEA,MAAI,GmB5hBC,KnB4hBO,GAAG,EAAE,EmB5hBA,InB4hBM,CmB5hBD,EnB4hBI,MAAM,CAAC,GmB5hBC,EnB4hBR,CmB5hBW,EnB4hBI,CAAlB,GAAsB,CAA9B,CmB5hB8B,CAAC,GnB4hBK,OAAO,GAAG,CmB5hBxB,AnB4hBqB,CmB5hBG,EnB4hBI,CAAlD,CAAfA,cmB5hBqC,CAA2C,OAA3C,CAApB,CAAnB;AACD;AnB4hBGA,MAAI,KAAK,GAAA,UAAI,CAAJ,EAAO,KAAP,EAAiB;AmB1hB9B,AnB2hBM,SmB3hBG,EnB2hBI,CAAC,IAAI,CmB3hBlB,AnB2hBM,CmB3hBY,CnB2hBG,CAAC,EmB3hBtB,AnB2hBM,EmB3hBkB,AnB2hBE;AmB1hBxBA,AnB2hBMA,MmB3hBF,InB2hBM,CmB3hBD,GAAG,AnB2hBE,GAAG,KAAK,CAAC,CAAD,CAAhBA,WmB3hB4B,IAAtB,CAA2B,IAA3B,CAAZA;;AACA,AnB2hBM,MmB3hBF,InB2hBM,CmB3hBV,EAAS,CnB2hBK,IAAI,EAAZ,EAAgB;AmB3hBX,AnB4hBH,ImB5hBG,IAAI,GAAG,CnB4hBN,CAAC,EmB5hBS,CAAC,CnB4hBN,ImB5hBC,CAAW,AnB4hBP,CAAC,ImB5hBW,CAAC,CAAD,AnB4hBjB,CmB5hBY,CAAS,CnB4hBN,CAApB,ImB5hBM,AnB4hBmB,CmB5hB1B,AnB4hB2B,IAAI,CAAlC,EAAmC;AmB5hBE,AnB4hBA;AAAQ;AmB3hBrDA,MAAI,GAAG,GAAG,WAAW,GAAG,aAAd,CAA4B,KAA5B,CAAVA;AACAA,AnB2hBQ,MmB3hBJ,QAAQ,CnB2hBG,EmB3hBA,GnB2hBK,IAAI,QAAhB,EAA0B,EmB3hBA,GnB2hBK,CmB3hBxB,CAAwB,AnB2hB/B,EACV,EmB5hBiB,CAAfA;AAAAA,AnB4hBU,MmB5hBoC,IAA9CA,InB4hBc,KAAK,CAAC,CAAC,GAAG,CAAL,EAAQ,KAAR,CAAT,EAAuB;AAAE,mBAAO,IAAP;AmB3hBnC,AnB2hB0C,MmB3hBtC,IAAI,GAAG,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAD,CAAR,CAAY,WAAZ,EAAD,CAA9B,EACF;AAAI,AnB0hB4C,ImB1hB5C,IAAI,GAAG,IAAI,CAAC,GAAL,CAAQ,UAAC,CAAD,EAAC;AAAA,aAAK,MAAM,CAAN,GAAU,GAAf;AAAkB,AnB2hB5B,KmB3hBC,EAA6B,IAA7B,CAAkC,EAAlC,CnB2hBM,GmB3hBkC,EnB2hBzC,EmB3hBC,GAA+C,IAAI,CAAC,GAAL,CAAQ,UAAC,CAAD,EAAC;AAAA,AnB4hB1D,OALD,MmBvhBgE,AnB4hBzD,OmB5hBgE,CAAP,GAAW,GAAhB;AAAmB,AnB6hB5EA,KmB7hBgD,EAA8B,KnB6hB1E,EmB7hB4C,EnB6hBxC,CmB7hBgF,EnB6hB7E,EmB7hBqC,CAA6C,EAA7C,AnB6hBhC,CmB7hBtB,EnB6hByB,CAAR,IAAc,KAAK,IAAI,CAAT,IAAc,OAA5B,GAAuCa,MAAI,CAAC,KAALA,CAAW,KAAXA,EAAkB,IAAzD,GACL,MAAM,IAAI,KAAK,IAAI,QAAnB,GAA8B,MAAM,CAAC,IAAP,CAAY,KAAK,GAAG,QAApB,EAA8B,IAA5D,GACA,IAFNb;AmB7hBgG;AnBgiBhG,YAAI,CAAC,IAAD,IAAU,IAAI,CAAC,IAAL,IAAa,IAAb,IAAqB,IAAI,CAAC,MAAL,CAAY,OAAZ,CAAoB,IAApB,KAA6B,CAAC,CAAjE,EACV;AmBhiBE,AnBgiBU,EmBhiBV,GAAG,CAAC,SAAJ,EnBgiBiB,CmBhiBD,IAAhB,AnBgiBU;AAAY;AmB/hBtB,MAAI,IAAJ,EAAQ;AAAE,AnBgiBF,QAAA,CmBhiBOA,IAAI,AnBgiBN,CmBhiBO,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAoC;AAAE,AnBiiBzC,MmBjiByC,GAAG,GAAG,GAAG,CAAC,aAAJ,CAAkB,IAAI,CAAC,CAAD,CAAtB,KAA8B,GAApC;AAAoC,AnBkiB/E;AmBliBkF;AnBmiBnF,WAAO,IAAP;AmBliBJ,AnBmiBF,GAlBIA,MmBjhBK,GAAP;AACD;AnBmiBG,SAAO,KAAK,CAAC,KAAK,CAAC,MAAN,GAAe,CAAhB,EAAmB,KAAK,IAAxB,CAAZ;AmBjiBJ,AnBkiBE,SmBliBO,UAAT,CAAoB,KAApB,EAA2B,OAA3B,EAAoC;AAClC,MAAI,CAAC,KAAK,CAAC,IAAX,EAAe;AAAE,WAAO,KAAP,OnBmiBjB,uBAAA,SAAA,oBAAA,GAAuB;AmBniBM,AnBoiB3BA,MAAI,QAAQ,GAAG,KAAK,OAAL,CAAa,OAA5BA;;AmBniBFA,AnBoiBE,MmBpiBE,AnBoiBE,MmBpiBI,EnBoiBR,CmBpiBW,CnBoiBC,ImBpiBI,CAAC,OAAN,CAAc,UAAd,CAAyB,IAAzB,CAA8B,MAA3CA;AAAAA,AnBoiBgB,MmBpiBmC,GnBoiB9BA,EmBpiBrBA,EnBoiByB,CAAC,GAAG,QAAQ,CAAC,KAAtB,EAA6B,CAAC,IAAI,CAAlC,EAAqC,CAAC,EAAtC,EAA0C;AACtDA,UAAI,KAAK,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,cAAjB,CAAgC,QAAQ,CAAC,UAAT,CAAoB,CAApB,CAAhC,EAAwD,WAApEA;AmBpiBJ,MAAI;AAAE,AnBqiBF,ImBriBE,KAAK,CnBqiBH,EmBriBM,GnBqiBD,CmBriBK,CAAC,EnBqiBF,GmBriBH,CAAW,CnBqiBH,CAAC,KmBriBT,CAAR,KnBqiBE,IAA8B,KAAK,CAAC,YAAxC,EAAoD;AmBriBrB,AnBqiBuB,GmBriB1D,CACA,OAAM,CAAN,EAAS,CnBoiBwD,KAAP;AmBpiB/C,AnBoiB2D,WmBpiBpD,KAAP;AAAc,AnBqiB3B;AAAK;AmBpiBE,MAAA,OAAA,GAAA,KAAA,CAAA,OAAA;AAAS,AnBqiBZ,MmBriBY,CnBqiBPA,IAAI,ImBriBG,AnBqiBZ,GmBriBY,CnBqiBK,ImBriBL,CAAA,AnBqiBU,MAAL,CAAY,EmBriBjB,InBqiBK,CAAmB,KAApC,EAA2C;AmBriBpB,AnBsiBrBA,MmBtiBqB,EnBsiBjB,IAAI,CmBtiBa,EnBsiBV,CmBtiBU,InBsiBL,CmBtiBK,CAAA,InBsiBV,CAAY,EmBtiBF,InBsiBV,CAAmB,KAAnB,CAAyB,IAAzB,CAAXA;;AmBriBJ,AnBsiBI,OmBtiBCA,CnBsiBG,GmBtiBC,CAAC,AnBsiBE,CAAC,EmBtiBA,KAAK,CAAC,GnBsiBX,GmBtiBK,CnBsiBe,EmBtiBA,CAA5B,CnBsiBgC,CmBtiBD,AnBsiBE,CmBtiBD,IAAI,CAApC,EAAuC,CAAC,GnBsiBpC,CmBtiBwC,CAA5C,AnBsiB6C,EmBtiBE;AAC7CA,AnBqiB6C,QmBriBzC,IAAI,CnBqiB4C,EmBriBzC,EnBqiBkC,ImBriB5B,CAAC,KAAP,CAAa,KAAK,CAAC,CAAD,CAAlB,CAAXA;AnBqiBwD;AmBpiBxD,AnBqiBC,QmBriBG,CAAC,IAAD,IAAS,IAAI,CAAC,gBAAL,EAAb,EAAoC;AAAE,AnBsiBxC;AmBtiB6C;uBnBwiB7C,iBAAA,SAAA,cAAA,CAAe,IAAf,EAAqB;AmBviBnB,AnBwiBAA,ImBxiBA,EnBwiBI,KmBxiBG,AnBwiBE,GmBxiBC,AnBwiBE,iBAAiB,CAAC,IAAD,EAAO,GmBxiBjB,EnBwiBsB,EmBxiB/B,CAAc,AnBwiBY,CAAS,GmBxiBjB,CAAC,MAAL,CAAY,CnBwiBP,CAA7BA,GmBxiByC,CAAC,CAAC,GAAG,CAAL,CAAjB,EAA0B,OAA1B,CAAd,CAAV;AACA,IAAA,SAAS;AAAI,AnBwiBb,ImBxiBa,EnBwiBT,KmBxiBgB,AnBwiBpB,EAAS;AmBviBV,AnBuiBY,SAAK,GAAL,CAAS,UAAT,CAAoB,IAApB,CAAyB,KAAzB;AAA+B;AmBtiB5C,SAAO,IAAI,uBAAJ,CAAU,OAAV,EAAmB,SAAnB,EAA8B,OAA9B,CAAP;AACF,AnBsiBI,OAAK,GAAL,CAAS,YAAT,GAAwB,IAAI,CAAC,QAAL,CAAc,KAAK,GAAL,CAAS,YAAvB,CAAxB;AACF;AoBpuBFC,IAAM,cAAc,GAAG;AACrB,EAAA,SAAS,EAAE,IADU,MpBsuBrB,oBAAA,SAAA,iBAAA,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B;AoBpuB9B,ApBquBE,EoBruBF,KpBquBOD,IAAI,IoBruBE,CpBquBG,CoBruBD,EpBquBI,EoBvuBE,GpBuuBG,IAAtB,EAA4B,KAAK,IAAI,CAArC,EAAwC,KAAK,EAA7C,EAAiD;AoBpuBnD,ApBquBIA,EoBruBJ,MpBquBQ,KAAK,GAAG,KAAK,EoBruBA,EAAE,CpBquBP,CAAW,EoBxuBN,GpBwuBL,CAAZA;AoBpuBJ,ApBquBIA,EoBruBJ,MpBquBQ,IoBruBE,CpBquBG,CoBruBD,EpBquBI,EoBzuBK,GpByuBA,CAAC,YAAN,CAAmB,WAAnB,CAA+B,IAA/B,CAAZA;AoBpuBJ,EAAA,iBAAiB,EAAE,IALE;AAMrB,ApBouBI,EoBpuBJ,MpBouBQ,CoBpuBD,EAAE,EpBouBI,GAAG,CAAC,CAAb,EAAgB;AoB1uBC,ApB2uBf,CoB3uBRC,EAQA,GpBmuBQ,KAAK,CAAC,YAAN,GAAqB,IAAI,CAAC,aAAL,CAAmB,KAAK,CAAC,YAAzB,CAArB;AACD,KAFD,MAEO;AoBnuBbA,ApBouBQ,IoBpuBF,EpBouBE,KAAK,CAAC,GoBpuBG,GAAGoB,KpBouBZ,CoBpuBmB,CAAC,CpBouBA,CoBpuBRA,GpBouBY,CoBpuBEA,ApBouBD,MoBpuBQ,CAAC,MpBouBd,CAAmB,GoBpuBbA,EpBouBkB,CAAC,CoBpuBG,EAAxDpB,QpBouB4B,CAApB;AACAD,UAAI,SAAS,GAAG,KAAK,CAAC,gBAAN,CAAuB,IAAvB,CAAhBA;AoBnuBR,IAAM,cAAc,GAClB,SAAA,cAAA,GAAc;AACZ,ApBkuBI,OoBluBC,GpBkuBG,OoBluBR,EpBkuBiB,CoBluBC,GpBkuBG,EoBluBE,GpBkuBG,CAAC,IAAnB,IoBluBU,ApBkuBiB,GoBluBG,EpBkuBE,CAAC,EoBluBE,EpBkuBR,CAAW,MoBluBR,GAAiB,KAAK,ApBkuBzB,CAA0B,SAAS,CoBluBf,ApBkuBgB,GoBluBG,CpBkuBvC,CAA/B,EoBluBJ,ApBmuBJ;AoBluBE,ApBkuBQ,CoBruBV,OpBquBU,KAAK,CAAC,WAAN,GAAoB,SAAS,CAAC,QAAV,CAAmB,KAAK,CAAC,WAAzB,CAApB;AAAyD;AAC5D,yBoBjuBL,MAAA,SAAA,GAAA,CAAI,GAAJ,EAAS;AACP,OAAK,UAAL,GAAkB,GAAG,CAAC,UAAtB;AAAkC,ApBiuBhC,OoBjuBqC,CpBiuBjC,KAAK,IAAI,EoBjuBmB,EpBiuBhC,CoBjuBoD,CpBiuBnC,EoBjuBsC,CAAC,YAAxB;AAClC,ApBguBqB,OoBhuBhB,SAAL,GAAiB,GAAG,CAAC,SAArB;AAAgC,ApBguBN,OoBhuBW,WAAL,GAAmB,GAAG,CAAC,WAAvB;AAClC,ApBguBG;AACH;yBoB/tBA,KAAA,SAAA,EAAA,CAAG,GAAH,EAAQ;AACN,SAAO,GAAG,CAAC,UAAJ,IAAkB,KAAK,UAAvB,IAAqC,GAAG,CAAC,YAAJ,IAAoB,KAAK,ApBiuBzE,YoBjuBW,IACL,GAAG,CAAC,SAAJ,IAAiB,KAAK,SADjB,IAC8B,GAAG,CAAC,WAAJ,IAAmB,KAAK,WAD7D;AAEF,ApBguBF;AACA;AoB9tBO,IAAM,WAAW,GACtB,SAAA,WAAA,CAAY,IAAZ,EAAkB,eAAlB,EAAmC;ApB8tBrC,SAAS,aAAT,CAAuB,GAAvB,EAA4B;AoB7tBxB,ApB8tBF,OoB9tBO,ApB8tBFA,IoB9tBH,ApB8tBO,GoB9tBK,EpB8tBA,EoB9tBZ,CpB8tBe,GAAG,CAAC,UAAhBA,EAA4B,QAAQ,GAAG,IAA5C,EAAkD,KAAlD,EAAyD,KAAK,GAAG,KAAK,CAAC,WAAvE,EAAoF;AoB7tBlF,ApB8tBAA,OoB9tBK,CpB8tBD,IAAI,GAAG,KAAK,CAAC,CoB9tBjB,GAAuB,IpB8tBZ,IAAkB,CAAlB,GAAsB,GoB9tBjC,EpB8tBsC,CAAC,QAAN,CAAe,WAAf,EAAtB,GAAqD,IAAhEA;AoB7tBA,OAAK,KAAL,GAAa,EAAb;AACA,ApB6tBA,OoB7tBK,CpB6tBD,IAAI,IAAI,GoB7tBZ,GAAoB,CAAC,CAArB,ApB6tBoB,CAAC,cAAT,CAAwB,IAAxB,CAAR,IAAyC,QAA7C,EAAuD;AoB5tBvD,ApB6tBE,MAAA,CoB7tBG,OpB6tBK,CoB7tBV,ApB6tBW,GoB7tBK,MAAM,CAAC,CpB6tBrB,CAAqB,KAArB,SoB7tBc,IACd,IAAI,MAAM,CAAC,gBAAX,CAA2B,UAAC,SAAD,EAAc;AACvC,ApB4tBF,MAAA,GoB5tBOA,EpB4tBF,EoB5tBM,CAAC,ApB4tBJ,GoB5tBO,CAAb,EAAgB,CAAC,CpB4tBnB,EoB5tBsB,SAAS,CAAC,MAA9B,EAAsC,CAAC,EAAvC,EAAyC;AAAEa,ApB6tB9C,KAHD,CoB1tB+CA,KpB6tBxC,CoB7tB4C,CAAC,EpB6tBzC,GoB7tBoCA,CAAW,ApB6tB3C,IoB7tBgCA,ApB6tB5B,CoB7tB4C,GpB6tBxD,EAAkB,IoB7tB+C,CAAC,CAAD,CAAzBA;AAA6B,ApB8tB1E,KoB/tByC,CAE/C,ApB6tBM,QAAQ,GAAG,KAAX;AoB5tBN,ApB6tBK,KAFM,MAEA,IAAI,IAAJ,EAAU;AoB5tBrB,ApB6tBM,MAAA,QAAQ,GAAG,IAAX;AoB5tBN,ApB6tBK;AACF;AACF,EAED;AoBhuBQ,QAAIQ,MAAO,CAAC,EAARA,IAAcA,MAAO,CAAC,UAARA,IAAsB,EAApCA,IAA0C,SAAS,CAAC,IAAV,CACtD,UAAU,CAAV,EAAU;AAAA,aAAK,CAAC,CAAC,IAAF,IAAU,WAAV,IAAyB,CAAC,CAAC,YAAF,CAAe,MAAxC,IACA,CAAC,CAAC,IAAF,IAAU,eAAV,IAA6B,CAAC,CAAC,QAAF,CAAW,MAAX,GAAoB,CAAC,CAAC,MAAF,CAAS,SAAT,CAAmB,MADzE;AAC+E,ApB+tBzF,KoBjuBsD,CAA9C,EAGR,CpB8tBS,OAAT,CAAiB,GAAjB,EAAsB,QAAtB,EAAgC;AoB9tBtBR,ApB+tBR,MoB/tBQA,GpB+tBD,CAAC,EoB/tBI,CAAC,ApB+tBF,CAAC,OAAJ,CoB/tBAA,GpB+tBe,GAAG,CAAC,iBAAnB,IAAwC,GAAG,CAAC,qBAA5C,IAAqE,GAAG,CAAC,kBAA1E,EAA8F,IAA9F,CAAmG,GAAnG,EAAwG,QAAxG,CAAP;AoB/tBwB,ApBguBzB,EAED,GoBruBQ,MAKR;AAAUA,ApBiuBV,MoBjuBUA,MAAI,CAAC,KAALA;AAAY;AACf,GAZD,CADF;AAcA,ApBguBJ,OoBhuBS,EpBguBA,WAAT,CAAqB,EoBhuBjB,GAAwB,ApBguB5B,EAA4B,EoBhuBI,cAAJ,EAAxB;ApBiuBFb,MAAI,EAAE,GAAG,4BAATA;AoBhuBE,ApBguBFA,MoBhuBM,ApBguBiC,CAAvCA,UoBhuBE,EAAiB;AACf,ApB+tBJA,MAA0C,GoB/tBjC,GpB+tBuC,GAAG,EAAnDA,EoB/tBI,GAAe,UAAG,CAAH,EAAQ;AACrBa,MAAAA,MAAI,CAAC,KAALA,CAAW,IAAXA,CAAgB;AAAC,ApB+tBvB,QoB/tBuB,CpB+tBhB,CAAC,GAAG,CoB/tBkB,CpB+tBhB,CoB/tBkB,ApB+tBjB,CoB/tBkB,CAAC,EpB+tBtB,CAAQ,GoB/tBG,EpB+tBX,CAAX,EAAyB;AoB/tBgB,ApB+tBd,IAAA,IoB/tBc,EpB+tBR,CAAC,CoB/tBW,EAAE,CpB+tBpB,CAAY,CAAC,CAAC,CAAD,CAAb,EAAkB,CAAC,CAAC,CAAD,CAAD,CAAK,EoB/tB5B,EpB+tBuB,EAAlB;AoB/tBqC,ApB+tBP,QoB/tBO,QAAQ,EAAE,CAAC,CAAC;AAAtD,OAAhBA;AACAA,ApB+tBN,MoB/tBMA,GpB+tBC,GoB/tBG,CAAC,EpB+tBX,OoB/tBMA;AACR,ApB+tBC,KoBluBK;AAID;ApBguBL,SAAS,IAAT,CAAc,GAAd,EAAmB;AoB/tBf,ApBguBFb,MAAI,CoBhuBG,GpBguBC,GAAG,EAAXA,SoBhuBE,GAAyB,KAAK,iBAAL,CAAuB,IAAvB,CAA4B,IAA5B,CAAzB;AACA,OAAK,2BAAL,GAAmC,KAAnC;AACF,ApB+tBA,CoB5vBK,MpB4vBAA,IAAI,IAAT,IAAiB,GAAjB,EAAoB;AAAE,IAAA,IAAI,CAAC,IAAD,CAAJ,GAAa,GAAG,CAAC,IAAD,CAAhB;AAAsB,sBoB7tB5C,YAAA,SAAA,SAAA,GAAY;;ApB8tBZ,SAAO,IAAP;AoB7tBE,ApB8tBH,EAED,IoBhuBQ,KAAK,YAAL,GAAoB,CAAxB,EACJ;AAAM,ApBguBN,SoBhuBW,YAAL,GAAoB,MAAM,CAAC,UAAP,CAAiB,YAAO;AAAEa,ApBiuBpD,MoBjuBoDA,MAAI,CAAC,YAALA,GAAoB,CAAC,CAArBA;AAAwBA,MAAAA,MAAI,CAAC,KAALA;AAAc,KAAhE,EAAkE,EAAlE,CAApB;AAAyF,ApBkuB/F,SAAS,YAAT,CAAsB,QAAtB,EAAgC,QAAhC,EAA0C;AoBjuBxC,ApBkuBAb,MAAI,KAAK,GAAG,QAAQ,CAAC,MAAT,CAAgB,KAA5BA;;AACF,MAAA,IAAA,GAAA,SoBjuBE,CpBiuBF,IAAA,EAA0B,MoBjuBxB,SAAA,UAAA,GAAa;AACX,ApBiuBAA,MoBjuBI,EpBiuBA,GoBjuBK,GpBiuBC,GAAG,KAAK,CoBjuBd,ApBiuBe,GoBjuBK,CAAC,ApBiuBP,CoBjuBlB,ApBiuBAA,EoBjuB4B;AAC1B,IAAA,MAAM,CAAC,YAAP,CAAoB,KAAK,YAAzB;AACA,ApBguBF,QAAI,CoBhuBG,ApBguBF,MAAM,CAAC,KoBhuBV,GAAoB,CAAC,CAArB,IpBguBG,CAAsB,QAAtB,CAAL,EAAoC;AoB/tBlC,ApB+tBoC,SoB/tB/B,KAAL;AACD,ApB8tB6C;AoB7tBhD;ApB8tBEA,QAAI,IAAI,GAAG,EAAXA;AAAAA,QAAe,IAAI,GAAA,OoB5tBrB,GpB4tBwB,KoB5tBxB,ApB4tBqB,EAAY,OoB5tBjC,KAAA,GAAQ;AACN,ApB4tBE,MoB5tBE,ApB4tBF,IAAI,CoB5tBG,ApB4tBF,IAAL,CAAU,GoB5tBZ,EACJ,ApB2tBM;AoB3tBA,SAAK,QAAL,CAAc,OAAd,CAAsB,KAAK,IAAL,CAAU,GAAhC,EAAqC,cAArC;AAAoD,ApB4tBpD,WAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,SAA1B,EAAqC,CAAC,EAAtC,EAA0C;AAChD,YAAA,GAAwB,GAAG,KAAK,CAAC,IAAN,CAAW,CAAX,CAA3B;AoB5tBI,ApB4tBS,MoB5tBL,MpB4tBK,IAAA,CoB5tBT,EACJ,ApB2tBa,GAAA,CAAA,IAAA;AoB3tBP,ApB2tBa,SoB3tBR,GpB2tBQ,CoB3tBb,CAAU,EpB2tBG,CoB3tBb,CAAc,CpB2tBD,GAAA,CAAA,IAAA,OoB3tBb,CAA+B,0BAA/B,EAA2D,KAAK,UAAhE;AAA2E;ApB4tBzE,YAAI,IAAI,IAAI,QAAZ,EAAoB;AoB3tBxB,ApB2tB0B,OoB3tBrB,UpB2tB4B,IAAP,EoB3tB1B;AACF,ApB0tBuC;;AACjC,YAAI,IAAI,CAAC,KoBztBf,EpBytBU,CAAa,IoBztBvB,ApBytBU,IAAqB,CAArB,IoBztBV,ApBytBoC,IoBztBpC,ApBytBwC,CAAC,EoBztBlC,EpBytBiC,CAAlC,EAAwC;AAAE,iBAAO,IAAP;AAAW;AoBxtBzD,ApBytBG,MoBztBC,KAAK,QAAT,EAAmB;AACjBA,ApBytBN,KAPIA,GoBltBM,IAAI,GAAG,KAAK,QAAL,CAAc,WAAd,EAAXA;;AACA,ApBytBF,QoBztBM,ApBytBF,IoBztBM,ApBytBF,CoBztBG,ApBytBF,MoBztBP,ApBytBa,CAAC,CoBztBG,WpBytBX,CAAR,EAA6B;AoBxtBzB,ApBwtB2B,WoBxtBtBA,EpBwtBsB,EoBxtBlB,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAoC;AAAE,ApBwtBX,QAAA,CAAA,EAAO,EoBxtBS,KAAL,CAAW,IAAX,CAAgB,IAAI,CAAC,CAAD,CAApB;AAAwB,ApBwtBnC,OAAA;AAAW;AoBvtBtC,ApBwtBR,GAZA,GoB5sBQ,MAAM,CAAC,UAAP,CAAiB,YAAA;AAAA,eAAOa,MAAI,CAAC,KAALA,EAAP;AAAmB,ApB4sB1C,OoB5sBM,ApB4sBDb,EoB5sBuC,EAAtC,ApB4sBG,IAAT,IAAiB,KAAjB,EAAsB;AoB3sBjB;;AACD,ApBstBH,SoBttBQ,QAAL,CAAc,UAAd;AACD,ApBstBJ;;AoBrtBG,ApButBJ,MoBvtBQ,GpButBC,QoBvtBL,EAAe,OpButBnB,CAA2B,IAA3B,EAAiC,GAAjC,EAAsC;AoBvtBjB,ApBwtBnB,OAAKA,EoBxtBmB,EpBwtBf,CAAC,CoBxtBS,CAAU,CpBwtBhB,CAAb,CoBxtBmB,CAAc,ApBwtBjB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,CAAC,EoBxtBd,ApBwtBnB,CoBxtBqD,CpBwtBhB,yBoBxtBlB,EAA8D,KAAK,UAAnE;AAA8E,ApBytB/F,QAAI,IAAI,CAAC,EAAL,CAAQ,GAAG,CAAC,CAAD,CAAX,CAAJ,EAAmB;AAAE,aAAO,GAAG,CAAC,CAAD,CAAV;AoBxtBrB,ApBwtBkC,OoBxtB7B,mBAAL;AACF,ApBwtBC;AACH,ECvzBA;AACA,sBmB+FE,mBAAA,SAAA,gBAAA,GAAmB;AACjB,AnB/FJ,OmB+FS,IAAL,CAAU,GAAV,CAAc,aAAd,CAA4B,gBAA5B,CAA6C,iBAA7C,EAAgE,KAAK,iBAArE;AACF,AnB/FF;AACA;AACA,sBmB+FE,sBAAA,SAAA,mBAAA,GAAsB;AACpB,AnB/FJ,OmB+FS,IAAL,CAAU,GAAV,CAAc,aAAd,CAA4B,mBAA5B,CAAgD,iBAAhD,EAAmE,KAAK,iBAAxE;AACF,AnB/FF;AACA;AACA,sBmB+FE,2BAAA,SAAA,wBAAA,GAA2B;AnB9F7B;AmB+FI,AnB9FJ,OmB8FS,2BAAL,GAAmC,IAAnC;AACA,AnB9FJ,EmB8FI,UAAU,CAAA,YAAA;AAAA,AnB7Fd,WmB6FqBa,MAAI,CAAC,2BAALA,GAAmC,KAA1C;AAA+C,AnB5F7D,GmB4Fc,EAAiD,EAAjD,CAAV;AACF,AnB5FF;AACA;AAEA,sBmB2FE,oBAAA,SAAA,iBAAA,GAAoB;AAClB,AnB3FJ,MmB2FQ,CAAC,oBAAoB,CAAC,KAAK,IAAN,CAAzB,EAAoC;AAAE;AAAM;InB1FnC,aAAa,GASxB,SAAA,aAAA,CAAY,KAAZ,EAAmB,KAAnB,EAA0B;AmBkFxB,AnBjFJ,MmBiFQ,KAAK,2BAAT,EAAoC;AAAE,AnBhF1C,WmBgFiD,cAAc,CAAC,KAAK,IAAN,CAArB;AAAgC,AnB/EtE,GmB6EkB,CAGtB,GnBhFS,KAAL,GAAa,KAAK,IAAI,EAAtB,CAHwB,CAI5B;AmBgFA,AnB/EA;AmBgFA;AnB/EI,OAAK,KAAL,GAAa,KAAK,IAAI,EAAtB;AACF,GAEA;AmB6EE,AnB5EF,MmB4EMQ,MAAO,CAAC,EAARA,IAAcA,MAAO,CAAC,UAARA,IAAsB,EAApCA,IAA0C,CAAC,KAAK,IAAL,CAAU,KAAV,CAAgB,SAAhB,CAA0B,KAAzE,EAAgF;AAC9ErB,AnB5EJ,QmB4EQ,GAAG,GAAG,KAAK,IAAL,CAAU,IAAV,CAAe,YAAf,EAAVA,CAD8E,CAEpF;AnB5EE;AmB6EI,AnB5EJ,QmB4EQ,GAAG,CAAC,SAAJ,IAAiB,oBAAoB,CAAC,GAAG,CAAC,SAAL,EAAgB,GAAG,CAAC,WAApB,EAAiC,GAAG,CAAC,UAArC,EAAiD,GAAG,CAAC,YAArD,CAAzC,EACN;AAAQ,aAAO,KAAK,SAAL,EAAP;AAAuB;AAC1B;;AACD,OAAK,KAAL,YnB9EF,oBAAA,SAAA,iBAAA,CAAkB,QAAlB,EAA4B,OAA5B,EAA0C,MAA1C,EAAkD;AmB+ElD;iCnB/EmC,GAAG;sBmBiFtC,kBAAA,SAAA,eAAA,GAAkB;AAChB,AnBjFA,MAAI,CmBiFC,AnBjFA,MAAL,EAAW,QmBiFX,CAAsB,GAAtB,CAA0B,KAAK,IAAL,CAAU,IAAV,CAAe,YAAf,EAA1B;AACF,AnBlFe,IAAA,MAAM,GAAG,GAAG,CAAC,OAAD,CAAH,CAAa,sBAAb,EAAT;AAA8C;sBmBoF7D,wBAAA,SAAA,qBAAA,CAAsB,GAAtB,EAA2B;AACzB,AnBnFAA,MmBmFI,AnBnFA,GmBmFG,AnBnFA,CmBmFC,EnBnFE,MAAVA,EmBmFI,IAAkB,CAAtB,EAAuB;AAAE,AnBnFzBA,MAAkB,KmBmFc,CnBnFR,GmBmFC,AnBnFE,IAA3BA;AmBmFoC,AnBlFpC,EAAA,QAAQ,CAAC,OAAT,CAAgB,UAAC,IAAD,EAAS;AACvB,QAAI,MAAM,IAAI,IAAI,CAAC,KAAL,CAAW,MAAzB,EAAiC;AmBkFnCA,AnBjFI,MmBiFA,InBjFI,CAAC,ImBiFI,EnBjFT,CmBiFY,CnBjFD,EmBiFI,CAAC,UAAJ,CAAe,CAAf,EAAkB,uBAAlCA;AACAA,AnBlFiB,MmBkFb,EnBlFa,EmBkFT,GAAG,CnBlFY,GAAG,CmBkFV,CnBlFC,GmBkFN,CAAU,OAAV,CAAkB,WAAlB,CAA8B,SAA9B,CAAXA;AnBlF4B;AmBmF5B,MAAI,IAAI,IAAI,IAAI,CAAC,cAAL,CAAoB;AAAC,AnBlF7BA,ImBkF6B,IAAI,EAAE,AnBlF/B,IAAI,GAAG,CAAXA,GmBkF4B;AAAoB,AnBlFhDA,ImBkFgD,MAAM,AnBlFxC,EmBkF0C,MnBlFlC,GmBkF2C,AnBlFxC,CmBkFyC,AnBlFlEA,QmBkFwD,IAAsB,CAAtB,GAA0B,SAAS,CAAC,UAApC,GAAiD;AAA7E,GAApB,CAAZ,EAA0H;AACxH,AnBlFE,SmBkFG,InBlFI,IAAI,GAAG,ImBkFhB,EnBlFsB,CAAC,MAAd,IAAwB,QAAQ,GAAG,IAAI,CAAC,KAAL,CAAW,MAArD,EAA6D;AmBmF/D,AnBlFIA,WmBkFG,CnBlFC,GmBkFR,CnBlFY,GAAG,IAAI,CAAC,KAAL,CAAW,QAAX,CAAXA;AmBmFL;AACH,AnBnFQ,YAAI,CAACa,MAAI,CAAC,KAALA,CAAW,IAAI,CAAC,IAAL,CAAU,IAArBA,CAAL,EAAiC;AAAE,UAAA,QAAQ;AAAI,sBmBqFvD,QAAA,SAAA,KAAA,GAAQ;AACN,AnBtF+D,MmBsF3D,CAAC,KAAK,IAAL,CAAU,OAAX,IAAsB,KAAK,YAAL,GAAoB,CAAC,CAA/C,EAAgD;AAAE;AAAM,AnBrFlD,YAAI,CAAC,IAAI,CAAC,EAAL,CAAQ,MAAM,CAAC,IAAD,CAAd,CAAD,IAA0B,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,QAAf,KAA4B,KAA1D,EAA+D;AAAE;AmBsFvEb,AnBtF4E,MmBsFxE,SAAS,GAAG,KAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,WAAd,EAAhB,GAA8C,EAA9DA;;AACA,AnBtFM,MmBsFF,EnBtFE,GmBsFG,CnBtFC,ImBsFN,AnBtFU,CmBsFC,AnBtFT,MmBsFN,EAAuB;AACrB,AnBvFe,ImBuFf,InBvFe,KmBuFN,GAAG,AnBvFW,KmBuFN,KAAL,CAAW,MAAX,CAAkB,SAAlB,CAAZ;AACA,AnBvFG,SmBuFE,KAAL,CAAW,MAAX,GAAoB,CAApB;AACD;AnBvFG,aAAO,IAAI,GAAG,MAAM,CAAC,MAArB,EAA6B;AmByFjCA,AnBxFM,MmBwFF,EnBxFE,CmBwFC,EnBxFE,CmBwFC,EnBxFE,GmBwFG,GnBxFG,CmBwFR,AnBxFS,CmBwFC,EnBxFR,EmBwFF,AnBxFJ,CmBwFmB,YAAf,EAAVA;AACAA,AnBxFM,MmBwFF,EnBxFE,ImBwFI,EnBxFE,CmBwFC,AnBxFA,CmBwFC,EnBxFR,GmBwFa,2BAAN,IAAqC,CAAC,KAAK,gBAAL,CAAsB,EAAtB,CAAyB,GAAzB,CAAtC,IAAuE,YAAY,CAAC,KAAK,IAAN,CAAnF,IAAkG,CAAC,KAAK,qBAAL,CAA2B,GAA3B,CAAhHA;AAEAA,AnBzFK,MmByFD,IAAI,GAAG,CAAC,CAAZA;AAAAA,MAAe,EAAE,GAAG,CAAC,CAArBA;AAAAA,AnBxFI,MmBwFoB,OnBxFb,CmBwFqB,GAAG,InBxFhB,CmBwFnBA,EnBxFsB,IAAI,CAAC,KAAL,CAAW,MAA7B,EAAqC;AmBwFzCA,AnBvFMA,MmBuFoC,KAAK,CnBvFrC,EmBuFwC,CnBvFrC,CmBuFbA,EnBvFgB,IAAI,CAAC,KAAL,CAAW,QAAQ,EAAnB,CAAVA;AACAA,YAAI,OAAO,GAAGa,MAAI,CAAC,aAALA,CAAmB,GAAnBA,EAAwB,IAAI,CAAC,QAA7BA,EAAuC,OAAvCA,CAAdb;AmBuFN,MAAI,KAAK,IAAL,CAAU,QAAd,EAAwB;AACtB,AnBvFI,SmBuFCA,GnBvFG,CmBuFC,CAAC,GAAG,CAAb,CnBvFI,CmBuFY,CAAC,AnBvFA,GmBuFG,SAAS,CAAC,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AACzCA,AnBvFI,UmBuFAH,AnBvFA,MAAM,CAAC,CmBuFD,GAAG,AnBvFT,CAAY,GAAZ,CmBuFc,CnBvFG,GAAjB,YmBuFS,CAAsB,SAAS,CAAC,CAAD,CAA/B,EAAoC,KAApC,CAAbG;AnBtFI,UAAA,GAAG,CAAC,WAAJ,CAAgB,OAAO,CAAC,GAAxB;AmBuFJ,AnBtFI,UmBsFAH,AnBtFA,GAAG,GAAG,EmBsFV,EAAY,GnBtFK,CAAC,UAAR,IAAsB,OAAO,CAAC,GAApC;AmBuFF,AnBtFC,QmBsFD,IAAI,GAAG,IAAI,GAAG,CAAP,GAAWA,QAAM,CAAC,IAAlB,GAAyB,IAAI,CAAC,GAAL,CAASA,QAAM,CAAC,IAAhB,EAAsB,IAAtB,CAAhC;AACA,AnBtFD,QmBsFC,EAAE,GAAG,EAAE,GAAG,CAAL,GAASA,QAAM,CAAC,EAAhB,GAAqB,IAAI,CAAC,GAAL,CAASA,QAAM,CAAC,EAAhB,EAAoB,EAApB,CAA1B;AnBrFH;AmBsFG,YAAIA,QAAM,CAAC,QAAX,EAAmB;AAAE,AnBrFzB,IAAA,GAAG,CAAC,EmBqFqB,QAAQ,CnBrFjC,CAAgBgB,CmBqFoB,IAAX,CnBrFL,CAAC,aAALA,CAAmB,IAAnBA,EAAyB,OAAzBA,CAAhB;AmBqFwC,AnBpFzC,GAzBD;AmB8GK,AnBnFL,SAAO,MAAP;AmBoFG,AnBnFL,GAEA;AmBkFG,AnBjFH;AACA;AmBkFE,AnBjFF,MmBiFMQ,MAAO,CAAC,KAARA,IAAiB,KAAK,CAAC,MAAN,GAAe,CAApC,EAAuC;AACrCrB,AnBjFJ,QmBiFQ,GAAG,GAAG,KAAK,CAAC,MAAN,CAAY,UAAC,CAAD,EAAC;AAAA,AnBhF3B,amBgFgC,CAAC,CAAC,QAAF,IAAc,IAAnB;AAAuB,KAApC,CAAVA;;AACA,QAAI,GAAG,CAAC,MAAJ,IAAc,CAAlB,CnBhFJ,CmBgFyB,enBhFzB,SAAA,aAAA,CAAc,IAAd,EAAoB,OAApB,EAAkC;AmBiFvB,UAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA,anBjFgB,GAAG;AmBiFhB,AnBhFhB,MAAA,GAAyB,CmBgFT,CAAA,CnB/ER,EmB+EQ,GAAA,CAAA,CAAA,CAAA,KnB/EK,CAAC,UAAd,CAAyB,GAAG,CAAC,OAAD,CAA5B,EAAuC,KAAK,KAAL,CAAW,IAAI,CAAC,IAAL,CAAU,IAArB,EAA2B,IAA3B,CAAvC,CADR;AAAS,MAAA,GAAA,GAAA,GAAA,CAAA,GAAA;AmBiFD,AnBjFM,MAAA,ImBiFF,CAAC,CAAC,InBjFA,GAAA,GmBiFF,AnBjFE,CAAA,GmBiFc,CAAC,CAAC,KnBjFhB,KmBiFc,CAAa,UAAb,IAA2B,CAAC,CAAC,UAAjD,EAA2D;AAAE,QAAA,CAAC,CAAC,MAAF;AAAU,AnB/E3E,MAAI,CmB+EA,MACR,GnBhFI,EAAgB;AmBgFP,AnB/EP,QmB+EO,AnB/EH,CmB+EI,CAAC,EnB/ED,CAAC,GmB+EF,GnB/EP,EACN;AmB8EuB,AnB9Ef,YAAM,IAAI,UAAJ,CAAe,8CAAf,CAAN;AmB+ED,AnB/EqE;AmBgFvE;AnB/EC,QAAI,OAAO,CAAC,SAAZ,EACN;AmBgFI,AnBhFI,MmBgFA,AnBhFA,ImBgFI,GAAG,AnBhFA,CmBgFC,AnBhFA,CmBgFR,IAAa,InBhFb,CAAkB,CmBgFtB,EAAyB,CnBhFrB,EAAwB,UAAxB,EAAoC,OAApC;AmBiFF,AnBjF8C,KAD9C,GmBkFI,GnB/EV,CmB+Ec,GAAG,CAAC,CAAZ,EAAe;AACb,AnBhFA,WmBgFK,AnBhFA,ImBgFL,CAAU,OAAV,CAAkB,InBhFlB,CAAuB,ImBgFvB,AnBhF2B,CmBgFC,AnBhFA,ImBgF5B,EAAkC,CnBhFlC,CmBgFA,CnBhFqC,OAArC,EAA8C,UAA9C;AmBiFA,AnBjFyD,MmBiFzD,QAAQ,CAAC,KAAK,IAAN,CAAR;AACD,AnBjFF;;AmBkFC,AnBjFF,SmBiFO,AnBjFA,GAAP,YmBiFE,CAAqB,IAArB,EAA2B,EAA3B,EAA+B,QAA/B,EAAyC,KAAzC;AnBhFJ;AmBiFI,QAAI,KAAK,IAAL,CAAU,OAAV,CAAkB,KAAtB,EAA2B;AAAE,WAAK,IAAL,CAAU,QnB/E3C,GmB+EiC,CAAsB,KAAK,IAAL,CAAU,KAAhC,KnB/EjC,SAAA,qBAAA,CAAsB,IAAtB,EAA4B,OAA5B,EAA0C;AmB+E6B,KAAnE,MACK,IAAI,CAAC,KAAK,YnBhFgB,GAAG,CmBgFxB,CAAsB,EAAtB,CAAyB,GAAzB,CAAL,EAAkC;AAAE,AnB/E3CA,MmB+E2C,AnB/EvC,GAAG,GAAG,KAAK,GmB+E0C,CAAC,KAAK,IAAN,AnB/E/C,CmB+EiC,AnB/Ed,IAAnB,EAAyB,OAAzB,CAAVA;AmB+EoE;AnB9EpE,OAAKA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,CAAjC,EAAoC,CAAC,IAAI,CAAzC,EAA4C,CAAC,EAA7C,EAAiD;AmB+E/C,AnB9EAA,QAAI,CmB8EC,GnB9EG,GAAG,KAAK,KmB8EhB,CAAsB,GAAtB,CAA0B,GAA1B,AnB9EW,CAAmB,IAAI,CAAC,KAAL,CAAW,CAAX,CAAnB,EAAkC,IAAI,CAAC,QAAvC,EAAiD,OAAjD,CAAXA;AmB+ED;AACH,AnB/EI,QAAI,IAAJ,EAAU;AACP,OAAC,IAAI,CAAC,UAAL,IAAmB,IAAI,CAAC,GAAzB,EAA8B,WAA9B,CAA0C,GAA1C;AACD,MAAA,GAAG,GAAG,IAAI,CAAC,GAAX,EmB+EN,mBAAA,SAAA,gBAAA,CAAiB,GAAjB,EAAsB,KAAtB,EAA6B;AAC/B,AnB/EO;AmBgFH,AnB/EC,MmB+EG,KAAK,CAAC,OAAN,CAAc,GAAG,CAAC,MAAlB,IAA4B,CAAC,CAAjC,EAAkC;AAAE,WAAO,IAAP;AAAW,AnB9E/C,SAAO,GAAP;AACF;AmB8EEA,MAAI,IAAI,GAAG,KAAK,IAAL,CAAU,OAAV,CAAkB,WAAlB,CAA8B,GAAG,CAAC,MAAlC,CAAXA;wBnB5EF,gBAAA,SAAA,aAAA,CAAc,IAAd,EAAoB,MAApB,EAA4B,OAA5B,EAA0C;AmB6ExC,MAAI,GAAG,CAAC,IAAJ,IAAY,YAAZ,GnB7E6B,EmB8E5B,CnB9E+B,GmB8E3B,IAAI,KAAK,IAAL,CAAU,OAAlB,IAA6B,GAAG,CAAC,aAAJ,IAAqB,iBAAlD,IACT;AACU,AnB/ENA,EmB+EM,GAAG,CAAC,AnB/EN,KAAK,GAAG,KmB+EN,AnB/EW,ImB+EU,CnB/Ef,CAAW,IAAI,CmB+ErB,AnB/EsB,ImB+EU,AnB/Ef,CmB+EgB,AnB/EN,GmB+ES,CAAC,AnB/E/B,CAAZA,OmB+EM,IAAiD,CAAC,GAAG,CAAC,MAAJ,CAAW,YAAX,CAAwB,OAAxB,CAHpD,CAAJ,EAIJ;AAAM,AnB/EF,SAAO,EmB+EE,GnB/EG,CmB+EV,GnB/Ec,aAAa,CAAC,UAAd,CAAyB,GAAG,CAAC,OAAD,CAA5B,EAAuC,KAAK,CAAC,IAAD,EAAO,MAAP,CAA5C,CAAhB;AmB+Ea,AnB9Ef,GAEA;AACA;AmB4EE,AnB3EF,MmB2EM,CAAC,IAAD,IAAS,IAAI,CAAC,cAAL,CAAoB,GAApB,CAAb,EAAqC;AAAE,AnB1EzC,WmB0EgD,IAAP;AAAW;;AAElD,AnB3EF,MmB2EM,GAAG,CAAC,GnB3EV,CmB2EM,AnB3EC,ImB2EW,MnB3ElB,GAAO,EmB2EL,EAA6B,KnB3ExB,UAAA,CAAW,GAAX,EAAgB,SAAhB,EAA2B,KAA3B,EAAyC;AmB4E5C,SAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,CnB5EW,GAAG,MmB4ElB,CAAe,MAAnC,EAA2C,CAAC,EAA5C,EAA8C;AAAE,MAAA,KAAK,CAAC,IAAN,CAAW,GAAG,CAAC,UAAJ,CAAe,CAAf,CAAX;AAA6B,AnB3E/E,MAAI,OAAO,SAAP,IAAoB,QAAxB,EACJ;AAAM,WAAO;AmB2EP,AnB3EQ,MAAA,EmB2EJ,CnB3EO,EAAE,CmB2EL,CAAC,CnB3EO,CAAC,QmB2Eb,IAAmB,EnB3EV,CAAmB,CmB2EL,CAAC,OnB3Ef,GmB2EU,IAAmB,IAAI,CAAC,GAA3C,IAAkD,CAAC,IAAI,CAAC,UAAL,CAAgB,QAAhB,CAAyB,GAAG,CAAC,MAA7B,CAAvD,EACN;AAAQ,AnB5EK,KAAP,QmB4ES;AAAC,AnB5EiC,QmB4EjC,IAAI,EAAE,IAAI,CAAC,SAAZ;AAAuB,QAAA,EAAE,EAAE,IAAI,CAAC;AAAhC,AnB3EX,MAAI,CmB2EA,QnB3ES,CAAC,QAAV,IAAsB,IAA1B,EACJ;AmB0EwD,AnB1ElD,WAAO;AAAC,MAAA,GAAG,EAAE;AmB2EbA,AnB3EO,KAAP,GmB2EI,IAAI,GAAG,GAAG,CAAC,eAAfA;AAAAA,AnB3EuB,QmB2ES,IAAI,GAAG,GAAG,CAAC,WAA3CA;;AACA,AnB3EF,MAAI,EmB2EEqB,MAAO,CAAC,AnB3ED,CAAC,CmB2ERA,EnB3EF,EmB2EgBA,EnB3EC,ImB2EM,CAAC,InB3EE,CAAC,GAAV,CAAc,CmB2EfA,IAAsB,EAApCA,CnB3Ee,GmB2E2B,CnB3ED,EmB2EI,CAAC,CnB3EpD,EACJ,OmB0EoD,CAAe,MAA7D,EAAqE;AAC3E,AnB3EM,WAAO,SAAP;AmB4EN,AnB5EsB;AmB6Ed,WAAKrB,IAAI9B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,GAAG,CAAC,UAAJ,CAAe,MAAnC,EAA2CA,GAAC,EAA5C,EAAgD;AACxD,AnB7EI8B,MAAI,MmB6ER,CnB7Ee,EmB6E6B,CnB7E1B,EmB6E6B,GAAG,CAAC,GnB7ExB,CAAC,CAAD,CAAvBA,ImB6E2C,CAAe9B,GAAf,CAA/C;AAAe,AnB7EX8B,MAA4B,KAAK,CmB6EtB,EnB7EyB,OAAO,CAAC,KmB6EjC,EnB7EyB,CmB6EzB,AnB7EyC,GmB6EzC,AnB7EyB,CmB6EzB,AnB7EXA,emB6EW;AAAiB,YAAA,WAAA,GAAA,GAAA,CAAA,WAAA;AnB5E5B,MAAI,KAAK,GAAG,CAAZ,EAAe;AmB6ET,AnB5EJ,IAAA,KAAK,GmB4EG,AnB5EA,CmB4EC,MnB5EM,CAAC,KAAR,CAAc,CAAd,CmB4EA,CnB5EiB,GmB4EG,EnB5EpB,CAAR,EmB4EiC,CAAC,SAAN,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,GAAG,CAAC,UAAjC,EAA6C,eAA7C,IAAgE,CAAxF,EAAyF;AAAE,AnB3E/F,IAAA,MmB2E+F,CnB3ExF,GmB2E4F,AnB3EzF,GmB2E4F,InB3ErF,CAAC,KAAR,CAAc,ImB2EuE,CnB3ElE,GAAG,CAAtB,CAAV;AmB2EqH,AnB1EtH;;AmB2EK,AnB1ENA,MAAI,MmB0EM,CAAC,GnB1EG,GAAG,IAAjBA,CmB0EU,IAAgB,KAAK,CAAC,SAAN,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,GAAG,CAAC,UAAjC,EAA6C,WAA7C,IAA4D,CAAhF,EAAiF;AAAE,AnB1EzFA,MAAuB,GAAG,CmB0E+D,EnB1E5D,EmB0EgE,GAAG,AnB1E9D,GAAG,GAAG,CAAC,ImB0EgD,WnB1EpD,CAAoB,KAApB,EAA2B,OAA3B,CAAH,GAAyC,GAAG,CAAC,aAAJ,CAAkB,OAAlB,CAA3EA;AmB0E2G,AnBzE3GA,MAAI,KAAK,GAAG,SAAS,CAAC,CAAD,CAArBA;AmB0EK,AnB1ELA,MAA0B,KAAK,GAAG,CAAlCA;AmB2EG;AnB1EH,MAAI,KAAK,IAAI,OAAO,KAAP,IAAgB,QAAzB,IAAqC,KAAK,CAAC,QAAN,IAAkB,IAAvD,IAA+D,CAAC,KAAK,CAAC,OAAN,CAAc,KAAd,CAApE,EAA0F;AmB2ExFA,AnB1EA,IAAA,ImB0EI,CnB1EC,GAAG,CAAR,KmB0Ec,GAAG,IAAI,IAAI,IAAI,CAAC,UAAL,IAAmB,GAAG,CAAC,MAA/B,GACX,QAAQ,CAAC,IAAD,CAAR,GAAiB,CADN,GACU,CAD3BA;AAEAA,QAAI,IAAI,GAAG,IAAI,CAAC,eAAL,CAAqB,GAAG,CAAC,MAAzB,EAAiC,UAAjC,EAA6C,CAAC,CAA9C,CAAXA;AACAA,AnB5EA,QmB4EI,CnB5ECA,IAAI,GmB4EG,CnB5EZ,EmB4Ee,EnB5EE,EmB4EE,GnB5EnB,CmB4EuB,CnB5ED,GmB4EK,CAAC,UAAL,IAAmB,GAAG,CAAC,MAA/B,GACT,QAAQ,CAAC,IAAD,CADC,GACQ,GAAG,CAAC,MAAJ,CAAW,UAAX,CAAsB,MAD7CA;AAEAA,AnB9EwB,QmB8EpB,EAAE,AnB9EsB,GmB8EnB,EnB9EwB,CAAC,CmB8ErB,CAAC,EnB9EmB,CAAL,IAAe,IAAnB,EAAyB,EmB8ExC,CAAqB,GAAG,CAAC,MAAzB,EAAiC,QAAjC,EAA2C,CAA3C,CAATA;AACA,AnB9EEA,WmB8EK,CnB9EDgB,OAAK,GAAG,IAAI,CAAC,OAAL,CAAa,GAAb,CAAZhB;AmB8EK,MAAA,IAAA,EAAC,IAAD;AAAK,AnB7EV,MmB6EU,EAAA,EAAE,EnB7ERgB,OAAK,GAAG,CAAZ,EAAa;AmB6ER,AnB7EU,KmB6EjB,KnB7EiB,GAAG,CAAC,cAAJ,CAAmB,IAAI,CAAC,KAAL,CAAW,CAAX,EAAcA,OAAd,CAAnB,EAAyC,IAAI,CAAC,KAAL,CAAWA,OAAK,GAAG,CAAnB,CAAzC,EAAgE,KAAK,CAAC,IAAD,CAArE;AmB8ElB,AnB9E8F,GmByD/F,MAqBO,AnB9EH,ImB8EO,EnB7Ef,CmB6EkB,CAAC,IAAJ,IAAY,YAAhB,EAA8B;AACnC,AnB9EO,UAAA,CmB8EA,EnB9EG,CAAC,YAAJ,CAAiB,IAAjB,EAAuB,KAAK,CAAC,IAAD,CAA5B;AmB8EC,AnB9EkC,MmB8ElC,IAAI,EAAE,IAAI,CAAC,UAAL,GAAkB,IAAI,CAAC,MAA9B;AAAsC,AnB7EnD,MmB6EmD,EAAE,EAAE,IAAI,CAAC,QAAL,GAAgB,IAAI,CAAC;AAA/D,AnB7EN,KmB6ED;AACD,AnB7EA,GmB2EM,MAEA;AAAA;AACL,AnB7EF,OAAKhB,ImB6EI,AnB7EA,CAAC,GAAG,KAAb,EAAoB,CAAC,GAAG,SAAS,CAAC,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AmB8E3C,AnB7EFA,MmB6EE,EnB7EE,EmB6EE,EAAE,CnB7EC,GmB6EG,AnB7EA,CmB6EC,QnB7EQ,CAAC,CmB4Ef,AnB5Ec,CAArBA;AmB8EE,MAAA,EAAE,EAAE,IAAI,CAAC,QAFJ;AAGb,AnB9EM,QAAI,KAAK,KAAK,CAAd,EAAiB;AmB+EvB,AnB9EQ,UAAI,CAAC,GAAG,SAAS,CAAC,MAAV,GAAmB,CAAvB,IAA4B,CAAC,GAAG,KAApC,EACR;AmB8EA,AnB9EU,cAAM,IAAI,UAAJ,CAAe,wDAAf,CAAN;AmB+EV,AnB/EwF;AmBgFhF,MAAA,QAAQ,EAAE,GAAG,CAAC,MAAJ,CAAW,SAAX,IAAwB,GAAG,CAAC;AAPjC,AnBxEL,KmBwEF,QnBxES;AmBiFV,AnBjFU,QAAA,GAAA,EAAC,GAAD;AmBkFb,AnBlFmB,QAAA,UAAU,EAAE;AAAlB,OAAP;AmBqFRA,AnBpFO,ImBoFH,CnBxFE,MAIO,GmBoFC,GAAG,KAAjBA;AnBnFA,UAAA,GAAkD,GAAG,aAAa,CAAC,UAAd,CAAyB,GAAzB,EAA8B,KAA9B,EAAqC,KAArC,CAArD;AmBqFA,AnBrFkB,SmBqFT,CnBrFS,KAAA,EmBqFlB,CAAkB,AnBrFA,GAAA,CmBqFlB,AnBrFkB,EmBqFM,CnBrFN;AmBsFhB,AnBtFmC,MmBsF/B,InBtF+B,MmBsFnC,EAAc,InBtFqB,GAAA,GAAA,CAAA,UAAA;AmBsFnB,AnBrFV,MAAA,GAAG,CAAC,WAAJ,CAAgB,KAAhB;AmBqFgB;AnBpFhB,UAAI,YAAJ,EAAkB;AmBqFxB,AnBpFQ,EmBoFR,UAAU,AnBpFE,GmBoFC,IAAb,GnBpFQ,EAAc;AAAE,gBAAM,IAAI,UAAJ,CAAe,wBAAf,CAAN;AmBqFxB,AnBrFsE,MmBqFlE,gBAAgB,CAAC,IAAI,CAAC,GAAN,CAAhB,CAA2B,UAA3B,IAAyC,QAA7C,EACF;AAAI,IAAA,OAAO,CAAC,MAAD,CAAP,CAAgB,0KAAhB;AAA2L,AnBrFrL,QAAA,UAAU,GAAG,YAAb;AmBsFV,AnBrFS,EoB5IT;AACA,ApB4IO;AACF;;AoB5ILC,ApB6II,IoB7IE,KpB6IK,GoB7IG,GAAG,EAAjBA;AAAAA,ApB6IW,IoB7IU,ApB6IV,GAAA,EAAC,GAAD,IoB7IsB,GAAG,EAApCA;ApB6Ie,IAAA,UAAA,EAAE;AoB3IV,ApB2II,GAAP,MoB3IY,SAAT,CAAmB,IAAnB,EAAyB;AAC9B,ApB2IA,CAtCA,CoBrGA,CpB6IA,GoB7II,CAAC,QAAL,GAAgB,KAAhB;AACA,ApB6IA,EoB7IA,IAAI,CAAC,SAAL,GAAiB,IAAjB;AACA,ApB6IA,EoB7IA,IAAI,CAAC,WAAL,GAAmB,IAAnB;AACA,EAAA,IAAI,CAAC,eAAL,GAAuB,CAAvB;AACA,EAAA,IAAI,CAAC,SAAL,GAAiB;AAAC,ApB4IlB,IoB5IkB,IAAI,EAAE,CAAP,EpB4IjB,CAAO,UAAP,GAAO,SAAA,UAAA,CAAW,MAAX,EAAmB;AoB5IC,ApB6IzB,IoB7IyB,CAAC,EAAE,CAAb,CpB6IR,MAAM,CAAC,MAAP,CAAc,aAAd,KACJ,MAAM,CAAC,MAAP,CAAc,aAAd,GAA8B,IAAI,aAAJ,CAAkB,KAAK,eAAL,CAAqB,MAArB,CAAlB,EAAgD,KAAK,eAAL,CAAqB,MAArB,CAAhD,CAD1B,CAAP;AoB7I+B,ApB+IjC,CAHA,EAKA,CoBjJiC,CAAC,EAAE,CAAnB;AAAsB,ApBkJvC,IoBlJuC,IAAI,EAAE;AAA5B,ApBmJjB,GoBnJA;AACA,EAAA,IAAI,CAAC,mBAAL,GAA2B,IAA3B;AACA,EAAA,IAAI,CAAC,iBAAL,GAAyB,CAAzB;AAEA,ApBgJA,EoBhJA,IAAI,CAAC,MpBgJL,CAAO,KoBhJP,GAAoB,CAApB,MpBgJA,GAAO,SAAA,eAAA,CAAgB,MAAhB,EAAwB;AoB/I/B,ApBgJED,EoBhJF,IAAI,ApBgJE,CoBhJD,KpBgJO,GAAG,WAAW,CAAC,MAAM,CoBhJjC,ApBgJkC,GoBhJC,EpBgJT,CAAxBA,CoBhJF;AACA,EAAA,IAAI,CAAC,iBAAL,GAAyB,CAAzB;AAEA,ApB8IE,EoB9IF,IAAI,ApB8IE,CoB9ID,ApB8IE,MAAM,CAAC,EoB9Id,EpB8IE,CoB9Ie,CpB8IC,IoB9IlB;AACA,ApB6IoB,EoB7IpB,EpB6IoB,EoB7IhB,CAAC,GpB6IqB,CAAC,IAAP,GAAW,KoB7I/B,GAAwB,EpB6IU,EoB7IlC,EpB6I+B,EAAG;AoB5IlC,ApB4IkC,EoB5IlC,IAAI,CAAC,MpB4IqC,IAAI,CAAC,IAAb,CoB5IlC,GAAwB,EAAxB;AACA,ApB2I+C,EoB3I/C,GpB2IoB,CoB3IhB,CAAC,kBAAL,GAA0B,CAAC,GAA3B;AAEA,ApByImD,EoBzInD,IAAI,CAAC,WAAL,GAAmB,IAAI,WAAJ,CAAgB,IAAhB,EAAoB,UAAG,IAAH,EAAS,EAAT,EAAa,QAAb,EAAuB,KAAvB,EAA4B;AAAA,WAAK,aAAa,CAAC,IAAD,EAAO,IAAP,EAAa,EAAb,EAAiB,QAAjB,EAA2B,KAA3B,CAAlB;AAAmD,ApB0IpH,GoB1IiB,CAAnB,KpB0IS,MAAP;AoBzIF,ApB0IA,CAJA,CoBtIA,CpB4IA,GoB5II,CAAC,WAAL,CAAiB,KAAjB,GAnB8B,CAoBhC;ApB4IE;AoB3IA,EAAA,IAAI,CAAC,cAAL,GAAsB,CAAtB;AAEA,EAAA,IAAI,CAAC,aAAL,GAAqB,MAAM,CAAC,MAAP,CAAc,IAAd,CAArB;ApB0IA,aAAA,CAAO,eAAP,GAAO,SAAA,eAAA,CAAgB,MAAhB,EAAwB;AoBzIjC,ApB0II,MoB1IJ,GpB0IW,CoB1IX,GAAA,OpB0IsB,CAAC,EoB1IvB,IpB0I6B,CoB1I7B,ApB0I8B,EoB1IA,GpB0IR,CAAlB;AoBzIAA,ApB0IF,CAFA,OoBxIM,OAAO,GAAG,QAAQ,CAAC,KAAD,CAAtBA;AACA,IAAA,IAAI,CAAC,GAAL,CAAS,gBAAT,CAA0B,KAA1B,EAAiC,IAAI,CAAC,aAAL,CAAmB,KAAnB,IAAyB,UAAG,KAAH,EAAY;AACpE,ApB2IN,SAAS,CoB3IC,UpB2IV,CAAqB,GAArB,EAA0B,EoB3IE,CAAC,IAAD,EAAO,KAAP,CAAlB,IAAmC,CAAC,gBAAgB,CAAC,IAAD,EAAO,KAAP,CAApD,KACC,IAAI,CAAC,QAAL,IAAiB,EAAE,KAAK,CAAC,IAAN,IAAc,YAAhB,CADlB,CAAJ,EAEN;AAAQ,ApB0INA,MAAI,EoB1IE,IpB0II,GoB1IG,ApB0IA,CoB1IC,CpB0IdA,GoB1Ia,EAAO,KAAP,CAAP;AAAoB;AACvB,ApB0IH,KoB9IE,EpB8IGA,IAAI,IAAT,IAAiB,GAAjB,EAAsB;AoBzIxB,ApB0IIA,GoBjJJ,KpBiJQ,KAAK,GAAG,GAAG,CAAC,IAAD,CAAH,CAAU,IAAV,CAAe,KAA3BA;;AoBjJF,ApBkJE,OoBlJGA,CpBkJC,GoBlJG,EpBkJP,EAAS,CoBlJX,IAAkB,QAAlB,EAA0B,IAAA,CAAA,KAAA,CAAA,CAxBI,CAgChC;AACA,ApByIe,MAAA,MAAM,CAAC,IAAD,CAAN,GAAe,KAAf;AoBxIf,ApBwImC;AAChC;;AoBxID,ApByIA,MoBzIIqB,GpByIG,GoBzII,CAAC,EpByIZ,IoBzIA,EAAkB;AAAE,ApB0IrB,IoB1IqB,IAAI,CAAC,GAAL,CAAS,gBAAT,CAA0B,OAA1B,EAAiC,YAAA;AAAA,aAAQ,IAAR;AAAY,ApB4InE,KoB5IsB,IpB4Ib,GAAT,CAAa,OAAb,EAAsB;AoB5I8C,ApB6IpE;AACE,SAAO,OAAO,CAAC,QAAR,IAAoB,MAAM,CAAC,QAAlC;AoB5IA,ApB6IF,EoB7IE,eAAe,CAAC,IAAD,CAAf;AACD;;AAED,SAAS,kBAAT,CAA4B,IAA5B,EAAkC,MAAlC,EAA0C;AACxC,EAAA,IAAI,CAAC,mBAAL,GAA2B,MAA3B;AACA,EAAA,IAAI,CAAC,iBAAL,GAAyB,IAAI,CAAC,GAAL,EAAzB;AACD;;AAEM,SAAS,YAAT,CAAsB,IAAtB,EAA4B;AACjC,EAAA,IAAI,CAAC,WAAL,CAAiB,IAAjB;;AACA,OAAKrB,IAAI,IAAT,IAAiB,IAAI,CAAC,aAAtB,EACF;AAAI,IAAA,IAAI,CAAC,GAAL,CAAS,mBAAT,CAA6B,IAA7B,EAAmC,IAAI,CAAC,aAAL,CAAmB,IAAnB,CAAnC;AAA4D;;AAC9D,EAAA,YAAY,CAAC,IAAI,CAAC,gBAAN,CAAZ;AACA,EAAA,YAAY,CAAC,IAAI,CAAC,2BAAN,CAAZ;AACD;;AAEM,SAAS,eAAT,CAAyB,IAAzB,EAA+B;AACpC,EAAA,IAAI,CAAC,QAAL,CAAc,iBAAd,EAA+B,UAAE,eAAF,EAAqB;AAClD,SAAKA,IAAI,IAAT,IAAiB,eAAjB,EAAgC;AAAE,UAAI,CAAC,IAAI,CAAC,aAAL,CAAmB,IAAnB,CAAL,EACtC;AAAM,QAAA,IAAI,CAAC,GAAL,CAAS,gBAAT,CAA0B,IAA1B,EAAgC,IAAI,CAAC,aAAL,CAAmB,IAAnB,IAAwB,UAAG,KAAH,EAAG;AAAA,iBAAS,gBAAgB,CAAC,IAAD,EAAO,KAAP,CAAzB;AAAsC,SAAjG;AAAiG;AAAC;AACrG,GAHD;AAID;;AAED,SAAS,gBAAT,CAA0B,IAA1B,EAAgC,KAAhC,EAAuC;AACrC,SAAO,IAAI,CAAC,QAAL,CAAc,iBAAd,EAA+B,UAAE,QAAF,EAAc;AAClDA,QAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAP,CAAtBA;AACA,WAAO,OAAO,GAAG,OAAO,CAAC,IAAD,EAAO,KAAP,CAAP,IAAwB,KAAK,CAAC,gBAAjC,GAAoD,KAAlE;AACD,GAHM,CAAP;AAID;;AAED,SAAS,kBAAT,CAA4B,IAA5B,EAAkC,KAAlC,EAAyC;AACvC,MAAI,CAAC,KAAK,CAAC,OAAX,EAAkB;AAAE,WAAO,IAAP;AAAW;;AAC/B,MAAI,KAAK,CAAC,gBAAV,EAA0B;AAAE,WAAO,KAAP;AAAY;;AACxC,OAAKA,IAAI,IAAI,GAAG,KAAK,CAAC,MAAtB,EAA8B,IAAI,IAAI,IAAI,CAAC,GAA3C,EAAgD,IAAI,GAAG,IAAI,CAAC,UAA5D,EACF;AAAI,QAAI,CAAC,IAAD,IAAS,IAAI,CAAC,QAAL,IAAiB,EAA1B,IACC,IAAI,CAAC,UAAL,IAAmB,IAAI,CAAC,UAAL,CAAgB,SAAhB,CAA0B,KAA1B,CADxB,EAEJ;AAAM,aAAO,KAAP;AAAO;AAAK;;AAChB,SAAO,IAAP;AACD;;AAEM,SAAS,aAAT,CAAuB,IAAvB,EAA6B,KAA7B,EAAoC;AACzC,MAAI,CAAC,gBAAgB,CAAC,IAAD,EAAO,KAAP,CAAjB,IAAkC,QAAQ,CAAC,KAAK,CAAC,IAAP,CAA1C,KACC,IAAI,CAAC,QAAL,IAAiB,EAAE,KAAK,CAAC,IAAN,IAAc,YAAhB,CADlB,CAAJ,EAEF;AAAI,IAAA,QAAQ,CAAC,KAAK,CAAC,IAAP,CAAR,CAAqB,IAArB,EAA2B,KAA3B;AAAiC;AACpC;;AAED,YAAY,CAAC,OAAb,GAAoB,UAAI,IAAJ,EAAU,KAAV,EAAoB;AACtC,EAAA,IAAI,CAAC,QAAL,GAAgB,KAAK,CAAC,OAAN,IAAiB,EAAjB,IAAuB,KAAK,CAAC,QAA7C;;AACA,MAAI,mBAAmB,CAAC,IAAD,EAAO,KAAP,CAAvB,EAAoC;AAAE;AAAM;;AAC5C,MAAI,KAAK,CAAC,OAAN,IAAiB,GAArB,EAAwB;AAAE,IAAA,IAAI,CAAC,WAAL,CAAiB,UAAjB;AAA6B;;AACvD,EAAA,IAAI,CAAC,WAAL,GAAmB,KAAK,CAAC,OAAzB;AACA,EAAA,IAAI,CAAC,eAAL,GAAuB,IAAI,CAAC,GAAL,EAAvB,CALsC,CAMxC;AACA;AACA;AACA;;AACE,MAAIqB,MAAO,CAAC,GAARA,IAAe,KAAK,CAAC,OAAN,IAAiB,EAAhCA,IAAsC,CAAC,KAAK,CAAC,OAA7CA,IAAwD,CAAC,KAAK,CAAC,MAA/DA,IAAyE,CAAC,KAAK,CAAC,OAApF,EAA6F;AAC3FrB,QAAI,GAAG,GAAG,IAAI,CAAC,GAAL,EAAVA;AACA,IAAA,IAAI,CAAC,YAAL,GAAoB,GAApB;AACA,IAAA,IAAI,CAAC,2BAAL,GAAmC,UAAU,CAAA,YAAO;AAClD,UAAI,IAAI,CAAC,YAAL,IAAqB,GAAzB,EAA8B;AAC5B,QAAA,IAAI,CAAC,QAAL,CAAc,eAAd,EAA6B,UAAE,CAAF,EAAE;AAAA,iBAAK,CAAC,CAAC,IAAD,EAAO,QAAQ,CAAC,EAAD,EAAK,OAAL,CAAf,CAAN;AAAmC,SAAlE;AACA,QAAA,IAAI,CAAC,YAAL,GAAoB,CAApB;AACD;AACF,KAL4C,EAK1C,GAL0C,CAA7C;AAMD,GATD,MASO,IAAI,IAAI,CAAC,QAAL,CAAc,eAAd,EAA6B,UAAE,CAAF,EAAE;AAAA,WAAK,CAAC,CAAC,IAAD,EAAO,KAAP,CAAN;AAAmB,GAAlD,KAAuD,cAAc,CAAC,IAAD,EAAO,KAAP,CAAzE,EAAwF;AAC7F,IAAA,KAAK,CAAC,cAAN;AACD,GAFM,MAEA;AACL,IAAA,kBAAkB,CAAC,IAAD,EAAO,KAAP,CAAlB;AACD;AACH,CAxBA;;AA0BA,YAAY,CAAC,KAAb,GAAkB,UAAI,IAAJ,EAAU,CAAV,EAAgB;AAChC,MAAI,CAAC,CAAC,OAAF,IAAa,EAAjB,EAAmB;AAAE,IAAA,IAAI,CAAC,QAAL,GAAgB,KAAhB;AAAqB;AAC5C,CAFA;;AAIA,YAAY,CAAC,QAAb,GAAqB,UAAI,IAAJ,EAAU,KAAV,EAAoB;AACvC,MAAI,mBAAmB,CAAC,IAAD,EAAO,KAAP,CAAnB,IAAoC,CAAC,KAAK,CAAC,QAA3C,IACA,KAAK,CAAC,OAAN,IAAiB,CAAC,KAAK,CAAC,MADxB,IACkCqB,MAAO,CAAC,GAARA,IAAe,KAAK,CAAC,OAD3D,EACkE;AAAE;AAAM;;AAE1E,MAAI,IAAI,CAAC,QAAL,CAAc,gBAAd,EAA8B,UAAE,CAAF,EAAE;AAAA,WAAK,CAAC,CAAC,IAAD,EAAO,KAAP,CAAN;AAAmB,GAAnD,CAAJ,EAA0D;AACxD,IAAA,KAAK,CAAC,cAAN;AACA;AACD;;AAEDrB,MAAI,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,SAArBA;;AACA,MAAI,EAAE,GAAG,YAAY,+BAAjB,KAAmC,CAAC,GAAG,CAAC,KAAJ,CAAU,UAAV,CAAqB,GAAG,CAAC,GAAzB,CAAxC,EAAuE;AACrEA,QAAI,IAAI,GAAG,MAAM,CAAC,YAAP,CAAoB,KAAK,CAAC,QAA1B,CAAXA;;AACA,QAAI,CAAC,IAAI,CAAC,QAAL,CAAc,iBAAd,EAA+B,UAAE,CAAF,EAAE;AAAA,aAAK,CAAC,CAAC,IAAD,EAAO,GAAG,CAAC,KAAJ,CAAU,GAAjB,EAAsB,GAAG,CAAC,GAAJ,CAAQ,GAA9B,EAAmC,IAAnC,CAAN;AAA8C,KAA/E,CAAL,EACJ;AAAM,MAAA,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,UAAd,CAAyB,IAAzB,EAA+B,cAA/B,EAAd;AAA8D;;AAChE,IAAA,KAAK,CAAC,cAAN;AACD;AACH,CAhBA;;AAkBA,SAAS,WAAT,CAAqB,KAArB,EAA4B;AAAE,SAAO;AAAC,IAAA,IAAI,EAAE,KAAK,CAAC,OAAb;AAAsB,IAAA,GAAG,EAAE,KAAK,CAAC;AAAjC,GAAP;AAAkD;;AAEhF,SAAS,MAAT,CAAgB,KAAhB,EAAuB,KAAvB,EAA8B;AAC5BA,MAAI,EAAE,GAAG,KAAK,CAAC,CAAN,GAAU,KAAK,CAAC,OAAzBA;AAAAA,MAAkC,EAAE,GAAG,KAAK,CAAC,CAAN,GAAU,KAAK,CAAC,OAAvDA;AACA,SAAO,EAAE,GAAG,EAAL,GAAU,EAAE,GAAG,EAAf,GAAoB,GAA3B;AACD;;AAED,SAAS,mBAAT,CAA6B,IAA7B,EAAmC,QAAnC,EAA6C,GAA7C,EAAkD,MAAlD,EAA0D,KAA1D,EAAiE;AAC/D,MAAI,MAAM,IAAI,CAAC,CAAf,EAAgB;AAAE,WAAO,KAAP;AAAY;;AAC9BA,MAAI,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,OAAf,CAAuB,MAAvB,CAAXA;;AACF,MAAA,IAAA,GAAA,UAAA,CAAA,EAA2C;AACvC,QAAI,IAAI,CAAC,QAAL,CAAc,QAAd,EAAsB,UAAE,CAAF,EAAE;AAAA,aAAK,CAAC,GAAG,IAAI,CAAC,KAAT,GAAiB,CAAC,CAAC,IAAD,EAAO,GAAP,EAAY,IAAI,CAAC,SAAjB,EAA4B,IAAI,CAAC,MAAL,CAAY,CAAZ,CAA5B,EAA4C,KAA5C,EAAmD,IAAnD,CAAlB,GACiB,CAAC,CAAC,IAAD,EAAO,GAAP,EAAY,IAAI,CAAC,IAAL,CAAU,CAAV,CAAZ,EAA0B,IAAI,CAAC,MAAL,CAAY,CAAZ,CAA1B,EAA0C,KAA1C,EAAiD,KAAjD,CADvB;AAC8E,KADtG,CAAJ,EAEJ;AAAM,aAAA;AAAA,QAAA,CAAA,EAAO;AAAP,OAAA;AAAW;AACjB,GAJA;;AAAE,OAAKA,IAAI9B,CAAC,GAAG,IAAI,CAAC,KAAL,GAAa,CAA1B,EAA6B,CAAC,GAAG,CAAjC,EAAoC,CAAC,EAArC,EAAuC;;;AAItC;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,eAAT,CAAyB,IAAzB,EAA+B,SAA/B,EAA0C,MAA1C,EAAkD;AAChD,MAAI,CAAC,IAAI,CAAC,OAAV,EAAiB;AAAE,IAAA,IAAI,CAAC,KAAL;AAAY;;AAC/B8B,MAAI,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,YAAd,CAA2B,SAA3B,CAATA;;AACA,MAAI,MAAM,IAAI,SAAd,EAAuB;AAAE,IAAA,EAAE,CAAC,OAAH,CAAW,SAAX,EAAsB,IAAtB;AAA2B;;AACpD,EAAA,IAAI,CAAC,QAAL,CAAc,EAAd;AACD;;AAED,SAAS,iBAAT,CAA2B,IAA3B,EAAiC,MAAjC,EAAyC;AACvC,MAAI,MAAM,IAAI,CAAC,CAAf,EAAgB;AAAE,WAAO,KAAP;AAAY;;AAC9BA,MAAI,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,OAAf,CAAuB,MAAvB,CAAXA;AAAAA,MAA2C,IAAI,GAAG,IAAI,CAAC,SAAvDA;;AACA,MAAI,IAAI,IAAI,IAAI,CAAC,MAAb,IAAuB,gCAAc,YAAd,CAA2B,IAA3B,CAA3B,EAA6D;AAC3D,IAAA,eAAe,CAAC,IAAD,EAAO,IAAI,+BAAJ,CAAkB,IAAlB,CAAP,EAAgC,SAAhC,CAAf;AACA,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,iBAAT,CAA2B,IAA3B,EAAiC,MAAjC,EAAyC;AACvC,MAAI,MAAM,IAAI,CAAC,CAAf,EAAgB;AAAE,WAAO,KAAP;AAAY;;AAC9BA,MAAI,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,SAArBA;AAAAA,MAAgC,YAAhCA;AAAAA,MAA8C,QAA9CA;;AACA,MAAI,GAAG,YAAY,+BAAnB,EAAgC;AAAE,IAAA,YAAY,GAAG,GAAG,CAAC,IAAnB;AAAuB;;AAEzDA,MAAI,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,OAAf,CAAuB,MAAvB,CAAXA;;AACA,OAAKA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAL,GAAa,CAA1B,EAA6B,CAAC,GAAG,CAAjC,EAAoC,CAAC,EAArC,EAAyC;AACvCA,QAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,KAAT,GAAiB,IAAI,CAAC,SAAtB,GAAkC,IAAI,CAAC,IAAL,CAAU,CAAV,CAA7CA;;AACA,QAAI,gCAAc,YAAd,CAA2B,IAA3B,CAAJ,EAAsC;AACpC,UAAI,YAAY,IAAI,GAAG,CAAC,KAAJ,CAAU,KAAV,GAAkB,CAAlC,IACA,CAAC,IAAI,GAAG,CAAC,KAAJ,CAAU,KADf,IACwB,IAAI,CAAC,MAAL,CAAY,GAAG,CAAC,KAAJ,CAAU,KAAV,GAAkB,CAA9B,KAAoC,GAAG,CAAC,KAAJ,CAAU,GAD1E,EAEN;AAAQ,QAAA,QAAQ,GAAG,IAAI,CAAC,MAAL,CAAY,GAAG,CAAC,KAAJ,CAAU,KAAtB,CAAX;AAAuC,OAFzC,MAIN;AAAQ,QAAA,QAAQ,GAAG,IAAI,CAAC,MAAL,CAAY,CAAZ,CAAX;AAAyB;;AAC3B;AACD;AACF;;AAED,MAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,IAAA,eAAe,CAAC,IAAD,EAAO,gCAAc,MAAd,CAAqB,IAAI,CAAC,KAAL,CAAW,GAAhC,EAAqC,QAArC,CAAP,EAAuD,SAAvD,CAAf;AACA,WAAO,IAAP;AACD,GAHD,MAGO;AACL,WAAO,KAAP;AACD;AACF;;AAED,SAAS,iBAAT,CAA2B,IAA3B,EAAiC,GAAjC,EAAsC,MAAtC,EAA8C,KAA9C,EAAqD,UAArD,EAAiE;AAC/D,SAAO,mBAAmB,CAAC,IAAD,EAAO,eAAP,EAAwB,GAAxB,EAA6B,MAA7B,EAAqC,KAArC,CAAnB,IACL,IAAI,CAAC,QAAL,CAAc,aAAd,EAA2B,UAAE,CAAF,EAAE;AAAA,WAAK,CAAC,CAAC,IAAD,EAAO,GAAP,EAAY,KAAZ,CAAN;AAAwB,GAArD,CADK,KAEJ,UAAU,GAAG,iBAAiB,CAAC,IAAD,EAAO,MAAP,CAApB,GAAqC,iBAAiB,CAAC,IAAD,EAAO,MAAP,CAF5D,CAAP;AAGD;;AAED,SAAS,iBAAT,CAA2B,IAA3B,EAAiC,GAAjC,EAAsC,MAAtC,EAA8C,KAA9C,EAAqD;AACnD,SAAO,mBAAmB,CAAC,IAAD,EAAO,qBAAP,EAA8B,GAA9B,EAAmC,MAAnC,EAA2C,KAA3C,CAAnB,IACL,IAAI,CAAC,QAAL,CAAc,mBAAd,EAAiC,UAAE,CAAF,EAAE;AAAA,WAAK,CAAC,CAAC,IAAD,EAAO,GAAP,EAAY,KAAZ,CAAN;AAAwB,GAA3D,CADF;AAED;;AAED,SAAS,iBAAT,CAA2B,IAA3B,EAAiC,GAAjC,EAAsC,MAAtC,EAA8C,KAA9C,EAAqD;AACnD,SAAO,mBAAmB,CAAC,IAAD,EAAO,qBAAP,EAA8B,GAA9B,EAAmC,MAAnC,EAA2C,KAA3C,CAAnB,IACL,IAAI,CAAC,QAAL,CAAc,mBAAd,EAAiC,UAAE,CAAF,EAAE;AAAA,WAAK,CAAC,CAAC,IAAD,EAAO,GAAP,EAAY,KAAZ,CAAN;AAAwB,GAA3D,CADK,IAEL,kBAAkB,CAAC,IAAD,EAAO,MAAP,EAAe,KAAf,CAFpB;AAGD;;AAED,SAAS,kBAAT,CAA4B,IAA5B,EAAkC,MAAlC,EAA0C,KAA1C,EAAiD;AAC/C,MAAI,KAAK,CAAC,MAAN,IAAgB,CAApB,EAAqB;AAAE,WAAO,KAAP;AAAY;;AACnCA,MAAI,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,GAArBA;;AACA,MAAI,MAAM,IAAI,CAAC,CAAf,EAAkB;AAChB,QAAI,GAAG,CAAC,aAAR,EAAuB;AACrB,MAAA,eAAe,CAAC,IAAD,EAAO,gCAAc,MAAd,CAAqB,GAArB,EAA0B,CAA1B,EAA6B,GAAG,CAAC,OAAJ,CAAY,IAAzC,CAAP,EAAuD,SAAvD,CAAf;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAEDA,MAAI,IAAI,GAAG,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAXA;;AACA,OAAKA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAL,GAAa,CAA1B,EAA6B,CAAC,GAAG,CAAjC,EAAoC,CAAC,EAArC,EAAyC;AACvCA,QAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,KAAT,GAAiB,IAAI,CAAC,SAAtB,GAAkC,IAAI,CAAC,IAAL,CAAU,CAAV,CAA7CA;AACAA,QAAI,OAAO,GAAG,IAAI,CAAC,MAAL,CAAY,CAAZ,CAAdA;;AACA,QAAI,IAAI,CAAC,aAAT,EACJ;AAAM,MAAA,eAAe,CAAC,IAAD,EAAO,gCAAc,MAAd,CAAqB,GAArB,EAA0B,OAAO,GAAG,CAApC,EAAuC,OAAO,GAAG,CAAV,GAAc,IAAI,CAAC,OAAL,CAAa,IAAlE,CAAP,EAAgF,SAAhF,CAAf;AAAyG,KAD3G,MAEK,IAAI,gCAAc,YAAd,CAA2B,IAA3B,CAAJ,EACT;AAAM,MAAA,eAAe,CAAC,IAAD,EAAO,gCAAc,MAAd,CAAqB,GAArB,EAA0B,OAA1B,CAAP,EAA2C,SAA3C,CAAf;AAAoE,KADjE,MAGT;AAAM;AAAQ;;AACV,WAAO,IAAP;AACD;AACF;;AAED,SAAS,aAAT,CAAuB,IAAvB,EAA6B;AAC3B,SAAO,cAAc,CAAC,IAAD,CAArB;AACD;;AAEDC,IAAM,kBAAkB,GAAGoB,MAAO,CAAC,GAARA,GAAc,SAAdA,GAA0B,SAArDpB;;AAEA,QAAQ,CAAC,SAAT,GAAkB,UAAI,IAAJ,EAAU,KAAV,EAAoB;AACpC,EAAA,IAAI,CAAC,QAAL,GAAgB,KAAK,CAAC,QAAtB;AACAD,MAAI,OAAO,GAAG,aAAa,CAAC,IAAD,CAA3BA;AACAA,MAAI,GAAG,GAAG,IAAI,CAAC,GAAL,EAAVA;AAAAA,MAAsB,IAAI,GAAG,aAA7BA;;AACA,MAAI,GAAG,GAAG,IAAI,CAAC,SAAL,CAAe,IAArB,GAA4B,GAA5B,IAAmC,MAAM,CAAC,KAAD,EAAQ,IAAI,CAAC,SAAb,CAAzC,IAAoE,CAAC,KAAK,CAAC,kBAAD,CAA9E,EAAoG;AAClG,QAAI,IAAI,CAAC,SAAL,CAAe,IAAf,IAAuB,aAA3B,EAAwC;AAAE,MAAA,IAAI,GAAG,aAAP;AAAoB,KAA9D,MACK,IAAI,IAAI,CAAC,SAAL,CAAe,IAAf,IAAuB,aAA3B,EAAwC;AAAE,MAAA,IAAI,GAAG,aAAP;AAAoB;AACpE;;AACD,EAAA,IAAI,CAAC,SAAL,GAAiB;AAAC,IAAA,IAAI,EAAE,GAAP;AAAY,IAAA,CAAC,EAAE,KAAK,CAAC,OAArB;AAA8B,IAAA,CAAC,EAAE,KAAK,CAAC,OAAvC;AAA8C,IAAA,IAAA,EAAE;AAAhD,GAAjB;AAEAA,MAAI,GAAG,GAAG,IAAI,CAAC,WAAL,CAAiB,WAAW,CAAC,KAAD,CAA5B,CAAVA;;AACA,MAAI,CAAC,GAAL,EAAQ;AAAE;AAAM;;AAEhB,MAAI,IAAI,IAAI,aAAZ,EAA2B;AACzB,QAAI,IAAI,CAAC,SAAT,EAAkB;AAAE,MAAA,IAAI,CAAC,SAAL,CAAe,IAAf;AAAqB;;AACzC,IAAA,IAAI,CAAC,SAAL,GAAiB,IAAI,SAAJ,CAAc,IAAd,EAAoB,GAApB,EAAyB,KAAzB,EAAgC,OAAhC,CAAjB;AACD,GAHD,MAGO,IAAI,CAAC,IAAI,IAAI,aAAR,GAAwB,iBAAxB,GAA4C,iBAA7C,EAAgE,IAAhE,EAAsE,GAAG,CAAC,GAA1E,EAA+E,GAAG,CAAC,MAAnF,EAA2F,KAA3F,CAAJ,EAAuG;AAC5G,IAAA,KAAK,CAAC,cAAN;AACD,GAFM,MAEA;AACL,IAAA,kBAAkB,CAAC,IAAD,EAAO,SAAP,CAAlB;AACD;AACH,CArBA;;AAuBA,IAAM,SAAS,GACb,SAAA,SAAA,CAAY,IAAZ,EAAkB,GAAlB,EAAuB,KAAvB,EAA8B,OAA9B,EAAuC;;AACrC,OAAK,IAAL,GAAY,IAAZ;AACA,OAAK,QAAL,GAAgB,IAAI,CAAC,KAAL,CAAW,GAA3B;AACA,OAAK,GAAL,GAAW,GAAX;AACA,OAAK,KAAL,GAAa,KAAb;AACA,OAAK,OAAL,GAAe,OAAf;AACA,OAAK,UAAL,GAAkB,KAAK,CAAC,kBAAD,CAAvB;AACA,OAAK,YAAL,GAAoB,KAAK,CAAC,QAAN,IAAkB,KAAK,CAAC,MAAN,IAAgB,CAAtD;AAEAA,MAAI,UAAJA,EAAgB,SAAhBA;;AACA,MAAI,GAAG,CAAC,MAAJ,GAAa,CAAC,CAAlB,EAAqB;AACnB,IAAA,UAAU,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,MAAf,CAAsB,GAAG,CAAC,MAA1B,CAAb;AACA,IAAA,SAAS,GAAG,GAAG,CAAC,MAAhB;AACD,GAHD,MAGO;AACLA,QAAI,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,OAAf,CAAuB,GAAG,CAAC,GAA3B,CAAXA;AACA,IAAA,UAAU,GAAG,IAAI,CAAC,MAAlB;AACA,IAAA,SAAS,GAAG,IAAI,CAAC,KAAL,GAAa,IAAI,CAAC,MAAL,EAAb,GAA6B,CAAzC;AACD;;AAED,OAAK,SAAL,GAAiB,IAAjB;AAEAC,MAAM,MAAM,GAAG,OAAO,GAAG,IAAH,GAAU,KAAK,CAAC,MAAtCA;AACAA,MAAM,UAAU,GAAG,MAAM,GAAG,IAAI,CAAC,OAAL,CAAa,WAAb,CAAyB,MAAzB,EAAiC,IAAjC,CAAH,GAA4C,IAArEA;AACA,OAAK,MAAL,GAAc,UAAU,GAAG,UAAU,CAAC,GAAd,GAAoB,IAA5C;AAEJ,MAAA,GAAmB,GAAG,IAAI,CAAC,KAA3B;AAAS,MAAA,SAAA,GAAA,GAAA,CAAA,SAAA;;AACL,MAAI,KAAK,CAAC,MAAN,IAAgB,CAAhB,IACA,UAAU,CAAC,IAAX,CAAgB,IAAhB,CAAqB,SADrB,IACkC,UAAU,CAAC,IAAX,CAAgB,IAAhB,CAAqB,UAArB,KAAoC,KADtE,IAEA,SAAS,YAAY,+BAArB,IAAsC,SAAS,CAAC,IAAV,IAAkB,SAAxD,IAAqE,SAAS,CAAC,EAAV,GAAe,SAFxF,EAGJ;AAAM,SAAK,SAAL,GAAiB;AAAC,MAAA,IAAI,EAAE,UAAP;AACC,MAAA,GAAG,EAAE,SADN;AAEC,MAAA,OAAO,EAAE,KAAK,MAAL,IAAe,CAAC,KAAK,MAAL,CAAY,SAFtC;AAGC,MAAA,aAAa,EAAE,KAAK,MAAL,IAAeoB,MAAO,CAAC,KAAvB,IAAgC,CAAC,KAAK,MAAL,CAAY,YAAZ,CAAyB,iBAAzB;AAHjD,KAAjB;AAG8G;;AAEhH,MAAI,KAAK,MAAL,IAAe,KAAK,SAApB,KAAkC,KAAK,SAAL,CAAe,OAAf,IAA0B,KAAK,SAAL,CAAe,aAA3E,CAAJ,EAA+F;AAC7F,SAAK,IAAL,CAAU,WAAV,CAAsB,IAAtB;;AACA,QAAI,KAAK,SAAL,CAAe,OAAnB,EAA0B;AAAE,WAAK,MAAL,CAAY,SAAZ,GAAwB,IAAxB;AAA4B;;AACxD,QAAI,KAAK,SAAL,CAAe,aAAnB,EACN;AAAQ,MAAA,UAAU,CAAA,YAAO;AACf,YAAIR,MAAI,CAAC,IAALA,CAAU,SAAVA,IAAuBA,MAA3B,EAA+B;AAAEA,UAAAA,MAAI,CAAC,MAALA,CAAY,YAAZA,CAAyB,iBAAzBA,EAA4C,OAA5CA;AAAoD;AACtF,OAFS,EAEP,EAFO,CAAV;AAEM;;AACR,SAAK,IAAL,CAAU,WAAV,CAAsB,KAAtB;AACD;;AAED,EAAA,IAAI,CAAC,IAAL,CAAU,gBAAV,CAA2B,SAA3B,EAAsC,KAAK,EAAL,GAAU,KAAK,EAAL,CAAQ,IAAR,CAAa,IAAb,CAAhD;AACA,EAAA,IAAI,CAAC,IAAL,CAAU,gBAAV,CAA2B,WAA3B,EAAwC,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAApD;AACA,EAAA,kBAAkB,CAAC,IAAD,EAAO,SAAP,CAAlB;AACF,CAhDF;;oBAkDE,OAAA,SAAA,IAAA,GAAO;AACL,OAAK,IAAL,CAAU,IAAV,CAAe,mBAAf,CAAmC,SAAnC,EAA8C,KAAK,EAAnD;AACA,OAAK,IAAL,CAAU,IAAV,CAAe,mBAAf,CAAmC,WAAnC,EAAgD,KAAK,IAArD;;AACA,MAAI,KAAK,SAAL,IAAkB,KAAK,MAA3B,EAAmC;AACjC,SAAK,IAAL,CAAU,WAAV,CAAsB,IAAtB;;AACA,QAAI,KAAK,SAAL,CAAe,OAAnB,EAA0B;AAAE,WAAK,MAAL,CAAY,eAAZ,CAA4B,WAA5B;AAAwC;;AACpE,QAAI,KAAK,SAAL,CAAe,aAAnB,EAAgC;AAAE,WAAK,MAAL,CAAY,eAAZ,CAA4B,iBAA5B;AAA8C;;AAChF,SAAK,IAAL,CAAU,WAAV,CAAsB,KAAtB;AACD;;AACD,OAAK,IAAL,CAAU,SAAV,GAAsB,IAAtB;AACF;;oBAEA,KAAA,SAAA,EAAA,CAAG,KAAH,EAAU;AACR,OAAK,IAAL;;AAEA,MAAI,CAAC,KAAK,IAAL,CAAU,GAAV,CAAc,QAAd,CAAuB,KAAK,CAAC,MAAN,CAAa,QAAb,IAAyB,CAAzB,GAA6B,KAAK,CAAC,MAAN,CAAa,UAA1C,GAAuD,KAAK,CAAC,MAApF,CAAL,EACJ;AAAM;AAAM;;AAERb,MAAI,GAAG,GAAG,KAAK,GAAfA;;AACA,MAAI,KAAK,IAAL,CAAU,KAAV,CAAgB,GAAhB,IAAuB,KAAK,QAAhC,EAAwC;AAAE,IAAA,GAAG,GAAG,KAAK,IAAL,CAAU,WAAV,CAAsB,WAAW,CAAC,KAAD,CAAjC,CAAN;AAA+C;;AAEzF,MAAI,KAAK,YAAL,IAAqB,CAAC,GAA1B,EAA+B;AAC7B,IAAA,kBAAkB,CAAC,KAAK,IAAN,EAAY,SAAZ,CAAlB;AACD,GAFD,MAEO,IAAI,iBAAiB,CAAC,KAAK,IAAN,EAAY,GAAG,CAAC,GAAhB,EAAqB,GAAG,CAAC,MAAzB,EAAiC,KAAjC,EAAwC,KAAK,UAA7C,CAArB,EAA+E;AACpF,IAAA,KAAK,CAAC,cAAN;AACD,GAFM,MAEA,IAAI,KAAK,OAAL,IACf;AACgBqB,EAAAA,MAAO,CAAC,MAARA,IAAkB,KAAK,SAAvBA,IAAoC,CAAC,KAAK,SAAL,CAAe,IAAf,CAAoB,MAF1D,IAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACgBA,EAAAA,MAAO,CAAC,MAARA,IAAkB,EAAE,KAAK,IAAL,CAAU,KAAV,CAAgB,SAAhB,YAAqC,+BAAvC,CAAlBA,IACA,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,GAAG,CAAC,GAAJ,GAAU,KAAK,IAAL,CAAU,KAAV,CAAgB,SAAhB,CAA0B,IAA7C,CAAT,EACS,IAAI,CAAC,GAAL,CAAS,GAAG,CAAC,GAAJ,GAAU,KAAK,IAAL,CAAU,KAAV,CAAgB,SAAhB,CAA0B,EAA7C,CADT,KAC8D,CAZnE,EAYuE;AAC5E,IAAA,eAAe,CAAC,KAAK,IAAN,EAAY,4BAAU,IAAV,CAAe,KAAK,IAAL,CAAU,KAAV,CAAgB,GAAhB,CAAoB,OAApB,CAA4B,GAAG,CAAC,GAAhC,CAAf,CAAZ,EAAkE,SAAlE,CAAf;AACA,IAAA,KAAK,CAAC,cAAN;AACD,GAfM,MAeA;AACL,IAAA,kBAAkB,CAAC,KAAK,IAAN,EAAY,SAAZ,CAAlB;AACD;AACH;;oBAEA,OAAA,SAAA,IAAA,CAAK,KAAL,EAAY;AACV,MAAI,CAAC,KAAK,YAAN,KAAuB,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,CAAX,GAAe,KAAK,CAAC,OAA9B,IAAyC,CAAzC,IACA,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,CAAX,GAAe,KAAK,CAAC,OAA9B,IAAyC,CADhE,CAAJ,EAEJ;AAAM,SAAK,YAAL,GAAoB,IAApB;AAAwB;;AAC1B,EAAA,kBAAkB,CAAC,KAAK,IAAN,EAAY,SAAZ,CAAlB;;AACA,MAAI,KAAK,CAAC,OAAN,IAAiB,CAArB,EAAsB;AAAE,SAAK,IAAL;AAAW;AACrC;;AAGF,QAAQ,CAAC,SAAT,GAAkB,UAAG,IAAH,EAAW;AAC3B,EAAA,aAAa,CAAC,IAAD,CAAb;AACA,EAAA,kBAAkB,CAAC,IAAD,EAAO,SAAP,CAAlB;AACF,CAHA;;AAKA,QAAQ,CAAC,WAAT,GAAoB,UAAG,IAAH,EAAG;AAAA,SAAQ,aAAa,CAAC,IAAD,CAArB;AAA0B,CAAjD;;AAEA,SAAS,mBAAT,CAA6B,IAA7B,EAAmC,KAAnC,EAA0C;AACxC,MAAI,IAAI,CAAC,SAAT,EAAkB;AAAE,WAAO,IAAP;AAAW,GADS,CAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,MAAIA,MAAO,CAAC,MAARA,IAAkB,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,SAAN,GAAkB,IAAI,CAAC,kBAAhC,IAAsD,GAA5E,EAAiF;AAC/E,IAAA,IAAI,CAAC,kBAAL,GAA0B,CAAC,GAA3B;AACA,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,EAED;;;AACApB,IAAM,kBAAkB,GAAGoB,MAAO,CAAC,OAARA,GAAkB,IAAlBA,GAAyB,CAAC,CAArDpB;;AAEA,YAAY,CAAC,gBAAb,GAAgC,YAAY,CAAC,iBAAb,GAA8B,UAAG,IAAH,EAAW;AACvE,MAAI,CAAC,IAAI,CAAC,SAAV,EAAqB;AACnB,IAAA,IAAI,CAAC,WAAL,CAAiB,KAAjB;AACK,QAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AAAa,QAAE,IAAI,GAAG,KAAK,CAAC,SAAN,CAAgB,KAAzB;;AAClB,QAAI,KAAK,CAAC,SAAN,CAAgB,KAAhB,KACC,KAAK,CAAC,WAAN,IACC,CAAC,IAAI,CAAC,UAAN,IAAoB,IAAI,CAAC,YAAzB,IAAyC,IAAI,CAAC,UAAL,CAAgB,KAAhB,CAAsB,IAAtB,CAA0B,UAAC,CAAD,EAAC;AAAA,aAAK,CAAC,CAAC,IAAF,CAAO,IAAP,CAAY,SAAZ,KAA0B,KAA/B;AAAoC,KAA/D,CAF3C,CAAJ,EAEmH;AACvH;AACM,MAAA,IAAI,CAAC,UAAL,GAAkB,IAAI,CAAC,KAAL,CAAW,WAAX,IAA0B,IAAI,CAAC,KAAL,EAA5C;AACA,MAAA,cAAc,CAAC,IAAD,EAAO,IAAP,CAAd;AACA,MAAA,IAAI,CAAC,UAAL,GAAkB,IAAlB;AACD,KAPD,MAOO;AACL,MAAA,cAAc,CAAC,IAAD,CAAd,CADK,CAEX;AACA;AACA;;AACM,UAAIoB,MAAO,CAAC,KAARA,IAAiB,KAAK,CAAC,SAAN,CAAgB,KAAjCA,IAA0C,IAAI,CAAC,YAA/CA,IAA+D,CAAC,IAAI,CAAC,UAArEA,IAAmF,IAAI,CAAC,UAAL,CAAgB,KAAhB,CAAsB,MAA7G,EAAqH;AACnHrB,YAAI,GAAG,GAAG,IAAI,CAAC,IAAL,CAAU,YAAV,EAAVA;;AACA,aAAKA,IAAI,IAAI,GAAG,GAAG,CAAC,SAAfA,EAA0B,MAAM,GAAG,GAAG,CAAC,WAA5C,EAAyD,IAAI,IAAI,IAAI,CAAC,QAAL,IAAiB,CAAzB,IAA8B,MAAM,IAAI,CAAjG,GAAqG;AACnGA,cAAI,MAAM,GAAG,MAAM,GAAG,CAAT,GAAa,IAAI,CAAC,SAAlB,GAA8B,IAAI,CAAC,UAAL,CAAgB,MAAM,GAAG,CAAzB,CAA3CA;;AACA,cAAI,CAAC,MAAL,EAAW;AAAE;AAAK;;AAClB,cAAI,MAAM,CAAC,QAAP,IAAmB,CAAvB,EAA0B;AACxB,YAAA,GAAG,CAAC,QAAJ,CAAa,MAAb,EAAqB,MAAM,CAAC,SAAP,CAAiB,MAAtC;AACA;AACD,WAHD,MAGO;AACL,YAAA,IAAI,GAAG,MAAP;AACA,YAAA,MAAM,GAAG,CAAC,CAAV;AACD;AACF;AACF;AACF;;AACD,IAAA,IAAI,CAAC,SAAL,GAAiB,IAAjB;AACD;;AACD,EAAA,kBAAkB,CAAC,IAAD,EAAO,kBAAP,CAAlB;AACF,CAlCA;;AAoCA,YAAY,CAAC,cAAb,GAA2B,UAAI,IAAJ,EAAU,KAAV,EAAoB;AAC7C,MAAI,IAAI,CAAC,SAAT,EAAoB;AAClB,IAAA,IAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,IAAA,IAAI,CAAC,kBAAL,GAA0B,KAAK,CAAC,SAAhC;AACA,IAAA,kBAAkB,CAAC,IAAD,EAAO,EAAP,CAAlB;AACD;AACH,CANA;;AAQA,SAAS,kBAAT,CAA4B,IAA5B,EAAkC,KAAlC,EAAyC;AACvC,EAAA,YAAY,CAAC,IAAI,CAAC,gBAAN,CAAZ;;AACA,MAAI,KAAK,GAAG,CAAC,CAAb,EAAc;AAAE,IAAA,IAAI,CAAC,gBAAL,GAAwB,UAAU,CAAA,YAAA;AAAA,aAAO,cAAc,CAAC,IAAD,CAArB;AAA2B,KAA3B,EAA6B,KAA7B,CAAlC;AAAqE;AACtF;;AAEM,SAAS,gBAAT,CAA0B,IAA1B,EAAgC;AACrC,EAAA,IAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,SAAO,IAAI,CAAC,gBAAL,CAAsB,MAAtB,GAA+B,CAAtC,EAAuC;AAAE,IAAA,IAAI,CAAC,gBAAL,CAAsB,GAAtB,GAA4B,gBAA5B;AAA8C;AACxF;;AAEM,SAAS,cAAT,CAAwB,IAAxB,EAA8B,WAA9B,EAA2C;AAChD,EAAA,IAAI,CAAC,WAAL,CAAiB,UAAjB;AACA,EAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,MAAI,WAAW,IAAI,IAAI,CAAC,OAAL,CAAa,KAAhC,EAAuC;AACrCA,QAAI,GAAG,GAAG,gBAAgB,CAAC,IAAD,CAA1BA;;AACA,QAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAJ,CAAO,IAAI,CAAC,KAAL,CAAW,SAAlB,CAAZ,EAAwC;AAAE,MAAA,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,YAAd,CAA2B,GAA3B,CAAd;AAA8C,KAAxF,MACJ;AAAS,MAAA,IAAI,CAAC,WAAL,CAAiB,IAAI,CAAC,KAAtB;AAA4B;;AACjC,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,WAAT,CAAqB,IAArB,EAA2B,GAA3B,EAAgC;AAChC;AACA;AACE,MAAI,CAAC,IAAI,CAAC,GAAL,CAAS,UAAd,EAAwB;AAAE;AAAM;;AAChCA,MAAI,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,UAAT,CAAoB,WAApB,CAAgC,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAhC,CAAXA;AACA,EAAA,IAAI,CAAC,WAAL,CAAiB,GAAjB;AACA,EAAA,IAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,4CAArB;AACAA,MAAI,GAAG,GAAG,YAAY,EAAtBA;AAAAA,MAA0B,KAAK,GAAG,QAAQ,CAAC,WAAT,EAAlCA;AACA,EAAA,KAAK,CAAC,kBAAN,CAAyB,GAAzB,EAR8B,CAShC;AACA;AACA;;AACE,EAAA,IAAI,CAAC,GAAL,CAAS,IAAT;AACA,EAAA,GAAG,CAAC,eAAJ;AACA,EAAA,GAAG,CAAC,QAAJ,CAAa,KAAb;AACA,EAAA,UAAU,CAAA,YAAO;AACf,QAAI,IAAI,CAAC,UAAT,EAAmB;AAAE,MAAA,IAAI,CAAC,UAAL,CAAgB,WAAhB,CAA4B,IAA5B;AAAiC;;AACtD,IAAA,IAAI,CAAC,KAAL;AACD,GAHS,EAGP,EAHO,CAAV;AAID,EAED;AACA;AACA;;;AACAC,IAAM,kBAAkB,GAAIoB,MAAO,CAAC,EAARA,IAAcA,MAAO,CAAC,UAARA,GAAqB,EAApC,IACpBA,MAAO,CAAC,GAARA,IAAeA,MAAO,CAAC,cAARA,GAAyB,GAD/CpB;;AAGA,QAAQ,CAAC,IAAT,GAAgB,YAAY,CAAC,GAAb,GAAgB,UAAI,IAAJ,EAAU,CAAV,EAAgB;AAC9CD,MAAI,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,SAArBA;AAAAA,MAAgC,GAAG,GAAG,CAAC,CAAC,IAAF,IAAU,KAAhDA;;AACA,MAAI,GAAG,CAAC,KAAR,EAAa;AAAE;AAAM,GAFyB,CAIhD;;;AACEA,MAAI,IAAI,GAAG,kBAAkB,GAAG,IAAH,GAAU,CAAC,CAAC,aAAzCA;AACAA,MAAI,KAAK,GAAG,GAAG,CAAC,OAAJ,EAAZA;SAAsC,GAAG,qBAAqB,CAAC,IAAD,EAAO,KAAP;AAAlC,MAAA,GAAA,GAAA,GAAA,CAAA,GAAA;AAAK,MAAA,IAAA,GAAA,GAAA,CAAA,IAAA;;AACjC,MAAI,IAAJ,EAAU;AACR,IAAA,CAAC,CAAC,cAAF;AACA,IAAA,IAAI,CAAC,SAAL;AACA,IAAA,IAAI,CAAC,OAAL,CAAa,WAAb,EAA0B,GAAG,CAAC,SAA9B;AACA,IAAA,IAAI,CAAC,OAAL,CAAa,YAAb,EAA2B,IAA3B;AACD,GALD,MAKO;AACL,IAAA,WAAW,CAAC,IAAD,EAAO,GAAP,CAAX;AACD;;AACD,MAAI,GAAJ,EAAO;AAAE,IAAA,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,eAAd,GAAgC,cAAhC,GAAiD,OAAjD,CAAyD,SAAzD,EAAoE,KAApE,CAAd;AAAyF;AACpG,CAhBA;;AAkBA,SAAS,eAAT,CAAyB,KAAzB,EAAgC;AAC9B,SAAO,KAAK,CAAC,SAAN,IAAmB,CAAnB,IAAwB,KAAK,CAAC,OAAN,IAAiB,CAAzC,IAA8C,KAAK,CAAC,OAAN,CAAc,UAAd,IAA4B,CAA1E,GAA8E,KAAK,CAAC,OAAN,CAAc,UAA5F,GAAyG,IAAhH;AACD;;AAED,SAAS,YAAT,CAAsB,IAAtB,EAA4B,CAA5B,EAA+B;AAC7B,MAAI,CAAC,IAAI,CAAC,GAAL,CAAS,UAAd,EAAwB;AAAE;AAAM;;AAChCA,MAAI,SAAS,GAAG,IAAI,CAAC,QAAL,IAAiB,IAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,KAArB,CAA2B,MAA3B,CAAkC,IAAlC,CAAuC,IAAvC,CAA4C,IAA7EA;AACAA,MAAI,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,UAAT,CAAoB,WAApB,CAAgC,QAAQ,CAAC,aAAT,CAAuB,SAAS,GAAG,UAAH,GAAgB,KAAhD,CAAhC,CAAbA;;AACA,MAAI,CAAC,SAAL,EAAc;AAAE,IAAA,MAAM,CAAC,eAAP,GAAyB,MAAzB;AAA+B;;AAC/C,EAAA,MAAM,CAAC,KAAP,CAAa,OAAb,GAAuB,4CAAvB;AACA,EAAA,MAAM,CAAC,KAAP;AACA,EAAA,UAAU,CAAA,YAAO;AACf,IAAA,IAAI,CAAC,KAAL;;AACA,QAAI,MAAM,CAAC,UAAX,EAAqB;AAAE,MAAA,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,MAA9B;AAAqC;;AAC5D,QAAI,SAAJ,EAAa;AAAE,MAAA,OAAO,CAAC,IAAD,EAAO,MAAM,CAAC,KAAd,EAAqB,IAArB,EAA2B,CAA3B,CAAP;AAAoC,KAAnD,MACJ;AAAS,MAAA,OAAO,CAAC,IAAD,EAAO,MAAM,CAAC,WAAd,EAA2B,MAAM,CAAC,SAAlC,EAA6C,CAA7C,CAAP;AAAsD;AAC5D,GALS,EAKP,EALO,CAAV;AAMD;;AAED,SAAS,OAAT,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,EAAmC,CAAnC,EAAsC;AACpCA,MAAI,KAAK,GAAG,kBAAkB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAI,CAAC,QAAxB,EAAkC,IAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,KAAvD,CAA9BA;;AACA,MAAI,IAAI,CAAC,QAAL,CAAc,aAAd,EAA2B,UAAE,CAAF,EAAE;AAAA,WAAK,CAAC,CAAC,IAAD,EAAO,CAAP,EAAU,KAAK,IAAI,wBAAM,KAAzB,CAAN;AAAqC,GAAlE,CAAJ,EAAuE;AAAE,WAAO,IAAP;AAAW;;AACpF,MAAI,CAAC,KAAL,EAAU;AAAE,WAAO,KAAP;AAAY;;AAExBA,MAAI,UAAU,GAAG,eAAe,CAAC,KAAD,CAAhCA;AACAA,MAAI,EAAE,GAAG,UAAU,GAAG,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,oBAAd,CAAmC,UAAnC,EAA+C,IAAI,CAAC,QAApD,CAAH,GAAmE,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,gBAAd,CAA+B,KAA/B,CAAtFA;AACA,EAAA,IAAI,CAAC,QAAL,CAAc,EAAE,CAAC,cAAH,GAAoB,OAApB,CAA4B,OAA5B,EAAqC,IAArC,EAA2C,OAA3C,CAAmD,SAAnD,EAA8D,OAA9D,CAAd;AACA,SAAO,IAAP;AACD;;AAED,YAAY,CAAC,KAAb,GAAkB,UAAI,IAAJ,EAAU,CAAV,EAAgB;AAChCA,MAAI,IAAI,GAAG,kBAAkB,GAAG,IAAH,GAAU,CAAC,CAAC,aAAzCA;;AACA,MAAI,IAAI,IAAI,OAAO,CAAC,IAAD,EAAO,IAAI,CAAC,OAAL,CAAa,YAAb,CAAP,EAAmC,IAAI,CAAC,OAAL,CAAa,WAAb,CAAnC,EAA8D,CAA9D,CAAnB,EAAmF;AAAE,IAAA,CAAC,CAAC,cAAF;AAAkB,GAAvG,MACF;AAAO,IAAA,YAAY,CAAC,IAAD,EAAO,CAAP,CAAZ;AAAqB;AAC5B,CAJA;;AAMA,IAAM,QAAQ,GACZ,SAAA,QAAA,CAAY,KAAZ,EAAmB,IAAnB,EAAyB;AACvB,OAAK,KAAL,GAAa,KAAb;AACA,OAAK,IAAL,GAAY,IAAZ;AACF,CAJF;;AAOAC,IAAM,gBAAgB,GAAGoB,MAAO,CAAC,GAARA,GAAc,QAAdA,GAAyB,SAAlDpB;;AAEA,QAAQ,CAAC,SAAT,GAAkB,UAAI,IAAJ,EAAU,CAAV,EAAgB;AAChCD,MAAI,SAAS,GAAG,IAAI,CAAC,SAArBA;;AACA,MAAI,SAAJ,EAAa;AAAE,IAAA,SAAS,CAAC,IAAV;AAAgB;;AAC/B,MAAI,CAAC,CAAC,CAAC,YAAP,EAAmB;AAAE;AAAM;;AAE3BA,MAAI,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,SAArBA;AACAA,MAAI,GAAG,GAAG,GAAG,CAAC,KAAJ,GAAY,IAAZ,GAAmB,IAAI,CAAC,WAAL,CAAiB,WAAW,CAAC,CAAD,CAA5B,CAA7BA;AACA,MAAI,GAAG,IAAI,GAAG,CAAC,GAAJ,IAAW,GAAG,CAAC,IAAtB,IAA8B,GAAG,CAAC,GAAJ,KAAY,GAAG,YAAY,+BAAf,GAA+B,GAAG,CAAC,EAAJ,GAAS,CAAxC,GAA2C,GAAG,CAAC,EAA3D,CAAlC,EAAkG,CAAlG,KAEO,IAAI,SAAS,IAAI,SAAS,CAAC,SAA3B,EAAsC;AAC3C,IAAA,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,YAAd,CAA2B,gCAAc,MAAd,CAAqB,IAAI,CAAC,KAAL,CAAW,GAAhC,EAAqC,SAAS,CAAC,SAAV,CAAoB,GAAzD,CAA3B,CAAd;AACD,GAFM,MAEA,IAAI,CAAC,CAAC,MAAF,IAAY,CAAC,CAAC,MAAF,CAAS,QAAT,IAAqB,CAArC,EAAwC;AAC7CA,QAAI,IAAI,GAAG,IAAI,CAAC,OAAL,CAAa,WAAb,CAAyB,CAAC,CAAC,MAA3B,EAAmC,IAAnC,CAAXA;;AACA,QAAI,CAAC,IAAD,IAAS,CAAC,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,IAAf,CAAoB,SAA9B,IAA2C,IAAI,IAAI,IAAI,CAAC,OAA5D,EAAmE;AAAE;AAAM;;AAC3E,IAAA,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,YAAd,CAA2B,gCAAc,MAAd,CAAqB,IAAI,CAAC,KAAL,CAAW,GAAhC,EAAqC,IAAI,CAAC,SAA1C,CAA3B,CAAd;AACD;AACDA,MAAI,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,OAArB,EAAZA;SAAuD,GAAG,qBAAqB,CAAC,IAAD,EAAO,KAAP;AAAlC,MAAA,GAAA,GAAA,GAAA,CAAA,GAAA;AAAK,MAAA,IAAA,GAAA,GAAA,CAAA,IAAA;AAClD,EAAA,CAAC,CAAC,YAAF,CAAe,SAAf;AACA,EAAA,CAAC,CAAC,YAAF,CAAe,OAAf,CAAuB,kBAAkB,GAAG,MAAH,GAAY,WAArD,EAAkE,GAAG,CAAC,SAAtE,EAlBgC,CAmBlC;;AACE,EAAA,CAAC,CAAC,YAAF,CAAe,aAAf,GAA+B,UAA/B;;AACA,MAAI,CAAC,kBAAL,EAAuB;AAAE,IAAA,CAAC,CAAC,YAAF,CAAe,OAAf,CAAuB,YAAvB,EAAqC,IAArC;AAA0C;;AACnE,EAAA,IAAI,CAAC,QAAL,GAAgB,IAAI,QAAJ,CAAa,KAAb,EAAoB,CAAC,CAAC,CAAC,gBAAD,CAAtB,CAAhB;AACF,CAvBA;;AAyBA,QAAQ,CAAC,OAAT,GAAgB,UAAG,IAAH,EAAW;AACzBA,MAAI,QAAQ,GAAG,IAAI,CAAC,QAApBA;AACA,EAAA,MAAM,CAAC,UAAP,CAAiB,YAAO;AACtB,QAAI,IAAI,CAAC,QAAL,IAAiB,QAArB,EAA6B;AAAG,MAAA,IAAI,CAAC,QAAL,GAAgB,IAAhB;AAAoB;AACrD,GAFD,EAEG,EAFH;AAGF,CALA;;AAOA,YAAY,CAAC,QAAb,GAAwB,YAAY,CAAC,SAAb,GAAsB,UAAI,CAAJ,EAAO,CAAP,EAAQ;AAAA,SAAK,CAAC,CAAC,cAAF,EAAL;AAAqB,CAA3E;;AAEA,YAAY,CAAC,IAAb,GAAiB,UAAI,IAAJ,EAAU,CAAV,EAAgB;AAC/BA,MAAI,QAAQ,GAAG,IAAI,CAAC,QAApBA;AACA,EAAA,IAAI,CAAC,QAAL,GAAgB,IAAhB;;AAEA,MAAI,CAAC,CAAC,CAAC,YAAP,EAAmB;AAAE;AAAM;;AAE3BA,MAAI,QAAQ,GAAG,IAAI,CAAC,WAAL,CAAiB,WAAW,CAAC,CAAD,CAA5B,CAAfA;;AACA,MAAI,CAAC,QAAL,EAAa;AAAE;AAAM;;AACrBA,MAAI,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,OAAf,CAAuB,QAAQ,CAAC,GAAhC,CAAbA;;AACA,MAAI,CAAC,MAAL,EAAW;AAAE;AAAM;;AACnBA,MAAI,KAAK,GAAG,QAAQ,IAAI,QAAQ,CAAC,KAAjCA;;AACA,MAAI,KAAJ,EAAW;AACT,IAAA,IAAI,CAAC,QAAL,CAAc,iBAAd,EAA+B,UAAE,CAAF,EAAO;AAAE,MAAA,KAAK,GAAG,CAAC,CAAC,KAAD,CAAT;AAAkB,KAA1D;AACD,GAFD,MAEO;AACL,IAAA,KAAK,GAAG,kBAAkB,CAAC,IAAD,EAAO,CAAC,CAAC,YAAF,CAAe,OAAf,CAAuB,kBAAkB,GAAG,MAAH,GAAY,YAArD,CAAP,EACC,kBAAkB,GAAG,IAAH,GAAU,CAAC,CAAC,YAAF,CAAe,OAAf,CAAuB,WAAvB,CAD7B,EACkE,KADlE,EACyE,MADzE,CAA1B;AAED;;AACDA,MAAI,IAAI,GAAG,QAAQ,IAAI,CAAC,CAAC,CAAC,gBAAD,CAAzBA;;AACA,MAAI,IAAI,CAAC,QAAL,CAAc,YAAd,EAA0B,UAAE,CAAF,EAAE;AAAA,WAAK,CAAC,CAAC,IAAD,EAAO,CAAP,EAAU,KAAK,IAAI,wBAAM,KAAzB,EAAgC,IAAhC,CAAN;AAA2C,GAAvE,CAAJ,EAA8E;AAC5E,IAAA,CAAC,CAAC,cAAF;AACA;AACD;;AACD,MAAI,CAAC,KAAL,EAAU;AAAE;AAAM;;AAElB,EAAA,CAAC,CAAC,cAAF;AACAA,MAAI,SAAS,GAAG,KAAK,GAAG,qCAAU,IAAI,CAAC,KAAL,CAAW,GAArB,EAA0B,MAAM,CAAC,GAAjC,EAAsC,KAAtC,CAAH,GAAkD,MAAM,CAAC,GAA9EA;;AACA,MAAI,SAAS,IAAI,IAAjB,EAAqB;AAAE,IAAA,SAAS,GAAG,MAAM,CAAC,GAAnB;AAAsB;;AAE7CA,MAAI,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,EAApBA;;AACA,MAAI,IAAJ,EAAQ;AAAE,IAAA,EAAE,CAAC,eAAH;AAAoB;;AAE9BA,MAAI,GAAG,GAAG,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,SAAf,CAAVA;AACAA,MAAI,MAAM,GAAG,KAAK,CAAC,SAAN,IAAmB,CAAnB,IAAwB,KAAK,CAAC,OAAN,IAAiB,CAAzC,IAA8C,KAAK,CAAC,OAAN,CAAc,UAAd,IAA4B,CAAvFA;AACAA,MAAI,YAAY,GAAG,EAAE,CAAC,GAAtBA;;AACA,MAAI,MAAJ,EACF;AAAI,IAAA,EAAE,CAAC,gBAAH,CAAoB,GAApB,EAAyB,GAAzB,EAA8B,KAAK,CAAC,OAAN,CAAc,UAA5C;AAAuD,GADzD,MAGF;AAAI,IAAA,EAAE,CAAC,YAAH,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,KAA1B;AAAgC;;AAClC,MAAI,EAAE,CAAC,GAAH,CAAO,EAAP,CAAU,YAAV,CAAJ,EAA2B;AAAE;AAAM;;AAEnCA,MAAI,IAAI,GAAG,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,GAAf,CAAXA;;AACA,MAAI,MAAM,IAAI,gCAAc,YAAd,CAA2B,KAAK,CAAC,OAAN,CAAc,UAAzC,CAAV,IACA,IAAI,CAAC,SADL,IACkB,IAAI,CAAC,SAAL,CAAe,UAAf,CAA0B,KAAK,CAAC,OAAN,CAAc,UAAxC,CADtB,EAC2E;AACzE,IAAA,EAAE,CAAC,YAAH,CAAgB,IAAI,+BAAJ,CAAkB,IAAlB,CAAhB;AACD,GAHD,MAGO;AACLA,QAAI,GAAG,GAAG,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,SAAf,CAAVA;AACA,IAAA,EAAE,CAAC,OAAH,CAAW,IAAX,CAAgB,EAAE,CAAC,OAAH,CAAW,IAAX,CAAgB,MAAhB,GAAyB,CAAzC,EAA4C,OAA5C,CAAmD,UAAE,KAAF,EAAS,GAAT,EAAc,QAAd,EAAwB,KAAxB,EAA6B;AAAA,aAAK,GAAG,GAAG,KAAX;AAAgB,KAAhG;AACA,IAAA,EAAE,CAAC,YAAH,CAAgB,gBAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,GAAf,CAAb,CAAhC;AACD;;AACD,EAAA,IAAI,CAAC,KAAL;AACA,EAAA,IAAI,CAAC,QAAL,CAAc,EAAE,CAAC,OAAH,CAAW,SAAX,EAAsB,MAAtB,CAAd;AACF,CAnDA;;AAqDA,QAAQ,CAAC,KAAT,GAAc,UAAG,IAAH,EAAW;AACvB,MAAI,CAAC,IAAI,CAAC,OAAV,EAAmB;AACjB,IAAA,IAAI,CAAC,WAAL,CAAiB,IAAjB;AACA,IAAA,IAAI,CAAC,GAAL,CAAS,SAAT,CAAmB,GAAnB,CAAuB,qBAAvB;AACA,IAAA,IAAI,CAAC,WAAL,CAAiB,KAAjB;AACA,IAAA,IAAI,CAAC,OAAL,GAAe,IAAf;AACA,IAAA,UAAU,CAAA,YAAO;AACf,UAAI,IAAI,CAAC,OAAL,IAAgB,IAAI,CAAC,QAAL,EAAhB,IAAmC,CAAC,IAAI,CAAC,WAAL,CAAiB,gBAAjB,CAAkC,EAAlC,CAAqC,IAAI,CAAC,IAAL,CAAU,YAAV,EAArC,CAAxC,EACN;AAAQ,QAAA,cAAc,CAAC,IAAD,CAAd;AAAoB;AACvB,KAHS,EAGP,EAHO,CAAV;AAID;AACH,CAXA;;AAaA,QAAQ,CAAC,IAAT,GAAa,UAAG,IAAH,EAAW;AACtB,MAAI,IAAI,CAAC,OAAT,EAAkB;AAChB,IAAA,IAAI,CAAC,WAAL,CAAiB,IAAjB;AACA,IAAA,IAAI,CAAC,GAAL,CAAS,SAAT,CAAmB,MAAnB,CAA0B,qBAA1B;AACA,IAAA,IAAI,CAAC,WAAL,CAAiB,KAAjB;AACA,IAAA,IAAI,CAAC,WAAL,CAAiB,gBAAjB,CAAkC,GAAlC,CAAsC,EAAtC;AACA,IAAA,IAAI,CAAC,OAAL,GAAe,KAAf;AACD;AACH,CARA;;AAUA,QAAQ,CAAC,WAAT,GAAoB,UAAI,IAAJ,EAAU,KAAV,EAAoB;AACxC;AACA;AAEA;AACA;AACE,MAAIqB,MAAO,CAAC,MAARA,IAAkBA,MAAO,CAAC,OAA1BA,IAAqC,KAAK,CAAC,SAAN,IAAmB,uBAA5D,EAAqF;AAC9E,QAAA,cAAA,GAAA,IAAA,CAAA,cAAA;AACL,IAAA,UAAU,CAAA,YAAO;AACf,UAAI,IAAI,CAAC,cAAL,IAAuB,cAA3B,EAAyC;AAAE;AAAM,OADlC,CACkC;AACvD;;;AACM,MAAA,IAAI,CAAC,GAAL,CAAS,IAAT;AACA,MAAA,IAAI,CAAC,KAAL;;AACA,UAAI,IAAI,CAAC,QAAL,CAAc,eAAd,EAA6B,UAAE,CAAF,EAAE;AAAA,eAAK,CAAC,CAAC,IAAD,EAAO,QAAQ,CAAC,CAAD,EAAI,WAAJ,CAAf,CAAN;AAAsC,OAArE,CAAJ,EAA0E;AAAE;AAAM;;AACxF,UAAA,GAAmB,GAAG,IAAI,CAAC,KAAL,CAAW,SAAjC;AAAW,UAAA,OAAA,GAAA,GAAA,CAAA,OAAA,CANU,CAOrB;;AACM,UAAI,OAAO,IAAI,OAAO,CAAC,GAAR,GAAc,CAA7B,EAA8B;AAAE,QAAA,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAc,MAAd,CAAqB,OAAO,CAAC,GAAR,GAAc,CAAnC,EAAsC,OAAO,CAAC,GAA9C,EAAmD,cAAnD,EAAd;AAAkF;AACnH,KATS,EASP,EATO,CAAV;AAUD;AACH,CAnBA,EAqBA;;;AACA,KAAKrB,IAAI,IAAT,IAAiB,YAAjB,EAA6B;AAAE,EAAA,QAAQ,CAAC,IAAD,CAAR,GAAiB,YAAY,CAAC,IAAD,CAA7B;AAAkC;;AC5rBjE,SAAS,WAAT,CAAqB,CAArB,EAAwB,CAAxB,EAA2B;AACzB,MAAI,CAAC,IAAI,CAAT,EAAU;AAAE,WAAO,IAAP;AAAW;;AACvB,OAAKA,IAAI,CAAT,IAAc,CAAd,EAAe;AAAE,QAAI,CAAC,CAAC,CAAD,CAAD,KAAS,CAAC,CAAC,CAAD,CAAd,EAAiB;AAAE,aAAO,KAAP;AAAO;AAAK;;AAChD,OAAKA,IAAIE,GAAT,IAAc,CAAd,EAAe;AAAE,QAAI,EAAEA,GAAC,IAAI,CAAP,CAAJ,EAAa;AAAE,aAAO,KAAP;AAAO;AAAK;;AAC5C,SAAO,IAAP;AACD;;AAED,IAAM,UAAU,GACd,SAAA,UAAA,CAAY,KAAZ,EAAmB,IAAnB,EAAyB;AACvB,OAAK,IAAL,GAAY,IAAI,IAAI,MAApB;AACA,OAAK,IAAL,GAAY,KAAK,IAAL,CAAU,IAAV,IAAkB,CAA9B;AACA,OAAK,KAAL,GAAa,KAAb;AACF,CALF;;qBAOE,MAAA,SAAA,GAAA,CAAI,OAAJ,EAAa,IAAb,EAAmB,MAAnB,EAA2B,SAA3B,EAAsC;AACxC,MAAA,GAAsB,GAAG,OAAO,CAAC,SAAR,CAAkB,IAAI,CAAC,IAAL,GAAY,SAA9B,EAAyC,KAAK,IAAL,GAAY,CAAZ,GAAgB,CAAC,CAAjB,GAAqB,CAA9D,CAAzB;AAAS,MAAA,GAAA,GAAA,GAAA,CAAA,GAAA;AAAK,MAAA,OAAA,GAAA,GAAA,CAAA,OAAA;AACV,SAAO,OAAO,GAAG,IAAH,GAAU,IAAI,UAAJ,CAAe,GAAG,GAAG,MAArB,EAA6B,GAAG,GAAG,MAAnC,EAA2C,IAA3C,CAAxB;AACF;;qBAEA,QAAA,SAAA,KAAA,GAAQ;AAAE,SAAO,IAAP;AAAW;;qBAErB,KAAA,SAAA,EAAA,CAAG,KAAH,EAAU;AACR,SAAO,QAAQ,KAAR,IACJ,KAAK,YAAY,UAAjB,KACC,KAAK,IAAL,CAAU,GAAV,IAAiB,KAAK,IAAL,CAAU,GAAV,IAAiB,KAAK,CAAC,IAAN,CAAW,GAA7C,IACA,KAAK,KAAL,IAAc,KAAK,CAAC,KAApB,IAA6B,WAAW,CAAC,KAAK,IAAN,EAAY,KAAK,CAAC,IAAlB,CAFzC,CADH;AAIF;;AAGF,IAAM,UAAU,GACd,SAAA,UAAA,CAAY,KAAZ,EAAmB,IAAnB,EAAyB;AACvB,OAAK,IAAL,GAAY,IAAI,IAAI,MAApB;AACA,OAAK,KAAL,GAAa,KAAb;AACF,CAJF;;qBAME,MAAA,SAAA,GAAA,CAAI,OAAJ,EAAa,IAAb,EAAmB,MAAnB,EAA2B,SAA3B,EAAsC;AACpCF,MAAI,IAAI,GAAG,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,IAAL,GAAY,SAAxB,EAAmC,KAAK,IAAL,CAAU,cAAV,GAA2B,CAAC,CAA5B,GAAgC,CAAnE,IAAwE,MAAnFA;AACAA,MAAI,EAAE,GAAG,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,EAAL,GAAU,SAAtB,EAAiC,KAAK,IAAL,CAAU,YAAV,GAAyB,CAAzB,GAA6B,CAAC,CAA/D,IAAoE,MAA7EA;AACA,SAAO,IAAI,IAAI,EAAR,GAAa,IAAb,GAAoB,IAAI,UAAJ,CAAe,IAAf,EAAqB,EAArB,EAAyB,IAAzB,CAA3B;AACF;;qBAEA,QAAA,SAAA,KAAA,CAAM,CAAN,EAAS,IAAT,EAAe;AAAE,SAAO,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,EAAxB;AAA0B;;qBAE3C,KAAA,SAAA,EAAA,CAAG,KAAH,EAAU;AACR,SAAO,QAAQ,KAAR,IACJ,KAAK,YAAY,UAAjB,IAA+B,WAAW,CAAC,KAAK,KAAN,EAAa,KAAK,CAAC,KAAnB,CAA1C,IACA,WAAW,CAAC,KAAK,IAAN,EAAY,KAAK,CAAC,IAAlB,CAFd;AAGF;;AAEA,UAAA,CAAO,EAAP,GAAO,SAAA,EAAA,CAAG,IAAH,EAAS;AAAE,SAAO,IAAI,CAAC,IAAL,YAAqB,UAA5B;AAAsC,CAAxD;;AAGF,IAAM,QAAQ,GACZ,SAAA,QAAA,CAAY,KAAZ,EAAmB,IAAnB,EAAyB;AACvB,OAAK,IAAL,GAAY,IAAI,IAAI,MAApB;AACA,OAAK,KAAL,GAAa,KAAb;AACF,CAJF;;mBAME,MAAA,SAAA,GAAA,CAAI,OAAJ,EAAa,IAAb,EAAmB,MAAnB,EAA2B,SAA3B,EAAsC;AACpCA,MAAI,IAAI,GAAG,OAAO,CAAC,SAAR,CAAkB,IAAI,CAAC,IAAL,GAAY,SAA9B,EAAyC,CAAzC,CAAXA;;AACA,MAAI,IAAI,CAAC,OAAT,EAAgB;AAAE,WAAO,IAAP;AAAW;;AAC7BA,MAAI,EAAE,GAAG,OAAO,CAAC,SAAR,CAAkB,IAAI,CAAC,EAAL,GAAU,SAA5B,EAAuC,CAAC,CAAxC,CAATA;;AACA,MAAI,EAAE,CAAC,OAAH,IAAc,EAAE,CAAC,GAAH,IAAU,IAAI,CAAC,GAAjC,EAAoC;AAAE,WAAO,IAAP;AAAW;;AACjD,SAAO,IAAI,UAAJ,CAAe,IAAI,CAAC,GAAL,GAAW,MAA1B,EAAkC,EAAE,CAAC,GAAH,GAAS,MAA3C,EAAmD,IAAnD,CAAP;AACF;;mBAEA,QAAA,SAAA,KAAA,CAAM,IAAN,EAAY,IAAZ,EAAkB;AACpB,MAAA,GAAuB,GAAG,IAAI,CAAC,OAAL,CAAa,SAAb,CAAuB,IAAI,CAAC,IAA5B,CAA1B;AAAS,MAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AAAO,MAAA,MAAA,GAAA,GAAA,CAAA,MAAA;AACZ,SAAO,MAAM,IAAI,IAAI,CAAC,IAAf,IAAuB,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,KAAX,EAAkB,QAA3B,IAAuC,IAAI,CAAC,EAA1E;AACF;;mBAEA,KAAA,SAAA,EAAA,CAAG,KAAH,EAAU;AACR,SAAO,QAAQ,KAAR,IACJ,KAAK,YAAY,QAAjB,IAA6B,WAAW,CAAC,KAAK,KAAN,EAAa,KAAK,CAAC,KAAnB,CAAxC,IACA,WAAW,CAAC,KAAK,IAAN,EAAY,KAAK,CAAC,IAAlB,CAFd;AAGF,GAGF;AACA;AACA;;;IACa,UAAU,GACrB,SAAA,UAAA,CAAY,IAAZ,EAAkB,EAAlB,EAAsB,IAAtB,EAA4B;AAC9B;AACA;AACI,OAAK,IAAL,GAAY,IAAZ,CAH0B,CAI9B;AACA;AACA;;AACI,OAAK,EAAL,GAAU,EAAV;AACA,OAAK,IAAL,GAAY,IAAZ;AACF;;;;;;;;;;;;qBAEA,OAAA,SAAA,IAAA,CAAK,IAAL,EAAW,EAAX,EAAe;AACb,SAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,EAArB,EAAyB,KAAK,IAA9B,CAAP;AACF;;qBAEA,KAAA,SAAA,EAAA,CAAG,KAAH,EAAU,MAAV,EAAsB;+BAAN,GAAG;AACjB,SAAO,KAAK,IAAL,CAAU,EAAV,CAAa,KAAK,CAAC,IAAnB,KAA4B,KAAK,IAAL,GAAY,MAAZ,IAAsB,KAAK,CAAC,IAAxD,IAAgE,KAAK,EAAL,GAAU,MAAV,IAAoB,KAAK,CAAC,EAAjG;AACF;;qBAEA,MAAA,SAAA,GAAA,CAAI,OAAJ,EAAa,MAAb,EAAqB,SAArB,EAAgC;AAC9B,SAAO,KAAK,IAAL,CAAU,GAAV,CAAc,OAAd,EAAuB,IAAvB,EAA6B,MAA7B,EAAqC,SAArC,CAAP;AACF,GAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAA,CAAO,MAAP,GAAO,SAAA,MAAA,CAAO,GAAP,EAAY,KAAZ,EAAmB,IAAnB,EAAyB;AAC9B,SAAO,IAAI,UAAJ,CAAe,GAAf,EAAoB,GAApB,EAAyB,IAAI,UAAJ,CAAe,KAAf,EAAsB,IAAtB,CAAzB,CAAP;AACF,CAFA,EAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAA,CAAO,MAAP,GAAO,SAAA,MAAA,CAAO,IAAP,EAAa,EAAb,EAAiB,KAAjB,EAAwB,IAAxB,EAA8B;AACnC,SAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,EAArB,EAAyB,IAAI,UAAJ,CAAe,KAAf,EAAsB,IAAtB,CAAzB,CAAP;AACF,CAFA,EAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAA,CAAO,IAAP,GAAO,SAAA,IAAA,CAAK,IAAL,EAAW,EAAX,EAAe,KAAf,EAAsB,IAAtB,EAA4B;AACjC,SAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,EAArB,EAAyB,IAAI,QAAJ,CAAa,KAAb,EAAoB,IAApB,CAAzB,CAAP;AACF,CAFA,EAIA;AACA;AACA;;;AACAG,oBAAAA,CAAI,IAAJA,CAAI,GAAJA,GAAI,YAAO;AAAE,SAAO,KAAK,IAAL,CAAU,IAAjB;AAAqB,CAAlCA;;AAEAA,oBAAAA,CAAI,MAAJA,CAAI,GAAJA,GAAI,YAAS;AAAE,SAAO,KAAK,IAAL,YAAqB,UAA5B;AAAsC,CAArDA;;qEAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAF,IAAM,IAAI,GAAG,EAAbA;AAAAA,IAAiB,MAAM,GAAG,EAA1BA,EAEA;AACA;AACA;AACA;AACA;;IACa,aAAa,GACxB,SAAA,aAAA,CAAY,KAAZ,EAAmB,QAAnB,EAA6B;AAC3B,OAAK,KAAL,GAAa,KAAK,IAAI,KAAK,CAAC,MAAf,GAAwB,KAAxB,GAAgC,IAA7C;AACA,OAAK,QAAL,GAAgB,QAAQ,IAAI,QAAQ,CAAC,MAArB,GAA8B,QAA9B,GAAyC,IAAzD;AACF,GAEA;AACA;AACA;;;;;AACA,aAAA,CAAO,MAAP,GAAO,SAAA,MAAA,CAAO,GAAP,EAAY,WAAZ,EAAyB;AAC9B,SAAO,WAAW,CAAC,MAAZ,GAAqB,SAAS,CAAC,WAAD,EAAc,GAAd,EAAmB,CAAnB,EAAsB,MAAtB,CAA9B,GAA8D,KAArE;AACF,CAFA,EAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;wBACA,OAAA,SAAA,IAAA,CAAK,KAAL,EAAY,GAAZ,EAAiB,SAAjB,EAA4B;AAC1BD,MAAI,MAAM,GAAG,EAAbA;AACA,OAAK,SAAL,CAAe,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoB,KAAnC,EAA0C,GAAG,IAAI,IAAP,GAAc,GAAd,GAAoB,GAA9D,EAAmE,MAAnE,EAA2E,CAA3E,EAA8E,SAA9E;AACA,SAAO,MAAP;AACF;;wBAEA,YAAA,SAAA,SAAA,CAAU,KAAV,EAAiB,GAAjB,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC,SAAtC,EAAiD;AAC/C,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,KAAL,CAAW,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1CA,QAAI,IAAI,GAAG,KAAK,KAAL,CAAW,CAAX,CAAXA;;AACA,QAAI,IAAI,CAAC,IAAL,IAAa,GAAb,IAAoB,IAAI,CAAC,EAAL,IAAW,KAA/B,KAAyC,CAAC,SAAD,IAAc,SAAS,CAAC,IAAI,CAAC,IAAN,CAAhE,CAAJ,EACN;AAAQ,MAAA,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,IAAL,GAAY,MAAtB,EAA8B,IAAI,CAAC,EAAL,GAAU,MAAxC,CAAZ;AAA4D;AAC/D;;AACD,OAAKA,IAAI9B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0CA,GAAC,IAAI,CAA/C,EAAkD;AAChD,QAAI,KAAK,QAAL,CAAcA,GAAd,IAAmB,GAAnB,IAA0B,KAAK,QAAL,CAAcA,GAAC,GAAG,CAAlB,IAAuB,KAArD,EAA4D;AAC1D8B,UAAI,QAAQ,GAAG,KAAK,QAAL,CAAc9B,GAAd,IAAmB,CAAlC8B;AACA,WAAK,QAAL,CAAc9B,GAAC,GAAG,CAAlB,EAAqB,SAArB,CAA+B,KAAK,GAAG,QAAvC,EAAiD,GAAG,GAAG,QAAvD,EAAiE,MAAjE,EAAyE,MAAM,GAAG,QAAlF,EAA4F,SAA5F;AACD;AACF;AACH,GAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;wBACA,MAAA,SAAA,GAAA,CAAI,OAAJ,EAAa,GAAb,EAAkB,OAAlB,EAA2B;AACzB,MAAI,QAAQ,KAAR,IAAiB,OAAO,CAAC,IAAR,CAAa,MAAb,IAAuB,CAA5C,EAA6C;AAAE,WAAO,IAAP;AAAW;;AAC1D,SAAO,KAAK,QAAL,CAAc,OAAd,EAAuB,GAAvB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,OAAO,IAAI,MAA7C,CAAP;AACF;;wBAEA,WAAA,SAAA,QAAA,CAAS,OAAT,EAAkB,IAAlB,EAAwB,MAAxB,EAAgC,SAAhC,EAA2C,OAA3C,EAAoD;AAClD8B,MAAI,QAAJA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,KAAL,CAAW,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1CA,QAAI,MAAM,GAAG,KAAK,KAAL,CAAW,CAAX,EAAc,GAAd,CAAkB,OAAlB,EAA2B,MAA3B,EAAmC,SAAnC,CAAbA;;AACA,QAAI,MAAM,IAAI,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAkB,IAAlB,EAAwB,MAAxB,CAAd,EAA6C;AAAE,OAAC,QAAQ,KAAK,QAAQ,GAAG,EAAhB,CAAT,EAA8B,IAA9B,CAAmC,MAAnC;AAA0C,KAAzF,MACK,IAAI,OAAO,CAAC,QAAZ,EAAoB;AAAE,MAAA,OAAO,CAAC,QAAR,CAAiB,KAAK,KAAL,CAAW,CAAX,EAAc,IAA/B;AAAoC;AAChE;;AAED,MAAI,KAAK,QAAL,CAAc,MAAlB,EACJ;AAAM,WAAO,WAAW,CAAC,KAAK,QAAN,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,IAAnC,EAAyC,MAAzC,EAAiD,SAAjD,EAA4D,OAA5D,CAAlB;AAAsF,GADxF,MAGJ;AAAM,WAAO,QAAQ,GAAG,IAAI,aAAJ,CAAkB,QAAQ,CAAC,IAAT,CAAc,KAAd,CAAlB,CAAH,GAA6C,KAA5D;AAAiE;AACrE,GAEA;AACA;AACA;AACA;;;wBACA,MAAA,SAAA,GAAA,CAAI,GAAJ,EAAS,WAAT,EAAsB;AACpB,MAAI,CAAC,WAAW,CAAC,MAAjB,EAAuB;AAAE,WAAO,IAAP;AAAW;;AACpC,MAAI,QAAQ,KAAZ,EAAiB;AAAE,WAAO,aAAa,CAAC,MAAd,CAAqB,GAArB,EAA0B,WAA1B,CAAP;AAA6C;;AAChE,SAAO,KAAK,QAAL,CAAc,GAAd,EAAmB,WAAnB,EAAgC,CAAhC,CAAP;AACF;;wBAEA,WAAA,SAAA,QAAA,CAAS,GAAT,EAAc,WAAd,EAA2B,MAA3B,EAAmC;;AACjCA,MAAI,QAAJA;AAAAA,MAAc,UAAU,GAAG,CAA3BA;AACA,EAAA,GAAG,CAAC,OAAJ,CAAW,UAAE,SAAF,EAAa,WAAb,EAA6B;AACtCA,QAAI,UAAU,GAAG,WAAW,GAAG,MAA/BA;AAAAA,QAAuC,KAAvCA;;AACA,QAAI,EAAE,KAAK,GAAG,gBAAgB,CAAC,WAAD,EAAc,SAAd,EAAyB,UAAzB,CAA1B,CAAJ,EAAmE;AAAE;AAAM;;AAE3E,QAAI,CAAC,QAAL,EAAa;AAAE,MAAA,QAAQ,GAAGa,MAAI,CAAC,QAALA,CAAc,KAAdA,EAAX;AAAgC;;AAC/C,WAAO,UAAU,GAAG,QAAQ,CAAC,MAAtB,IAAgC,QAAQ,CAAC,UAAD,CAAR,GAAuB,WAA9D,EAAyE;AAAE,MAAA,UAAU,IAAI,CAAd;AAAe;;AAC1F,QAAI,QAAQ,CAAC,UAAD,CAAR,IAAwB,WAA5B,EACN;AAAQ,MAAA,QAAQ,CAAC,UAAU,GAAG,CAAd,CAAR,GAA2B,QAAQ,CAAC,UAAU,GAAG,CAAd,CAAR,CAAyB,QAAzB,CAAkC,SAAlC,EAA6C,KAA7C,EAAoD,UAAU,GAAG,CAAjE,CAA3B;AAA8F,KADhG,MAGN;AAAQ,MAAA,QAAQ,CAAC,MAAT,CAAgB,UAAhB,EAA4B,CAA5B,EAA+B,WAA/B,EAA4C,WAAW,GAAG,SAAS,CAAC,QAApE,EAA8E,SAAS,CAAC,KAAD,EAAQ,SAAR,EAAmB,UAAU,GAAG,CAAhC,EAAmC,MAAnC,CAAvF;AAAkI;;AACpI,IAAA,UAAU,IAAI,CAAd;AACD,GAXD;AAaAb,MAAI,KAAK,GAAG,SAAS,CAAC,UAAU,GAAG,YAAY,CAAC,WAAD,CAAf,GAA+B,WAA1C,EAAuD,CAAC,MAAxD,CAArBA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAqC;AAAE,QAAI,CAAC,KAAK,CAAC,CAAD,CAAL,CAAS,IAAT,CAAc,KAAd,CAAoB,GAApB,EAAyB,KAAK,CAAC,CAAD,CAA9B,CAAL,EAAuC;AAAE,MAAA,KAAK,CAAC,MAAN,CAAa,CAAC,EAAd,EAAkB,CAAlB;AAAmB;AAAC;;AAEpG,SAAO,IAAI,aAAJ,CAAkB,KAAK,CAAC,MAAN,GAAe,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAyB,IAAzB,CAA8B,KAA9B,CAAf,GAAsD,KAAK,KAA7E,EACkB,QAAQ,IAAI,KAAK,QADnC,CAAP;AAEF,GAEA;AACA;AACA;;;wBACA,SAAA,SAAA,MAAA,CAAO,WAAP,EAAoB;AAClB,MAAI,WAAW,CAAC,MAAZ,IAAsB,CAAtB,IAA2B,QAAQ,KAAvC,EAA4C;AAAE,WAAO,IAAP;AAAW;;AACzD,SAAO,KAAK,WAAL,CAAiB,WAAjB,EAA8B,CAA9B,CAAP;AACF;;wBAEA,cAAA,SAAA,WAAA,CAAY,WAAZ,EAAyB,MAAzB,EAAiC;AAC/BA,MAAI,QAAQ,GAAG,KAAK,QAApBA;AAAAA,MAA8B,KAAK,GAAG,KAAK,KAA3CA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,IAAI,CAA1C,EAA6C;AAC3CA,QAAI,KAAA,GAAA,KAAA,CAAJA;AAAAA,QAAW,IAAI,GAAG,QAAQ,CAAC,CAAD,CAAR,GAAc,MAAhCA;AAAAA,QAAwC,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAL,CAAR,GAAkB,MAA/DA;;AACA,SAAKA,IAAI,CAAC,GAAG,CAARA,EAAW,IAAA,GAAA,KAAA,CAAhB,EAAsB,CAAC,GAAG,WAAW,CAAC,MAAtC,EAA8C,CAAC,EAA/C,EAAiD;AAAE,UAAI,IAAI,GAAG,WAAW,CAAC,CAAD,CAAtB,EAA2B;AAC5E,YAAI,IAAI,CAAC,IAAL,GAAY,IAAZ,IAAoB,IAAI,CAAC,EAAL,GAAU,EAAlC,EAAsC;AACpC,UAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,IAAjB;AACC,WAAC,KAAK,KAAK,KAAK,GAAG,EAAb,CAAN,EAAwB,IAAxB,CAA6B,IAA7B;AACF;AACT;AAAO;;AACD,QAAI,CAAC,KAAL,EAAU;AAAE;AAAQ;;AACpB,QAAI,QAAQ,IAAI,KAAK,QAArB,EAA6B;AAAE,MAAA,QAAQ,GAAG,KAAK,QAAL,CAAc,KAAd,EAAX;AAAgC;;AAC/DA,QAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAL,CAAR,CAAgB,WAAhB,CAA4B,KAA5B,EAAmC,IAAI,GAAG,CAA1C,CAAdA;;AACA,QAAI,OAAO,IAAI,KAAf,EAAsB;AACpB,MAAA,QAAQ,CAAC,CAAC,GAAG,CAAL,CAAR,GAAkB,OAAlB;AACD,KAFD,MAEO;AACL,MAAA,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB;AACA,MAAA,CAAC,IAAI,CAAL;AACD;AACF;;AACD,MAAI,KAAK,CAAC,MAAV,EAAgB;AAAE,SAAKA,IAAI9B,GAAC,GAAG,CAAR8B,EAAWoC,MAAAA,GAAAA,KAAAA,CAAhB,EAAsBlE,GAAC,GAAG,WAAW,CAAC,MAAtC,EAA8CA,GAAC,EAA/C,EAAiD;AAAE,UAAIkE,MAAI,GAAG,WAAW,CAAClE,GAAD,CAAtB,EAA2B;AAC9F,aAAK8B,IAAI6B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAK,CAAC,MAA1B,EAAkCA,GAAC,EAAnC,EAAqC;AAAE,cAAI,KAAK,CAACA,GAAD,CAAL,CAAS,EAAT,CAAYO,MAAZ,EAAkB,MAAlB,CAAJ,EAA+B;AACpE,gBAAI,KAAK,IAAI,KAAK,KAAlB,EAAuB;AAAE,cAAA,KAAK,GAAG,KAAK,KAAL,CAAW,KAAX,EAAR;AAA0B;;AACnD,YAAA,KAAK,CAAC,MAAN,CAAaP,GAAC,EAAd,EAAkB,CAAlB;AACR;AAAO;AACP;AAAA;AAAK;;AACD,MAAI,QAAQ,IAAI,KAAK,QAAjB,IAA6B,KAAK,IAAI,KAAK,KAA/C,EAAoD;AAAE,WAAO,IAAP;AAAW;;AACjE,SAAO,KAAK,CAAC,MAAN,IAAgB,QAAQ,CAAC,MAAzB,GAAkC,IAAI,aAAJ,CAAkB,KAAlB,EAAyB,QAAzB,CAAlC,GAAuE,KAA9E;AACF;;wBAEA,WAAA,SAAA,QAAA,CAAS,MAAT,EAAiB,IAAjB,EAAuB;AACrB,MAAI,QAAQ,KAAZ,EAAiB;AAAE,WAAO,IAAP;AAAW;;AAC9B,MAAI,IAAI,CAAC,MAAT,EAAe;AAAE,WAAO,aAAa,CAAC,KAArB;AAA0B;;AAE3C7B,MAAI,KAAJA,EAAW,KAAXA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0C,CAAC,IAAI,CAA/C,EAAgD;AAAE,QAAI,KAAK,QAAL,CAAc,CAAd,KAAoB,MAAxB,EAAgC;AAChF,UAAI,KAAK,QAAL,CAAc,CAAd,KAAoB,MAAxB,EAA8B;AAAE,QAAA,KAAK,GAAG,KAAK,QAAL,CAAc,CAAC,GAAG,CAAlB,CAAR;AAA4B;;AAC5D;AACN;AAAK;;AACDA,MAAI,KAAK,GAAG,MAAM,GAAG,CAArBA;AAAAA,MAAwB,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,OAAL,CAAa,IAAnDA;;AACA,OAAKA,IAAI9B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAK,KAAL,CAAW,MAA/B,EAAuCA,GAAC,EAAxC,EAA4C;AAC1C8B,QAAI,GAAG,GAAG,KAAK,KAAL,CAAW9B,GAAX,CAAV8B;;AACA,QAAI,GAAG,CAAC,IAAJ,GAAW,GAAX,IAAkB,GAAG,CAAC,EAAJ,GAAS,KAA3B,IAAqC,GAAG,CAAC,IAAJ,YAAoB,UAA7D,EAA0E;AACxEA,UAAI,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,GAAG,CAAC,IAApB,IAA4B,KAAvCA;AAAAA,UAA8C,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,GAAG,CAAC,EAAlB,IAAwB,KAA3EA;;AACA,UAAI,IAAI,GAAG,EAAX,EAAa;AAAE,SAAC,KAAK,KAAK,KAAK,GAAG,EAAb,CAAN,EAAwB,IAAxB,CAA6B,GAAG,CAAC,IAAJ,CAAS,IAAT,EAAe,EAAf,CAA7B;AAAgD;AAChE;AACF;;AACD,MAAI,KAAJ,EAAW;AACTA,QAAI,QAAQ,GAAG,IAAI,aAAJ,CAAkB,KAAK,CAAC,IAAN,CAAW,KAAX,CAAlB,CAAfA;AACA,WAAO,KAAK,GAAG,IAAI,eAAJ,CAAoB,CAAC,QAAD,EAAW,KAAX,CAApB,CAAH,GAA4C,QAAxD;AACD;;AACD,SAAO,KAAK,IAAI,KAAhB;AACF;;wBAEA,KAAA,SAAA,EAAA,CAAG,KAAH,EAAU;AACR,MAAI,QAAQ,KAAZ,EAAiB;AAAE,WAAO,IAAP;AAAW;;AAC9B,MAAI,EAAE,KAAK,YAAY,aAAnB,KACA,KAAK,KAAL,CAAW,MAAX,IAAqB,KAAK,CAAC,KAAN,CAAY,MADjC,IAEA,KAAK,QAAL,CAAc,MAAd,IAAwB,KAAK,CAAC,QAAN,CAAe,MAF3C,EAEiD;AAAE,WAAO,KAAP;AAAY;;AAC/D,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,KAAL,CAAW,MAA/B,EAAuC,CAAC,EAAxC,EACJ;AAAM,QAAI,CAAC,KAAK,KAAL,CAAW,CAAX,EAAc,EAAd,CAAiB,KAAK,CAAC,KAAN,CAAY,CAAZ,CAAjB,CAAL,EAAqC;AAAE,aAAO,KAAP;AAAO;AAAK;;AACrD,OAAKA,IAAI9B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0CA,GAAC,IAAI,CAA/C,EACJ;AAAM,QAAI,KAAK,QAAL,CAAcA,GAAd,KAAoB,KAAK,CAAC,QAAN,CAAeA,GAAf,CAApB,IACA,KAAK,QAAL,CAAcA,GAAC,GAAG,CAAlB,KAAwB,KAAK,CAAC,QAAN,CAAeA,GAAC,GAAG,CAAnB,CADxB,IAEA,CAAC,KAAK,QAAL,CAAcA,GAAC,GAAG,CAAlB,EAAqB,EAArB,CAAwB,KAAK,CAAC,QAAN,CAAeA,GAAC,GAAG,CAAnB,CAAxB,CAFL,EAEmD;AAAE,aAAO,KAAP;AAAO;AAAK;;AACnE,SAAO,IAAP;AACF;;wBAEA,SAAA,SAAA,MAAA,CAAO,IAAP,EAAa;AACX,SAAO,aAAa,CAAC,KAAK,WAAL,CAAiB,IAAjB,CAAD,CAApB;AACF;;wBAEA,cAAA,SAAA,WAAA,CAAY,IAAZ,EAAkB;AAChB,MAAI,QAAQ,KAAZ,EAAiB;AAAE,WAAO,IAAP;AAAW;;AAC9B,MAAI,IAAI,CAAC,aAAL,IAAsB,CAAC,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAU,CAAC,EAA3B,CAA3B,EAAyD;AAAE,WAAO,KAAK,KAAZ;AAAiB;;AAC5E8B,MAAI,MAAM,GAAG,EAAbA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,KAAL,CAAW,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,QAAI,EAAE,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,YAA8B,UAAhC,CAAJ,EACN;AAAQ,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,KAAL,CAAW,CAAX,CAAZ;AAA0B;AAC7B;;AACD,SAAO,MAAP;AACF,GAGF;AACA;AACA;AACA;;;AAEAC,IAAM,KAAK,GAAG,IAAI,aAAJ,EAAdA,EAEA;AACA;;AACA,aAAa,CAAC,KAAd,GAAsB,KAAtB;AAEA,aAAa,CAAC,aAAd,GAA8B,aAA9B,EAEA;AACA;AACA;;AACA,IAAM,eAAe,GACnB,SAAA,eAAA,CAAY,OAAZ,EAAqB;AACnB,OAAK,OAAL,GAAe,OAAf;AACF,CAHF;;0BAKE,WAAA,SAAA,QAAA,CAAS,MAAT,EAAiB,KAAjB,EAAwB;AACtB,MAAI,KAAK,CAAC,MAAV,EAAgB;AAAE,WAAO,aAAa,CAAC,KAArB;AAA0B;;AAC5CD,MAAI,KAAK,GAAG,EAAZA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,OAAL,CAAa,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AAC5CA,QAAI,MAAM,GAAG,KAAK,OAAL,CAAa,CAAb,EAAgB,QAAhB,CAAyB,MAAzB,EAAiC,KAAjC,CAAbA;;AACA,QAAI,MAAM,IAAI,KAAd,EAAmB;AAAE;AAAQ;;AAC7B,QAAI,MAAM,YAAY,eAAtB,EAAqC;AAAE,MAAA,KAAK,GAAG,KAAK,CAAC,MAAN,CAAa,MAAM,CAAC,OAApB,CAAR;AAAoC,KAA3E,MACN;AAAW,MAAA,KAAK,CAAC,IAAN,CAAW,MAAX;AAAkB;AACxB;;AACD,SAAO,eAAe,CAAC,IAAhB,CAAqB,KAArB,CAAP;AACF;;0BAEA,KAAA,SAAA,EAAA,CAAG,KAAH,EAAU;AACR,MAAI,EAAE,KAAK,YAAY,eAAnB,KACA,KAAK,CAAC,OAAN,CAAc,MAAd,IAAwB,KAAK,OAAL,CAAa,MADzC,EAC+C;AAAE,WAAO,KAAP;AAAY;;AAC7D,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,OAAL,CAAa,MAAjC,EAAyC,CAAC,EAA1C,EACJ;AAAM,QAAI,CAAC,KAAK,OAAL,CAAa,CAAb,EAAgB,EAAhB,CAAmB,KAAK,CAAC,OAAN,CAAc,CAAd,CAAnB,CAAL,EAAyC;AAAE,aAAO,KAAP;AAAO;AAAK;;AACzD,SAAO,IAAP;AACF;;0BAEA,SAAA,SAAA,MAAA,CAAO,IAAP,EAAa;AACXA,MAAI,MAAJA;AAAAA,MAAY,MAAM,GAAG,IAArBA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,OAAL,CAAa,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AAC5CA,QAAI,MAAM,GAAG,KAAK,OAAL,CAAa,CAAb,EAAgB,WAAhB,CAA4B,IAA5B,CAAbA;;AACA,QAAI,CAAC,MAAM,CAAC,MAAZ,EAAkB;AAAE;AAAQ;;AAC5B,QAAI,CAAC,MAAL,EAAa;AACX,MAAA,MAAM,GAAG,MAAT;AACD,KAFD,MAEO;AACL,UAAI,MAAJ,EAAY;AACV,QAAA,MAAM,GAAG,MAAM,CAAC,KAAP,EAAT;AACA,QAAA,MAAM,GAAG,KAAT;AACD;;AACD,WAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAsC;AAAE,QAAA,MAAM,CAAC,IAAP,CAAY,MAAM,CAAC,CAAD,CAAlB;AAAsB;AAC/D;AACF;;AACD,SAAO,MAAM,GAAG,aAAa,CAAC,MAAM,GAAG,MAAH,GAAY,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAnB,CAAhB,GAAyD,IAAtE;AACF,GAEA;AACA;AACA;;;AACA,eAAA,CAAO,IAAP,GAAO,SAAA,IAAA,CAAK,OAAL,EAAc;AACnB,UAAQ,OAAO,CAAC,MAAhB;AACE,SAAK,CAAL;AAAQ,aAAO,KAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,OAAO,CAAC,CAAD,CAAd;;AACR;AAAS,aAAO,IAAI,eAAJ,CAAoB,OAApB,CAAP;AAHX;AAKF,CANA;;AASF,SAAS,WAAT,CAAqB,WAArB,EAAkC,QAAlC,EAA4C,OAA5C,EAAqD,IAArD,EAA2D,MAA3D,EAAmE,SAAnE,EAA8E,OAA9E,EAAuF;AACrFA,MAAI,QAAQ,GAAG,WAAW,CAAC,KAAZ,EAAfA,CADqF,CAGvF;AACA;;AACEA,MAAI,KAAK,GAAA,UAAI,QAAJ,EAAc,MAAd,EAAsB,QAAtB,EAAgC,MAAhC,EAA2C;AAClD,SAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,IAAI,CAA1C,EAA6C;AAC3CA,UAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAL,CAAlBA;AAAAA,UAA2B,KAAA,GAAA,KAAA,CAA3BA;;AACA,UAAI,GAAG,IAAI,CAAC,CAAR,IAAa,QAAQ,GAAG,GAAG,GAAG,SAAlC,EAA2C;AAAE;AAAQ;;AACrD,UAAI,MAAM,IAAI,QAAQ,CAAC,CAAD,CAAR,GAAc,SAA5B,EAAuC;AACrC,QAAA,QAAQ,CAAC,CAAC,GAAG,CAAL,CAAR,GAAkB,CAAC,CAAnB;AACD,OAFD,MAEO,IAAI,QAAQ,IAAI,MAAZ,KAAuB,KAAK,GAAI,MAAM,GAAG,QAAV,IAAuB,MAAM,GAAG,QAAhC,CAA/B,CAAJ,EAA+E;AACpF,QAAA,QAAQ,CAAC,CAAD,CAAR,IAAe,KAAf;AACA,QAAA,QAAQ,CAAC,CAAC,GAAG,CAAL,CAAR,IAAmB,KAAnB;AACD;AACF;AACL,GAXEA;;AAYA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,IAAR,CAAa,MAAjC,EAAyC,CAAC,EAA1C,EAA4C;AAAE,IAAA,OAAO,CAAC,IAAR,CAAa,CAAb,EAAgB,OAAhB,CAAwB,KAAxB;AAA8B,GAjBS,CAmBvF;AACA;;;AACEA,MAAI,WAAW,GAAG,KAAlBA;;AACA,OAAKA,IAAI9B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqCA,GAAC,IAAI,CAA1C,EAA2C;AAAE,QAAI,QAAQ,CAACA,GAAC,GAAG,CAAL,CAAR,IAAmB,CAAC,CAAxB,EAA2B;AAAA;AACtE8B,UAAI,IAAI,GAAG,OAAO,CAAC,GAAR,CAAY,WAAW,CAAC9B,GAAD,CAAX,GAAiB,SAA7B,CAAX8B;AAAAA,UAAoD,SAAS,GAAG,IAAI,GAAG,MAAvEA;;AACA,UAAI,SAAS,GAAG,CAAZ,IAAiB,SAAS,IAAI,IAAI,CAAC,OAAL,CAAa,IAA/C,EAAqD;AACnD,QAAA,WAAW,GAAG,IAAd;AACA;AACD,OALqE,CAM1E;;;AACIA,UAAI,EAAE,GAAG,OAAO,CAAC,GAAR,CAAY,WAAW,CAAC9B,GAAC,GAAG,CAAL,CAAX,GAAqB,SAAjC,EAA4C,CAAC,CAA7C,CAAT8B;AAAAA,UAA0D,OAAO,GAAG,EAAE,GAAG,MAAzEA;AACJ,UAAA,GAAoC,GAAG,IAAI,CAAC,OAAL,CAAa,SAAb,CAAuB,SAAvB,CAAvC;AAAS,UAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AAAe,UAAA,WAAA,GAAA,GAAA,CAAA,MAAA;AACpBA,UAAI,SAAS,GAAG,IAAI,CAAC,UAAL,CAAgB,KAAhB,CAAhBA;;AACA,UAAI,SAAS,IAAI,WAAW,IAAI,SAA5B,IAAyC,WAAW,GAAG,SAAS,CAAC,QAAxB,IAAoC,OAAjF,EAA0F;AACxFA,YAAI,MAAM,GAAG,QAAQ,CAAC9B,GAAC,GAAG,CAAL,CAAR,CAAgB,QAAhB,CAAyB,OAAzB,EAAkC,SAAlC,EAA6C,IAAI,GAAG,CAApD,EAAuD,WAAW,CAACA,GAAD,CAAX,GAAiB,SAAjB,GAA6B,CAApF,EAAuF,OAAvF,CAAb8B;;AACA,YAAI,MAAM,IAAI,KAAd,EAAqB;AACnB,UAAA,QAAQ,CAAC9B,GAAD,CAAR,GAAc,SAAd;AACA,UAAA,QAAQ,CAACA,GAAC,GAAG,CAAL,CAAR,GAAkB,OAAlB;AACA,UAAA,QAAQ,CAACA,GAAC,GAAG,CAAL,CAAR,GAAkB,MAAlB;AACD,SAJD,MAIO;AACL,UAAA,QAAQ,CAACA,GAAC,GAAG,CAAL,CAAR,GAAkB,CAAC,CAAnB;AACA,UAAA,WAAW,GAAG,IAAd;AACD;AACF,OAVD,MAUO;AACL,QAAA,WAAW,GAAG,IAAd;AACD;AACL;AAAG,GA7CoF,CA+CvF;;;AACE,MAAI,WAAJ,EAAiB;AACf8B,QAAI,WAAW,GAAG,gCAAgC,CAAC,QAAD,EAAW,WAAX,EAAwB,QAAQ,IAAI,EAApC,EAAwC,OAAxC,EACC,MADD,EACS,SADT,EACoB,OADpB,CAAlDA;AAEAA,QAAI,KAAK,GAAG,SAAS,CAAC,WAAD,EAAc,IAAd,EAAoB,CAApB,EAAuB,OAAvB,CAArBA;AACA,IAAA,QAAQ,GAAG,KAAK,CAAC,KAAjB;;AACA,SAAKA,IAAI9B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqCA,GAAC,IAAI,CAA1C,EAA2C;AAAE,UAAI,QAAQ,CAACA,GAAC,GAAG,CAAL,CAAR,GAAkB,CAAtB,EAAyB;AACpE,QAAA,QAAQ,CAAC,MAAT,CAAgBA,GAAhB,EAAmB,CAAnB;AACAA,QAAAA,GAAC,IAAI,CAALA;AACN;AAAK;;AACD,SAAK8B,IAAI9B,GAAC,GAAG,CAAR8B,EAAW,CAAC,GAAG,CAApB,EAAuB9B,GAAC,GAAG,KAAK,CAAC,QAAN,CAAe,MAA1C,EAAkDA,GAAC,IAAI,CAAvD,EAA0D;AACxD8B,UAAIP,MAAI,GAAG,KAAK,CAAC,QAAN,CAAevB,GAAf,CAAX8B;;AACA,aAAO,CAAC,GAAG,QAAQ,CAAC,MAAb,IAAuB,QAAQ,CAAC,CAAD,CAAR,GAAcP,MAA5C,EAAgD;AAAE,QAAA,CAAC,IAAI,CAAL;AAAM;;AACxD,MAAA,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAK,CAAC,QAAN,CAAevB,GAAf,CAAtB,EAAyC,KAAK,CAAC,QAAN,CAAeA,GAAC,GAAG,CAAnB,CAAzC,EAAgE,KAAK,CAAC,QAAN,CAAeA,GAAC,GAAG,CAAnB,CAAhE;AACD;AACF;;AAED,SAAO,IAAI,aAAJ,CAAkB,QAAQ,IAAI,QAAQ,CAAC,IAAT,CAAc,KAAd,CAA9B,EAAoD,QAApD,CAAP;AACD;;AAED,SAAS,SAAT,CAAmB,KAAnB,EAA0B,MAA1B,EAAkC;AAChC,MAAI,CAAC,MAAD,IAAW,CAAC,KAAK,CAAC,MAAtB,EAA4B;AAAE,WAAO,KAAP;AAAY;;AAC1C8B,MAAI,MAAM,GAAG,EAAbA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrCA,QAAI,IAAI,GAAG,KAAK,CAAC,CAAD,CAAhBA;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,IAAI,UAAJ,CAAe,IAAI,CAAC,IAAL,GAAY,MAA3B,EAAmC,IAAI,CAAC,EAAL,GAAU,MAA7C,EAAqD,IAAI,CAAC,IAA1D,CAAZ;AACD;;AACD,SAAO,MAAP;AACD;;AAED,SAAS,gCAAT,CAA0C,QAA1C,EAAoD,WAApD,EAAiE,WAAjE,EAA8E,OAA9E,EAAuF,MAAvF,EAA+F,SAA/F,EAA0G,OAA1G,EAAmH;AACnH;AACE,WAAS,MAAT,CAAgB,GAAhB,EAAqB,SAArB,EAAgC;AAC9B,SAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,KAAJ,CAAU,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AACzCA,UAAI,MAAM,GAAG,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,GAAb,CAAiB,OAAjB,EAA0B,MAA1B,EAAkC,SAAlC,CAAbA;;AACA,UAAI,MAAJ,EAAU;AAAE,QAAA,WAAW,CAAC,IAAZ,CAAiB,MAAjB;AAAwB,OAApC,MACK,IAAI,OAAO,CAAC,QAAZ,EAAoB;AAAE,QAAA,OAAO,CAAC,QAAR,CAAiB,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,IAA9B;AAAmC;AAC/D;;AACD,SAAKA,IAAI9B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,GAAG,CAAC,QAAJ,CAAa,MAAjC,EAAyCA,GAAC,IAAI,CAA9C,EACJ;AAAM,MAAA,MAAM,CAAC,GAAG,CAAC,QAAJ,CAAaA,GAAC,GAAG,CAAjB,CAAD,EAAsB,GAAG,CAAC,QAAJ,CAAaA,GAAb,IAAkB,SAAlB,GAA8B,CAApD,CAAN;AAA4D;AAC/D;;AACD,OAAK8B,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,IAAI,CAA1C,EAA2C;AAAE,QAAI,QAAQ,CAAC,CAAC,GAAG,CAAL,CAAR,IAAmB,CAAC,CAAxB,EAC/C;AAAI,MAAA,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAL,CAAT,EAAkB,WAAW,CAAC,CAAD,CAAX,GAAiB,SAAjB,GAA6B,CAA/C,CAAN;AAAsD;AAAC;;AAEzD,SAAO,WAAP;AACD;;AAED,SAAS,gBAAT,CAA0B,KAA1B,EAAiC,IAAjC,EAAuC,MAAvC,EAA+C;AAC7C,MAAI,IAAI,CAAC,MAAT,EAAe;AAAE,WAAO,IAAP;AAAW;;AAC5BA,MAAI,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,QAAxBA;AAAAA,MAAkC,KAAK,GAAG,IAA1CA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAARA,EAAW,IAAA,GAAA,KAAA,CAAhB,EAAsB,CAAC,GAAG,KAAK,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,QAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAD,CAAb,KAAqB,IAAI,CAAC,IAAL,GAAY,MAAjC,IAA2C,IAAI,CAAC,EAAL,GAAU,GAAzD,EAA8D;AAC3D,OAAC,KAAK,KAAK,KAAK,GAAG,EAAb,CAAN,EAAwB,IAAxB,CAA6B,IAA7B;AACD,MAAA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3BA,MAAI,MAAM,GAAG,EAAbA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EACF;AAAI,QAAI,KAAK,CAAC,CAAD,CAAL,IAAY,IAAhB,EAAoB;AAAE,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,CAAC,CAAD,CAAjB;AAAoB;AAAC;;AAC7C,SAAO,MAAP;AACD,EAED;AACA;AACA;AACA;AACA;;;AACA,SAAS,SAAT,CAAmB,KAAnB,EAA0B,IAA1B,EAAgC,MAAhC,EAAwC,OAAxC,EAAiD;AAC/CA,MAAI,QAAQ,GAAG,EAAfA;AAAAA,MAAmB,QAAQ,GAAG,KAA9BA;AACA,EAAA,IAAI,CAAC,OAAL,CAAY,UAAE,SAAF,EAAa,UAAb,EAA4B;AACtCA,QAAI,KAAK,GAAG,gBAAgB,CAAC,KAAD,EAAQ,SAAR,EAAmB,UAAU,GAAG,MAAhC,CAA5BA;;AACA,QAAI,KAAJ,EAAW;AACT,MAAA,QAAQ,GAAG,IAAX;AACAA,UAAI,OAAO,GAAG,SAAS,CAAC,KAAD,EAAQ,SAAR,EAAmB,MAAM,GAAG,UAAT,GAAsB,CAAzC,EAA4C,OAA5C,CAAvBA;;AACA,UAAI,OAAO,IAAI,KAAf,EACN;AAAQ,QAAA,QAAQ,CAAC,IAAT,CAAc,UAAd,EAA0B,UAAU,GAAG,SAAS,CAAC,QAAjD,EAA2D,OAA3D;AAAmE;AACtE;AACF,GARD;AASAA,MAAI,MAAM,GAAG,SAAS,CAAC,QAAQ,GAAG,YAAY,CAAC,KAAD,CAAf,GAAyB,KAAlC,EAAyC,CAAC,MAA1C,CAAT,CAA2D,IAA3D,CAAgE,KAAhE,CAAbA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAsC;AAAE,QAAI,CAAC,MAAM,CAAC,CAAD,CAAN,CAAU,IAAV,CAAe,KAAf,CAAqB,IAArB,EAA2B,MAAM,CAAC,CAAD,CAAjC,CAAL,EAA4C;AAClF,UAAI,OAAO,CAAC,QAAZ,EAAoB;AAAE,QAAA,OAAO,CAAC,QAAR,CAAiB,MAAM,CAAC,CAAD,CAAN,CAAU,IAA3B;AAAgC;;AACtD,MAAA,MAAM,CAAC,MAAP,CAAc,CAAC,EAAf,EAAmB,CAAnB;AACJ;AAAG;;AACD,SAAO,MAAM,CAAC,MAAP,IAAiB,QAAQ,CAAC,MAA1B,GAAmC,IAAI,aAAJ,CAAkB,MAAlB,EAA0B,QAA1B,CAAnC,GAAyE,KAAhF;AACD,EAED;AACA;AACA;AACA;;;AACA,SAAS,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqB;AACnB,SAAO,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,IAAX,IAAmB,CAAC,CAAC,EAAF,GAAO,CAAC,CAAC,EAAnC;AACD,EAED;AACA;AACA;AACA;AACA;;;AACA,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC5BA,MAAI,OAAO,GAAG,KAAdA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAAR,GAAiB,CAArC,EAAwC,CAAC,EAAzC,EAA6C;AAC3CA,QAAI,IAAI,GAAG,OAAO,CAAC,CAAD,CAAlBA;;AACA,QAAI,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,EAAtB,EAAwB;AAAE,WAAKA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAjB,EAAoB,CAAC,GAAG,OAAO,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AACrEA,YAAI,IAAI,GAAG,OAAO,CAAC,CAAD,CAAlBA;;AACA,YAAI,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,IAAtB,EAA4B;AAC1B,cAAI,IAAI,CAAC,EAAL,IAAW,IAAI,CAAC,EAApB,EAAwB;AACtB,gBAAI,OAAO,IAAI,KAAf,EAAoB;AAAE,cAAA,OAAO,GAAG,KAAK,CAAC,KAAN,EAAV;AAAuB,aADvB,CAEhC;AACA;;;AACU,YAAA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,IAAf,EAAqB,IAAI,CAAC,EAA1B,CAAb;AACA,YAAA,WAAW,CAAC,OAAD,EAAU,CAAC,GAAG,CAAd,EAAiB,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,EAAf,EAAmB,IAAI,CAAC,EAAxB,CAAjB,CAAX;AACD;;AACD;AACD,SATD,MASO;AACL,cAAI,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,EAArB,EAAyB;AACvB,gBAAI,OAAO,IAAI,KAAf,EAAoB;AAAE,cAAA,OAAO,GAAG,KAAK,CAAC,KAAN,EAAV;AAAuB,aADtB,CAEjC;AACA;;;AACU,YAAA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,IAAf,EAAqB,IAAI,CAAC,IAA1B,CAAb;AACA,YAAA,WAAW,CAAC,OAAD,EAAU,CAAV,EAAa,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,IAAf,EAAqB,IAAI,CAAC,EAA1B,CAAb,CAAX;AACD;;AACD;AACD;AACP;AAAK;AACF;;AACD,SAAO,OAAP;AACD;;AAED,SAAS,WAAT,CAAqB,KAArB,EAA4B,CAA5B,EAA+B,IAA/B,EAAqC;AACnC,SAAO,CAAC,GAAG,KAAK,CAAC,MAAV,IAAoB,KAAK,CAAC,IAAD,EAAO,KAAK,CAAC,CAAD,CAAZ,CAAL,GAAwB,CAAnD,EAAoD;AAAE,IAAA,CAAC;AAAE;;AACzD,EAAA,KAAK,CAAC,MAAN,CAAa,CAAb,EAAgB,CAAhB,EAAmB,IAAnB;AACD,EAED;AACA;;;AACO,SAAS,eAAT,CAAyB,IAAzB,EAA+B;AACpCA,MAAI,KAAK,GAAG,EAAZA;AACA,EAAA,IAAI,CAAC,QAAL,CAAc,aAAd,EAA2B,UAAE,CAAF,EAAO;AAChCA,QAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,KAAN,CAAdA;;AACA,QAAI,MAAM,IAAI,MAAM,IAAI,KAAxB,EAA6B;AAAE,MAAA,KAAK,CAAC,IAAN,CAAW,MAAX;AAAkB;AAClD,GAHD;;AAIA,MAAI,IAAI,CAAC,aAAT,EACF;AAAI,IAAA,KAAK,CAAC,IAAN,CAAW,aAAa,CAAC,MAAd,CAAqB,IAAI,CAAC,KAAL,CAAW,GAAhC,EAAqC,CAAC,IAAI,CAAC,aAAL,CAAmB,IAApB,CAArC,CAAX;AAA2E;;AAC7E,SAAO,eAAe,CAAC,IAAhB,CAAqB,KAArB,CAAP;AACF,EC3pBA;AACA;AACA;;;IACa,UAAU,GAOrB,SAAA,UAAA,CAAY,KAAZ,EAAmB,KAAnB,EAA0B;AACxB,OAAK,MAAL,GAAc,KAAd,CADwB,CAE5B;AACA;;AACI,OAAK,KAAL,GAAa,KAAK,CAAC,KAAnB;AAEA,OAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAhB;AAEA,OAAK,KAAL,GAAa,IAAb;AACA,OAAK,OAAL,GAAe,KAAf,CATwB,CAU5B;;AACI,OAAK,WAAL,GAAmB,IAAnB,CAXwB,CAa5B;AACA;AACA;;AACI,OAAK,GAAL,GAAY,KAAK,IAAI,KAAK,CAAC,KAAhB,IAA0B,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAArC;;AACA,MAAI,KAAJ,EAAW;AACT,QAAI,KAAK,CAAC,WAAV,EAAqB;AAAE,MAAA,KAAK,CAAC,WAAN,CAAkB,KAAK,GAAvB;AAA2B,KAAlD,MACK,IAAI,KAAK,CAAC,KAAV,EAAe;AAAE,MAAA,KAAK,CAAC,KAAK,GAAN,CAAL;AAAe,KAAhC,MACA,IAAI,KAAK,CAAC,KAAV,EAAe;AAAE,WAAK,OAAL,GAAe,IAAf;AAAmB;AAC1C,GArBuB,CAuB5B;AACA;;;AACI,OAAK,QAAL,GAAgB,WAAW,CAAC,IAAD,CAA3B;AACA,OAAK,UAAL,GAAkB,IAAlB;AACA,OAAK,aAAL,GAAqB,IAArB;AACA,EAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA,OAAK,SAAL,GAAiB,cAAc,CAAC,IAAD,CAA/B;AACA,OAAK,OAAL,GAAe,WAAW,CAAC,KAAK,KAAL,CAAW,GAAZ,EAAiB,cAAc,CAAC,IAAD,CAA/B,EAAuC,eAAe,CAAC,IAAD,CAAtD,EAA8D,KAAK,GAAnE,EAAwE,IAAxE,CAA1B;AAEA,OAAK,oBAAL,GAA4B,IAA5B,CAhCwB,CAiC5B;AACA;AACA;AACA;;AACI,OAAK,QAAL,GAAgB,IAAhB;AAEA,EAAA,SAAS,CAAC,IAAD,CAAT;AAEA,OAAK,WAAL,GAAmB,EAAnB;AACA,OAAK,iBAAL;AACF;;;;;;;;;;GAEA;AACA;AACA;AACA;AAEA;AACA;;AACAG,oBAAAA,CAAI,KAAJA,CAAI,GAAJA,GAAI,YAAQ;AACV,MAAI,KAAK,MAAL,CAAY,KAAZ,IAAqB,KAAK,KAA9B,EAAqC;AACnCH,QAAI,IAAI,GAAG,KAAK,MAAhBA;AACA,SAAK,MAAL,GAAc,EAAd;;AACA,SAAKA,IAAI,IAAT,IAAiB,IAAjB,EAAqB;AAAE,WAAK,MAAL,CAAY,IAAZ,IAAoB,IAAI,CAAC,IAAD,CAAxB;AAA8B;;AACrD,SAAK,MAAL,CAAY,KAAZ,GAAoB,KAAK,KAAzB;AACD;;AACD,SAAO,KAAK,MAAZ;AACF,CARAG,EAUA;AACA;AACA;;;qBACA,SAAA,SAAA,MAAA,CAAO,KAAP,EAAc;AACZ,MAAI,KAAK,CAAC,eAAN,IAAyB,KAAK,MAAL,CAAY,eAAzC,EAAwD;AAAE,IAAA,eAAe,CAAC,IAAD,CAAf;AAAqB;;AAC/E,OAAK,MAAL,GAAc,KAAd;AACA,OAAK,gBAAL,CAAsB,KAAK,CAAC,KAA5B,EAAmC,IAAnC;AACF,GAEA;AACA;AACA;AACA;;;qBACA,WAAA,SAAA,QAAA,CAAS,KAAT,EAAgB;AACdH,MAAI,OAAO,GAAG,EAAdA;;AACA,OAAKA,IAAI,IAAT,IAAiB,KAAK,MAAtB,EAA4B;AAAE,IAAA,OAAO,CAAC,IAAD,CAAP,GAAgB,KAAK,MAAL,CAAY,IAAZ,CAAhB;AAAiC;;AAC/D,EAAA,OAAO,CAAC,KAAR,GAAgB,KAAK,KAArB;;AACA,OAAKA,IAAIe,MAAT,IAAiB,KAAjB,EAAsB;AAAE,IAAA,OAAO,CAACA,MAAD,CAAP,GAAgB,KAAK,CAACA,MAAD,CAArB;AAA2B;;AACnD,OAAK,MAAL,CAAY,OAAZ;AACF,GAEA;AACA;AACA;;;qBACA,cAAA,SAAA,WAAA,CAAY,KAAZ,EAAmB;AACjB,OAAK,gBAAL,CAAsB,KAAtB,EAA6B,KAAK,KAAL,CAAW,OAAX,IAAsB,KAAK,CAAC,OAAzD;AACF;;qBAEA,mBAAA,SAAA,gBAAA,CAAiB,KAAjB,EAAwB,YAAxB,EAAsC;;AACpCf,MAAI,IAAI,GAAG,KAAK,KAAhBA;AAAAA,MAAuB,MAAM,GAAG,KAAhCA;AAAAA,MAAuC,SAAS,GAAG,KAAnDA,CADoC,CAExC;AACA;;AACI,MAAI,KAAK,CAAC,WAAN,IAAqB,KAAK,SAA9B,EAAyC;AACvC,IAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,IAAA,SAAS,GAAG,IAAZ;AACD;;AACD,OAAK,KAAL,GAAa,KAAb;;AACA,MAAI,YAAJ,EAAkB;AAChBA,QAAI,SAAS,GAAG,cAAc,CAAC,IAAD,CAA9BA;;AACA,QAAI,gBAAgB,CAAC,SAAD,EAAY,KAAK,SAAjB,CAApB,EAAiD;AAC/C,WAAK,SAAL,GAAiB,SAAjB;AACA,MAAA,MAAM,GAAG,IAAT;AACD;;AACD,IAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AAED,OAAK,QAAL,GAAgB,WAAW,CAAC,IAAD,CAA3B;AACA,EAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAA,MAAI,SAAS,GAAG,eAAe,CAAC,IAAD,CAA/BA;AAAAA,MAAuC,SAAS,GAAG,cAAc,CAAC,IAAD,CAAjEA;AAEAA,MAAI,MAAM,GAAG,YAAY,GAAG,OAAH,GACnB,KAAK,CAAC,iBAAN,GAA0B,IAAI,CAAC,iBAA/B,GAAmD,cAAnD,GAAoE,UAD1EA;AAEAA,MAAI,SAAS,GAAG,MAAM,IAAI,CAAC,KAAK,OAAL,CAAa,WAAb,CAAyB,KAAK,CAAC,GAA/B,EAAoC,SAApC,EAA+C,SAA/C,CAA3BA;;AACA,MAAI,SAAS,IAAI,CAAC,KAAK,CAAC,SAAN,CAAgB,EAAhB,CAAmB,IAAI,CAAC,SAAxB,CAAlB,EAAoD;AAAE,IAAA,SAAS,GAAG,IAAZ;AAAgB;;AACtEA,MAAI,YAAY,GAAG,MAAM,IAAI,UAAV,IAAwB,SAAxB,IAAqC,KAAK,GAAL,CAAS,KAAT,CAAe,cAAf,IAAiC,IAAtE,IAA8E,cAAc,CAAC,IAAD,CAA/GA;;AAEA,MAAI,SAAJ,EAAe;AACb,SAAK,WAAL,CAAiB,IAAjB,GADa,CAEnB;AACA;AACA;AACA;AACA;;AACMA,QAAI,cAAc,GAAG,SAAS,KAAKqB,MAAO,CAAC,EAARA,IAAcA,MAAO,CAAC,MAA3B,CAAT,IAA+C,CAAC,KAAK,SAArD,IACjB,CAAC,IAAI,CAAC,SAAL,CAAe,KADC,IACQ,CAAC,KAAK,CAAC,SAAN,CAAgB,KADzB,IACkC,uBAAuB,CAAC,IAAI,CAAC,SAAN,EAAiB,KAAK,CAAC,SAAvB,CAD9ErB;;AAEA,QAAI,SAAJ,EAAe;AACrB;AACA;AACA;AACA;AACQA,UAAI,YAAY,GAAGqB,MAAO,CAAC,MAARA,GAAkB,KAAK,WAAL,GAAmB,KAAK,IAAL,CAAU,YAAV,GAAyB,SAA9DA,GAA2E,IAA9FrB;;AACA,UAAI,MAAM,IAAI,CAAC,KAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,CAAC,GAA1B,EAA+B,SAA/B,EAA0C,SAA1C,EAAqD,IAArD,CAAf,EAA2E;AACzE,aAAK,OAAL,CAAa,eAAb,CAA6B,EAA7B;AACA,aAAK,OAAL,CAAa,OAAb;AACA,aAAK,OAAL,GAAe,WAAW,CAAC,KAAK,CAAC,GAAP,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,KAAK,GAAvC,EAA4C,IAA5C,CAA1B;AACD;;AACD,UAAI,YAAY,IAAI,CAAC,KAAK,WAA1B,EAAqC;AAAE,QAAA,cAAc,GAAG,IAAjB;AAAqB;AAC7D,KArBY,CAsBnB;AACA;AACA;AACA;;;AACM,QAAI,cAAc,IACd,EAAE,KAAK,SAAL,IAAkB,KAAK,WAAL,CAAiB,gBAAjB,CAAkC,EAAlC,CAAqC,KAAK,IAAL,CAAU,YAAV,EAArC,CAAlB,IAAoF,kBAAkB,CAAC,IAAD,CAAxG,CADJ,EACqH;AACnH,MAAA,cAAc,CAAC,IAAD,EAAO,cAAP,CAAd;AACD,KAHD,MAGO;AACL,MAAA,iBAAiB,CAAC,IAAD,EAAO,KAAK,CAAC,SAAb,CAAjB;AACA,WAAK,WAAL,CAAiB,eAAjB;AACD;;AACD,SAAK,WAAL,CAAiB,KAAjB;AACD;;AAED,OAAK,iBAAL,CAAuB,IAAvB;;AAEA,MAAI,MAAM,IAAI,OAAd,EAAuB;AACrB,SAAK,GAAL,CAAS,SAAT,GAAqB,CAArB;AACD,GAFD,MAEO,IAAI,MAAM,IAAI,cAAd,EAA8B;AACnCA,QAAI,QAAQ,GAAG,KAAK,IAAL,CAAU,YAAV,GAAyB,SAAxCA;AACA,QAAI,KAAK,QAAL,CAAc,yBAAd,EAAuC,UAAE,CAAF,EAAE;AAAA,aAAK,CAAC,CAACa,MAAD,CAAN;AAAY,KAArD,CAAJ,EACE,CADF,CACI;AADJ,SAEK,IAAI,KAAK,CAAC,SAAN,YAA2B,+BAA/B,EACX;AAAQ,QAAA,kBAAkB,CAAC,IAAD,EAAO,KAAK,OAAL,CAAa,WAAb,CAAyB,KAAK,CAAC,SAAN,CAAgB,IAAzC,EAA+C,qBAA/C,EAAP,EAA+E,QAA/E,CAAlB;AAA0G,OADvG,MAGX;AAAQ,QAAA,kBAAkB,CAAC,IAAD,EAAO,KAAK,WAAL,CAAiB,KAAK,CAAC,SAAN,CAAgB,IAAjC,EAAuC,CAAvC,CAAP,EAAkD,QAAlD,CAAlB;AAA6E;AAChF,GARM,MAQA,IAAI,YAAJ,EAAkB;AACvB,IAAA,cAAc,CAAC,YAAD,CAAd;AACD;AACH;;qBAEA,qBAAA,SAAA,kBAAA,GAAqB;AACnBb,MAAI,IAAJA;;AACA,SAAO,IAAI,GAAG,KAAK,WAAL,CAAiB,GAAjB,EAAd,EAAoC;AAAE,QAAI,IAAI,CAAC,OAAT,EAAgB;AAAE,MAAA,IAAI,CAAC,OAAL;AAAY;AAAE;AACxE;;qBAEA,oBAAA,SAAA,iBAAA,CAAkB,SAAlB,EAA6B;AAC3B,MAAI,CAAC,SAAD,IAAc,SAAS,CAAC,OAAV,IAAqB,KAAK,KAAL,CAAW,OAAlD,EAA2D;AACzD,SAAK,kBAAL;;AACA,SAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAvC,EAA+C,CAAC,EAAhD,EAAoD;AAClDA,UAAI,MAAM,GAAG,KAAK,KAAL,CAAW,OAAX,CAAmB,CAAnB,CAAbA;;AACA,UAAI,MAAM,CAAC,IAAP,CAAY,IAAhB,EAAoB;AAAE,aAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,IAAjB,CAAtB;AAA6C;AACpE;AACF,GAND,MAMO;AACL,SAAKA,IAAI9B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAK,WAAL,CAAiB,MAArC,EAA6CA,GAAC,EAA9C,EAAkD;AAChD8B,UAAI,UAAU,GAAG,KAAK,WAAL,CAAiB9B,GAAjB,CAAjB8B;;AACA,UAAI,UAAU,CAAC,MAAf,EAAqB;AAAE,QAAA,UAAU,CAAC,MAAX,CAAkB,IAAlB,EAAwB,SAAxB;AAAkC;AAC1D;AACF;AACH,GAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;qBACA,WAAA,SAAA,QAAA,CAAS,QAAT,EAAmB,CAAnB,EAAsB;AACpBA,MAAI,IAAI,GAAG,KAAK,MAAL,IAAe,KAAK,MAAL,CAAY,QAAZ,CAA1BA;AAAAA,MAAiD,KAAjDA;;AACA,MAAI,IAAI,IAAI,IAAR,KAAiB,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAD,CAAJ,GAAa,IAAvC,CAAJ,EAAgD;AAAE,WAAO,KAAP;AAAY;;AAC9DA,MAAI,OAAO,GAAG,KAAK,KAAL,CAAW,OAAzBA;;AACA,MAAI,OAAJ,EAAW;AAAE,SAAKA,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACpDA,UAAIF,MAAI,GAAG,OAAO,CAAC,CAAD,CAAP,CAAW,KAAX,CAAiB,QAAjB,CAAXE;;AACA,UAAIF,MAAI,IAAI,IAARA,KAAiB,KAAK,GAAG,CAAC,GAAG,CAAC,CAACA,MAAD,CAAJ,GAAaA,MAAvCA,CAAJ,EAAgD;AAAE,eAAO,KAAP;AAAY;AACpE;AAAK;AACH,GAEA;AACA;;;qBACA,WAAA,SAAA,QAAA,GAAW;AACT,SAAO,KAAK,IAAL,CAAU,aAAV,IAA2B,KAAK,GAAvC;AACF,GAEA;AACA;;;qBACA,QAAA,SAAA,KAAA,GAAQ;AACN,OAAK,WAAL,CAAiB,IAAjB;;AACA,MAAI,KAAK,QAAT,EAAiB;AAAE,IAAA,kBAAkB,CAAC,KAAK,GAAN,CAAlB;AAA4B;;AAC/C,EAAA,cAAc,CAAC,IAAD,CAAd;AACA,OAAK,WAAL,CAAiB,KAAjB;AACF,GAEA;AACA;AACA;AACA;AACA;;;AACAK,oBAAAA,CAAI,IAAJA,CAAI,GAAJA,GAAI,YAAO;AACTH,MAAI,MAAM,GAAG,KAAK,KAAlBA;;AACA,MAAI,MAAM,IAAI,IAAd,EAAkB;AAAE,SAAKA,IAAI,MAAM,GAAG,KAAK,GAAL,CAAS,UAA3B,EAAuC,MAAvC,EAA+C,MAAM,GAAG,MAAM,CAAC,UAA/D,EAA2E;AAC7F,UAAI,MAAM,CAAC,QAAP,IAAmB,CAAnB,IAAyB,MAAM,CAAC,QAAP,IAAmB,EAAnB,IAAyB,MAAM,CAAC,IAA7D,EAAoE;AAClE,YAAI,CAAC,MAAM,CAAC,YAAZ,EAAwB;AAAE,UAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,YAA9B,GAA0C,YAAA;AAAA,mBAAS,QAAQ,CAAC,YAAT,EAAT;AAA8B,WAAxE;AAA0E;;AACpG,eAAO,KAAK,KAAL,GAAa,MAApB;AACD;AACP;AAAK;;AACD,SAAO,MAAM,IAAI,QAAjB;AACF,CATAG,EAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;qBACA,cAAA,SAAA,aAAA,CAAY,MAAZ,EAAoB;AAClB,SAAO,WAAW,CAAC,IAAD,EAAO,MAAP,CAAlB;AACF,GAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;qBACA,cAAA,SAAA,aAAA,CAAY,GAAZ,EAAiB,IAAjB,EAA2B;2BAAN,GAAG;AACtB,SAAO,WAAW,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,CAAlB;AACF,GAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;qBACA,WAAA,SAAA,QAAA,CAAS,GAAT,EAAc,IAAd,EAAwB;2BAAN,GAAG;AACnB,SAAO,KAAK,OAAL,CAAa,UAAb,CAAwB,GAAxB,EAA6B,IAA7B,CAAP;AACF,GAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;qBACA,UAAA,SAAA,OAAA,CAAQ,GAAR,EAAa;AACXH,MAAI,IAAI,GAAG,KAAK,OAAL,CAAa,MAAb,CAAoB,GAApB,CAAXA;AACA,SAAO,IAAI,GAAG,IAAI,CAAC,OAAR,GAAkB,IAA7B;AACF,GAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;qBACA,WAAA,SAAA,QAAA,CAAS,IAAT,EAAe,MAAf,EAAuB,IAAvB,EAAkC;2BAAP,GAAG,CAAC;AAC7BA,MAAI,GAAG,GAAG,KAAK,OAAL,CAAa,UAAb,CAAwB,IAAxB,EAA8B,MAA9B,EAAsC,IAAtC,CAAVA;;AACA,MAAI,GAAG,IAAI,IAAX,EAAe;AAAE,UAAM,IAAI,UAAJ,CAAe,oCAAf,CAAN;AAA0D;;AAC3E,SAAO,GAAP;AACF,GAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;qBACA,iBAAA,SAAA,gBAAA,CAAe,GAAf,EAAoB,KAApB,EAA2B;AACzB,SAAO,cAAc,CAAC,IAAD,EAAO,KAAK,IAAI,KAAK,KAArB,EAA4B,GAA5B,CAArB;AACF,GAEA;AACA;AACA;;;qBACA,UAAA,SAAA,OAAA,GAAU;AACR,MAAI,CAAC,KAAK,OAAV,EAAiB;AAAE;AAAM;;AACzB,EAAA,YAAY,CAAC,IAAD,CAAZ;AACA,OAAK,kBAAL;;AACA,MAAI,KAAK,OAAT,EAAkB;AAChB,SAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,KAAL,CAAW,GAA/B,EAAoC,EAApC,EAAwC,eAAe,CAAC,IAAD,CAAvD,EAA+D,IAA/D;AACA,SAAK,GAAL,CAAS,WAAT,GAAuB,EAAvB;AACD,GAHD,MAGO,IAAI,KAAK,GAAL,CAAS,UAAb,EAAyB;AAC9B,SAAK,GAAL,CAAS,UAAT,CAAoB,WAApB,CAAgC,KAAK,GAArC;AACD;;AACD,OAAK,OAAL,CAAa,OAAb;AACA,OAAK,OAAL,GAAe,IAAf;AACF,GAEA;;;qBACA,gBAAA,SAAA,eAAA,CAAc,KAAd,EAAqB;AACnB,SAAO,aAAa,CAAC,IAAD,EAAO,KAAP,CAApB;AACF,GAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;qBACA,WAAA,SAAA,QAAA,CAAS,EAAT,EAAa;AACXA,MAAI,mBAAmB,GAAG,KAAK,MAAL,CAAY,mBAAtCA;;AACA,MAAI,mBAAJ,EAAuB;AAAE,IAAA,mBAAmB,CAAC,IAApB,CAAyB,IAAzB,EAA+B,EAA/B;AAAkC,GAA3D,MACJ;AAAS,SAAK,WAAL,CAAiB,KAAK,KAAL,CAAW,KAAX,CAAiB,EAAjB,CAAjB;AAAsC;AAC7C;;;;AAGF,SAAS,cAAT,CAAwB,IAAxB,EAA8B;AAC5BA,MAAI,KAAK,GAAG,MAAM,CAAC,MAAP,CAAc,IAAd,CAAZA;AACA,EAAA,KAAK,CAAC,KAAN,GAAc,aAAd;AACA,EAAA,KAAK,CAAC,eAAN,GAAwB,MAAM,CAAC,IAAI,CAAC,QAAN,CAA9B;AAEA,EAAA,IAAI,CAAC,QAAL,CAAc,YAAd,EAA0B,UAAE,KAAF,EAAW;AACnC,QAAI,OAAO,KAAP,IAAgB,UAApB,EAA8B;AAAE,MAAA,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAN,CAAb;AAAyB;;AACzD,QAAI,KAAJ,EAAS;AAAE,WAAKA,IAAI,IAAT,IAAiB,KAAjB,EAAwB;AACjC,YAAI,IAAI,IAAI,OAAZ,EACN;AAAQ,UAAA,KAAK,CAAC,KAAN,IAAe,MAAM,KAAK,CAAC,IAAD,CAA1B;AAAgC,SADlC,MAEK,IAAI,CAAC,KAAK,CAAC,IAAD,CAAN,IAAgB,IAAI,IAAI,iBAAxB,IAA6C,IAAI,IAAI,UAAzD,EACX;AAAQ,UAAA,KAAK,CAAC,IAAD,CAAL,GAAc,MAAM,CAAC,KAAK,CAAC,IAAD,CAAN,CAApB;AAAiC;AACzC;AAAK;AACF,GARD;AAUA,SAAO,CAAC,UAAU,CAAC,IAAX,CAAgB,CAAhB,EAAmB,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,OAAf,CAAuB,IAA1C,EAAgD,KAAhD,CAAD,CAAP;AACD;;AAED,SAAS,mBAAT,CAA6B,IAA7B,EAAmC;AACjC,MAAI,IAAI,CAAC,UAAT,EAAqB;AACnBA,QAAI,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAVA;AACA,IAAA,GAAG,CAAC,YAAJ,CAAiB,kBAAjB,EAAqC,MAArC;AACA,IAAA,IAAI,CAAC,aAAL,GAAqB;AAAA,MAAA,GAAA,EAAC,GAAD;AAAM,MAAA,IAAI,EAAE,UAAU,CAAC,MAAX,CAAkB,IAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,IAAvC,EAA6C,GAA7C,EAAkD;AAAC,QAAA,GAAG,EAAE,IAAN;AAAY,QAAA,KAAK,EAAE,IAAI,CAAC;AAAxB,OAAlD;AAAZ,KAArB;AACD,GAJD,MAIO;AACL,IAAA,IAAI,CAAC,aAAL,GAAqB,IAArB;AACD;AACF;;AAED,SAAS,WAAT,CAAqB,IAArB,EAA2B;AACzB,SAAO,CAAC,IAAI,CAAC,QAAL,CAAc,UAAd,EAAwB,UAAE,KAAF,EAAE;AAAA,WAAS,KAAK,CAAC,IAAI,CAAC,KAAN,CAAL,KAAsB,KAA/B;AAAoC,GAA9D,CAAR;AACD;;AAED,SAAS,uBAAT,CAAiC,IAAjC,EAAuC,IAAvC,EAA6C;AAC3CA,MAAI,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,OAAL,CAAa,WAAb,CAAyB,IAAI,CAAC,IAA9B,CAAT,EAA8C,IAAI,CAAC,OAAL,CAAa,WAAb,CAAyB,IAAI,CAAC,IAA9B,CAA9C,CAAZA;AACA,SAAO,IAAI,CAAC,OAAL,CAAa,KAAb,CAAmB,KAAnB,KAA6B,IAAI,CAAC,OAAL,CAAa,KAAb,CAAmB,KAAnB,CAApC;AACD;;AAED,SAAS,cAAT,CAAwB,IAAxB,EAA8B;AAC5BA,MAAI,MAAM,GAAG,EAAbA;AACA,EAAA,IAAI,CAAC,QAAL,CAAc,WAAd,EAAyB,UAAE,GAAF,EAAS;AAChC,SAAKA,IAAI,IAAT,IAAiB,GAAjB,EAAoB;AAAE,UAAI,CAAC,MAAM,CAAC,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,MAArC,EAA6C,IAA7C,CAAL,EAC1B;AAAM,QAAA,MAAM,CAAC,IAAD,CAAN,GAAe,GAAG,CAAC,IAAD,CAAlB;AAAuB;AAAC;AAC3B,GAHD;AAIA,SAAO,MAAP;AACD;;AAED,SAAS,gBAAT,CAA0B,CAA1B,EAA6B,CAA7B,EAAgC;AAC9BA,MAAI,EAAE,GAAG,CAATA;AAAAA,MAAY,EAAE,GAAG,CAAjBA;;AACA,OAAKA,IAAI,IAAT,IAAiB,CAAjB,EAAoB;AAClB,QAAI,CAAC,CAAC,IAAD,CAAD,IAAW,CAAC,CAAC,IAAD,CAAhB,EAAsB;AAAE,aAAO,IAAP;AAAW;;AACnC,IAAA,EAAE;AACH;;AACD,OAAKA,IAAI,CAAT,IAAc,CAAd,EAAe;AAAE,IAAA,EAAE;AAAE;;AACrB,SAAO,EAAE,IAAI,EAAbfile":"myEditor.e31bb0bc.js","sourceRoot":"..","sourcesContent":["// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nvar orderedmap = OrderedMap;\n\nexport default orderedmap;\n","export function findDiffStart(a, b, pos) {\n  for (let i = 0;; i++) {\n    if (i == a.childCount || i == b.childCount)\n      return a.childCount == b.childCount ? null : pos\n\n    let childA = a.child(i), childB = b.child(i)\n    if (childA == childB) { pos += childA.nodeSize; continue }\n\n    if (!childA.sameMarkup(childB)) return pos\n\n    if (childA.isText && childA.text != childB.text) {\n      for (let j = 0; childA.text[j] == childB.text[j]; j++)\n        pos++\n      return pos\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffStart(childA.content, childB.content, pos + 1)\n      if (inner != null) return inner\n    }\n    pos += childA.nodeSize\n  }\n}\n\nexport function findDiffEnd(a, b, posA, posB) {\n  for (let iA = a.childCount, iB = b.childCount;;) {\n    if (iA == 0 || iB == 0)\n      return iA == iB ? null : {a: posA, b: posB}\n\n    let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize\n    if (childA == childB) {\n      posA -= size; posB -= size\n      continue\n    }\n\n    if (!childA.sameMarkup(childB)) return {a: posA, b: posB}\n\n    if (childA.isText && childA.text != childB.text) {\n      let same = 0, minSize = Math.min(childA.text.length, childB.text.length)\n      while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n        same++; posA--; posB--\n      }\n      return {a: posA, b: posB}\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1)\n      if (inner) return inner\n    }\n    posA -= size; posB -= size\n  }\n}\n","import {findDiffStart, findDiffEnd} from \"./diff\"\n\n// ::- A fragment represents a node's collection of child nodes.\n//\n// Like nodes, fragments are persistent data structures, and you\n// should not mutate them or their content. Rather, you create new\n// instances whenever needed. The API tries to make this easy.\nexport class Fragment {\n  constructor(content, size) {\n    this.content = content\n    // :: number\n    // The size of the fragment, which is the total of the size of its\n    // content nodes.\n    this.size = size || 0\n    if (size == null) for (let i = 0; i < content.length; i++)\n      this.size += content[i].nodeSize\n  }\n\n  // :: (number, number, (node: Node, start: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes between the given two\n  // positions (relative to start of this fragment). Doesn't descend\n  // into a node when the callback returns `false`.\n  nodesBetween(from, to, f, nodeStart = 0, parent) {\n    for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from && f(child, nodeStart + pos, parent, i) !== false && child.content.size) {\n        let start = pos + 1\n        child.nodesBetween(Math.max(0, from - start),\n                           Math.min(child.content.size, to - start),\n                           f, nodeStart + start)\n      }\n      pos = end\n    }\n  }\n\n  // :: ((node: Node, pos: number, parent: Node) → ?bool)\n  // Call the given callback for every descendant node. The callback\n  // may return `false` to prevent traversal of a given node's children.\n  descendants(f) {\n    this.nodesBetween(0, this.size, f)\n  }\n\n  // :: (number, number, ?string, ?string) → string\n  // Extract the text between `from` and `to`. See the same method on\n  // [`Node`](#model.Node.textBetween).\n  textBetween(from, to, blockSeparator, leafText) {\n    let text = \"\", separated = true\n    this.nodesBetween(from, to, (node, pos) => {\n      if (node.isText) {\n        text += node.text.slice(Math.max(from, pos) - pos, to - pos)\n        separated = !blockSeparator\n      } else if (node.isLeaf && leafText) {\n        text += leafText\n        separated = !blockSeparator\n      } else if (!separated && node.isBlock) {\n        text += blockSeparator\n        separated = true\n      }\n    }, 0)\n    return text\n  }\n\n  // :: (Fragment) → Fragment\n  // Create a new fragment containing the combined content of this\n  // fragment and the other.\n  append(other) {\n    if (!other.size) return this\n    if (!this.size) return other\n    let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0\n    if (last.isText && last.sameMarkup(first)) {\n      content[content.length - 1] = last.withText(last.text + first.text)\n      i = 1\n    }\n    for (; i < other.content.length; i++) content.push(other.content[i])\n    return new Fragment(content, this.size + other.size)\n  }\n\n  // :: (number, ?number) → Fragment\n  // Cut out the sub-fragment between the two given positions.\n  cut(from, to) {\n    if (to == null) to = this.size\n    if (from == 0 && to == this.size) return this\n    let result = [], size = 0\n    if (to > from) for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from) {\n        if (pos < from || end > to) {\n          if (child.isText)\n            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos))\n          else\n            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1))\n        }\n        result.push(child)\n        size += child.nodeSize\n      }\n      pos = end\n    }\n    return new Fragment(result, size)\n  }\n\n  cutByIndex(from, to) {\n    if (from == to) return Fragment.empty\n    if (from == 0 && to == this.content.length) return this\n    return new Fragment(this.content.slice(from, to))\n  }\n\n  // :: (number, Node) → Fragment\n  // Create a new fragment in which the node at the given index is\n  // replaced by the given node.\n  replaceChild(index, node) {\n    let current = this.content[index]\n    if (current == node) return this\n    let copy = this.content.slice()\n    let size = this.size + node.nodeSize - current.nodeSize\n    copy[index] = node\n    return new Fragment(copy, size)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by prepending the given node to this\n  // fragment.\n  addToStart(node) {\n    return new Fragment([node].concat(this.content), this.size + node.nodeSize)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by appending the given node to this\n  // fragment.\n  addToEnd(node) {\n    return new Fragment(this.content.concat(node), this.size + node.nodeSize)\n  }\n\n  // :: (Fragment) → bool\n  // Compare this fragment to another one.\n  eq(other) {\n    if (this.content.length != other.content.length) return false\n    for (let i = 0; i < this.content.length; i++)\n      if (!this.content[i].eq(other.content[i])) return false\n    return true\n  }\n\n  // :: ?Node\n  // The first child of the fragment, or `null` if it is empty.\n  get firstChild() { return this.content.length ? this.content[0] : null }\n\n  // :: ?Node\n  // The last child of the fragment, or `null` if it is empty.\n  get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null }\n\n  // :: number\n  // The number of child nodes in this fragment.\n  get childCount() { return this.content.length }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raise an error when the\n  // index is out of range.\n  child(index) {\n    let found = this.content[index]\n    if (!found) throw new RangeError(\"Index \" + index + \" out of range for \" + this)\n    return found\n  }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) {\n    return this.content[index]\n  }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) {\n    for (let i = 0, p = 0; i < this.content.length; i++) {\n      let child = this.content[i]\n      f(child, p, i)\n      p += child.nodeSize\n    }\n  }\n\n  // :: (Fragment) → ?number\n  // Find the first position at which this fragment and another\n  // fragment differ, or `null` if they are the same.\n  findDiffStart(other, pos = 0) {\n    return findDiffStart(this, other, pos)\n  }\n\n  // :: (Fragment) → ?{a: number, b: number}\n  // Find the first position, searching from the end, at which this\n  // fragment and the given fragment differ, or `null` if they are the\n  // same. Since this position will not be the same in both nodes, an\n  // object with two separate positions is returned.\n  findDiffEnd(other, pos = this.size, otherPos = other.size) {\n    return findDiffEnd(this, other, pos, otherPos)\n  }\n\n  // : (number, ?number) → {index: number, offset: number}\n  // Find the index and inner offset corresponding to a given relative\n  // position in this fragment. The result object will be reused\n  // (overwritten) the next time the function is called. (Not public.)\n  findIndex(pos, round = -1) {\n    if (pos == 0) return retIndex(0, pos)\n    if (pos == this.size) return retIndex(this.content.length, pos)\n    if (pos > this.size || pos < 0) throw new RangeError(`Position ${pos} outside of fragment (${this})`)\n    for (let i = 0, curPos = 0;; i++) {\n      let cur = this.child(i), end = curPos + cur.nodeSize\n      if (end >= pos) {\n        if (end == pos || round > 0) return retIndex(i + 1, end)\n        return retIndex(i, curPos)\n      }\n      curPos = end\n    }\n  }\n\n  // :: () → string\n  // Return a debugging string that describes this fragment.\n  toString() { return \"<\" + this.toStringInner() + \">\" }\n\n  toStringInner() { return this.content.join(\", \") }\n\n  // :: () → ?Object\n  // Create a JSON-serializeable representation of this fragment.\n  toJSON() {\n    return this.content.length ? this.content.map(n => n.toJSON()) : null\n  }\n\n  // :: (Schema, ?Object) → Fragment\n  // Deserialize a fragment from its JSON representation.\n  static fromJSON(schema, value) {\n    if (!value) return Fragment.empty\n    if (!Array.isArray(value)) throw new RangeError(\"Invalid input for Fragment.fromJSON\")\n    return new Fragment(value.map(schema.nodeFromJSON))\n  }\n\n  // :: ([Node]) → Fragment\n  // Build a fragment from an array of nodes. Ensures that adjacent\n  // text nodes with the same marks are joined together.\n  static fromArray(array) {\n    if (!array.length) return Fragment.empty\n    let joined, size = 0\n    for (let i = 0; i < array.length; i++) {\n      let node = array[i]\n      size += node.nodeSize\n      if (i && node.isText && array[i - 1].sameMarkup(node)) {\n        if (!joined) joined = array.slice(0, i)\n        joined[joined.length - 1] = node.withText(joined[joined.length - 1].text + node.text)\n      } else if (joined) {\n        joined.push(node)\n      }\n    }\n    return new Fragment(joined || array, size)\n  }\n\n  // :: (?union<Fragment, Node, [Node]>) → Fragment\n  // Create a fragment from something that can be interpreted as a set\n  // of nodes. For `null`, it returns the empty fragment. For a\n  // fragment, the fragment itself. For a node or array of nodes, a\n  // fragment containing those nodes.\n  static from(nodes) {\n    if (!nodes) return Fragment.empty\n    if (nodes instanceof Fragment) return nodes\n    if (Array.isArray(nodes)) return this.fromArray(nodes)\n    if (nodes.attrs) return new Fragment([nodes], nodes.nodeSize)\n    throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n                         (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"))\n  }\n}\n\nconst found = {index: 0, offset: 0}\nfunction retIndex(index, offset) {\n  found.index = index\n  found.offset = offset\n  return found\n}\n\n// :: Fragment\n// An empty fragment. Intended to be reused whenever a node doesn't\n// contain anything (rather than allocating a new empty fragment for\n// each leaf node).\nFragment.empty = new Fragment([], 0)\n","export function compareDeep(a, b) {\n  if (a === b) return true\n  if (!(a && typeof a == \"object\") ||\n      !(b && typeof b == \"object\")) return false\n  let array = Array.isArray(a)\n  if (Array.isArray(b) != array) return false\n  if (array) {\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++) if (!compareDeep(a[i], b[i])) return false\n  } else {\n    for (let p in a) if (!(p in b) || !compareDeep(a[p], b[p])) return false\n    for (let p in b) if (!(p in a)) return false\n  }\n  return true\n}\n","import {compareDeep} from \"./comparedeep\"\n\n// ::- A mark is a piece of information that can be attached to a node,\n// such as it being emphasized, in code font, or a link. It has a type\n// and optionally a set of attributes that provide further information\n// (such as the target of the link). Marks are created through a\n// `Schema`, which controls which types exist and which\n// attributes they have.\nexport class Mark {\n  constructor(type, attrs) {\n    // :: MarkType\n    // The type of this mark.\n    this.type = type\n    // :: Object\n    // The attributes associated with this mark.\n    this.attrs = attrs\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Given a set of marks, create a new set which contains this one as\n  // well, in the right position. If this mark is already in the set,\n  // the set itself is returned. If any marks that are set to be\n  // [exclusive](#model.MarkSpec.excludes) with this mark are present,\n  // those are replaced by this one.\n  addToSet(set) {\n    let copy, placed = false\n    for (let i = 0; i < set.length; i++) {\n      let other = set[i]\n      if (this.eq(other)) return set\n      if (this.type.excludes(other.type)) {\n        if (!copy) copy = set.slice(0, i)\n      } else if (other.type.excludes(this.type)) {\n        return set\n      } else {\n        if (!placed && other.type.rank > this.type.rank) {\n          if (!copy) copy = set.slice(0, i)\n          copy.push(this)\n          placed = true\n        }\n        if (copy) copy.push(other)\n      }\n    }\n    if (!copy) copy = set.slice()\n    if (!placed) copy.push(this)\n    return copy\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Remove this mark from the given set, returning a new set. If this\n  // mark is not in the set, the set itself is returned.\n  removeFromSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (this.eq(set[i]))\n        return set.slice(0, i).concat(set.slice(i + 1))\n    return set\n  }\n\n  // :: ([Mark]) → bool\n  // Test whether this mark is in the given set of marks.\n  isInSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (this.eq(set[i])) return true\n    return false\n  }\n\n  // :: (Mark) → bool\n  // Test whether this mark has the same type and attributes as\n  // another mark.\n  eq(other) {\n    return this == other ||\n      (this.type == other.type && compareDeep(this.attrs, other.attrs))\n  }\n\n  // :: () → Object\n  // Convert this mark to a JSON-serializeable representation.\n  toJSON() {\n    let obj = {type: this.type.name}\n    for (let _ in this.attrs) {\n      obj.attrs = this.attrs\n      break\n    }\n    return obj\n  }\n\n  // :: (Schema, Object) → Mark\n  static fromJSON(schema, json) {\n    if (!json) throw new RangeError(\"Invalid input for Mark.fromJSON\")\n    let type = schema.marks[json.type]\n    if (!type) throw new RangeError(`There is no mark type ${json.type} in this schema`)\n    return type.create(json.attrs)\n  }\n\n  // :: ([Mark], [Mark]) → bool\n  // Test whether two sets of marks are identical.\n  static sameSet(a, b) {\n    if (a == b) return true\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++)\n      if (!a[i].eq(b[i])) return false\n    return true\n  }\n\n  // :: (?union<Mark, [Mark]>) → [Mark]\n  // Create a properly sorted mark set from null, a single mark, or an\n  // unsorted array of marks.\n  static setFrom(marks) {\n    if (!marks || marks.length == 0) return Mark.none\n    if (marks instanceof Mark) return [marks]\n    let copy = marks.slice()\n    copy.sort((a, b) => a.type.rank - b.type.rank)\n    return copy\n  }\n}\n\n// :: [Mark] The empty set of marks.\nMark.none = []\n","import {Fragment} from \"./fragment\"\n\n// ReplaceError:: class extends Error\n// Error type raised by [`Node.replace`](#model.Node.replace) when\n// given an invalid replacement.\n\nexport function ReplaceError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = ReplaceError.prototype\n  return err\n}\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n\n// ::- A slice represents a piece cut out of a larger document. It\n// stores not only a fragment, but also the depth up to which nodes on\n// both side are ‘open’ (cut through).\nexport class Slice {\n  // :: (Fragment, number, number)\n  // Create a slice. When specifying a non-zero open depth, you must\n  // make sure that there are nodes of at least that depth at the\n  // appropriate side of the fragment—i.e. if the fragment is an empty\n  // paragraph node, `openStart` and `openEnd` can't be greater than 1.\n  //\n  // It is not necessary for the content of open nodes to conform to\n  // the schema's content constraints, though it should be a valid\n  // start/end/middle for such a node, depending on which sides are\n  // open.\n  constructor(content, openStart, openEnd) {\n    // :: Fragment The slice's content.\n    this.content = content\n    // :: number The open depth at the start.\n    this.openStart = openStart\n    // :: number The open depth at the end.\n    this.openEnd = openEnd\n  }\n\n  // :: number\n  // The size this slice would add when inserted into a document.\n  get size() {\n    return this.content.size - this.openStart - this.openEnd\n  }\n\n  insertAt(pos, fragment) {\n    let content = insertInto(this.content, pos + this.openStart, fragment, null)\n    return content && new Slice(content, this.openStart, this.openEnd)\n  }\n\n  removeBetween(from, to) {\n    return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd)\n  }\n\n  // :: (Slice) → bool\n  // Tests whether this slice is equal to another slice.\n  eq(other) {\n    return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd\n  }\n\n  toString() {\n    return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\"\n  }\n\n  // :: () → ?Object\n  // Convert a slice to a JSON-serializable representation.\n  toJSON() {\n    if (!this.content.size) return null\n    let json = {content: this.content.toJSON()}\n    if (this.openStart > 0) json.openStart = this.openStart\n    if (this.openEnd > 0) json.openEnd = this.openEnd\n    return json\n  }\n\n  // :: (Schema, ?Object) → Slice\n  // Deserialize a slice from its JSON representation.\n  static fromJSON(schema, json) {\n    if (!json) return Slice.empty\n    let openStart = json.openStart || 0, openEnd = json.openEnd || 0\n    if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n      throw new RangeError(\"Invalid input for Slice.fromJSON\")\n    return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd)\n  }\n\n  // :: (Fragment, ?bool) → Slice\n  // Create a slice from a fragment by taking the maximum possible\n  // open value on both side of the fragment.\n  static maxOpen(fragment, openIsolating=true) {\n    let openStart = 0, openEnd = 0\n    for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild) openStart++\n    for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild) openEnd++\n    return new Slice(fragment, openStart, openEnd)\n  }\n}\n\nfunction removeRange(content, from, to) {\n  let {index, offset} = content.findIndex(from), child = content.maybeChild(index)\n  let {index: indexTo, offset: offsetTo} = content.findIndex(to)\n  if (offset == from || child.isText) {\n    if (offsetTo != to && !content.child(indexTo).isText) throw new RangeError(\"Removing non-flat range\")\n    return content.cut(0, from).append(content.cut(to))\n  }\n  if (index != indexTo) throw new RangeError(\"Removing non-flat range\")\n  return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)))\n}\n\nfunction insertInto(content, dist, insert, parent) {\n  let {index, offset} = content.findIndex(dist), child = content.maybeChild(index)\n  if (offset == dist || child.isText) {\n    if (parent && !parent.canReplace(index, index, insert)) return null\n    return content.cut(0, dist).append(insert).append(content.cut(dist))\n  }\n  let inner = insertInto(child.content, dist - offset - 1, insert)\n  return inner && content.replaceChild(index, child.copy(inner))\n}\n\n// :: Slice\n// The empty slice.\nSlice.empty = new Slice(Fragment.empty, 0, 0)\n\nexport function replace($from, $to, slice) {\n  if (slice.openStart > $from.depth)\n    throw new ReplaceError(\"Inserted content deeper than insertion position\")\n  if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n    throw new ReplaceError(\"Inconsistent open depths\")\n  return replaceOuter($from, $to, slice, 0)\n}\n\nfunction replaceOuter($from, $to, slice, depth) {\n  let index = $from.index(depth), node = $from.node(depth)\n  if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n    let inner = replaceOuter($from, $to, slice, depth + 1)\n    return node.copy(node.content.replaceChild(index, inner))\n  } else if (!slice.content.size) {\n    return close(node, replaceTwoWay($from, $to, depth))\n  } else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n    let parent = $from.parent, content = parent.content\n    return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)))\n  } else {\n    let {start, end} = prepareSliceForReplace(slice, $from)\n    return close(node, replaceThreeWay($from, start, end, $to, depth))\n  }\n}\n\nfunction checkJoin(main, sub) {\n  if (!sub.type.compatibleContent(main.type))\n    throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name)\n}\n\nfunction joinable($before, $after, depth) {\n  let node = $before.node(depth)\n  checkJoin(node, $after.node(depth))\n  return node\n}\n\nfunction addNode(child, target) {\n  let last = target.length - 1\n  if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n    target[last] = child.withText(target[last].text + child.text)\n  else\n    target.push(child)\n}\n\nfunction addRange($start, $end, depth, target) {\n  let node = ($end || $start).node(depth)\n  let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount\n  if ($start) {\n    startIndex = $start.index(depth)\n    if ($start.depth > depth) {\n      startIndex++\n    } else if ($start.textOffset) {\n      addNode($start.nodeAfter, target)\n      startIndex++\n    }\n  }\n  for (let i = startIndex; i < endIndex; i++) addNode(node.child(i), target)\n  if ($end && $end.depth == depth && $end.textOffset)\n    addNode($end.nodeBefore, target)\n}\n\nfunction close(node, content) {\n  if (!node.type.validContent(content))\n    throw new ReplaceError(\"Invalid content for node \" + node.type.name)\n  return node.copy(content)\n}\n\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n  let openStart = $from.depth > depth && joinable($from, $start, depth + 1)\n  let openEnd = $to.depth > depth && joinable($end, $to, depth + 1)\n\n  let content = []\n  addRange(null, $from, depth, content)\n  if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n    checkJoin(openStart, openEnd)\n    addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content)\n  } else {\n    if (openStart)\n      addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content)\n    addRange($start, $end, depth, content)\n    if (openEnd)\n      addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content)\n  }\n  addRange($to, null, depth, content)\n  return new Fragment(content)\n}\n\nfunction replaceTwoWay($from, $to, depth) {\n  let content = []\n  addRange(null, $from, depth, content)\n  if ($from.depth > depth) {\n    let type = joinable($from, $to, depth + 1)\n    addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content)\n  }\n  addRange($to, null, depth, content)\n  return new Fragment(content)\n}\n\nfunction prepareSliceForReplace(slice, $along) {\n  let extra = $along.depth - slice.openStart, parent = $along.node(extra)\n  let node = parent.copy(slice.content)\n  for (let i = extra - 1; i >= 0; i--)\n    node = $along.node(i).copy(Fragment.from(node))\n  return {start: node.resolveNoCache(slice.openStart + extra),\n          end: node.resolveNoCache(node.content.size - slice.openEnd - extra)}\n}\n","import {Mark} from \"./mark\"\n\n// ::- You can [_resolve_](#model.Node.resolve) a position to get more\n// information about it. Objects of this class represent such a\n// resolved position, providing various pieces of context information,\n// and some helper methods.\n//\n// Throughout this interface, methods that take an optional `depth`\n// parameter will interpret undefined as `this.depth` and negative\n// numbers as `this.depth + value`.\nexport class ResolvedPos {\n  constructor(pos, path, parentOffset) {\n    // :: number The position that was resolved.\n    this.pos = pos\n    this.path = path\n    // :: number\n    // The number of levels the parent node is from the root. If this\n    // position points directly into the root node, it is 0. If it\n    // points into a top-level paragraph, 1, and so on.\n    this.depth = path.length / 3 - 1\n    // :: number The offset this position has into its parent node.\n    this.parentOffset = parentOffset\n  }\n\n  resolveDepth(val) {\n    if (val == null) return this.depth\n    if (val < 0) return this.depth + val\n    return val\n  }\n\n  // :: Node\n  // The parent node that the position points into. Note that even if\n  // a position points into a text node, that node is not considered\n  // the parent—text nodes are ‘flat’ in this model, and have no content.\n  get parent() { return this.node(this.depth) }\n\n  // :: Node\n  // The root node in which the position was resolved.\n  get doc() { return this.node(0) }\n\n  // :: (?number) → Node\n  // The ancestor node at the given level. `p.node(p.depth)` is the\n  // same as `p.parent`.\n  node(depth) { return this.path[this.resolveDepth(depth) * 3] }\n\n  // :: (?number) → number\n  // The index into the ancestor at the given level. If this points at\n  // the 3rd node in the 2nd paragraph on the top level, for example,\n  // `p.index(0)` is 1 and `p.index(1)` is 2.\n  index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1] }\n\n  // :: (?number) → number\n  // The index pointing after this position into the ancestor at the\n  // given level.\n  indexAfter(depth) {\n    depth = this.resolveDepth(depth)\n    return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1)\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the start of the node at the given\n  // level.\n  start(depth) {\n    depth = this.resolveDepth(depth)\n    return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the end of the node at the given\n  // level.\n  end(depth) {\n    depth = this.resolveDepth(depth)\n    return this.start(depth) + this.node(depth).content.size\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly before the wrapping node at the\n  // given level, or, when `depth` is `this.depth + 1`, the original\n  // position.\n  before(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position before the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1]\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly after the wrapping node at the\n  // given level, or the original position when `depth` is `this.depth + 1`.\n  after(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position after the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize\n  }\n\n  // :: number\n  // When this position points into a text node, this returns the\n  // distance between the position and the start of the text node.\n  // Will be zero for positions that point between nodes.\n  get textOffset() { return this.pos - this.path[this.path.length - 1] }\n\n  // :: ?Node\n  // Get the node directly after the position, if any. If the position\n  // points into a text node, only the part of that node after the\n  // position is returned.\n  get nodeAfter() {\n    let parent = this.parent, index = this.index(this.depth)\n    if (index == parent.childCount) return null\n    let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index)\n    return dOff ? parent.child(index).cut(dOff) : child\n  }\n\n  // :: ?Node\n  // Get the node directly before the position, if any. If the\n  // position points into a text node, only the part of that node\n  // before the position is returned.\n  get nodeBefore() {\n    let index = this.index(this.depth)\n    let dOff = this.pos - this.path[this.path.length - 1]\n    if (dOff) return this.parent.child(index).cut(0, dOff)\n    return index == 0 ? null : this.parent.child(index - 1)\n  }\n\n  // :: (number, ?number) → number\n  // Get the position at the given index in the parent node at the\n  // given depth (which defaults to `this.depth`).\n  posAtIndex(index, depth) {\n    depth = this.resolveDepth(depth)\n    let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n    for (let i = 0; i < index; i++) pos += node.child(i).nodeSize\n    return pos\n  }\n\n  // :: () → [Mark]\n  // Get the marks at this position, factoring in the surrounding\n  // marks' [`inclusive`](#model.MarkSpec.inclusive) property. If the\n  // position is at the start of a non-empty node, the marks of the\n  // node after it (if any) are returned.\n  marks() {\n    let parent = this.parent, index = this.index()\n\n    // In an empty parent, return the empty array\n    if (parent.content.size == 0) return Mark.none\n\n    // When inside a text node, just return the text node's marks\n    if (this.textOffset) return parent.child(index).marks\n\n    let main = parent.maybeChild(index - 1), other = parent.maybeChild(index)\n    // If the `after` flag is true of there is no node before, make\n    // the node after this position the main reference.\n    if (!main) { let tmp = main; main = other; other = tmp }\n\n    // Use all marks in the main node, except those that have\n    // `inclusive` set to false and are not present in the other node.\n    let marks = main.marks\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n        marks = marks[i--].removeFromSet(marks)\n\n    return marks\n  }\n\n  // :: (ResolvedPos) → ?[Mark]\n  // Get the marks after the current position, if any, except those\n  // that are non-inclusive and not present at position `$end`. This\n  // is mostly useful for getting the set of marks to preserve after a\n  // deletion. Will return `null` if this position is at the end of\n  // its parent node or its parent node isn't a textblock (in which\n  // case no marks should be preserved).\n  marksAcross($end) {\n    let after = this.parent.maybeChild(this.index())\n    if (!after || !after.isInline) return null\n\n    let marks = after.marks, next = $end.parent.maybeChild($end.index())\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n        marks = marks[i--].removeFromSet(marks)\n    return marks\n  }\n\n  // :: (number) → number\n  // The depth up to which this position and the given (non-resolved)\n  // position share the same parent nodes.\n  sharedDepth(pos) {\n    for (let depth = this.depth; depth > 0; depth--)\n      if (this.start(depth) <= pos && this.end(depth) >= pos) return depth\n    return 0\n  }\n\n  // :: (?ResolvedPos, ?(Node) → bool) → ?NodeRange\n  // Returns a range based on the place where this position and the\n  // given position diverge around block content. If both point into\n  // the same textblock, for example, a range around that textblock\n  // will be returned. If they point into different blocks, the range\n  // around those blocks in their shared ancestor is returned. You can\n  // pass in an optional predicate that will be called with a parent\n  // node to see if a range into that parent is acceptable.\n  blockRange(other = this, pred) {\n    if (other.pos < this.pos) return other.blockRange(this)\n    for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n      if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n        return new NodeRange(this, other, d)\n  }\n\n  // :: (ResolvedPos) → bool\n  // Query whether the given position shares the same parent node.\n  sameParent(other) {\n    return this.pos - this.parentOffset == other.pos - other.parentOffset\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the greater of this and the given position.\n  max(other) {\n    return other.pos > this.pos ? other : this\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the smaller of this and the given position.\n  min(other) {\n    return other.pos < this.pos ? other : this\n  }\n\n  toString() {\n    let str = \"\"\n    for (let i = 1; i <= this.depth; i++)\n      str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1)\n    return str + \":\" + this.parentOffset\n  }\n\n  static resolve(doc, pos) {\n    if (!(pos >= 0 && pos <= doc.content.size)) throw new RangeError(\"Position \" + pos + \" out of range\")\n    let path = []\n    let start = 0, parentOffset = pos\n    for (let node = doc;;) {\n      let {index, offset} = node.content.findIndex(parentOffset)\n      let rem = parentOffset - offset\n      path.push(node, index, start + offset)\n      if (!rem) break\n      node = node.child(index)\n      if (node.isText) break\n      parentOffset = rem - 1\n      start += offset + 1\n    }\n    return new ResolvedPos(pos, path, parentOffset)\n  }\n\n  static resolveCached(doc, pos) {\n    for (let i = 0; i < resolveCache.length; i++) {\n      let cached = resolveCache[i]\n      if (cached.pos == pos && cached.doc == doc) return cached\n    }\n    let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos)\n    resolveCachePos = (resolveCachePos + 1) % resolveCacheSize\n    return result\n  }\n}\n\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12\n\n// ::- Represents a flat range of content, i.e. one that starts and\n// ends in the same node.\nexport class NodeRange {\n  // :: (ResolvedPos, ResolvedPos, number)\n  // Construct a node range. `$from` and `$to` should point into the\n  // same node until at least the given `depth`, since a node range\n  // denotes an adjacent set of nodes in a single parent node.\n  constructor($from, $to, depth) {\n    // :: ResolvedPos A resolved position along the start of the\n    // content. May have a `depth` greater than this object's `depth`\n    // property, since these are the positions that were used to\n    // compute the range, not re-resolved positions directly at its\n    // boundaries.\n    this.$from = $from\n    // :: ResolvedPos A position along the end of the content. See\n    // caveat for [`$from`](#model.NodeRange.$from).\n    this.$to = $to\n    // :: number The depth of the node that this range points into.\n    this.depth = depth\n  }\n\n  // :: number The position at the start of the range.\n  get start() { return this.$from.before(this.depth + 1) }\n  // :: number The position at the end of the range.\n  get end() { return this.$to.after(this.depth + 1) }\n\n  // :: Node The parent node that the range points into.\n  get parent() { return this.$from.node(this.depth) }\n  // :: number The start index of the range in the parent node.\n  get startIndex() { return this.$from.index(this.depth) }\n  // :: number The end index of the range in the parent node.\n  get endIndex() { return this.$to.indexAfter(this.depth) }\n}\n","import {Fragment} from \"./fragment\"\nimport {Mark} from \"./mark\"\nimport {Slice, replace} from \"./replace\"\nimport {ResolvedPos} from \"./resolvedpos\"\nimport {compareDeep} from \"./comparedeep\"\n\nconst emptyAttrs = Object.create(null)\n\n// ::- This class represents a node in the tree that makes up a\n// ProseMirror document. So a document is an instance of `Node`, with\n// children that are also instances of `Node`.\n//\n// Nodes are persistent data structures. Instead of changing them, you\n// create new ones with the content you want. Old ones keep pointing\n// at the old document shape. This is made cheaper by sharing\n// structure between the old and new data as much as possible, which a\n// tree shape like this (without back pointers) makes easy.\n//\n// **Do not** directly mutate the properties of a `Node` object. See\n// [the guide](/docs/guide/#doc) for more information.\nexport class Node {\n  constructor(type, attrs, content, marks) {\n    // :: NodeType\n    // The type of node that this is.\n    this.type = type\n\n    // :: Object\n    // An object mapping attribute names to values. The kind of\n    // attributes allowed and required are\n    // [determined](#model.NodeSpec.attrs) by the node type.\n    this.attrs = attrs\n\n    // :: Fragment\n    // A container holding the node's children.\n    this.content = content || Fragment.empty\n\n    // :: [Mark]\n    // The marks (things like whether it is emphasized or part of a\n    // link) applied to this node.\n    this.marks = marks || Mark.none\n  }\n\n  // text:: ?string\n  // For text nodes, this contains the node's text content.\n\n  // :: number\n  // The size of this node, as defined by the integer-based [indexing\n  // scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n  // amount of characters. For other leaf nodes, it is one. For\n  // non-leaf nodes, it is the size of the content plus two (the start\n  // and end token).\n  get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size }\n\n  // :: number\n  // The number of children that the node has.\n  get childCount() { return this.content.childCount }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raises an error when the\n  // index is out of range.\n  child(index) { return this.content.child(index) }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) { return this.content.maybeChild(index) }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) { this.content.forEach(f) }\n\n  // :: (number, number, (node: Node, pos: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes recursively between\n  // the given two positions that are relative to start of this node's\n  // content. The callback is invoked with the node, its\n  // parent-relative position, its parent node, and its child index.\n  // When the callback returns false for a given node, that node's\n  // children will not be recursed over. The last parameter can be\n  // used to specify a starting position to count from.\n  nodesBetween(from, to, f, startPos = 0) {\n    this.content.nodesBetween(from, to, f, startPos, this)\n  }\n\n  // :: ((node: Node, pos: number, parent: Node) → ?bool)\n  // Call the given callback for every descendant node. Doesn't\n  // descend into a node when the callback returns `false`.\n  descendants(f) {\n    this.nodesBetween(0, this.content.size, f)\n  }\n\n  // :: string\n  // Concatenates all the text nodes found in this fragment and its\n  // children.\n  get textContent() { return this.textBetween(0, this.content.size, \"\") }\n\n  // :: (number, number, ?string, ?string) → string\n  // Get all text between positions `from` and `to`. When\n  // `blockSeparator` is given, it will be inserted whenever a new\n  // block node is started. When `leafText` is given, it'll be\n  // inserted for every non-text leaf node encountered.\n  textBetween(from, to, blockSeparator, leafText) {\n    return this.content.textBetween(from, to, blockSeparator, leafText)\n  }\n\n  // :: ?Node\n  // Returns this node's first child, or `null` if there are no\n  // children.\n  get firstChild() { return this.content.firstChild }\n\n  // :: ?Node\n  // Returns this node's last child, or `null` if there are no\n  // children.\n  get lastChild() { return this.content.lastChild }\n\n  // :: (Node) → bool\n  // Test whether two nodes represent the same piece of document.\n  eq(other) {\n    return this == other || (this.sameMarkup(other) && this.content.eq(other.content))\n  }\n\n  // :: (Node) → bool\n  // Compare the markup (type, attributes, and marks) of this node to\n  // those of another. Returns `true` if both have the same markup.\n  sameMarkup(other) {\n    return this.hasMarkup(other.type, other.attrs, other.marks)\n  }\n\n  // :: (NodeType, ?Object, ?[Mark]) → bool\n  // Check whether this node's markup correspond to the given type,\n  // attributes, and marks.\n  hasMarkup(type, attrs, marks) {\n    return this.type == type &&\n      compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n      Mark.sameSet(this.marks, marks || Mark.none)\n  }\n\n  // :: (?Fragment) → Node\n  // Create a new node with the same markup as this node, containing\n  // the given content (or empty, if no content is given).\n  copy(content = null) {\n    if (content == this.content) return this\n    return new this.constructor(this.type, this.attrs, content, this.marks)\n  }\n\n  // :: ([Mark]) → Node\n  // Create a copy of this node, with the given set of marks instead\n  // of the node's own marks.\n  mark(marks) {\n    return marks == this.marks ? this : new this.constructor(this.type, this.attrs, this.content, marks)\n  }\n\n  // :: (number, ?number) → Node\n  // Create a copy of this node with only the content between the\n  // given positions. If `to` is not given, it defaults to the end of\n  // the node.\n  cut(from, to) {\n    if (from == 0 && to == this.content.size) return this\n    return this.copy(this.content.cut(from, to))\n  }\n\n  // :: (number, ?number) → Slice\n  // Cut out the part of the document between the given positions, and\n  // return it as a `Slice` object.\n  slice(from, to = this.content.size, includeParents = false) {\n    if (from == to) return Slice.empty\n\n    let $from = this.resolve(from), $to = this.resolve(to)\n    let depth = includeParents ? 0 : $from.sharedDepth(to)\n    let start = $from.start(depth), node = $from.node(depth)\n    let content = node.content.cut($from.pos - start, $to.pos - start)\n    return new Slice(content, $from.depth - depth, $to.depth - depth)\n  }\n\n  // :: (number, number, Slice) → Node\n  // Replace the part of the document between the given positions with\n  // the given slice. The slice must 'fit', meaning its open sides\n  // must be able to connect to the surrounding content, and its\n  // content nodes must be valid children for the node they are placed\n  // into. If any of this is violated, an error of type\n  // [`ReplaceError`](#model.ReplaceError) is thrown.\n  replace(from, to, slice) {\n    return replace(this.resolve(from), this.resolve(to), slice)\n  }\n\n  // :: (number) → ?Node\n  // Find the node directly after the given position.\n  nodeAt(pos) {\n    for (let node = this;;) {\n      let {index, offset} = node.content.findIndex(pos)\n      node = node.maybeChild(index)\n      if (!node) return null\n      if (offset == pos || node.isText) return node\n      pos -= offset + 1\n    }\n  }\n\n  // :: (number) → {node: ?Node, index: number, offset: number}\n  // Find the (direct) child node after the given offset, if any,\n  // and return it along with its index and offset relative to this\n  // node.\n  childAfter(pos) {\n    let {index, offset} = this.content.findIndex(pos)\n    return {node: this.content.maybeChild(index), index, offset}\n  }\n\n  // :: (number) → {node: ?Node, index: number, offset: number}\n  // Find the (direct) child node before the given offset, if any,\n  // and return it along with its index and offset relative to this\n  // node.\n  childBefore(pos) {\n    if (pos == 0) return {node: null, index: 0, offset: 0}\n    let {index, offset} = this.content.findIndex(pos)\n    if (offset < pos) return {node: this.content.child(index), index, offset}\n    let node = this.content.child(index - 1)\n    return {node, index: index - 1, offset: offset - node.nodeSize}\n  }\n\n  // :: (number) → ResolvedPos\n  // Resolve the given position in the document, returning an\n  // [object](#model.ResolvedPos) with information about its context.\n  resolve(pos) { return ResolvedPos.resolveCached(this, pos) }\n\n  resolveNoCache(pos) { return ResolvedPos.resolve(this, pos) }\n\n  // :: (number, number, union<Mark, MarkType>) → bool\n  // Test whether a given mark or mark type occurs in this document\n  // between the two given positions.\n  rangeHasMark(from, to, type) {\n    let found = false\n    if (to > from) this.nodesBetween(from, to, node => {\n      if (type.isInSet(node.marks)) found = true\n      return !found\n    })\n    return found\n  }\n\n  // :: bool\n  // True when this is a block (non-inline node)\n  get isBlock() { return this.type.isBlock }\n\n  // :: bool\n  // True when this is a textblock node, a block node with inline\n  // content.\n  get isTextblock() { return this.type.isTextblock }\n\n  // :: bool\n  // True when this node allows inline content.\n  get inlineContent() { return this.type.inlineContent }\n\n  // :: bool\n  // True when this is an inline node (a text node or a node that can\n  // appear among text).\n  get isInline() { return this.type.isInline }\n\n  // :: bool\n  // True when this is a text node.\n  get isText() { return this.type.isText }\n\n  // :: bool\n  // True when this is a leaf node.\n  get isLeaf() { return this.type.isLeaf }\n\n  // :: bool\n  // True when this is an atom, i.e. when it does not have directly\n  // editable content. This is usually the same as `isLeaf`, but can\n  // be configured with the [`atom` property](#model.NodeSpec.atom) on\n  // a node's spec (typically used when the node is displayed as an\n  // uneditable [node view](#view.NodeView)).\n  get isAtom() { return this.type.isAtom }\n\n  // :: () → string\n  // Return a string representation of this node for debugging\n  // purposes.\n  toString() {\n    if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this)\n    let name = this.type.name\n    if (this.content.size)\n      name += \"(\" + this.content.toStringInner() + \")\"\n    return wrapMarks(this.marks, name)\n  }\n\n  // :: (number) → ContentMatch\n  // Get the content match in this node at the given index.\n  contentMatchAt(index) {\n    let match = this.type.contentMatch.matchFragment(this.content, 0, index)\n    if (!match) throw new Error(\"Called contentMatchAt on a node with invalid content\")\n    return match\n  }\n\n  // :: (number, number, ?Fragment, ?number, ?number) → bool\n  // Test whether replacing the range between `from` and `to` (by\n  // child index) with the given replacement fragment (which defaults\n  // to the empty fragment) would leave the node's content valid. You\n  // can optionally pass `start` and `end` indices into the\n  // replacement fragment.\n  canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n    let one = this.contentMatchAt(from).matchFragment(replacement, start, end)\n    let two = one && one.matchFragment(this.content, to)\n    if (!two || !two.validEnd) return false\n    for (let i = start; i < end; i++) if (!this.type.allowsMarks(replacement.child(i).marks)) return false\n    return true\n  }\n\n  // :: (number, number, NodeType, ?[Mark]) → bool\n  // Test whether replacing the range `from` to `to` (by index) with a\n  // node of the given type would leave the node's content valid.\n  canReplaceWith(from, to, type, marks) {\n    if (marks && !this.type.allowsMarks(marks)) return false\n    let start = this.contentMatchAt(from).matchType(type)\n    let end = start && start.matchFragment(this.content, to)\n    return end ? end.validEnd : false\n  }\n\n  // :: (Node) → bool\n  // Test whether the given node's content could be appended to this\n  // node. If that node is empty, this will only return true if there\n  // is at least one node type that can appear in both nodes (to avoid\n  // merging completely incompatible nodes).\n  canAppend(other) {\n    if (other.content.size) return this.canReplace(this.childCount, this.childCount, other.content)\n    else return this.type.compatibleContent(other.type)\n  }\n\n  // :: ()\n  // Check whether this node and its descendants conform to the\n  // schema, and raise error when they do not.\n  check() {\n    if (!this.type.validContent(this.content))\n      throw new RangeError(`Invalid content for node ${this.type.name}: ${this.content.toString().slice(0, 50)}`)\n    let copy = Mark.none\n    for (let i = 0; i < this.marks.length; i++) copy = this.marks[i].addToSet(copy)\n    if (!Mark.sameSet(copy, this.marks))\n      throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`)\n    this.content.forEach(node => node.check())\n  }\n\n  // :: () → Object\n  // Return a JSON-serializeable representation of this node.\n  toJSON() {\n    let obj = {type: this.type.name}\n    for (let _ in this.attrs) {\n      obj.attrs = this.attrs\n      break\n    }\n    if (this.content.size)\n      obj.content = this.content.toJSON()\n    if (this.marks.length)\n      obj.marks = this.marks.map(n => n.toJSON())\n    return obj\n  }\n\n  // :: (Schema, Object) → Node\n  // Deserialize a node from its JSON representation.\n  static fromJSON(schema, json) {\n    if (!json) throw new RangeError(\"Invalid input for Node.fromJSON\")\n    let marks = null\n    if (json.marks) {\n      if (!Array.isArray(json.marks)) throw new RangeError(\"Invalid mark data for Node.fromJSON\")\n      marks = json.marks.map(schema.markFromJSON)\n    }\n    if (json.type == \"text\") {\n      if (typeof json.text != \"string\") throw new RangeError(\"Invalid text node in JSON\")\n      return schema.text(json.text, marks)\n    }\n    let content = Fragment.fromJSON(schema, json.content)\n    return schema.nodeType(json.type).create(json.attrs, content, marks)\n  }\n}\n\nexport class TextNode extends Node {\n  constructor(type, attrs, content, marks) {\n    super(type, attrs, null, marks)\n\n    if (!content) throw new RangeError(\"Empty text nodes are not allowed\")\n\n    this.text = content\n  }\n\n  toString() {\n    if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this)\n    return wrapMarks(this.marks, JSON.stringify(this.text))\n  }\n\n  get textContent() { return this.text }\n\n  textBetween(from, to) { return this.text.slice(from, to) }\n\n  get nodeSize() { return this.text.length }\n\n  mark(marks) {\n    return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks)\n  }\n\n  withText(text) {\n    if (text == this.text) return this\n    return new TextNode(this.type, this.attrs, text, this.marks)\n  }\n\n  cut(from = 0, to = this.text.length) {\n    if (from == 0 && to == this.text.length) return this\n    return this.withText(this.text.slice(from, to))\n  }\n\n  eq(other) {\n    return this.sameMarkup(other) && this.text == other.text\n  }\n\n  toJSON() {\n    let base = super.toJSON()\n    base.text = this.text\n    return base\n  }\n}\n\nfunction wrapMarks(marks, str) {\n  for (let i = marks.length - 1; i >= 0; i--)\n    str = marks[i].type.name + \"(\" + str + \")\"\n  return str\n}\n","import {Fragment} from \"./fragment\"\n\n// ::- Instances of this class represent a match state of a node\n// type's [content expression](#model.NodeSpec.content), and can be\n// used to find out whether further content matches here, and whether\n// a given position is a valid end of the node.\nexport class ContentMatch {\n  constructor(validEnd) {\n    // :: bool\n    // True when this match state represents a valid end of the node.\n    this.validEnd = validEnd\n    this.next = []\n    this.wrapCache = []\n  }\n\n  static parse(string, nodeTypes) {\n    let stream = new TokenStream(string, nodeTypes)\n    if (stream.next == null) return ContentMatch.empty\n    let expr = parseExpr(stream)\n    if (stream.next) stream.err(\"Unexpected trailing text\")\n    let match = dfa(nfa(expr))\n    checkForDeadEnds(match, stream)\n    return match\n  }\n\n  // :: (NodeType) → ?ContentMatch\n  // Match a node type, returning a match after that node if\n  // successful.\n  matchType(type) {\n    for (let i = 0; i < this.next.length; i += 2)\n      if (this.next[i] == type) return this.next[i + 1]\n    return null\n  }\n\n  // :: (Fragment, ?number, ?number) → ?ContentMatch\n  // Try to match a fragment. Returns the resulting match when\n  // successful.\n  matchFragment(frag, start = 0, end = frag.childCount) {\n    let cur = this\n    for (let i = start; cur && i < end; i++)\n      cur = cur.matchType(frag.child(i).type)\n    return cur\n  }\n\n  get inlineContent() {\n    let first = this.next[0]\n    return first ? first.isInline : false\n  }\n\n  // :: ?NodeType\n  // Get the first matching node type at this match position that can\n  // be generated.\n  get defaultType() {\n    for (let i = 0; i < this.next.length; i += 2) {\n      let type = this.next[i]\n      if (!(type.isText || type.hasRequiredAttrs())) return type\n    }\n  }\n\n  compatible(other) {\n    for (let i = 0; i < this.next.length; i += 2)\n      for (let j = 0; j < other.next.length; j += 2)\n        if (this.next[i] == other.next[j]) return true\n    return false\n  }\n\n  // :: (Fragment, bool, ?number) → ?Fragment\n  // Try to match the given fragment, and if that fails, see if it can\n  // be made to match by inserting nodes in front of it. When\n  // successful, return a fragment of inserted nodes (which may be\n  // empty if nothing had to be inserted). When `toEnd` is true, only\n  // return a fragment if the resulting match goes to the end of the\n  // content expression.\n  fillBefore(after, toEnd = false, startIndex = 0) {\n    let seen = [this]\n    function search(match, types) {\n      let finished = match.matchFragment(after, startIndex)\n      if (finished && (!toEnd || finished.validEnd))\n        return Fragment.from(types.map(tp => tp.createAndFill()))\n\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i], next = match.next[i + 1]\n        if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n          seen.push(next)\n          let found = search(next, types.concat(type))\n          if (found) return found\n        }\n      }\n    }\n\n    return search(this, [])\n  }\n\n  // :: (NodeType) → ?[NodeType]\n  // Find a set of wrapping node types that would allow a node of the\n  // given type to appear at this position. The result may be empty\n  // (when it fits directly) and will be null when no such wrapping\n  // exists.\n  findWrapping(target) {\n    for (let i = 0; i < this.wrapCache.length; i += 2)\n      if (this.wrapCache[i] == target) return this.wrapCache[i + 1]\n    let computed = this.computeWrapping(target)\n    this.wrapCache.push(target, computed)\n    return computed\n  }\n\n  computeWrapping(target) {\n    let seen = Object.create(null), active = [{match: this, type: null, via: null}]\n    while (active.length) {\n      let current = active.shift(), match = current.match\n      if (match.matchType(target)) {\n        let result = []\n        for (let obj = current; obj.type; obj = obj.via)\n          result.push(obj.type)\n        return result.reverse()\n      }\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i]\n        if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || match.next[i + 1].validEnd)) {\n          active.push({match: type.contentMatch, type, via: current})\n          seen[type.name] = true\n        }\n      }\n    }\n  }\n\n  // :: number\n  // The number of outgoing edges this node has in the finite\n  // automaton that describes the content expression.\n  get edgeCount() {\n    return this.next.length >> 1\n  }\n\n  // :: (number) → {type: NodeType, next: ContentMatch}\n  // Get the _n_​th outgoing edge from this node in the finite\n  // automaton that describes the content expression.\n  edge(n) {\n    let i = n << 1\n    if (i >= this.next.length) throw new RangeError(`There's no ${n}th edge in this content match`)\n    return {type: this.next[i], next: this.next[i + 1]}\n  }\n\n  toString() {\n    let seen = []\n    function scan(m) {\n      seen.push(m)\n      for (let i = 1; i < m.next.length; i += 2)\n        if (seen.indexOf(m.next[i]) == -1) scan(m.next[i])\n    }\n    scan(this)\n    return seen.map((m, i) => {\n      let out = i + (m.validEnd ? \"*\" : \" \") + \" \"\n      for (let i = 0; i < m.next.length; i += 2)\n        out += (i ? \", \" : \"\") + m.next[i].name + \"->\" + seen.indexOf(m.next[i + 1])\n      return out\n    }).join(\"\\n\")\n  }\n}\n\nContentMatch.empty = new ContentMatch(true)\n\nclass TokenStream {\n  constructor(string, nodeTypes) {\n    this.string = string\n    this.nodeTypes = nodeTypes\n    this.inline = null\n    this.pos = 0\n    this.tokens = string.split(/\\s*(?=\\b|\\W|$)/)\n    if (this.tokens[this.tokens.length - 1] == \"\") this.tokens.pop()\n    if (this.tokens[0] == \"\") this.tokens.shift()\n  }\n\n  get next() { return this.tokens[this.pos] }\n\n  eat(tok) { return this.next == tok && (this.pos++ || true) }\n\n  err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\") }\n}\n\nfunction parseExpr(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSeq(stream)) }\n  while (stream.eat(\"|\"))\n  return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n}\n\nfunction parseExprSeq(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSubscript(stream)) }\n  while (stream.next && stream.next != \")\" && stream.next != \"|\")\n  return exprs.length == 1 ? exprs[0] : {type: \"seq\", exprs}\n}\n\nfunction parseExprSubscript(stream) {\n  let expr = parseExprAtom(stream)\n  for (;;) {\n    if (stream.eat(\"+\"))\n      expr = {type: \"plus\", expr}\n    else if (stream.eat(\"*\"))\n      expr = {type: \"star\", expr}\n    else if (stream.eat(\"?\"))\n      expr = {type: \"opt\", expr}\n    else if (stream.eat(\"{\"))\n      expr = parseExprRange(stream, expr)\n    else break\n  }\n  return expr\n}\n\nfunction parseNum(stream) {\n  if (/\\D/.test(stream.next)) stream.err(\"Expected number, got '\" + stream.next + \"'\")\n  let result = Number(stream.next)\n  stream.pos++\n  return result\n}\n\nfunction parseExprRange(stream, expr) {\n  let min = parseNum(stream), max = min\n  if (stream.eat(\",\")) {\n    if (stream.next != \"}\") max = parseNum(stream)\n    else max = -1\n  }\n  if (!stream.eat(\"}\")) stream.err(\"Unclosed braced range\")\n  return {type: \"range\", min, max, expr}\n}\n\nfunction resolveName(stream, name) {\n  let types = stream.nodeTypes, type = types[name]\n  if (type) return [type]\n  let result = []\n  for (let typeName in types) {\n    let type = types[typeName]\n    if (type.groups.indexOf(name) > -1) result.push(type)\n  }\n  if (result.length == 0) stream.err(\"No node type or group '\" + name + \"' found\")\n  return result\n}\n\nfunction parseExprAtom(stream) {\n  if (stream.eat(\"(\")) {\n    let expr = parseExpr(stream)\n    if (!stream.eat(\")\")) stream.err(\"Missing closing paren\")\n    return expr\n  } else if (!/\\W/.test(stream.next)) {\n    let exprs = resolveName(stream, stream.next).map(type => {\n      if (stream.inline == null) stream.inline = type.isInline\n      else if (stream.inline != type.isInline) stream.err(\"Mixing inline and block content\")\n      return {type: \"name\", value: type}\n    })\n    stream.pos++\n    return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n  } else {\n    stream.err(\"Unexpected token '\" + stream.next + \"'\")\n  }\n}\n\n// The code below helps compile a regular-expression-like language\n// into a deterministic finite automaton. For a good introduction to\n// these concepts, see https://swtch.com/~rsc/regexp/regexp1.html\n\n// : (Object) → [[{term: ?any, to: number}]]\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n  let nfa = [[]]\n  connect(compile(expr, 0), node())\n  return nfa\n\n  function node() { return nfa.push([]) - 1 }\n  function edge(from, to, term) {\n    let edge = {term, to}\n    nfa[from].push(edge)\n    return edge\n  }\n  function connect(edges, to) { edges.forEach(edge => edge.to = to) }\n\n  function compile(expr, from) {\n    if (expr.type == \"choice\") {\n      return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), [])\n    } else if (expr.type == \"seq\") {\n      for (let i = 0;; i++) {\n        let next = compile(expr.exprs[i], from)\n        if (i == expr.exprs.length - 1) return next\n        connect(next, from = node())\n      }\n    } else if (expr.type == \"star\") {\n      let loop = node()\n      edge(from, loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"plus\") {\n      let loop = node()\n      connect(compile(expr.expr, from), loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"opt\") {\n      return [edge(from)].concat(compile(expr.expr, from))\n    } else if (expr.type == \"range\") {\n      let cur = from\n      for (let i = 0; i < expr.min; i++) {\n        let next = node()\n        connect(compile(expr.expr, cur), next)\n        cur = next\n      }\n      if (expr.max == -1) {\n        connect(compile(expr.expr, cur), cur)\n      } else {\n        for (let i = expr.min; i < expr.max; i++) {\n          let next = node()\n          edge(cur, next)\n          connect(compile(expr.expr, cur), next)\n          cur = next\n        }\n      }\n      return [edge(cur)]\n    } else if (expr.type == \"name\") {\n      return [edge(from, null, expr.value)]\n    }\n  }\n}\n\nfunction cmp(a, b) { return b - a }\n\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n  let result = []\n  scan(node)\n  return result.sort(cmp)\n\n  function scan(node) {\n    let edges = nfa[node]\n    if (edges.length == 1 && !edges[0].term) return scan(edges[0].to)\n    result.push(node)\n    for (let i = 0; i < edges.length; i++) {\n      let {term, to} = edges[i]\n      if (!term && result.indexOf(to) == -1) scan(to)\n    }\n  }\n}\n\n// : ([[{term: ?any, to: number}]]) → ContentMatch\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n  let labeled = Object.create(null)\n  return explore(nullFrom(nfa, 0))\n\n  function explore(states) {\n    let out = []\n    states.forEach(node => {\n      nfa[node].forEach(({term, to}) => {\n        if (!term) return\n        let known = out.indexOf(term), set = known > -1 && out[known + 1]\n        nullFrom(nfa, to).forEach(node => {\n          if (!set) out.push(term, set = [])\n          if (set.indexOf(node) == -1) set.push(node)\n        })\n      })\n    })\n    let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1)\n    for (let i = 0; i < out.length; i += 2) {\n      let states = out[i + 1].sort(cmp)\n      state.next.push(out[i], labeled[states.join(\",\")] || explore(states))\n    }\n    return state\n  }\n}\n\nfunction checkForDeadEnds(match, stream) {\n  for (let i = 0, work = [match]; i < work.length; i++) {\n    let state = work[i], dead = !state.validEnd, nodes = []\n    for (let j = 0; j < state.next.length; j += 2) {\n      let node = state.next[j], next = state.next[j + 1]\n      nodes.push(node.name)\n      if (dead && !(node.isText || node.hasRequiredAttrs())) dead = false\n      if (work.indexOf(next) == -1) work.push(next)\n    }\n    if (dead) stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\")\n  }\n}\n","import OrderedMap from \"orderedmap\"\n\nimport {Node, TextNode} from \"./node\"\nimport {Fragment} from \"./fragment\"\nimport {Mark} from \"./mark\"\nimport {ContentMatch} from \"./content\"\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n  let defaults = Object.create(null)\n  for (let attrName in attrs) {\n    let attr = attrs[attrName]\n    if (!attr.hasDefault) return null\n    defaults[attrName] = attr.default\n  }\n  return defaults\n}\n\nfunction computeAttrs(attrs, value) {\n  let built = Object.create(null)\n  for (let name in attrs) {\n    let given = value && value[name]\n    if (given === undefined) {\n      let attr = attrs[name]\n      if (attr.hasDefault) given = attr.default\n      else throw new RangeError(\"No value supplied for attribute \" + name)\n    }\n    built[name] = given\n  }\n  return built\n}\n\nfunction initAttrs(attrs) {\n  let result = Object.create(null)\n  if (attrs) for (let name in attrs) result[name] = new Attribute(attrs[name])\n  return result\n}\n\n// ::- Node types are objects allocated once per `Schema` and used to\n// [tag](#model.Node.type) `Node` instances. They contain information\n// about the node type, such as its name and what kind of node it\n// represents.\nexport class NodeType {\n  constructor(name, schema, spec) {\n    // :: string\n    // The name the node type has in this schema.\n    this.name = name\n\n    // :: Schema\n    // A link back to the `Schema` the node type belongs to.\n    this.schema = schema\n\n    // :: NodeSpec\n    // The spec that this type is based on\n    this.spec = spec\n\n    this.groups = spec.group ? spec.group.split(\" \") : []\n    this.attrs = initAttrs(spec.attrs)\n\n    this.defaultAttrs = defaultAttrs(this.attrs)\n\n    // :: ContentMatch\n    // The starting match of the node type's content expression.\n    this.contentMatch = null\n\n    // : ?[MarkType]\n    // The set of marks allowed in this node. `null` means all marks\n    // are allowed.\n    this.markSet = null\n\n    // :: bool\n    // True if this node type has inline content.\n    this.inlineContent = null\n\n    // :: bool\n    // True if this is a block type\n    this.isBlock = !(spec.inline || name == \"text\")\n\n    // :: bool\n    // True if this is the text node type.\n    this.isText = name == \"text\"\n  }\n\n  // :: bool\n  // True if this is an inline type.\n  get isInline() { return !this.isBlock }\n\n  // :: bool\n  // True if this is a textblock type, a block that contains inline\n  // content.\n  get isTextblock() { return this.isBlock && this.inlineContent }\n\n  // :: bool\n  // True for node types that allow no content.\n  get isLeaf() { return this.contentMatch == ContentMatch.empty }\n\n  // :: bool\n  // True when this node is an atom, i.e. when it does not have\n  // directly editable content.\n  get isAtom() { return this.isLeaf || this.spec.atom }\n\n  // :: () → bool\n  // Tells you whether this node type has any required attributes.\n  hasRequiredAttrs() {\n    for (let n in this.attrs) if (this.attrs[n].isRequired) return true\n    return false\n  }\n\n  compatibleContent(other) {\n    return this == other || this.contentMatch.compatible(other.contentMatch)\n  }\n\n  computeAttrs(attrs) {\n    if (!attrs && this.defaultAttrs) return this.defaultAttrs\n    else return computeAttrs(this.attrs, attrs)\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Create a `Node` of this type. The given attributes are\n  // checked and defaulted (you can pass `null` to use the type's\n  // defaults entirely, if no required attributes exist). `content`\n  // may be a `Fragment`, a node, an array of nodes, or\n  // `null`. Similarly `marks` may be `null` to default to the empty\n  // set of marks.\n  create(attrs, content, marks) {\n    if (this.isText) throw new Error(\"NodeType.create can't construct text nodes\")\n    return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks))\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Like [`create`](#model.NodeType.create), but check the given content\n  // against the node type's content restrictions, and throw an error\n  // if it doesn't match.\n  createChecked(attrs, content, marks) {\n    content = Fragment.from(content)\n    if (!this.validContent(content))\n      throw new RangeError(\"Invalid content for node \" + this.name)\n    return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks))\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → ?Node\n  // Like [`create`](#model.NodeType.create), but see if it is necessary to\n  // add nodes to the start or end of the given fragment to make it\n  // fit the node. If no fitting wrapping can be found, return null.\n  // Note that, due to the fact that required nodes can always be\n  // created, this will always succeed if you pass null or\n  // `Fragment.empty` as content.\n  createAndFill(attrs, content, marks) {\n    attrs = this.computeAttrs(attrs)\n    content = Fragment.from(content)\n    if (content.size) {\n      let before = this.contentMatch.fillBefore(content)\n      if (!before) return null\n      content = before.append(content)\n    }\n    let after = this.contentMatch.matchFragment(content).fillBefore(Fragment.empty, true)\n    if (!after) return null\n    return new Node(this, attrs, content.append(after), Mark.setFrom(marks))\n  }\n\n  // :: (Fragment) → bool\n  // Returns true if the given fragment is valid content for this node\n  // type with the given attributes.\n  validContent(content) {\n    let result = this.contentMatch.matchFragment(content)\n    if (!result || !result.validEnd) return false\n    for (let i = 0; i < content.childCount; i++)\n      if (!this.allowsMarks(content.child(i).marks)) return false\n    return true\n  }\n\n  // :: (MarkType) → bool\n  // Check whether the given mark type is allowed in this node.\n  allowsMarkType(markType) {\n    return this.markSet == null || this.markSet.indexOf(markType) > -1\n  }\n\n  // :: ([Mark]) → bool\n  // Test whether the given set of marks are allowed in this node.\n  allowsMarks(marks) {\n    if (this.markSet == null) return true\n    for (let i = 0; i < marks.length; i++) if (!this.allowsMarkType(marks[i].type)) return false\n    return true\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Removes the marks that are not allowed in this node from the given set.\n  allowedMarks(marks) {\n    if (this.markSet == null) return marks\n    let copy\n    for (let i = 0; i < marks.length; i++) {\n      if (!this.allowsMarkType(marks[i].type)) {\n        if (!copy) copy = marks.slice(0, i)\n      } else if (copy) {\n        copy.push(marks[i])\n      }\n    }\n    return !copy ? marks : copy.length ? copy : Mark.empty\n  }\n\n  static compile(nodes, schema) {\n    let result = Object.create(null)\n    nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec))\n\n    let topType = schema.spec.topNode || \"doc\"\n    if (!result[topType]) throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\")\n    if (!result.text) throw new RangeError(\"Every schema needs a 'text' type\")\n    for (let _ in result.text.attrs) throw new RangeError(\"The text node type should not have attributes\")\n\n    return result\n  }\n}\n\n// Attribute descriptors\n\nclass Attribute {\n  constructor(options) {\n    this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\")\n    this.default = options.default\n  }\n\n  get isRequired() {\n    return !this.hasDefault\n  }\n}\n\n// Marks\n\n// ::- Like nodes, marks (which are associated with nodes to signify\n// things like emphasis or being part of a link) are\n// [tagged](#model.Mark.type) with type objects, which are\n// instantiated once per `Schema`.\nexport class MarkType {\n  constructor(name, rank, schema, spec) {\n    // :: string\n    // The name of the mark type.\n    this.name = name\n\n    // :: Schema\n    // The schema that this mark type instance is part of.\n    this.schema = schema\n\n    // :: MarkSpec\n    // The spec on which the type is based.\n    this.spec = spec\n\n    this.attrs = initAttrs(spec.attrs)\n\n    this.rank = rank\n    this.excluded = null\n    let defaults = defaultAttrs(this.attrs)\n    this.instance = defaults && new Mark(this, defaults)\n  }\n\n  // :: (?Object) → Mark\n  // Create a mark of this type. `attrs` may be `null` or an object\n  // containing only some of the mark's attributes. The others, if\n  // they have defaults, will be added.\n  create(attrs) {\n    if (!attrs && this.instance) return this.instance\n    return new Mark(this, computeAttrs(this.attrs, attrs))\n  }\n\n  static compile(marks, schema) {\n    let result = Object.create(null), rank = 0\n    marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec))\n    return result\n  }\n\n  // :: ([Mark]) → [Mark]\n  // When there is a mark of this type in the given set, a new set\n  // without it is returned. Otherwise, the input set is returned.\n  removeFromSet(set) {\n    for (var i = 0; i < set.length; i++) if (set[i].type == this) {\n      set = set.slice(0, i).concat(set.slice(i + 1))\n      i--\n    }\n    return set\n  }\n\n  // :: ([Mark]) → ?Mark\n  // Tests whether there is a mark of this type in the given set.\n  isInSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (set[i].type == this) return set[i]\n  }\n\n  // :: (MarkType) → bool\n  // Queries whether a given mark type is\n  // [excluded](#model.MarkSpec.excludes) by this one.\n  excludes(other) {\n    return this.excluded.indexOf(other) > -1\n  }\n}\n\n// SchemaSpec:: interface\n// An object describing a schema, as passed to the [`Schema`](#model.Schema)\n// constructor.\n//\n//   nodes:: union<Object<NodeSpec>, OrderedMap<NodeSpec>>\n//   The node types in this schema. Maps names to\n//   [`NodeSpec`](#model.NodeSpec) objects that describe the node type\n//   associated with that name. Their order is significant—it\n//   determines which [parse rules](#model.NodeSpec.parseDOM) take\n//   precedence by default, and which nodes come first in a given\n//   [group](#model.NodeSpec.group).\n//\n//   marks:: ?union<Object<MarkSpec>, OrderedMap<MarkSpec>>\n//   The mark types that exist in this schema. The order in which they\n//   are provided determines the order in which [mark\n//   sets](#model.Mark.addToSet) are sorted and in which [parse\n//   rules](#model.MarkSpec.parseDOM) are tried.\n//\n//   topNode:: ?string\n//   The name of the default top-level node for the schema. Defaults\n//   to `\"doc\"`.\n\n// NodeSpec:: interface\n//\n//   content:: ?string\n//   The content expression for this node, as described in the [schema\n//   guide](/docs/guide/#schema.content_expressions). When not given,\n//   the node does not allow any content.\n//\n//   marks:: ?string\n//   The marks that are allowed inside of this node. May be a\n//   space-separated string referring to mark names or groups, `\"_\"`\n//   to explicitly allow all marks, or `\"\"` to disallow marks. When\n//   not given, nodes with inline content default to allowing all\n//   marks, other nodes default to not allowing marks.\n//\n//   group:: ?string\n//   The group or space-separated groups to which this node belongs,\n//   which can be referred to in the content expressions for the\n//   schema.\n//\n//   inline:: ?bool\n//   Should be set to true for inline nodes. (Implied for text nodes.)\n//\n//   atom:: ?bool\n//   Can be set to true to indicate that, though this isn't a [leaf\n//   node](#model.NodeType.isLeaf), it doesn't have directly editable\n//   content and should be treated as a single unit in the view.\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that nodes of this type get.\n//\n//   selectable:: ?bool\n//   Controls whether nodes of this type can be selected as a [node\n//   selection](#state.NodeSelection). Defaults to true for non-text\n//   nodes.\n//\n//   draggable:: ?bool\n//   Determines whether nodes of this type can be dragged without\n//   being selected. Defaults to false.\n//\n//   code:: ?bool\n//   Can be used to indicate that this node contains code, which\n//   causes some commands to behave differently.\n//\n//   defining:: ?bool\n//   Determines whether this node is considered an important parent\n//   node during replace operations (such as paste). Non-defining (the\n//   default) nodes get dropped when their entire content is replaced,\n//   whereas defining nodes persist and wrap the inserted content.\n//   Likewise, in _inserted_ content the defining parents of the\n//   content are preserved when possible. Typically,\n//   non-default-paragraph textblock types, and possibly list items,\n//   are marked as defining.\n//\n//   isolating:: ?bool\n//   When enabled (default is false), the sides of nodes of this type\n//   count as boundaries that regular editing operations, like\n//   backspacing or lifting, won't cross. An example of a node that\n//   should probably have this enabled is a table cell.\n//\n//   toDOM:: ?(node: Node) → DOMOutputSpec\n//   Defines the default way a node of this type should be serialized\n//   to DOM/HTML (as used by\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)).\n//   Should return a DOM node or an [array\n//   structure](#model.DOMOutputSpec) that describes one, with an\n//   optional number zero (“hole”) in it to indicate where the node's\n//   content should be inserted.\n//\n//   For text nodes, the default is to create a text DOM node. Though\n//   it is possible to create a serializer where text is rendered\n//   differently, this is not supported inside the editor, so you\n//   shouldn't override that in your text node spec.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this node, which can be\n//   used by [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) to\n//   automatically derive a parser. The `node` field in the rules is\n//   implied (the name of this node will be filled in automatically).\n//   If you supply your own parser, you do not need to also specify\n//   parsing rules in your schema.\n//\n//   toDebugString:: ?(node: Node) -> string\n//   Defines the default way a node of this type should be serialized\n//   to a string representation for debugging (e.g. in error messages).\n\n// MarkSpec:: interface\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that marks of this type get.\n//\n//   inclusive:: ?bool\n//   Whether this mark should be active when the cursor is positioned\n//   at its end (or at its start when that is also the start of the\n//   parent node). Defaults to true.\n//\n//   excludes:: ?string\n//   Determines which other marks this mark can coexist with. Should\n//   be a space-separated strings naming other marks or groups of marks.\n//   When a mark is [added](#model.Mark.addToSet) to a set, all marks\n//   that it excludes are removed in the process. If the set contains\n//   any mark that excludes the new mark but is not, itself, excluded\n//   by the new mark, the mark can not be added an the set. You can\n//   use the value `\"_\"` to indicate that the mark excludes all\n//   marks in the schema.\n//\n//   Defaults to only being exclusive with marks of the same type. You\n//   can set it to an empty string (or any string not containing the\n//   mark's own name) to allow multiple marks of a given type to\n//   coexist (as long as they have different attributes).\n//\n//   group:: ?string\n//   The group or space-separated groups to which this mark belongs.\n//\n//   spanning:: ?bool\n//   Determines whether marks of this type can span multiple adjacent\n//   nodes when serialized to DOM/HTML. Defaults to true.\n//\n//   toDOM:: ?(mark: Mark, inline: bool) → DOMOutputSpec\n//   Defines the default way marks of this type should be serialized\n//   to DOM/HTML. When the resulting spec contains a hole, that is\n//   where the marked content is placed. Otherwise, it is appended to\n//   the top node.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this mark (see the\n//   corresponding [node spec field](#model.NodeSpec.parseDOM)). The\n//   `mark` field in the rules is implied.\n\n// AttributeSpec:: interface\n//\n// Used to [define](#model.NodeSpec.attrs) attributes on nodes or\n// marks.\n//\n//   default:: ?any\n//   The default value for this attribute, to use when no explicit\n//   value is provided. Attributes that have no default must be\n//   provided whenever a node or mark of a type that has them is\n//   created.\n\n// ::- A document schema. Holds [node](#model.NodeType) and [mark\n// type](#model.MarkType) objects for the nodes and marks that may\n// occur in conforming documents, and provides functionality for\n// creating and deserializing such documents.\nexport class Schema {\n  // :: (SchemaSpec)\n  // Construct a schema from a schema [specification](#model.SchemaSpec).\n  constructor(spec) {\n    // :: SchemaSpec\n    // The [spec](#model.SchemaSpec) on which the schema is based,\n    // with the added guarantee that its `nodes` and `marks`\n    // properties are\n    // [`OrderedMap`](https://github.com/marijnh/orderedmap) instances\n    // (not raw objects).\n    this.spec = {}\n    for (let prop in spec) this.spec[prop] = spec[prop]\n    this.spec.nodes = OrderedMap.from(spec.nodes)\n    this.spec.marks = OrderedMap.from(spec.marks)\n\n    // :: Object<NodeType>\n    // An object mapping the schema's node names to node type objects.\n    this.nodes = NodeType.compile(this.spec.nodes, this)\n\n    // :: Object<MarkType>\n    // A map from mark names to mark type objects.\n    this.marks = MarkType.compile(this.spec.marks, this)\n\n    let contentExprCache = Object.create(null)\n    for (let prop in this.nodes) {\n      if (prop in this.marks)\n        throw new RangeError(prop + \" can not be both a node and a mark\")\n      let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks\n      type.contentMatch = contentExprCache[contentExpr] ||\n        (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes))\n      type.inlineContent = type.contentMatch.inlineContent\n      type.markSet = markExpr == \"_\" ? null :\n        markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n        markExpr == \"\" || !type.inlineContent ? [] : null\n    }\n    for (let prop in this.marks) {\n      let type = this.marks[prop], excl = type.spec.excludes\n      type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"))\n    }\n\n    this.nodeFromJSON = this.nodeFromJSON.bind(this)\n    this.markFromJSON = this.markFromJSON.bind(this)\n\n    // :: NodeType\n    // The type of the [default top node](#model.SchemaSpec.topNode)\n    // for this schema.\n    this.topNodeType = this.nodes[this.spec.topNode || \"doc\"]\n\n    // :: Object\n    // An object for storing whatever values modules may want to\n    // compute and cache per schema. (If you want to store something\n    // in it, try to use property names unlikely to clash.)\n    this.cached = Object.create(null)\n    this.cached.wrappings = Object.create(null)\n  }\n\n  // :: (union<string, NodeType>, ?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Create a node in this schema. The `type` may be a string or a\n  // `NodeType` instance. Attributes will be extended\n  // with defaults, `content` may be a `Fragment`,\n  // `null`, a `Node`, or an array of nodes.\n  node(type, attrs, content, marks) {\n    if (typeof type == \"string\")\n      type = this.nodeType(type)\n    else if (!(type instanceof NodeType))\n      throw new RangeError(\"Invalid node type: \" + type)\n    else if (type.schema != this)\n      throw new RangeError(\"Node type from different schema used (\" + type.name + \")\")\n\n    return type.createChecked(attrs, content, marks)\n  }\n\n  // :: (string, ?[Mark]) → Node\n  // Create a text node in the schema. Empty text nodes are not\n  // allowed.\n  text(text, marks) {\n    let type = this.nodes.text\n    return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks))\n  }\n\n  // :: (union<string, MarkType>, ?Object) → Mark\n  // Create a mark with the given type and attributes.\n  mark(type, attrs) {\n    if (typeof type == \"string\") type = this.marks[type]\n    return type.create(attrs)\n  }\n\n  // :: (Object) → Node\n  // Deserialize a node from its JSON representation. This method is\n  // bound.\n  nodeFromJSON(json) {\n    return Node.fromJSON(this, json)\n  }\n\n  // :: (Object) → Mark\n  // Deserialize a mark from its JSON representation. This method is\n  // bound.\n  markFromJSON(json) {\n    return Mark.fromJSON(this, json)\n  }\n\n  nodeType(name) {\n    let found = this.nodes[name]\n    if (!found) throw new RangeError(\"Unknown node type: \" + name)\n    return found\n  }\n}\n\nfunction gatherMarks(schema, marks) {\n  let found = []\n  for (let i = 0; i < marks.length; i++) {\n    let name = marks[i], mark = schema.marks[name], ok = mark\n    if (mark) {\n      found.push(mark)\n    } else {\n      for (let prop in schema.marks) {\n        let mark = schema.marks[prop]\n        if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n          found.push(ok = mark)\n      }\n    }\n    if (!ok) throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\")\n  }\n  return found\n}\n","import {Fragment} from \"./fragment\"\nimport {Slice} from \"./replace\"\nimport {Mark} from \"./mark\"\n\n// ParseOptions:: interface\n// These are the options recognized by the\n// [`parse`](#model.DOMParser.parse) and\n// [`parseSlice`](#model.DOMParser.parseSlice) methods.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   By default, whitespace is collapsed as per HTML's rules. Pass\n//   `true` to preserve whitespace, but normalize newlines to\n//   spaces, and `\"full\"` to preserve whitespace entirely.\n//\n//   findPositions:: ?[{node: dom.Node, offset: number}]\n//   When given, the parser will, beside parsing the content,\n//   record the document positions of the given DOM positions. It\n//   will do so by writing to the objects, adding a `pos` property\n//   that holds the document position. DOM positions that are not\n//   in the parsed content will not be written to.\n//\n//   from:: ?number\n//   The child node index to start parsing from.\n//\n//   to:: ?number\n//   The child node index to stop parsing at.\n//\n//   topNode:: ?Node\n//   By default, the content is parsed into the schema's default\n//   [top node type](#model.Schema.topNodeType). You can pass this\n//   option to use the type and attributes from a different node\n//   as the top container.\n//\n//   topMatch:: ?ContentMatch\n//   Provide the starting content match that content parsed into the\n//   top node is matched against.\n//\n//   context:: ?ResolvedPos\n//   A set of additional nodes to count as\n//   [context](#model.ParseRule.context) when parsing, above the\n//   given [top node](#model.ParseOptions.topNode).\n\n// ParseRule:: interface\n// A value that describes how to parse a given DOM node or inline\n// style as a ProseMirror node or mark.\n//\n//   tag:: ?string\n//   A CSS selector describing the kind of DOM elements to match. A\n//   single rule should have _either_ a `tag` or a `style` property.\n//\n//   namespace:: ?string\n//   The namespace to match. This should be used with `tag`.\n//   Nodes are only matched when the namespace matches or this property\n//   is null.\n//\n//   style:: ?string\n//   A CSS property name to match. When given, this rule matches\n//   inline styles that list that property. May also have the form\n//   `\"property=value\"`, in which case the rule only matches if the\n//   property's value exactly matches the given value. (For more\n//   complicated filters, use [`getAttrs`](#model.ParseRule.getAttrs)\n//   and return false to indicate that the match failed.) Rules\n//   matching styles may only produce [marks](#model.ParseRule.mark),\n//   not nodes.\n//\n//   priority:: ?number\n//   Can be used to change the order in which the parse rules in a\n//   schema are tried. Those with higher priority come first. Rules\n//   without a priority are counted as having priority 50. This\n//   property is only meaningful in a schema—when directly\n//   constructing a parser, the order of the rule array is used.\n//\n//   consuming:: ?boolean\n//   By default, when a rule matches an element or style, no further\n//   rules get a chance to match it. By setting this to `false`, you\n//   indicate that even when this rule matches, other rules that come\n//   after it should also run.\n//\n//   context:: ?string\n//   When given, restricts this rule to only match when the current\n//   context—the parent nodes into which the content is being\n//   parsed—matches this expression. Should contain one or more node\n//   names or node group names followed by single or double slashes.\n//   For example `\"paragraph/\"` means the rule only matches when the\n//   parent node is a paragraph, `\"blockquote/paragraph/\"` restricts\n//   it to be in a paragraph that is inside a blockquote, and\n//   `\"section//\"` matches any position inside a section—a double\n//   slash matches any sequence of ancestor nodes. To allow multiple\n//   different contexts, they can be separated by a pipe (`|`)\n//   character, as in `\"blockquote/|list_item/\"`.\n//\n//   node:: ?string\n//   The name of the node type to create when this rule matches. Only\n//   valid for rules with a `tag` property, not for style rules. Each\n//   rule should have one of a `node`, `mark`, or `ignore` property\n//   (except when it appears in a [node](#model.NodeSpec.parseDOM) or\n//   [mark spec](#model.MarkSpec.parseDOM), in which case the `node`\n//   or `mark` property will be derived from its position).\n//\n//   mark:: ?string\n//   The name of the mark type to wrap the matched content in.\n//\n//   ignore:: ?bool\n//   When true, ignore content that matches this rule.\n//\n//   closeParent:: ?bool\n//   When true, finding an element that matches this rule will close\n//   the current node.\n//\n//   skip:: ?bool\n//   When true, ignore the node that matches this rule, but do parse\n//   its content.\n//\n//   attrs:: ?Object\n//   Attributes for the node or mark created by this rule. When\n//   `getAttrs` is provided, it takes precedence.\n//\n//   getAttrs:: ?(union<dom.Node, string>) → ?union<Object, false>\n//   A function used to compute the attributes for the node or mark\n//   created by this rule. Can also be used to describe further\n//   conditions the DOM element or style must match. When it returns\n//   `false`, the rule won't match. When it returns null or undefined,\n//   that is interpreted as an empty/default set of attributes.\n//\n//   Called with a DOM Element for `tag` rules, and with a string (the\n//   style's value) for `style` rules.\n//\n//   contentElement:: ?union<string, (dom.Node) → dom.Node>\n//   For `tag` rules that produce non-leaf nodes or marks, by default\n//   the content of the DOM element is parsed as content of the mark\n//   or node. If the child nodes are in a descendent node, this may be\n//   a CSS selector string that the parser must use to find the actual\n//   content element, or a function that returns the actual content\n//   element to the parser.\n//\n//   getContent:: ?(dom.Node, schema: Schema) → Fragment\n//   Can be used to override the content of a matched node. When\n//   present, instead of parsing the node's child nodes, the result of\n//   this function is used.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   Controls whether whitespace should be preserved when parsing the\n//   content inside the matched element. `false` means whitespace may\n//   be collapsed, `true` means that whitespace should be preserved\n//   but newlines normalized to spaces, and `\"full\"` means that\n//   newlines should also be preserved.\n\n// ::- A DOM parser represents a strategy for parsing DOM content into\n// a ProseMirror document conforming to a given schema. Its behavior\n// is defined by an array of [rules](#model.ParseRule).\nexport class DOMParser {\n  // :: (Schema, [ParseRule])\n  // Create a parser that targets the given schema, using the given\n  // parsing rules.\n  constructor(schema, rules) {\n    // :: Schema\n    // The schema into which the parser parses.\n    this.schema = schema\n    // :: [ParseRule]\n    // The set of [parse rules](#model.ParseRule) that the parser\n    // uses, in order of precedence.\n    this.rules = rules\n    this.tags = []\n    this.styles = []\n\n    rules.forEach(rule => {\n      if (rule.tag) this.tags.push(rule)\n      else if (rule.style) this.styles.push(rule)\n    })\n\n    // Only normalize list elements when lists in the schema can't directly contain themselves\n    this.normalizeLists = !this.tags.some(r => {\n      if (!/^(ul|ol)\\b/.test(r.tag) || !r.node) return false\n      let node = schema.nodes[r.node]\n      return node.contentMatch.matchType(node)\n    })\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Node\n  // Parse a document from the content of a DOM node.\n  parse(dom, options = {}) {\n    let context = new ParseContext(this, options, false)\n    context.addAll(dom, null, options.from, options.to)\n    return context.finish()\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Slice\n  // Parses the content of the given DOM node, like\n  // [`parse`](#model.DOMParser.parse), and takes the same set of\n  // options. But unlike that method, which produces a whole node,\n  // this one returns a slice that is open at the sides, meaning that\n  // the schema constraints aren't applied to the start of nodes to\n  // the left of the input and the end of nodes at the end.\n  parseSlice(dom, options = {}) {\n    let context = new ParseContext(this, options, true)\n    context.addAll(dom, null, options.from, options.to)\n    return Slice.maxOpen(context.finish())\n  }\n\n  matchTag(dom, context, after) {\n    for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n      let rule = this.tags[i]\n      if (matches(dom, rule.tag) &&\n          (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n          (!rule.context || context.matchesContext(rule.context))) {\n        if (rule.getAttrs) {\n          let result = rule.getAttrs(dom)\n          if (result === false) continue\n          rule.attrs = result\n        }\n        return rule\n      }\n    }\n  }\n\n  matchStyle(prop, value, context, after) {\n    for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n      let rule = this.styles[i]\n      if (rule.style.indexOf(prop) != 0 ||\n          rule.context && !context.matchesContext(rule.context) ||\n          // Test that the style string either precisely matches the prop,\n          // or has an '=' sign after the prop, followed by the given\n          // value.\n          rule.style.length > prop.length &&\n          (rule.style.charCodeAt(prop.length) != 61 || rule.style.slice(prop.length + 1) != value))\n        continue\n      if (rule.getAttrs) {\n        let result = rule.getAttrs(value)\n        if (result === false) continue\n        rule.attrs = result\n      }\n      return rule\n    }\n  }\n\n  // : (Schema) → [ParseRule]\n  static schemaRules(schema) {\n    let result = []\n    function insert(rule) {\n      let priority = rule.priority == null ? 50 : rule.priority, i = 0\n      for (; i < result.length; i++) {\n        let next = result[i], nextPriority = next.priority == null ? 50 : next.priority\n        if (nextPriority < priority) break\n      }\n      result.splice(i, 0, rule)\n    }\n\n    for (let name in schema.marks) {\n      let rules = schema.marks[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.mark = name\n      })\n    }\n    for (let name in schema.nodes) {\n      let rules = schema.nodes[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.node = name\n      })\n    }\n    return result\n  }\n\n  // :: (Schema) → DOMParser\n  // Construct a DOM parser using the parsing rules listed in a\n  // schema's [node specs](#model.NodeSpec.parseDOM), reordered by\n  // [priority](#model.ParseRule.priority).\n  static fromSchema(schema) {\n    return schema.cached.domParser ||\n      (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)))\n  }\n}\n\n// : Object<bool> The block-level tags in HTML5\nconst blockTags = {\n  address: true, article: true, aside: true, blockquote: true, canvas: true,\n  dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n  footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n  h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n  output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n}\n\n// : Object<bool> The tags that we normally ignore.\nconst ignoreTags = {\n  head: true, noscript: true, object: true, script: true, style: true, title: true\n}\n\n// : Object<bool> List tags.\nconst listTags = {ol: true, ul: true}\n\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4\n\nfunction wsOptionsFor(preserveWhitespace) {\n  return (preserveWhitespace ? OPT_PRESERVE_WS : 0) | (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0)\n}\n\nclass NodeContext {\n  constructor(type, attrs, marks, pendingMarks, solid, match, options) {\n    this.type = type\n    this.attrs = attrs\n    this.solid = solid\n    this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch)\n    this.options = options\n    this.content = []\n    // Marks applied to this node itself\n    this.marks = marks\n    // Marks applied to its children\n    this.activeMarks = Mark.none\n    // Marks that can't apply here, but will be used in children if possible\n    this.pendingMarks = pendingMarks\n    // Nested Marks with same type\n    this.stashMarks = []\n  }\n\n  findWrapping(node) {\n    if (!this.match) {\n      if (!this.type) return []\n      let fill = this.type.contentMatch.fillBefore(Fragment.from(node))\n      if (fill) {\n        this.match = this.type.contentMatch.matchFragment(fill)\n      } else {\n        let start = this.type.contentMatch, wrap\n        if (wrap = start.findWrapping(node.type)) {\n          this.match = start\n          return wrap\n        } else {\n          return null\n        }\n      }\n    }\n    return this.match.findWrapping(node.type)\n  }\n\n  finish(openEnd) {\n    if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n      let last = this.content[this.content.length - 1], m\n      if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n        if (last.text.length == m[0].length) this.content.pop()\n        else this.content[this.content.length - 1] = last.withText(last.text.slice(0, last.text.length - m[0].length))\n      }\n    }\n    let content = Fragment.from(this.content)\n    if (!openEnd && this.match)\n      content = content.append(this.match.fillBefore(Fragment.empty, true))\n    return this.type ? this.type.create(this.attrs, content, this.marks) : content\n  }\n\n  popFromStashMark(mark) {\n    for (let i = this.stashMarks.length - 1; i >= 0; i--)\n      if (mark.eq(this.stashMarks[i])) return this.stashMarks.splice(i, 1)[0]\n  }\n\n  applyPending(nextType) {\n    for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n      let mark = pending[i]\n      if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n          !mark.isInSet(this.activeMarks)) {\n        this.activeMarks = mark.addToSet(this.activeMarks)\n        this.pendingMarks = mark.removeFromSet(this.pendingMarks)\n      }\n    }\n  }\n\n  inlineContext(node) {\n    if (this.type) return this.type.inlineContent\n    if (this.content.length) return this.content[0].isInline\n    return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase())\n  }\n}\n\nclass ParseContext {\n  // : (DOMParser, Object)\n  constructor(parser, options, open) {\n    // : DOMParser The parser we are using.\n    this.parser = parser\n    // : Object The options passed to this parse.\n    this.options = options\n    this.isOpen = open\n    let topNode = options.topNode, topContext\n    let topOptions = wsOptionsFor(options.preserveWhitespace) | (open ? OPT_OPEN_LEFT : 0)\n    if (topNode)\n      topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true,\n                                   options.topMatch || topNode.type.contentMatch, topOptions)\n    else if (open)\n      topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions)\n    else\n      topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions)\n    this.nodes = [topContext]\n    // : [Mark] The current set of marks\n    this.open = 0\n    this.find = options.findPositions\n    this.needsBlock = false\n  }\n\n  get top() {\n    return this.nodes[this.open]\n  }\n\n  // : (dom.Node)\n  // Add a DOM node to the content. Text is inserted as text node,\n  // otherwise, the node is passed to `addElement` or, if it has a\n  // `style` attribute, `addElementWithStyles`.\n  addDOM(dom) {\n    if (dom.nodeType == 3) {\n      this.addTextNode(dom)\n    } else if (dom.nodeType == 1) {\n      let style = dom.getAttribute(\"style\")\n      let marks = style ? this.readStyles(parseStyles(style)) : null, top = this.top\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.addPendingMark(marks[i])\n      this.addElement(dom)\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.removePendingMark(marks[i], top)\n    }\n  }\n\n  addTextNode(dom) {\n    let value = dom.nodeValue\n    let top = this.top\n    if (top.options & OPT_PRESERVE_WS_FULL ||\n        top.inlineContext(dom) ||\n        /[^ \\t\\r\\n\\u000c]/.test(value)) {\n      if (!(top.options & OPT_PRESERVE_WS)) {\n        value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \")\n        // If this starts with whitespace, and there is no node before it, or\n        // a hard break, or a text node that ends with whitespace, strip the\n        // leading space.\n        if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n          let nodeBefore = top.content[top.content.length - 1]\n          let domNodeBefore = dom.previousSibling\n          if (!nodeBefore ||\n              (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n              (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n            value = value.slice(1)\n        }\n      } else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n        value = value.replace(/\\r?\\n|\\r/g, \" \")\n      } else {\n        value = value.replace(/\\r\\n?/g, \"\\n\")\n      }\n      if (value) this.insertNode(this.parser.schema.text(value))\n      this.findInText(dom)\n    } else {\n      this.findInside(dom)\n    }\n  }\n\n  // : (dom.Element, ?ParseRule)\n  // Try to find a handler for the given tag and use that to parse. If\n  // none is found, the element's content nodes are added directly.\n  addElement(dom, matchAfter) {\n    let name = dom.nodeName.toLowerCase(), ruleID\n    if (listTags.hasOwnProperty(name) && this.parser.normalizeLists) normalizeList(dom)\n    let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n        (ruleID = this.parser.matchTag(dom, this, matchAfter))\n    if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n      this.findInside(dom)\n      this.ignoreFallback(dom)\n    } else if (!rule || rule.skip || rule.closeParent) {\n      if (rule && rule.closeParent) this.open = Math.max(0, this.open - 1)\n      else if (rule && rule.skip.nodeType) dom = rule.skip\n      let sync, top = this.top, oldNeedsBlock = this.needsBlock\n      if (blockTags.hasOwnProperty(name)) {\n        sync = true\n        if (!top.type) this.needsBlock = true\n      } else if (!dom.firstChild) {\n        this.leafFallback(dom)\n        return\n      }\n      this.addAll(dom)\n      if (sync) this.sync(top)\n      this.needsBlock = oldNeedsBlock\n    } else {\n      this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : null)\n    }\n  }\n\n  // Called for leaf DOM nodes that would otherwise be ignored\n  leafFallback(dom) {\n    if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n      this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"))\n  }\n\n  // Called for ignored nodes\n  ignoreFallback(dom) {\n    // Ignored BR nodes should at least create an inline context\n    if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n      this.findPlace(this.parser.schema.text(\"-\"))\n  }\n\n  // Run any style parser associated with the node's styles. Either\n  // return an array of marks, or null to indicate some of the styles\n  // had a rule with `ignore` set.\n  readStyles(styles) {\n    let marks = Mark.none\n    style: for (let i = 0; i < styles.length; i += 2) {\n      for (let after = null;;) {\n        let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after)\n        if (!rule) continue style\n        if (rule.ignore) return null\n        marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks)\n        if (rule.consuming === false) after = rule\n        else break\n      }\n    }\n    return marks\n  }\n\n  // : (dom.Element, ParseRule) → bool\n  // Look up a handler for the given node. If none are found, return\n  // false. Otherwise, apply it, use its return value to drive the way\n  // the node's content is wrapped, and return true.\n  addElementByRule(dom, rule, continueAfter) {\n    let sync, nodeType, markType, mark\n    if (rule.node) {\n      nodeType = this.parser.schema.nodes[rule.node]\n      if (!nodeType.isLeaf) {\n        sync = this.enter(nodeType, rule.attrs, rule.preserveWhitespace)\n      } else if (!this.insertNode(nodeType.create(rule.attrs))) {\n        this.leafFallback(dom)\n      }\n    } else {\n      markType = this.parser.schema.marks[rule.mark]\n      mark = markType.create(rule.attrs)\n      this.addPendingMark(mark)\n    }\n    let startIn = this.top\n\n    if (nodeType && nodeType.isLeaf) {\n      this.findInside(dom)\n    } else if (continueAfter) {\n      this.addElement(dom, continueAfter)\n    } else if (rule.getContent) {\n      this.findInside(dom)\n      rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node))\n    } else {\n      let contentDOM = rule.contentElement\n      if (typeof contentDOM == \"string\") contentDOM = dom.querySelector(contentDOM)\n      else if (typeof contentDOM == \"function\") contentDOM = contentDOM(dom)\n      if (!contentDOM) contentDOM = dom\n      this.findAround(dom, contentDOM, true)\n      this.addAll(contentDOM, sync)\n    }\n    if (sync) { this.sync(startIn); this.open-- }\n    if (mark) this.removePendingMark(mark, startIn)\n  }\n\n  // : (dom.Node, ?NodeBuilder, ?number, ?number)\n  // Add all child nodes between `startIndex` and `endIndex` (or the\n  // whole node, if not given). If `sync` is passed, use it to\n  // synchronize after every block element.\n  addAll(parent, sync, startIndex, endIndex) {\n    let index = startIndex || 0\n    for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild,\n             end = endIndex == null ? null : parent.childNodes[endIndex];\n         dom != end; dom = dom.nextSibling, ++index) {\n      this.findAtPoint(parent, index)\n      this.addDOM(dom)\n      if (sync && blockTags.hasOwnProperty(dom.nodeName.toLowerCase()))\n        this.sync(sync)\n    }\n    this.findAtPoint(parent, index)\n  }\n\n  // Try to find a way to fit the given node type into the current\n  // context. May add intermediate wrappers and/or leave non-solid\n  // nodes that we're in.\n  findPlace(node) {\n    let route, sync\n    for (let depth = this.open; depth >= 0; depth--) {\n      let cx = this.nodes[depth]\n      let found = cx.findWrapping(node)\n      if (found && (!route || route.length > found.length)) {\n        route = found\n        sync = cx\n        if (!found.length) break\n      }\n      if (cx.solid) break\n    }\n    if (!route) return false\n    this.sync(sync)\n    for (let i = 0; i < route.length; i++)\n      this.enterInner(route[i], null, false)\n    return true\n  }\n\n  // : (Node) → ?Node\n  // Try to insert the given node, adjusting the context when needed.\n  insertNode(node) {\n    if (node.isInline && this.needsBlock && !this.top.type) {\n      let block = this.textblockFromContext()\n      if (block) this.enterInner(block)\n    }\n    if (this.findPlace(node)) {\n      this.closeExtra()\n      let top = this.top\n      top.applyPending(node.type)\n      if (top.match) top.match = top.match.matchType(node.type)\n      let marks = top.activeMarks\n      for (let i = 0; i < node.marks.length; i++)\n        if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n          marks = node.marks[i].addToSet(marks)\n      top.content.push(node.mark(marks))\n      return true\n    }\n    return false\n  }\n\n  // : (NodeType, ?Object) → bool\n  // Try to start a node of the given type, adjusting the context when\n  // necessary.\n  enter(type, attrs, preserveWS) {\n    let ok = this.findPlace(type.create(attrs))\n    if (ok) this.enterInner(type, attrs, true, preserveWS)\n    return ok\n  }\n\n  // Open a node of the given type\n  enterInner(type, attrs, solid, preserveWS) {\n    this.closeExtra()\n    let top = this.top\n    top.applyPending(type)\n    top.match = top.match && top.match.matchType(type, attrs)\n    let options = preserveWS == null ? top.options & ~OPT_OPEN_LEFT : wsOptionsFor(preserveWS)\n    if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0) options |= OPT_OPEN_LEFT\n    this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options))\n    this.open++\n  }\n\n  // Make sure all nodes above this.open are finished and added to\n  // their parents\n  closeExtra(openEnd) {\n    let i = this.nodes.length - 1\n    if (i > this.open) {\n      for (; i > this.open; i--) this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd))\n      this.nodes.length = this.open + 1\n    }\n  }\n\n  finish() {\n    this.open = 0\n    this.closeExtra(this.isOpen)\n    return this.nodes[0].finish(this.isOpen || this.options.topOpen)\n  }\n\n  sync(to) {\n    for (let i = this.open; i >= 0; i--) if (this.nodes[i] == to) {\n      this.open = i\n      return\n    }\n  }\n\n  get currentPos() {\n    this.closeExtra()\n    let pos = 0\n    for (let i = this.open; i >= 0; i--) {\n      let content = this.nodes[i].content\n      for (let j = content.length - 1; j >= 0; j--)\n        pos += content[j].nodeSize\n      if (i) pos++\n    }\n    return pos\n  }\n\n  findAtPoint(parent, offset) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == parent && this.find[i].offset == offset)\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findInside(parent) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findAround(parent, content, before) {\n    if (parent != content && this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n        let pos = content.compareDocumentPosition(this.find[i].node)\n        if (pos & (before ? 2 : 4))\n          this.find[i].pos = this.currentPos\n      }\n    }\n  }\n\n  findInText(textNode) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == textNode)\n        this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset)\n    }\n  }\n\n  // : (string) → bool\n  // Determines whether the given [context\n  // string](#ParseRule.context) matches this context.\n  matchesContext(context) {\n    if (context.indexOf(\"|\") > -1)\n      return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this)\n\n    let parts = context.split(\"/\")\n    let option = this.options.context\n    let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type)\n    let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1)\n    let match = (i, depth) => {\n      for (; i >= 0; i--) {\n        let part = parts[i]\n        if (part == \"\") {\n          if (i == parts.length - 1 || i == 0) continue\n          for (; depth >= minDepth; depth--)\n            if (match(i - 1, depth)) return true\n          return false\n        } else {\n          let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n              : option && depth >= minDepth ? option.node(depth - minDepth).type\n              : null\n          if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n            return false\n          depth--\n        }\n      }\n      return true\n    }\n    return match(parts.length - 1, this.open)\n  }\n\n  textblockFromContext() {\n    let $context = this.options.context\n    if ($context) for (let d = $context.depth; d >= 0; d--) {\n      let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType\n      if (deflt && deflt.isTextblock && deflt.defaultAttrs) return deflt\n    }\n    for (let name in this.parser.schema.nodes) {\n      let type = this.parser.schema.nodes[name]\n      if (type.isTextblock && type.defaultAttrs) return type\n    }\n  }\n\n  addPendingMark(mark) {\n    let found = findSameMarkInSet(mark, this.top.pendingMarks)\n    if (found) this.top.stashMarks.push(found)\n    this.top.pendingMarks = mark.addToSet(this.top.pendingMarks)\n  }\n\n  removePendingMark(mark, upto) {\n    for (let depth = this.open; depth >= 0; depth--) {\n      let level = this.nodes[depth]\n      let found = level.pendingMarks.lastIndexOf(mark)\n      if (found > -1) {\n        level.pendingMarks = mark.removeFromSet(level.pendingMarks)\n      } else {\n        level.activeMarks = mark.removeFromSet(level.activeMarks)\n        let stashMark = level.popFromStashMark(mark)\n        if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n          level.activeMarks = stashMark.addToSet(level.activeMarks)\n      }\n      if (level == upto) break\n    }\n  }\n}\n\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n  for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n    let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null\n    if (name && listTags.hasOwnProperty(name) && prevItem) {\n      prevItem.appendChild(child)\n      child = prevItem\n    } else if (name == \"li\") {\n      prevItem = child\n    } else if (name) {\n      prevItem = null\n    }\n  }\n}\n\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n  return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector)\n}\n\n// : (string) → [string]\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n  let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = []\n  while (m = re.exec(style)) result.push(m[1], m[2].trim())\n  return result\n}\n\nfunction copy(obj) {\n  let copy = {}\n  for (let prop in obj) copy[prop] = obj[prop]\n  return copy\n}\n\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n  let nodes = nodeType.schema.nodes\n  for (let name in nodes) {\n    let parent = nodes[name]\n    if (!parent.allowsMarkType(markType)) continue\n    let seen = [], scan = match => {\n      seen.push(match)\n      for (let i = 0; i < match.edgeCount; i++) {\n        let {type, next} = match.edge(i)\n        if (type == nodeType) return true\n        if (seen.indexOf(next) < 0 && scan(next)) return true\n      }\n    }\n    if (scan(parent.contentMatch)) return true\n  }\n}\n\nfunction findSameMarkInSet(mark, set) {\n  for (let i = 0; i < set.length; i++) {\n    if (mark.eq(set[i])) return set[i]\n  }\n}\n","// DOMOutputSpec:: interface\n// A description of a DOM structure. Can be either a string, which is\n// interpreted as a text node, a DOM node, which is interpreted as\n// itself, a `{dom: Node, contentDOM: ?Node}` object, or an array.\n//\n// An array describes a DOM element. The first value in the array\n// should be a string—the name of the DOM element, optionally prefixed\n// by a namespace URL and a space. If the second element is plain\n// object, it is interpreted as a set of attributes for the element.\n// Any elements after that (including the 2nd if it's not an attribute\n// object) are interpreted as children of the DOM elements, and must\n// either be valid `DOMOutputSpec` values, or the number zero.\n//\n// The number zero (pronounced “hole”) is used to indicate the place\n// where a node's child nodes should be inserted. If it occurs in an\n// output spec, it should be the only child element in its parent\n// node.\n\n// ::- A DOM serializer knows how to convert ProseMirror nodes and\n// marks of various types to DOM nodes.\nexport class DOMSerializer {\n  // :: (Object<(node: Node) → DOMOutputSpec>, Object<?(mark: Mark, inline: bool) → DOMOutputSpec>)\n  // Create a serializer. `nodes` should map node names to functions\n  // that take a node and return a description of the corresponding\n  // DOM. `marks` does the same for mark names, but also gets an\n  // argument that tells it whether the mark's content is block or\n  // inline content (for typical use, it'll always be inline). A mark\n  // serializer may be `null` to indicate that marks of that type\n  // should not be serialized.\n  constructor(nodes, marks) {\n    // :: Object<(node: Node) → DOMOutputSpec>\n    // The node serialization functions.\n    this.nodes = nodes || {}\n    // :: Object<?(mark: Mark, inline: bool) → DOMOutputSpec>\n    // The mark serialization functions.\n    this.marks = marks || {}\n  }\n\n  // :: (Fragment, ?Object) → dom.DocumentFragment\n  // Serialize the content of this fragment to a DOM fragment. When\n  // not in the browser, the `document` option, containing a DOM\n  // document, should be passed so that the serializer can create\n  // nodes.\n  serializeFragment(fragment, options = {}, target) {\n    if (!target) target = doc(options).createDocumentFragment()\n\n    let top = target, active = null\n    fragment.forEach(node => {\n      if (active || node.marks.length) {\n        if (!active) active = []\n        let keep = 0, rendered = 0\n        while (keep < active.length && rendered < node.marks.length) {\n          let next = node.marks[rendered]\n          if (!this.marks[next.type.name]) { rendered++; continue }\n          if (!next.eq(active[keep]) || next.type.spec.spanning === false) break\n          keep += 2; rendered++\n        }\n        while (keep < active.length) {\n          top = active.pop()\n          active.pop()\n        }\n        while (rendered < node.marks.length) {\n          let add = node.marks[rendered++]\n          let markDOM = this.serializeMark(add, node.isInline, options)\n          if (markDOM) {\n            active.push(add, top)\n            top.appendChild(markDOM.dom)\n            top = markDOM.contentDOM || markDOM.dom\n          }\n        }\n      }\n      top.appendChild(this.serializeNode(node, options))\n    })\n\n    return target\n  }\n\n  // :: (Node, ?Object) → dom.Node\n  // Serialize this node to a DOM node. This can be useful when you\n  // need to serialize a part of a document, as opposed to the whole\n  // document. To serialize a whole document, use\n  // [`serializeFragment`](#model.DOMSerializer.serializeFragment) on\n  // its [content](#model.Node.content).\n  serializeNode(node, options = {}) {\n    let {dom, contentDOM} =\n        DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node))\n    if (contentDOM) {\n      if (node.isLeaf)\n        throw new RangeError(\"Content hole not allowed in a leaf node spec\")\n      if (options.onContent)\n        options.onContent(node, contentDOM, options)\n      else\n        this.serializeFragment(node.content, options, contentDOM)\n    }\n    return dom\n  }\n\n  serializeNodeAndMarks(node, options = {}) {\n    let dom = this.serializeNode(node, options)\n    for (let i = node.marks.length - 1; i >= 0; i--) {\n      let wrap = this.serializeMark(node.marks[i], node.isInline, options)\n      if (wrap) {\n        ;(wrap.contentDOM || wrap.dom).appendChild(dom)\n        dom = wrap.dom\n      }\n    }\n    return dom\n  }\n\n  serializeMark(mark, inline, options = {}) {\n    let toDOM = this.marks[mark.type.name]\n    return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline))\n  }\n\n  // :: (dom.Document, DOMOutputSpec) → {dom: dom.Node, contentDOM: ?dom.Node}\n  // Render an [output spec](#model.DOMOutputSpec) to a DOM node. If\n  // the spec has a hole (zero) in it, `contentDOM` will point at the\n  // node with the hole.\n  static renderSpec(doc, structure, xmlNS = null) {\n    if (typeof structure == \"string\")\n      return {dom: doc.createTextNode(structure)}\n    if (structure.nodeType != null)\n      return {dom: structure}\n    if (structure.dom && structure.dom.nodeType != null)\n      return structure\n    let tagName = structure[0], space = tagName.indexOf(\" \")\n    if (space > 0) {\n      xmlNS = tagName.slice(0, space)\n      tagName = tagName.slice(space + 1)\n    }\n    let contentDOM = null, dom = xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName)\n    let attrs = structure[1], start = 1\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n      start = 2\n      for (let name in attrs) if (attrs[name] != null) {\n        let space = name.indexOf(\" \")\n        if (space > 0) dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name])\n        else dom.setAttribute(name, attrs[name])\n      }\n    }\n    for (let i = start; i < structure.length; i++) {\n      let child = structure[i]\n      if (child === 0) {\n        if (i < structure.length - 1 || i > start)\n          throw new RangeError(\"Content hole must be the only child of its parent node\")\n        return {dom, contentDOM: dom}\n      } else {\n        let {dom: inner, contentDOM: innerContent} = DOMSerializer.renderSpec(doc, child, xmlNS)\n        dom.appendChild(inner)\n        if (innerContent) {\n          if (contentDOM) throw new RangeError(\"Multiple content holes\")\n          contentDOM = innerContent\n        }\n      }\n    }\n    return {dom, contentDOM}\n  }\n\n  // :: (Schema) → DOMSerializer\n  // Build a serializer using the [`toDOM`](#model.NodeSpec.toDOM)\n  // properties in a schema's node and mark specs.\n  static fromSchema(schema) {\n    return schema.cached.domSerializer ||\n      (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)))\n  }\n\n  // : (Schema) → Object<(node: Node) → DOMOutputSpec>\n  // Gather the serializers in a schema's node specs into an object.\n  // This can be useful as a base to build a custom serializer from.\n  static nodesFromSchema(schema) {\n    let result = gatherToDOM(schema.nodes)\n    if (!result.text) result.text = node => node.text\n    return result\n  }\n\n  // : (Schema) → Object<(mark: Mark) → DOMOutputSpec>\n  // Gather the serializers in a schema's mark specs into an object.\n  static marksFromSchema(schema) {\n    return gatherToDOM(schema.marks)\n  }\n}\n\nfunction gatherToDOM(obj) {\n  let result = {}\n  for (let name in obj) {\n    let toDOM = obj[name].spec.toDOM\n    if (toDOM) result[name] = toDOM\n  }\n  return result\n}\n\nfunction doc(options) {\n  // declare global: window\n  return options.document || window.document\n}\n","import {Schema} from \"prosemirror-model\"\n\nconst pDOM = [\"p\", 0], blockquoteDOM = [\"blockquote\", 0], hrDOM = [\"hr\"],\n      preDOM = [\"pre\", [\"code\", 0]], brDOM = [\"br\"]\n\n// :: Object\n// [Specs](#model.NodeSpec) for the nodes defined in this schema.\nexport const nodes = {\n  // :: NodeSpec The top level document node.\n  doc: {\n    content: \"block+\"\n  },\n\n  // :: NodeSpec A plain paragraph textblock. Represented in the DOM\n  // as a `<p>` element.\n  paragraph: {\n    content: \"inline*\",\n    group: \"block\",\n    parseDOM: [{tag: \"p\"}],\n    toDOM() { return pDOM }\n  },\n\n  // :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\n  blockquote: {\n    content: \"block+\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{tag: \"blockquote\"}],\n    toDOM() { return blockquoteDOM }\n  },\n\n  // :: NodeSpec A horizontal rule (`<hr>`).\n  horizontal_rule: {\n    group: \"block\",\n    parseDOM: [{tag: \"hr\"}],\n    toDOM() { return hrDOM }\n  },\n\n  // :: NodeSpec A heading textblock, with a `level` attribute that\n  // should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n  // `<h6>` elements.\n  heading: {\n    attrs: {level: {default: 1}},\n    content: \"inline*\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{tag: \"h1\", attrs: {level: 1}},\n               {tag: \"h2\", attrs: {level: 2}},\n               {tag: \"h3\", attrs: {level: 3}},\n               {tag: \"h4\", attrs: {level: 4}},\n               {tag: \"h5\", attrs: {level: 5}},\n               {tag: \"h6\", attrs: {level: 6}}],\n    toDOM(node) { return [\"h\" + node.attrs.level, 0] }\n  },\n\n  // :: NodeSpec A code listing. Disallows marks or non-text inline\n  // nodes by default. Represented as a `<pre>` element with a\n  // `<code>` element inside of it.\n  code_block: {\n    content: \"text*\",\n    marks: \"\",\n    group: \"block\",\n    code: true,\n    defining: true,\n    parseDOM: [{tag: \"pre\", preserveWhitespace: \"full\"}],\n    toDOM() { return preDOM }\n  },\n\n  // :: NodeSpec The text node.\n  text: {\n    group: \"inline\"\n  },\n\n  // :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n  // `alt`, and `href` attributes. The latter two default to the empty\n  // string.\n  image: {\n    inline: true,\n    attrs: {\n      src: {},\n      alt: {default: null},\n      title: {default: null}\n    },\n    group: \"inline\",\n    draggable: true,\n    parseDOM: [{tag: \"img[src]\", getAttrs(dom) {\n      return {\n        src: dom.getAttribute(\"src\"),\n        title: dom.getAttribute(\"title\"),\n        alt: dom.getAttribute(\"alt\")\n      }\n    }}],\n    toDOM(node) { let {src, alt, title} = node.attrs; return [\"img\", {src, alt, title}] }\n  },\n\n  // :: NodeSpec A hard line break, represented in the DOM as `<br>`.\n  hard_break: {\n    inline: true,\n    group: \"inline\",\n    selectable: false,\n    parseDOM: [{tag: \"br\"}],\n    toDOM() { return brDOM }\n  }\n}\n\nconst emDOM = [\"em\", 0], strongDOM = [\"strong\", 0], codeDOM = [\"code\", 0]\n\n// :: Object [Specs](#model.MarkSpec) for the marks in the schema.\nexport const marks = {\n  // :: MarkSpec A link. Has `href` and `title` attributes. `title`\n  // defaults to the empty string. Rendered and parsed as an `<a>`\n  // element.\n  link: {\n    attrs: {\n      href: {},\n      title: {default: null}\n    },\n    inclusive: false,\n    parseDOM: [{tag: \"a[href]\", getAttrs(dom) {\n      return {href: dom.getAttribute(\"href\"), title: dom.getAttribute(\"title\")}\n    }}],\n    toDOM(node) { let {href, title} = node.attrs; return [\"a\", {href, title}, 0] }\n  },\n\n  // :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n  // Has parse rules that also match `<i>` and `font-style: italic`.\n  em: {\n    parseDOM: [{tag: \"i\"}, {tag: \"em\"}, {style: \"font-style=italic\"}],\n    toDOM() { return emDOM }\n  },\n\n  // :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n  // also match `<b>` and `font-weight: bold`.\n  strong: {\n    parseDOM: [{tag: \"strong\"},\n               // This works around a Google Docs misbehavior where\n               // pasted content will be inexplicably wrapped in `<b>`\n               // tags with a font-weight normal.\n               {tag: \"b\", getAttrs: node => node.style.fontWeight != \"normal\" && null},\n               {style: \"font-weight\", getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null}],\n    toDOM() { return strongDOM }\n  },\n\n  // :: MarkSpec Code font mark. Represented as a `<code>` element.\n  code: {\n    parseDOM: [{tag: \"code\"}],\n    toDOM() { return codeDOM }\n  }\n}\n\n// :: Schema\n// This schema roughly corresponds to the document schema used by\n// [CommonMark](http://commonmark.org/), minus the list elements,\n// which are defined in the [`prosemirror-schema-list`](#schema-list)\n// module.\n//\n// To reuse elements from this schema, extend or read from its\n// `spec.nodes` and `spec.marks` [properties](#model.Schema.spec).\nexport const schema = new Schema({nodes, marks})\n","// Mappable:: interface\n// There are several things that positions can be mapped through.\n// Such objects conform to this interface.\n//\n//   map:: (pos: number, assoc: ?number) → number\n//   Map a position through this object. When given, `assoc` (should\n//   be -1 or 1, defaults to 1) determines with which side the\n//   position is associated, which determines in which direction to\n//   move when a chunk of content is inserted at the mapped position.\n//\n//   mapResult:: (pos: number, assoc: ?number) → MapResult\n//   Map a position, and return an object containing additional\n//   information about the mapping. The result's `deleted` field tells\n//   you whether the position was deleted (completely enclosed in a\n//   replaced range) during the mapping. When content on only one side\n//   is deleted, the position itself is only considered deleted when\n//   `assoc` points in the direction of the deleted content.\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\n\nconst lower16 = 0xffff\nconst factor16 = Math.pow(2, 16)\n\nfunction makeRecover(index, offset) { return index + offset * factor16 }\nfunction recoverIndex(value) { return value & lower16 }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16 }\n\n// ::- An object representing a mapped position with extra\n// information.\nexport class MapResult {\n  constructor(pos, deleted = false, recover = null) {\n    // :: number The mapped version of the position.\n    this.pos = pos\n    // :: bool Tells you whether the position was deleted, that is,\n    // whether the step removed its surroundings from the document.\n    this.deleted = deleted\n    this.recover = recover\n  }\n}\n\n// :: class extends Mappable\n// A map describing the deletions and insertions made by a step, which\n// can be used to find the correspondence between positions in the\n// pre-step version of a document and the same position in the\n// post-step version.\nexport class StepMap {\n  // :: ([number])\n  // Create a position map. The modifications to the document are\n  // represented as an array of numbers, in which each group of three\n  // represents a modified chunk as `[start, oldSize, newSize]`.\n  constructor(ranges, inverted = false) {\n    this.ranges = ranges\n    this.inverted = inverted\n  }\n\n  recover(value) {\n    let diff = 0, index = recoverIndex(value)\n    if (!this.inverted) for (let i = 0; i < index; i++)\n      diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1]\n    return this.ranges[index * 3] + diff + recoverOffset(value)\n  }\n\n  // : (number, ?number) → MapResult\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  // : (number, ?number) → number\n  map(pos, assoc = 1) { return this._map(pos, assoc, true) }\n\n  _map(pos, assoc, simple) {\n    let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize\n      if (pos <= end) {\n        let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc\n        let result = start + diff + (side < 0 ? 0 : newSize)\n        if (simple) return result\n        let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start)\n        return new MapResult(result, assoc < 0 ? pos != start : pos != end, recover)\n      }\n      diff += newSize - oldSize\n    }\n    return simple ? pos + diff : new MapResult(pos + diff)\n  }\n\n  touches(pos, recover) {\n    let diff = 0, index = recoverIndex(recover)\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], end = start + oldSize\n      if (pos <= end && i == index * 3) return true\n      diff += this.ranges[i + newIndex] - oldSize\n    }\n    return false\n  }\n\n  // :: ((oldStart: number, oldEnd: number, newStart: number, newEnd: number))\n  // Calls the given function on each of the changed ranges included in\n  // this map.\n  forEach(f) {\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff)\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex]\n      f(oldStart, oldStart + oldSize, newStart, newStart + newSize)\n      diff += newSize - oldSize\n    }\n  }\n\n  // :: () → StepMap\n  // Create an inverted version of this map. The result can be used to\n  // map positions in the post-step document to the pre-step document.\n  invert() {\n    return new StepMap(this.ranges, !this.inverted)\n  }\n\n  toString() {\n    return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges)\n  }\n\n  // :: (n: number) → StepMap\n  // Create a map that moves all positions by offset `n` (which may be\n  // negative). This can be useful when applying steps meant for a\n  // sub-document to a larger document, or vice-versa.\n  static offset(n) {\n    return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n])\n  }\n}\n\nStepMap.empty = new StepMap([])\n\n// :: class extends Mappable\n// A mapping represents a pipeline of zero or more [step\n// maps](#transform.StepMap). It has special provisions for losslessly\n// handling mapping positions through a series of steps in which some\n// steps are inverted versions of earlier steps. (This comes up when\n// ‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\n// collaboration or history management.)\nexport class Mapping {\n  // :: (?[StepMap])\n  // Create a new mapping with the given position maps.\n  constructor(maps, mirror, from, to) {\n    // :: [StepMap]\n    // The step maps in this mapping.\n    this.maps = maps || []\n    // :: number\n    // The starting position in the `maps` array, used when `map` or\n    // `mapResult` is called.\n    this.from = from || 0\n    // :: number\n    // The end position in the `maps` array.\n    this.to = to == null ? this.maps.length : to\n    this.mirror = mirror\n  }\n\n  // :: (?number, ?number) → Mapping\n  // Create a mapping that maps only through a part of this one.\n  slice(from = 0, to = this.maps.length) {\n    return new Mapping(this.maps, this.mirror, from, to)\n  }\n\n  copy() {\n    return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)\n  }\n\n  // :: (StepMap, ?number)\n  // Add a step map to the end of this mapping. If `mirrors` is\n  // given, it should be the index of the step map that is the mirror\n  // image of this one.\n  appendMap(map, mirrors) {\n    this.to = this.maps.push(map)\n    if (mirrors != null) this.setMirror(this.maps.length - 1, mirrors)\n  }\n\n  // :: (Mapping)\n  // Add all the step maps in a given mapping to this one (preserving\n  // mirroring information).\n  appendMapping(mapping) {\n    for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : null)\n    }\n  }\n\n  // :: (number) → ?number\n  // Finds the offset of the step map that mirrors the map at the\n  // given offset, in this mapping (as per the second argument to\n  // `appendMap`).\n  getMirror(n) {\n    if (this.mirror) for (let i = 0; i < this.mirror.length; i++)\n      if (this.mirror[i] == n) return this.mirror[i + (i % 2 ? -1 : 1)]\n  }\n\n  setMirror(n, m) {\n    if (!this.mirror) this.mirror = []\n    this.mirror.push(n, m)\n  }\n\n  // :: (Mapping)\n  // Append the inverse of the given mapping to this one.\n  appendMappingInverted(mapping) {\n    for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : null)\n    }\n  }\n\n  // :: () → Mapping\n  // Create an inverted version of this mapping.\n  invert() {\n    let inverse = new Mapping\n    inverse.appendMappingInverted(this)\n    return inverse\n  }\n\n  // : (number, ?number) → number\n  // Map a position through this mapping.\n  map(pos, assoc = 1) {\n    if (this.mirror) return this._map(pos, assoc, true)\n    for (let i = this.from; i < this.to; i++)\n      pos = this.maps[i].map(pos, assoc)\n    return pos\n  }\n\n  // : (number, ?number) → MapResult\n  // Map a position through this mapping, returning a mapping\n  // result.\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  _map(pos, assoc, simple) {\n    let deleted = false\n\n    for (let i = this.from; i < this.to; i++) {\n      let map = this.maps[i], result = map.mapResult(pos, assoc)\n      if (result.recover != null) {\n        let corr = this.getMirror(i)\n        if (corr != null && corr > i && corr < this.to) {\n          i = corr\n          pos = this.maps[corr].recover(result.recover)\n          continue\n        }\n      }\n\n      if (result.deleted) deleted = true\n      pos = result.pos\n    }\n\n    return simple ? pos : new MapResult(pos, deleted)\n  }\n}\n","import {Mapping} from \"./map\"\n\nexport function TransformError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = TransformError.prototype\n  return err\n}\n\nTransformError.prototype = Object.create(Error.prototype)\nTransformError.prototype.constructor = TransformError\nTransformError.prototype.name = \"TransformError\"\n\n// ::- Abstraction to build up and track an array of\n// [steps](#transform.Step) representing a document transformation.\n//\n// Most transforming methods return the `Transform` object itself, so\n// that they can be chained.\nexport class Transform {\n  // :: (Node)\n  // Create a transform that starts with the given document.\n  constructor(doc) {\n    // :: Node\n    // The current document (the result of applying the steps in the\n    // transform).\n    this.doc = doc\n    // :: [Step]\n    // The steps in this transform.\n    this.steps = []\n    // :: [Node]\n    // The documents before each of the steps.\n    this.docs = []\n    // :: Mapping\n    // A mapping with the maps for each of the steps in this transform.\n    this.mapping = new Mapping\n  }\n\n  // :: Node The starting document.\n  get before() { return this.docs.length ? this.docs[0] : this.doc }\n\n  // :: (step: Step) → this\n  // Apply a new step in this transform, saving the result. Throws an\n  // error when the step fails.\n  step(object) {\n    let result = this.maybeStep(object)\n    if (result.failed) throw new TransformError(result.failed)\n    return this\n  }\n\n  // :: (Step) → StepResult\n  // Try to apply a step in this transformation, ignoring it if it\n  // fails. Returns the step result.\n  maybeStep(step) {\n    let result = step.apply(this.doc)\n    if (!result.failed) this.addStep(step, result.doc)\n    return result\n  }\n\n  // :: bool\n  // True when the document has been changed (when there are any\n  // steps).\n  get docChanged() {\n    return this.steps.length > 0\n  }\n\n  addStep(step, doc) {\n    this.docs.push(this.doc)\n    this.steps.push(step)\n    this.mapping.appendMap(step.getMap())\n    this.doc = doc\n  }\n}\n","import {ReplaceError} from \"prosemirror-model\"\n\nimport {StepMap} from \"./map\"\n\nfunction mustOverride() { throw new Error(\"Override me\") }\n\nconst stepsByID = Object.create(null)\n\n// ::- A step object represents an atomic change. It generally applies\n// only to the document it was created for, since the positions\n// stored in it will only make sense for that document.\n//\n// New steps are defined by creating classes that extend `Step`,\n// overriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\n// methods, and registering your class with a unique\n// JSON-serialization identifier using\n// [`Step.jsonID`](#transform.Step^jsonID).\nexport class Step {\n  // :: (doc: Node) → StepResult\n  // Applies this step to the given document, returning a result\n  // object that either indicates failure, if the step can not be\n  // applied to this document, or indicates success by containing a\n  // transformed document.\n  apply(_doc) { return mustOverride() }\n\n  // :: () → StepMap\n  // Get the step map that represents the changes made by this step,\n  // and which can be used to transform between positions in the old\n  // and the new document.\n  getMap() { return StepMap.empty }\n\n  // :: (doc: Node) → Step\n  // Create an inverted version of this step. Needs the document as it\n  // was before the step as argument.\n  invert(_doc) { return mustOverride() }\n\n  // :: (mapping: Mappable) → ?Step\n  // Map this step through a mappable thing, returning either a\n  // version of that step with its positions adjusted, or `null` if\n  // the step was entirely deleted by the mapping.\n  map(_mapping) { return mustOverride() }\n\n  // :: (other: Step) → ?Step\n  // Try to merge this step with another one, to be applied directly\n  // after it. Returns the merged step when possible, null if the\n  // steps can't be merged.\n  merge(_other) { return null }\n\n  // :: () → Object\n  // Create a JSON-serializeable representation of this step. When\n  // defining this for a custom subclass, make sure the result object\n  // includes the step type's [JSON id](#transform.Step^jsonID) under\n  // the `stepType` property.\n  toJSON() { return mustOverride() }\n\n  // :: (Schema, Object) → Step\n  // Deserialize a step from its JSON representation. Will call\n  // through to the step class' own implementation of this method.\n  static fromJSON(schema, json) {\n    if (!json || !json.stepType) throw new RangeError(\"Invalid input for Step.fromJSON\")\n    let type = stepsByID[json.stepType]\n    if (!type) throw new RangeError(`No step type ${json.stepType} defined`)\n    return type.fromJSON(schema, json)\n  }\n\n  // :: (string, constructor<Step>)\n  // To be able to serialize steps to JSON, each step needs a string\n  // ID to attach to its JSON representation. Use this method to\n  // register an ID for your step classes. Try to pick something\n  // that's unlikely to clash with steps from other modules.\n  static jsonID(id, stepClass) {\n    if (id in stepsByID) throw new RangeError(\"Duplicate use of step JSON ID \" + id)\n    stepsByID[id] = stepClass\n    stepClass.prototype.jsonID = id\n    return stepClass\n  }\n}\n\n// ::- The result of [applying](#transform.Step.apply) a step. Contains either a\n// new document or a failure value.\nexport class StepResult {\n  // : (?Node, ?string)\n  constructor(doc, failed) {\n    // :: ?Node The transformed document.\n    this.doc = doc\n    // :: ?string Text providing information about a failed step.\n    this.failed = failed\n  }\n\n  // :: (Node) → StepResult\n  // Create a successful step result.\n  static ok(doc) { return new StepResult(doc, null) }\n\n  // :: (string) → StepResult\n  // Create a failed step result.\n  static fail(message) { return new StepResult(null, message) }\n\n  // :: (Node, number, number, Slice) → StepResult\n  // Call [`Node.replace`](#model.Node.replace) with the given\n  // arguments. Create a successful result if it succeeds, and a\n  // failed one if it throws a `ReplaceError`.\n  static fromReplace(doc, from, to, slice) {\n    try {\n      return StepResult.ok(doc.replace(from, to, slice))\n    } catch (e) {\n      if (e instanceof ReplaceError) return StepResult.fail(e.message)\n      throw e\n    }\n  }\n}\n","import {Slice} from \"prosemirror-model\"\n\nimport {Step, StepResult} from \"./step\"\nimport {StepMap} from \"./map\"\n\n// ::- Replace a part of the document with a slice of new content.\nexport class ReplaceStep extends Step {\n  // :: (number, number, Slice, ?bool)\n  // The given `slice` should fit the 'gap' between `from` and\n  // `to`—the depths must line up, and the surrounding nodes must be\n  // able to be joined with the open sides of the slice. When\n  // `structure` is true, the step will fail if the content between\n  // from and to is not just a sequence of closing and then opening\n  // tokens (this is to guard against rebased replace steps\n  // overwriting something they weren't supposed to).\n  constructor(from, to, slice, structure) {\n    super()\n    // :: number\n    // The start position of the replaced range.\n    this.from = from\n    // :: number\n    // The end position of the replaced range.\n    this.to = to\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && contentBetween(doc, this.from, this.to))\n      return StepResult.fail(\"Structure replace would overwrite content\")\n    return StepResult.fromReplace(doc, this.from, this.to, this.slice)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.to - this.from, this.slice.size])\n  }\n\n  invert(doc) {\n    return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to))\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted) return null\n    return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice)\n  }\n\n  merge(other) {\n    if (!(other instanceof ReplaceStep) || other.structure || this.structure) return null\n\n    if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd)\n      return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure)\n    } else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd)\n      return new ReplaceStep(other.from, this.to, slice, this.structure)\n    } else {\n      return null\n    }\n  }\n\n  toJSON() {\n    let json = {stepType: \"replace\", from: this.from, to: this.to}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\")\n    return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure)\n  }\n}\n\nStep.jsonID(\"replace\", ReplaceStep)\n\n// ::- Replace a part of the document with a slice of content, but\n// preserve a range of the replaced content by moving it into the\n// slice.\nexport class ReplaceAroundStep extends Step {\n  // :: (number, number, number, number, Slice, number, ?bool)\n  // Create a replace-around step with the given range and gap.\n  // `insert` should be the point in the slice into which the content\n  // of the gap should be moved. `structure` has the same meaning as\n  // it has in the [`ReplaceStep`](#transform.ReplaceStep) class.\n  constructor(from, to, gapFrom, gapTo, slice, insert, structure) {\n    super()\n    // :: number\n    // The start position of the replaced range.\n    this.from = from\n    // :: number\n    // The end position of the replaced range.\n    this.to = to\n    // :: number\n    // The start of preserved range.\n    this.gapFrom = gapFrom\n    // :: number\n    // The end of preserved range.\n    this.gapTo = gapTo\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice\n    // :: number\n    // The position in the slice where the preserved range should be\n    // inserted.\n    this.insert = insert\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n                           contentBetween(doc, this.gapTo, this.to)))\n      return StepResult.fail(\"Structure gap-replace would overwrite content\")\n\n    let gap = doc.slice(this.gapFrom, this.gapTo)\n    if (gap.openStart || gap.openEnd)\n      return StepResult.fail(\"Gap is not a flat range\")\n    let inserted = this.slice.insertAt(this.insert, gap.content)\n    if (!inserted) return StepResult.fail(\"Content does not fit in gap\")\n    return StepResult.fromReplace(doc, this.from, this.to, inserted)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n                        this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])\n  }\n\n  invert(doc) {\n    let gap = this.gapTo - this.gapFrom\n    return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap,\n                                 this.from + this.insert, this.from + this.insert + gap,\n                                 doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from),\n                                 this.gapFrom - this.from, this.structure)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1)\n    if ((from.deleted && to.deleted) || gapFrom < from.pos || gapTo > to.pos) return null\n    return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure)\n  }\n\n  toJSON() {\n    let json = {stepType: \"replaceAround\", from: this.from, to: this.to,\n                gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\")\n    return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo,\n                                 Slice.fromJSON(schema, json.slice), json.insert, !!json.structure)\n  }\n}\n\nStep.jsonID(\"replaceAround\", ReplaceAroundStep)\n\nfunction contentBetween(doc, from, to) {\n  let $from = doc.resolve(from), dist = to - from, depth = $from.depth\n  while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n    depth--\n    dist--\n  }\n  if (dist > 0) {\n    let next = $from.node(depth).maybeChild($from.indexAfter(depth))\n    while (dist > 0) {\n      if (!next || next.isLeaf) return true\n      next = next.firstChild\n      dist--\n    }\n  }\n  return false\n}\n","import {Slice, Fragment} from \"prosemirror-model\"\n\nimport {Transform} from \"./transform\"\nimport {ReplaceStep, ReplaceAroundStep} from \"./replace_step\"\n\nfunction canCut(node, start, end) {\n  return (start == 0 || node.canReplace(start, node.childCount)) &&\n    (end == node.childCount || node.canReplace(0, end))\n}\n\n// :: (NodeRange) → ?number\n// Try to find a target depth to which the content in the given range\n// can be lifted. Will not go across\n// [isolating](#model.NodeSpec.isolating) parent nodes.\nexport function liftTarget(range) {\n  let parent = range.parent\n  let content = parent.content.cutByIndex(range.startIndex, range.endIndex)\n  for (let depth = range.depth;; --depth) {\n    let node = range.$from.node(depth)\n    let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth)\n    if (depth < range.depth && node.canReplace(index, endIndex, content))\n      return depth\n    if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex)) break\n  }\n}\n\n// :: (NodeRange, number) → this\n// Split the content in the given range off from its parent, if there\n// is sibling content before or after it, and move it up the tree to\n// the depth specified by `target`. You'll probably want to use\n// [`liftTarget`](#transform.liftTarget) to compute `target`, to make\n// sure the lift is valid.\nTransform.prototype.lift = function(range, target) {\n  let {$from, $to, depth} = range\n\n  let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1)\n  let start = gapStart, end = gapEnd\n\n  let before = Fragment.empty, openStart = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $from.index(d) > 0) {\n      splitting = true\n      before = Fragment.from($from.node(d).copy(before))\n      openStart++\n    } else {\n      start--\n    }\n  let after = Fragment.empty, openEnd = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $to.after(d + 1) < $to.end(d)) {\n      splitting = true\n      after = Fragment.from($to.node(d).copy(after))\n      openEnd++\n    } else {\n      end++\n    }\n\n  return this.step(new ReplaceAroundStep(start, end, gapStart, gapEnd,\n                                         new Slice(before.append(after), openStart, openEnd),\n                                         before.size - openStart, true))\n}\n\n// :: (NodeRange, NodeType, ?Object, ?NodeRange) → ?[{type: NodeType, attrs: ?Object}]\n// Try to find a valid way to wrap the content in the given range in a\n// node of the given type. May introduce extra nodes around and inside\n// the wrapper node, if necessary. Returns null if no valid wrapping\n// could be found. When `innerRange` is given, that range's content is\n// used as the content to fit into the wrapping, instead of the\n// content of `range`.\nexport function findWrapping(range, nodeType, attrs, innerRange = range) {\n  let around = findWrappingOutside(range, nodeType)\n  let inner = around && findWrappingInside(innerRange, nodeType)\n  if (!inner) return null\n  return around.map(withAttrs).concat({type: nodeType, attrs}).concat(inner.map(withAttrs))\n}\n\nfunction withAttrs(type) { return {type, attrs: null} }\n\nfunction findWrappingOutside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let around = parent.contentMatchAt(startIndex).findWrapping(type)\n  if (!around) return null\n  let outer = around.length ? around[0] : type\n  return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null\n}\n\nfunction findWrappingInside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let inner = parent.child(startIndex)\n  let inside = type.contentMatch.findWrapping(inner.type)\n  if (!inside) return null\n  let lastType = inside.length ? inside[inside.length - 1] : type\n  let innerMatch = lastType.contentMatch\n  for (let i = startIndex; innerMatch && i < endIndex; i++)\n    innerMatch = innerMatch.matchType(parent.child(i).type)\n  if (!innerMatch || !innerMatch.validEnd) return null\n  return inside\n}\n\n// :: (NodeRange, [{type: NodeType, attrs: ?Object}]) → this\n// Wrap the given [range](#model.NodeRange) in the given set of wrappers.\n// The wrappers are assumed to be valid in this position, and should\n// probably be computed with [`findWrapping`](#transform.findWrapping).\nTransform.prototype.wrap = function(range, wrappers) {\n  let content = Fragment.empty\n  for (let i = wrappers.length - 1; i >= 0; i--)\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content))\n\n  let start = range.start, end = range.end\n  return this.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true))\n}\n\n// :: (number, ?number, NodeType, ?Object) → this\n// Set the type of all textblocks (partly) between `from` and `to` to\n// the given node type with the given attributes.\nTransform.prototype.setBlockType = function(from, to = from, type, attrs) {\n  if (!type.isTextblock) throw new RangeError(\"Type given to setBlockType should be a textblock\")\n  let mapFrom = this.steps.length\n  this.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(this.doc, this.mapping.slice(mapFrom).map(pos), type)) {\n      // Ensure all markup that isn't allowed in the new node type is cleared\n      this.clearIncompatible(this.mapping.slice(mapFrom).map(pos, 1), type)\n      let mapping = this.mapping.slice(mapFrom)\n      let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1)\n      this.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1,\n                                      new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true))\n      return false\n    }\n  })\n  return this\n}\n\nfunction canChangeType(doc, pos, type) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return $pos.parent.canReplaceWith(index, index + 1, type)\n}\n\n// :: (number, ?NodeType, ?Object, ?[Mark]) → this\n// Change the type, attributes, and/or marks of the node at `pos`.\n// When `type` isn't given, the existing node type is preserved,\nTransform.prototype.setNodeMarkup = function(pos, type, attrs, marks) {\n  let node = this.doc.nodeAt(pos)\n  if (!node) throw new RangeError(\"No node at given position\")\n  if (!type) type = node.type\n  let newNode = type.create(attrs, null, marks || node.marks)\n  if (node.isLeaf)\n    return this.replaceWith(pos, pos + node.nodeSize, newNode)\n\n  if (!type.validContent(node.content))\n    throw new RangeError(\"Invalid content for node type \" + type.name)\n\n  return this.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1,\n                                         new Slice(Fragment.from(newNode), 0, 0), 1, true))\n}\n\n// :: (Node, number, number, ?[?{type: NodeType, attrs: ?Object}]) → bool\n// Check whether splitting at the given position is allowed.\nexport function canSplit(doc, pos, depth = 1, typesAfter) {\n  let $pos = doc.resolve(pos), base = $pos.depth - depth\n  let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent\n  if (base < 0 || $pos.parent.type.spec.isolating ||\n      !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n      !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n    return false\n  for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    let node = $pos.node(d), index = $pos.index(d)\n    if (node.type.spec.isolating) return false\n    let rest = node.content.cutByIndex(index, node.childCount)\n    let after = (typesAfter && typesAfter[i]) || node\n    if (after != node) rest = rest.replaceChild(0, after.type.create(after.attrs))\n    if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n      return false\n  }\n  let index = $pos.indexAfter(base)\n  let baseType = typesAfter && typesAfter[0]\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type)\n}\n\n// :: (number, ?number, ?[?{type: NodeType, attrs: ?Object}]) → this\n// Split the node at the given position, and optionally, if `depth` is\n// greater than one, any number of nodes above that. By default, the\n// parts split off will inherit the node type of the original node.\n// This can be changed by passing an array of types and attributes to\n// use after the split.\nTransform.prototype.split = function(pos, depth = 1, typesAfter) {\n  let $pos = this.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty\n  for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n    before = Fragment.from($pos.node(d).copy(before))\n    let typeAfter = typesAfter && typesAfter[i]\n    after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after))\n  }\n  return this.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true))\n}\n\n// :: (Node, number) → bool\n// Test whether the blocks before and after a given position can be\n// joined.\nexport function canJoin(doc, pos) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n    $pos.parent.canReplace(index, index + 1)\n}\n\nfunction joinable(a, b) {\n  return a && b && !a.isLeaf && a.canAppend(b)\n}\n\n// :: (Node, number, ?number) → ?number\n// Find an ancestor of the given position that can be joined to the\n// block before (or after if `dir` is positive). Returns the joinable\n// point, if any.\nexport function joinPoint(doc, pos, dir = -1) {\n  let $pos = doc.resolve(pos)\n  for (let d = $pos.depth;; d--) {\n    let before, after, index = $pos.index(d)\n    if (d == $pos.depth) {\n      before = $pos.nodeBefore\n      after = $pos.nodeAfter\n    } else if (dir > 0) {\n      before = $pos.node(d + 1)\n      index++\n      after = $pos.node(d).maybeChild(index)\n    } else {\n      before = $pos.node(d).maybeChild(index - 1)\n      after = $pos.node(d + 1)\n    }\n    if (before && !before.isTextblock && joinable(before, after) &&\n        $pos.node(d).canReplace(index, index + 1)) return pos\n    if (d == 0) break\n    pos = dir < 0 ? $pos.before(d) : $pos.after(d)\n  }\n}\n\n// :: (number, ?number) → this\n// Join the blocks around the given position. If depth is 2, their\n// last and first siblings are also joined, and so on.\nTransform.prototype.join = function(pos, depth = 1) {\n  let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true)\n  return this.step(step)\n}\n\n// :: (Node, number, NodeType) → ?number\n// Try to find a point where a node of the given type can be inserted\n// near `pos`, by searching up the node hierarchy when `pos` itself\n// isn't a valid place but is at the start or end of a node. Return\n// null if no position was found.\nexport function insertPoint(doc, pos, nodeType) {\n  let $pos = doc.resolve(pos)\n  if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType)) return pos\n\n  if ($pos.parentOffset == 0)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.index(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.before(d + 1)\n      if (index > 0) return null\n    }\n  if ($pos.parentOffset == $pos.parent.content.size)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.indexAfter(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.after(d + 1)\n      if (index < $pos.node(d).childCount) return null\n    }\n}\n\n// :: (Node, number, Slice) → ?number\n// Finds a position at or around the given position where the given\n// slice can be inserted. Will look at parent nodes' nearest boundary\n// and try there, even if the original position wasn't directly at the\n// start or end of that node. Returns null when no position was found.\nexport function dropPoint(doc, pos, slice) {\n  let $pos = doc.resolve(pos)\n  if (!slice.content.size) return pos\n  let content = slice.content\n  for (let i = 0; i < slice.openStart; i++) content = content.firstChild.content\n  for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n    for (let d = $pos.depth; d >= 0; d--) {\n      let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1\n      let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0)\n      let parent = $pos.node(d), fits = false\n      if (pass == 1) {\n        fits = parent.canReplace(insertPos, insertPos, content)\n      } else {\n        let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type)\n        fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0])\n      }\n      if (fits)\n        return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1)\n    }\n  }\n  return null\n}\n","import {Fragment, Slice} from \"prosemirror-model\"\nimport {Step, StepResult} from \"./step\"\n\nfunction mapFragment(fragment, f, parent) {\n  let mapped = []\n  for (let i = 0; i < fragment.childCount; i++) {\n    let child = fragment.child(i)\n    if (child.content.size) child = child.copy(mapFragment(child.content, f, child))\n    if (child.isInline) child = f(child, parent, i)\n    mapped.push(child)\n  }\n  return Fragment.fromArray(mapped)\n}\n\n// ::- Add a mark to all inline content between two positions.\nexport class AddMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    // :: number\n    // The start of the marked range.\n    this.from = from\n    // :: number\n    // The end of the marked range.\n    this.to = to\n    // :: Mark\n    // The mark to add.\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from)\n    let parent = $from.node($from.sharedDepth(this.to))\n    let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n      if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type)) return node\n      return node.mark(this.mark.addToSet(node.marks))\n    }, parent), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new RemoveMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new AddMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof AddMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new AddMarkStep(Math.min(this.from, other.from),\n                             Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\")\n    return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"addMark\", AddMarkStep)\n\n// ::- Remove a mark from all inline content between two positions.\nexport class RemoveMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    // :: number\n    // The start of the unmarked range.\n    this.from = from\n    // :: number\n    // The end of the unmarked range.\n    this.to = to\n    // :: Mark\n    // The mark to remove.\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to)\n    let slice = new Slice(mapFragment(oldSlice.content, node => {\n      return node.mark(this.mark.removeFromSet(node.marks))\n    }), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new AddMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new RemoveMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof RemoveMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new RemoveMarkStep(Math.min(this.from, other.from),\n                                Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\")\n    return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"removeMark\", RemoveMarkStep)\n","import {Slice, Fragment} from \"prosemirror-model\"\nimport {ReplaceStep, ReplaceAroundStep} from \"prosemirror-transform\"\n\nconst classesById = Object.create(null)\n\n// ::- Superclass for editor selections. Every selection type should\n// extend this. Should not be instantiated directly.\nexport class Selection {\n  // :: (ResolvedPos, ResolvedPos, ?[SelectionRange])\n  // Initialize a selection with the head and anchor and ranges. If no\n  // ranges are given, constructs a single range across `$anchor` and\n  // `$head`.\n  constructor($anchor, $head, ranges) {\n    // :: [SelectionRange]\n    // The ranges covered by the selection.\n    this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))]\n    // :: ResolvedPos\n    // The resolved anchor of the selection (the side that stays in\n    // place when the selection is modified).\n    this.$anchor = $anchor\n    // :: ResolvedPos\n    // The resolved head of the selection (the side that moves when\n    // the selection is modified).\n    this.$head = $head\n  }\n\n  // :: number\n  // The selection's anchor, as an unresolved position.\n  get anchor() { return this.$anchor.pos }\n\n  // :: number\n  // The selection's head.\n  get head() { return this.$head.pos }\n\n  // :: number\n  // The lower bound of the selection's main range.\n  get from() { return this.$from.pos }\n\n  // :: number\n  // The upper bound of the selection's main range.\n  get to() { return this.$to.pos }\n\n  // :: ResolvedPos\n  // The resolved lower  bound of the selection's main range.\n  get $from() {\n    return this.ranges[0].$from\n  }\n\n  // :: ResolvedPos\n  // The resolved upper bound of the selection's main range.\n  get $to() {\n    return this.ranges[0].$to\n  }\n\n  // :: bool\n  // Indicates whether the selection contains any content.\n  get empty() {\n    let ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++)\n      if (ranges[i].$from.pos != ranges[i].$to.pos) return false\n    return true\n  }\n\n  // eq:: (Selection) → bool\n  // Test whether the selection is the same as another selection.\n\n  // map:: (doc: Node, mapping: Mappable) → Selection\n  // Map this selection through a [mappable](#transform.Mappable) thing. `doc`\n  // should be the new document to which we are mapping.\n\n  // :: () → Slice\n  // Get the content of this selection as a slice.\n  content() {\n    return this.$from.node(0).slice(this.from, this.to, true)\n  }\n\n  // :: (Transaction, ?Slice)\n  // Replace the selection with a slice or, if no slice is given,\n  // delete the selection. Will append to the given transaction.\n  replace(tr, content = Slice.empty) {\n    // Put the new selection at the position after the inserted\n    // content. When that ended in an inline node, search backwards,\n    // to get the position after that node. If not, search forward.\n    let lastNode = content.content.lastChild, lastParent = null\n    for (let i = 0; i < content.openEnd; i++) {\n      lastParent = lastNode\n      lastNode = lastNode.lastChild\n    }\n\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content)\n      if (i == 0)\n        selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1)\n    }\n  }\n\n  // :: (Transaction, Node)\n  // Replace the selection with the given node, appending the changes\n  // to the given transaction.\n  replaceWith(tr, node) {\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      let from = mapping.map($from.pos), to = mapping.map($to.pos)\n      if (i) {\n        tr.deleteRange(from, to)\n      } else {\n        tr.replaceRangeWith(from, to, node)\n        selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1)\n      }\n    }\n  }\n\n  // toJSON:: () → Object\n  // Convert the selection to a JSON representation. When implementing\n  // this for a custom selection class, make sure to give the object a\n  // `type` property whose value matches the ID under which you\n  // [registered](#state.Selection^jsonID) your class.\n\n  // :: (ResolvedPos, number, ?bool) → ?Selection\n  // Find a valid cursor or leaf node selection starting at the given\n  // position and searching back if `dir` is negative, and forward if\n  // positive. When `textOnly` is true, only consider cursor\n  // selections. Will return null when no valid selection position is\n  // found.\n  static findFrom($pos, dir, textOnly) {\n    let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n        : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly)\n    if (inner) return inner\n\n    for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n      let found = dir < 0\n          ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n          : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly)\n      if (found) return found\n    }\n  }\n\n  // :: (ResolvedPos, ?number) → Selection\n  // Find a valid cursor or leaf node selection near the given\n  // position. Searches forward first by default, but if `bias` is\n  // negative, it will search backwards first.\n  static near($pos, bias = 1) {\n    return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0))\n  }\n\n  // :: (Node) → Selection\n  // Find the cursor or leaf node selection closest to the start of\n  // the given document. Will return an\n  // [`AllSelection`](#state.AllSelection) if no valid position\n  // exists.\n  static atStart(doc) {\n    return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc)\n  }\n\n  // :: (Node) → Selection\n  // Find the cursor or leaf node selection closest to the end of the\n  // given document.\n  static atEnd(doc) {\n    return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc)\n  }\n\n  // :: (Node, Object) → Selection\n  // Deserialize the JSON representation of a selection. Must be\n  // implemented for custom classes (as a static class method).\n  static fromJSON(doc, json) {\n    if (!json || !json.type) throw new RangeError(\"Invalid input for Selection.fromJSON\")\n    let cls = classesById[json.type]\n    if (!cls) throw new RangeError(`No selection type ${json.type} defined`)\n    return cls.fromJSON(doc, json)\n  }\n\n  // :: (string, constructor<Selection>)\n  // To be able to deserialize selections from JSON, custom selection\n  // classes must register themselves with an ID string, so that they\n  // can be disambiguated. Try to pick something that's unlikely to\n  // clash with classes from other modules.\n  static jsonID(id, selectionClass) {\n    if (id in classesById) throw new RangeError(\"Duplicate use of selection JSON ID \" + id)\n    classesById[id] = selectionClass\n    selectionClass.prototype.jsonID = id\n    return selectionClass\n  }\n\n  // :: () → SelectionBookmark\n  // Get a [bookmark](#state.SelectionBookmark) for this selection,\n  // which is a value that can be mapped without having access to a\n  // current document, and later resolved to a real selection for a\n  // given document again. (This is used mostly by the history to\n  // track and restore old selections.) The default implementation of\n  // this method just converts the selection to a text selection and\n  // returns the bookmark for that.\n  getBookmark() {\n    return TextSelection.between(this.$anchor, this.$head).getBookmark()\n  }\n}\n\n// :: bool\n// Controls whether, when a selection of this type is active in the\n// browser, the selected range should be visible to the user. Defaults\n// to `true`.\nSelection.prototype.visible = true\n\n// SelectionBookmark:: interface\n// A lightweight, document-independent representation of a selection.\n// You can define a custom bookmark type for a custom selection class\n// to make the history handle it well.\n//\n//   map:: (mapping: Mapping) → SelectionBookmark\n//   Map the bookmark through a set of changes.\n//\n//   resolve:: (doc: Node) → Selection\n//   Resolve the bookmark to a real selection again. This may need to\n//   do some error checking and may fall back to a default (usually\n//   [`TextSelection.between`](#state.TextSelection^between)) if\n//   mapping made the bookmark invalid.\n\n// ::- Represents a selected range in a document.\nexport class SelectionRange {\n  // :: (ResolvedPos, ResolvedPos)\n  constructor($from, $to) {\n    // :: ResolvedPos\n    // The lower bound of the range.\n    this.$from = $from\n    // :: ResolvedPos\n    // The upper bound of the range.\n    this.$to = $to\n  }\n}\n\n// ::- A text selection represents a classical editor selection, with\n// a head (the moving side) and anchor (immobile side), both of which\n// point into textblock nodes. It can be empty (a regular cursor\n// position).\nexport class TextSelection extends Selection {\n  // :: (ResolvedPos, ?ResolvedPos)\n  // Construct a text selection between the given points.\n  constructor($anchor, $head = $anchor) {\n    super($anchor, $head)\n  }\n\n  // :: ?ResolvedPos\n  // Returns a resolved position if this is a cursor selection (an\n  // empty text selection), and null otherwise.\n  get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null }\n\n  map(doc, mapping) {\n    let $head = doc.resolve(mapping.map(this.head))\n    if (!$head.parent.inlineContent) return Selection.near($head)\n    let $anchor = doc.resolve(mapping.map(this.anchor))\n    return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head)\n  }\n\n  replace(tr, content = Slice.empty) {\n    super.replace(tr, content)\n    if (content == Slice.empty) {\n      let marks = this.$from.marksAcross(this.$to)\n      if (marks) tr.ensureMarks(marks)\n    }\n  }\n\n  eq(other) {\n    return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head\n  }\n\n  getBookmark() {\n    return new TextBookmark(this.anchor, this.head)\n  }\n\n  toJSON() {\n    return {type: \"text\", anchor: this.anchor, head: this.head}\n  }\n\n  static fromJSON(doc, json) {\n    if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n      throw new RangeError(\"Invalid input for TextSelection.fromJSON\")\n    return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  }\n\n  // :: (Node, number, ?number) → TextSelection\n  // Create a text selection from non-resolved positions.\n  static create(doc, anchor, head = anchor) {\n    let $anchor = doc.resolve(anchor)\n    return new this($anchor, head == anchor ? $anchor : doc.resolve(head))\n  }\n\n  // :: (ResolvedPos, ResolvedPos, ?number) → Selection\n  // Return a text selection that spans the given positions or, if\n  // they aren't text positions, find a text selection near them.\n  // `bias` determines whether the method searches forward (default)\n  // or backwards (negative number) first. Will fall back to calling\n  // [`Selection.near`](#state.Selection^near) when the document\n  // doesn't contain a valid text position.\n  static between($anchor, $head, bias) {\n    let dPos = $anchor.pos - $head.pos\n    if (!bias || dPos) bias = dPos >= 0 ? 1 : -1\n    if (!$head.parent.inlineContent) {\n      let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true)\n      if (found) $head = found.$head\n      else return Selection.near($head, bias)\n    }\n    if (!$anchor.parent.inlineContent) {\n      if (dPos == 0) {\n        $anchor = $head\n      } else {\n        $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor\n        if (($anchor.pos < $head.pos) != (dPos < 0)) $anchor = $head\n      }\n    }\n    return new TextSelection($anchor, $head)\n  }\n}\n\nSelection.jsonID(\"text\", TextSelection)\n\nclass TextBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor\n    this.head = head\n  }\n  map(mapping) {\n    return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head))\n  }\n  resolve(doc) {\n    return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head))\n  }\n}\n\n// ::- A node selection is a selection that points at a single node.\n// All nodes marked [selectable](#model.NodeSpec.selectable) can be\n// the target of a node selection. In such a selection, `from` and\n// `to` point directly before and after the selected node, `anchor`\n// equals `from`, and `head` equals `to`..\nexport class NodeSelection extends Selection {\n  // :: (ResolvedPos)\n  // Create a node selection. Does not verify the validity of its\n  // argument.\n  constructor($pos) {\n    let node = $pos.nodeAfter\n    let $end = $pos.node(0).resolve($pos.pos + node.nodeSize)\n    super($pos, $end)\n    // :: Node The selected node.\n    this.node = node\n  }\n\n  map(doc, mapping) {\n    let {deleted, pos} = mapping.mapResult(this.anchor)\n    let $pos = doc.resolve(pos)\n    if (deleted) return Selection.near($pos)\n    return new NodeSelection($pos)\n  }\n\n  content() {\n    return new Slice(Fragment.from(this.node), 0, 0)\n  }\n\n  eq(other) {\n    return other instanceof NodeSelection && other.anchor == this.anchor\n  }\n\n  toJSON() {\n    return {type: \"node\", anchor: this.anchor}\n  }\n\n  getBookmark() { return new NodeBookmark(this.anchor) }\n\n  static fromJSON(doc, json) {\n    if (typeof json.anchor != \"number\")\n      throw new RangeError(\"Invalid input for NodeSelection.fromJSON\")\n    return new NodeSelection(doc.resolve(json.anchor))\n  }\n\n  // :: (Node, number) → NodeSelection\n  // Create a node selection from non-resolved positions.\n  static create(doc, from) {\n    return new this(doc.resolve(from))\n  }\n\n  // :: (Node) → bool\n  // Determines whether the given node may be selected as a node\n  // selection.\n  static isSelectable(node) {\n    return !node.isText && node.type.spec.selectable !== false\n  }\n}\n\nNodeSelection.prototype.visible = false\n\nSelection.jsonID(\"node\", NodeSelection)\n\nclass NodeBookmark {\n  constructor(anchor) {\n    this.anchor = anchor\n  }\n  map(mapping) {\n    let {deleted, pos} = mapping.mapResult(this.anchor)\n    return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos)\n  }\n  resolve(doc) {\n    let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter\n    if (node && NodeSelection.isSelectable(node)) return new NodeSelection($pos)\n    return Selection.near($pos)\n  }\n}\n\n// ::- A selection type that represents selecting the whole document\n// (which can not necessarily be expressed with a text selection, when\n// there are for example leaf block nodes at the start or end of the\n// document).\nexport class AllSelection extends Selection {\n  // :: (Node)\n  // Create an all-selection over the given document.\n  constructor(doc) {\n    super(doc.resolve(0), doc.resolve(doc.content.size))\n  }\n\n  replace(tr, content = Slice.empty) {\n    if (content == Slice.empty) {\n      tr.delete(0, tr.doc.content.size)\n      let sel = Selection.atStart(tr.doc)\n      if (!sel.eq(tr.selection)) tr.setSelection(sel)\n    } else {\n      super.replace(tr, content)\n    }\n  }\n\n  toJSON() { return {type: \"all\"} }\n\n  static fromJSON(doc) { return new AllSelection(doc) }\n\n  map(doc) { return new AllSelection(doc) }\n\n  eq(other) { return other instanceof AllSelection }\n\n  getBookmark() { return AllBookmark }\n}\n\nSelection.jsonID(\"all\", AllSelection)\n\nconst AllBookmark = {\n  map() { return this },\n  resolve(doc) { return new AllSelection(doc) }\n}\n\n// FIXME we'll need some awareness of text direction when scanning for selections\n\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text) {\n  if (node.inlineContent) return TextSelection.create(doc, pos)\n  for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n    let child = node.child(i)\n    if (!child.isAtom) {\n      let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text)\n      if (inner) return inner\n    } else if (!text && NodeSelection.isSelectable(child)) {\n      return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0))\n    }\n    pos += child.nodeSize * dir\n  }\n}\n\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n  let last = tr.steps.length - 1\n  if (last < startLen) return\n  let step = tr.steps[last]\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) return\n  let map = tr.mapping.maps[last], end\n  map.forEach((_from, _to, _newFrom, newTo) => { if (end == null) end = newTo })\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias))\n}\n","import {Transform} from \"prosemirror-transform\"\nimport {Mark} from \"prosemirror-model\"\nimport {Selection} from \"./selection\"\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4\n\n// ::- An editor state transaction, which can be applied to a state to\n// create an updated state. Use\n// [`EditorState.tr`](#state.EditorState.tr) to create an instance.\n//\n// Transactions track changes to the document (they are a subclass of\n// [`Transform`](#transform.Transform)), but also other state changes,\n// like selection updates and adjustments of the set of [stored\n// marks](#state.EditorState.storedMarks). In addition, you can store\n// metadata properties in a transaction, which are extra pieces of\n// information that client code or plugins can use to describe what a\n// transacion represents, so that they can update their [own\n// state](#state.StateField) accordingly.\n//\n// The [editor view](#view.EditorView) uses a few metadata properties:\n// it will attach a property `\"pointer\"` with the value `true` to\n// selection transactions directly caused by mouse or touch input, and\n// a `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\nexport class Transaction extends Transform {\n  constructor(state) {\n    super(state.doc)\n    // :: number\n    // The timestamp associated with this transaction, in the same\n    // format as `Date.now()`.\n    this.time = Date.now()\n    this.curSelection = state.selection\n    // The step count for which the current selection is valid.\n    this.curSelectionFor = 0\n    // :: ?[Mark]\n    // The stored marks set by this transaction, if any.\n    this.storedMarks = state.storedMarks\n    // Bitfield to track which aspects of the state were updated by\n    // this transaction.\n    this.updated = 0\n    // Object used to store metadata properties for the transaction.\n    this.meta = Object.create(null)\n  }\n\n  // :: Selection\n  // The transaction's current selection. This defaults to the editor\n  // selection [mapped](#state.Selection.map) through the steps in the\n  // transaction, but can be overwritten with\n  // [`setSelection`](#state.Transaction.setSelection).\n  get selection() {\n    if (this.curSelectionFor < this.steps.length) {\n      this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor))\n      this.curSelectionFor = this.steps.length\n    }\n    return this.curSelection\n  }\n\n  // :: (Selection) → Transaction\n  // Update the transaction's current selection. Will determine the\n  // selection that the editor gets when the transaction is applied.\n  setSelection(selection) {\n    if (selection.$from.doc != this.doc)\n      throw new RangeError(\"Selection passed to setSelection must point at the current document\")\n    this.curSelection = selection\n    this.curSelectionFor = this.steps.length\n    this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS\n    this.storedMarks = null\n    return this\n  }\n\n  // :: bool\n  // Whether the selection was explicitly updated by this transaction.\n  get selectionSet() {\n    return (this.updated & UPDATED_SEL) > 0\n  }\n\n  // :: (?[Mark]) → Transaction\n  // Set the current stored marks.\n  setStoredMarks(marks) {\n    this.storedMarks = marks\n    this.updated |= UPDATED_MARKS\n    return this\n  }\n\n  // :: ([Mark]) → Transaction\n  // Make sure the current stored marks or, if that is null, the marks\n  // at the selection, match the given set of marks. Does nothing if\n  // this is already the case.\n  ensureMarks(marks) {\n    if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n      this.setStoredMarks(marks)\n    return this\n  }\n\n  // :: (Mark) → Transaction\n  // Add a mark to the set of stored marks.\n  addStoredMark(mark) {\n    return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: (union<Mark, MarkType>) → Transaction\n  // Remove a mark or mark type from the set of stored marks.\n  removeStoredMark(mark) {\n    return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: bool\n  // Whether the stored marks were explicitly set for this transaction.\n  get storedMarksSet() {\n    return (this.updated & UPDATED_MARKS) > 0\n  }\n\n  addStep(step, doc) {\n    super.addStep(step, doc)\n    this.updated = this.updated & ~UPDATED_MARKS\n    this.storedMarks = null\n  }\n\n  // :: (number) → Transaction\n  // Update the timestamp for the transaction.\n  setTime(time) {\n    this.time = time\n    return this\n  }\n\n  // :: (Slice) → Transaction\n  // Replace the current selection with the given slice.\n  replaceSelection(slice) {\n    this.selection.replace(this, slice)\n    return this\n  }\n\n  // :: (Node, ?bool) → Transaction\n  // Replace the selection with the given node. When `inheritMarks` is\n  // true and the content is inline, it inherits the marks from the\n  // place where it is inserted.\n  replaceSelectionWith(node, inheritMarks) {\n    let selection = this.selection\n    if (inheritMarks !== false)\n      node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)))\n    selection.replaceWith(this, node)\n    return this\n  }\n\n  // :: () → Transaction\n  // Delete the selection.\n  deleteSelection() {\n    this.selection.replace(this)\n    return this\n  }\n\n  // :: (string, from: ?number, to: ?number) → Transaction\n  // Replace the given range, or the selection if no range is given,\n  // with a text node containing the given string.\n  insertText(text, from, to = from) {\n    let schema = this.doc.type.schema\n    if (from == null) {\n      if (!text) return this.deleteSelection()\n      return this.replaceSelectionWith(schema.text(text), true)\n    } else {\n      if (!text) return this.deleteRange(from, to)\n      let marks = this.storedMarks\n      if (!marks) {\n        let $from = this.doc.resolve(from)\n        marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to))\n      }\n      this.replaceRangeWith(from, to, schema.text(text, marks))\n      if (!this.selection.empty) this.setSelection(Selection.near(this.selection.$to))\n      return this\n    }\n  }\n\n  // :: (union<string, Plugin, PluginKey>, any) → Transaction\n  // Store a metadata property in this transaction, keyed either by\n  // name or by plugin.\n  setMeta(key, value) {\n    this.meta[typeof key == \"string\" ? key : key.key] = value\n    return this\n  }\n\n  // :: (union<string, Plugin, PluginKey>) → any\n  // Retrieve a metadata property for a given name or plugin.\n  getMeta(key) {\n    return this.meta[typeof key == \"string\" ? key : key.key]\n  }\n\n  // :: bool\n  // Returns true if this transaction doesn't contain any metadata,\n  // and can thus safely be extended.\n  get isGeneric() {\n    for (let _ in this.meta) return false\n    return true\n  }\n\n  // :: () → Transaction\n  // Indicate that the editor should scroll the selection into view\n  // when updated to the state produced by this transaction.\n  scrollIntoView() {\n    this.updated |= UPDATED_SCROLL\n    return this\n  }\n\n  get scrolledIntoView() {\n    return (this.updated & UPDATED_SCROLL) > 0\n  }\n}\n","import {Node} from \"prosemirror-model\"\n\nimport {Selection} from \"./selection\"\nimport {Transaction} from \"./transaction\"\n\nfunction bind(f, self) {\n  return !self || !f ? f : f.bind(self)\n}\n\nclass FieldDesc {\n  constructor(name, desc, self) {\n    this.name = name\n    this.init = bind(desc.init, self)\n    this.apply = bind(desc.apply, self)\n  }\n}\n\nconst baseFields = [\n  new FieldDesc(\"doc\", {\n    init(config) { return config.doc || config.schema.topNodeType.createAndFill() },\n    apply(tr) { return tr.doc }\n  }),\n\n  new FieldDesc(\"selection\", {\n    init(config, instance) { return config.selection || Selection.atStart(instance.doc) },\n    apply(tr) { return tr.selection }\n  }),\n\n  new FieldDesc(\"storedMarks\", {\n    init(config) { return config.storedMarks || null },\n    apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null }\n  }),\n\n  new FieldDesc(\"scrollToSelection\", {\n    init() { return 0 },\n    apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev }\n  })\n]\n\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n  constructor(schema, plugins) {\n    this.schema = schema\n    this.fields = baseFields.concat()\n    this.plugins = []\n    this.pluginsByKey = Object.create(null)\n    if (plugins) plugins.forEach(plugin => {\n      if (this.pluginsByKey[plugin.key])\n        throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\")\n      this.plugins.push(plugin)\n      this.pluginsByKey[plugin.key] = plugin\n      if (plugin.spec.state)\n        this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin))\n    })\n  }\n}\n\n// ::- The state of a ProseMirror editor is represented by an object\n// of this type. A state is a persistent data structure—it isn't\n// updated, but rather a new state value is computed from an old one\n// using the [`apply`](#state.EditorState.apply) method.\n//\n// A state holds a number of built-in fields, and plugins can\n// [define](#state.PluginSpec.state) additional fields.\nexport class EditorState {\n  constructor(config) {\n    this.config = config\n  }\n\n  // doc:: Node\n  // The current document.\n\n  // selection:: Selection\n  // The selection.\n\n  // storedMarks:: ?[Mark]\n  // A set of marks to apply to the next input. Will be null when\n  // no explicit marks have been set.\n\n  // :: Schema\n  // The schema of the state's document.\n  get schema() {\n    return this.config.schema\n  }\n\n  // :: [Plugin]\n  // The plugins that are active in this state.\n  get plugins() {\n    return this.config.plugins\n  }\n\n  // :: (Transaction) → EditorState\n  // Apply the given transaction to produce a new state.\n  apply(tr) {\n    return this.applyTransaction(tr).state\n  }\n\n  // : (Transaction) → bool\n  filterTransaction(tr, ignore = -1) {\n    for (let i = 0; i < this.config.plugins.length; i++) if (i != ignore) {\n      let plugin = this.config.plugins[i]\n      if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n        return false\n    }\n    return true\n  }\n\n  // :: (Transaction) → {state: EditorState, transactions: [Transaction]}\n  // Verbose variant of [`apply`](#state.EditorState.apply) that\n  // returns the precise transactions that were applied (which might\n  // be influenced by the [transaction\n  // hooks](#state.PluginSpec.filterTransaction) of\n  // plugins) along with the new state.\n  applyTransaction(rootTr) {\n    if (!this.filterTransaction(rootTr)) return {state: this, transactions: []}\n\n    let trs = [rootTr], newState = this.applyInner(rootTr), seen = null\n    // This loop repeatedly gives plugins a chance to respond to\n    // transactions as new transactions are added, making sure to only\n    // pass the transactions the plugin did not see before.\n    outer: for (;;) {\n      let haveNew = false\n      for (let i = 0; i < this.config.plugins.length; i++) {\n        let plugin = this.config.plugins[i]\n        if (plugin.spec.appendTransaction) {\n          let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this\n          let tr = n < trs.length &&\n              plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState)\n          if (tr && newState.filterTransaction(tr, i)) {\n            tr.setMeta(\"appendedTransaction\", rootTr)\n            if (!seen) {\n              seen = []\n              for (let j = 0; j < this.config.plugins.length; j++)\n                seen.push(j < i ? {state: newState, n: trs.length} : {state: this, n: 0})\n            }\n            trs.push(tr)\n            newState = newState.applyInner(tr)\n            haveNew = true\n          }\n          if (seen) seen[i] = {state: newState, n: trs.length}\n        }\n      }\n      if (!haveNew) return {state: newState, transactions: trs}\n    }\n  }\n\n  // : (Transaction) → EditorState\n  applyInner(tr) {\n    if (!tr.before.eq(this.doc)) throw new RangeError(\"Applying a mismatched transaction\")\n    let newInstance = new EditorState(this.config), fields = this.config.fields\n    for (let i = 0; i < fields.length; i++) {\n      let field = fields[i]\n      newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance)\n    }\n    for (let i = 0; i < applyListeners.length; i++) applyListeners[i](this, tr, newInstance)\n    return newInstance\n  }\n\n  // :: Transaction\n  // Start a [transaction](#state.Transaction) from this state.\n  get tr() { return new Transaction(this) }\n\n  // :: (Object) → EditorState\n  // Create a new state.\n  //\n  //   config::- Configuration options. Must contain `schema` or `doc` (or both).\n  //\n  //      schema:: ?Schema\n  //      The schema to use (only relevant if no `doc` is specified).\n  //\n  //      doc:: ?Node\n  //      The starting document.\n  //\n  //      selection:: ?Selection\n  //      A valid selection in the document.\n  //\n  //      storedMarks:: ?[Mark]\n  //      The initial set of [stored marks](#state.EditorState.storedMarks).\n  //\n  //      plugins:: ?[Plugin]\n  //      The plugins that should be active in this state.\n  static create(config) {\n    let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins)\n    let instance = new EditorState($config)\n    for (let i = 0; i < $config.fields.length; i++)\n      instance[$config.fields[i].name] = $config.fields[i].init(config, instance)\n    return instance\n  }\n\n  // :: (Object) → EditorState\n  // Create a new state based on this one, but with an adjusted set of\n  // active plugins. State fields that exist in both sets of plugins\n  // are kept unchanged. Those that no longer exist are dropped, and\n  // those that are new are initialized using their\n  // [`init`](#state.StateField.init) method, passing in the new\n  // configuration object..\n  //\n  //   config::- configuration options\n  //\n  //     plugins:: [Plugin]\n  //     New set of active plugins.\n  reconfigure(config) {\n    let $config = new Configuration(this.schema, config.plugins)\n    let fields = $config.fields, instance = new EditorState($config)\n    for (let i = 0; i < fields.length; i++) {\n      let name = fields[i].name\n      instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance)\n    }\n    return instance\n  }\n\n  // :: (?union<Object<Plugin>, string, number>) → Object\n  // Serialize this state to JSON. If you want to serialize the state\n  // of plugins, pass an object mapping property names to use in the\n  // resulting JSON object to plugin objects. The argument may also be\n  // a string or number, in which case it is ignored, to support the\n  // way `JSON.stringify` calls `toString` methods.\n  toJSON(pluginFields) {\n    let result = {doc: this.doc.toJSON(), selection: this.selection.toJSON()}\n    if (this.storedMarks) result.storedMarks = this.storedMarks.map(m => m.toJSON())\n    if (pluginFields && typeof pluginFields == 'object') for (let prop in pluginFields) {\n      if (prop == \"doc\" || prop == \"selection\")\n        throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\")\n      let plugin = pluginFields[prop], state = plugin.spec.state\n      if (state && state.toJSON) result[prop] = state.toJSON.call(plugin, this[plugin.key])\n    }\n    return result\n  }\n\n  // :: (Object, Object, ?Object<Plugin>) → EditorState\n  // Deserialize a JSON representation of a state. `config` should\n  // have at least a `schema` field, and should contain array of\n  // plugins to initialize the state with. `pluginFields` can be used\n  // to deserialize the state of plugins, by associating plugin\n  // instances with the property names they use in the JSON object.\n  //\n  //   config::- configuration options\n  //\n  //     schema:: Schema\n  //     The schema to use.\n  //\n  //     plugins:: ?[Plugin]\n  //     The set of active plugins.\n  static fromJSON(config, json, pluginFields) {\n    if (!json) throw new RangeError(\"Invalid input for EditorState.fromJSON\")\n    if (!config.schema) throw new RangeError(\"Required config field 'schema' missing\")\n    let $config = new Configuration(config.schema, config.plugins)\n    let instance = new EditorState($config)\n    $config.fields.forEach(field => {\n      if (field.name == \"doc\") {\n        instance.doc = Node.fromJSON(config.schema, json.doc)\n      } else if (field.name == \"selection\") {\n        instance.selection = Selection.fromJSON(instance.doc, json.selection)\n      } else if (field.name == \"storedMarks\") {\n        if (json.storedMarks) instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON)\n      } else {\n        if (pluginFields) for (let prop in pluginFields) {\n          let plugin = pluginFields[prop], state = plugin.spec.state\n          if (plugin.key == field.name && state && state.fromJSON &&\n              Object.prototype.hasOwnProperty.call(json, prop)) {\n            // This field belongs to a plugin mapped to a JSON field, read it from there.\n            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance)\n            return\n          }\n        }\n        instance[field.name] = field.init(config, instance)\n      }\n    })\n    return instance\n  }\n\n  // Kludge to allow the view to track mappings between different\n  // instances of a state.\n  //\n  // FIXME this is no longer needed as of prosemirror-view 1.9.0,\n  // though due to backwards-compat we should probably keep it around\n  // for a while (if only as a no-op)\n  static addApplyListener(f) {\n    applyListeners.push(f)\n  }\n  static removeApplyListener(f) {\n    let found = applyListeners.indexOf(f)\n    if (found > -1) applyListeners.splice(found, 1)\n  }\n}\n\nconst applyListeners = []\n","// PluginSpec:: interface\n//\n// This is the type passed to the [`Plugin`](#state.Plugin)\n// constructor. It provides a definition for a plugin.\n//\n//   props:: ?EditorProps\n//   The [view props](#view.EditorProps) added by this plugin. Props\n//   that are functions will be bound to have the plugin instance as\n//   their `this` binding.\n//\n//   state:: ?StateField<any>\n//   Allows a plugin to define a [state field](#state.StateField), an\n//   extra slot in the state object in which it can keep its own data.\n//\n//   key:: ?PluginKey\n//   Can be used to make this a keyed plugin. You can have only one\n//   plugin with a given key in a given state, but it is possible to\n//   access the plugin's configuration and state through the key,\n//   without having access to the plugin instance object.\n//\n//   view:: ?(EditorView) → Object\n//   When the plugin needs to interact with the editor view, or\n//   set something up in the DOM, use this field. The function\n//   will be called when the plugin's state is associated with an\n//   editor view.\n//\n//     return::-\n//     Should return an object with the following optional\n//     properties:\n//\n//       update:: ?(view: EditorView, prevState: EditorState)\n//       Called whenever the view's state is updated.\n//\n//       destroy:: ?()\n//       Called when the view is destroyed or receives a state\n//       with different plugins.\n//\n//   filterTransaction:: ?(Transaction, EditorState) → bool\n//   When present, this will be called before a transaction is\n//   applied by the state, allowing the plugin to cancel it (by\n//   returning false).\n//\n//   appendTransaction:: ?(transactions: [Transaction], oldState: EditorState, newState: EditorState) → ?Transaction\n//   Allows the plugin to append another transaction to be applied\n//   after the given array of transactions. When another plugin\n//   appends a transaction after this was called, it is called again\n//   with the new state and new transactions—but only the new\n//   transactions, i.e. it won't be passed transactions that it\n//   already saw.\n\nfunction bindProps(obj, self, target) {\n  for (let prop in obj) {\n    let val = obj[prop]\n    if (val instanceof Function) val = val.bind(self)\n    else if (prop == \"handleDOMEvents\") val = bindProps(val, self, {})\n    target[prop] = val\n  }\n  return target\n}\n\n// ::- Plugins bundle functionality that can be added to an editor.\n// They are part of the [editor state](#state.EditorState) and\n// may influence that state and the view that contains it.\nexport class Plugin {\n  // :: (PluginSpec)\n  // Create a plugin.\n  constructor(spec) {\n    // :: EditorProps\n    // The [props](#view.EditorProps) exported by this plugin.\n    this.props = {}\n    if (spec.props) bindProps(spec.props, this, this.props)\n    // :: Object\n    // The plugin's [spec object](#state.PluginSpec).\n    this.spec = spec\n    this.key = spec.key ? spec.key.key : createKey(\"plugin\")\n  }\n\n  // :: (EditorState) → any\n  // Extract the plugin's state field from an editor state.\n  getState(state) { return state[this.key] }\n}\n\n// StateField:: interface<T>\n// A plugin spec may provide a state field (under its\n// [`state`](#state.PluginSpec.state) property) of this type, which\n// describes the state it wants to keep. Functions provided here are\n// always called with the plugin instance as their `this` binding.\n//\n//   init:: (config: Object, instance: EditorState) → T\n//   Initialize the value of the field. `config` will be the object\n//   passed to [`EditorState.create`](#state.EditorState^create). Note\n//   that `instance` is a half-initialized state instance, and will\n//   not have values for plugin fields initialized after this one.\n//\n//   apply:: (tr: Transaction, value: T, oldState: EditorState, newState: EditorState) → T\n//   Apply the given transaction to this state field, producing a new\n//   field value. Note that the `newState` argument is again a partially\n//   constructed state does not yet contain the state from plugins\n//   coming after this one.\n//\n//   toJSON:: ?(value: T) → *\n//   Convert this field to JSON. Optional, can be left off to disable\n//   JSON serialization for the field.\n//\n//   fromJSON:: ?(config: Object, value: *, state: EditorState) → T\n//   Deserialize the JSON representation of this field. Note that the\n//   `state` argument is again a half-initialized state.\n\nconst keys = Object.create(null)\n\nfunction createKey(name) {\n  if (name in keys) return name + \"$\" + ++keys[name]\n  keys[name] = 0\n  return name + \"$\"\n}\n\n// ::- A key is used to [tag](#state.PluginSpec.key)\n// plugins in a way that makes it possible to find them, given an\n// editor state. Assigning a key does mean only one plugin of that\n// type can be active in a state.\nexport class PluginKey {\n  // :: (?string)\n  // Create a plugin key.\n  constructor(name = \"key\") { this.key = createKey(name) }\n\n  // :: (EditorState) → ?Plugin\n  // Get the active plugin with this key, if any, from an editor\n  // state.\n  get(state) { return state.config.pluginsByKey[this.key] }\n\n  // :: (EditorState) → ?any\n  // Get the plugin's state from an editor state.\n  getState(state) { return state[this.key] }\n}\n","const result = {}\nexport default result\n\nif (typeof navigator != \"undefined\" && typeof document != \"undefined\") {\n  const ie_edge = /Edge\\/(\\d+)/.exec(navigator.userAgent)\n  const ie_upto10 = /MSIE \\d/.test(navigator.userAgent)\n  const ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n  result.mac = /Mac/.test(navigator.platform)\n  let ie = result.ie = !!(ie_upto10 || ie_11up || ie_edge)\n  result.ie_version = ie_upto10 ? document.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : null\n  result.gecko = !ie && /gecko\\/(\\d+)/i.test(navigator.userAgent)\n  result.gecko_version = result.gecko && +(/Firefox\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n  let chrome = !ie && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\n  result.chrome = !!chrome\n  result.chrome_version = chrome && +chrome[1]\n  // Is true for both iOS and iPadOS for convenience\n  result.safari = !ie && /Apple Computer/.test(navigator.vendor)\n  result.ios = result.safari && (/Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2)\n  result.android = /Android \\d/.test(navigator.userAgent)\n  result.webkit = \"webkitFontSmoothing\" in document.documentElement.style\n  result.webkit_version = result.webkit && +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n}\n","import browser from \"./browser\"\n\nexport const domIndex = function(node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling\n    if (!node) return index\n  }\n}\n\nexport const parentNode = function(node) {\n  let parent = node.assignedSlot || node.parentNode\n  return parent && parent.nodeType == 11 ? parent.host : parent\n}\n\nlet reusedRange = null\n\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nexport const textRange = function(node, from, to) {\n  let range = reusedRange || (reusedRange = document.createRange())\n  range.setEnd(node, to == null ? node.nodeValue.length : to)\n  range.setStart(node, from || 0)\n  return range\n}\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nexport const isEquivalentPosition = function(node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n                        scanFor(node, off, targetNode, targetOff, 1))\n}\n\nconst atomElements = /^(img|br|input|textarea|hr)$/i\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      let parent = node.parentNode\n      if (parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) || node.contentEditable == \"false\")\n        return false\n      off = domIndex(node) + (dir < 0 ? 0 : 1)\n      node = parent\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)]\n      if (node.contentEditable == \"false\") return false\n      off = dir < 0 ? nodeSize(node) : 0\n    } else {\n      return false\n    }\n  }\n}\n\nexport function nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nexport function isOnEdge(node, offset, parent) {\n  for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n    if (node == parent) return true\n    let index = domIndex(node)\n    node = node.parentNode\n    if (!node) return false\n    atStart = atStart && index == 0\n    atEnd = atEnd && index == nodeSize(node)\n  }\n}\n\nfunction hasBlockDesc(dom) {\n  let desc\n  for (let cur = dom; cur; cur = cur.parentNode) if (desc = cur.pmViewDesc) break\n  return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom)\n}\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nexport const selectionCollapsed = function(domSel) {\n  let collapsed = domSel.isCollapsed\n  if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    collapsed = false\n  return collapsed\n}\n\nexport function keyEvent(keyCode, key) {\n  let event = document.createEvent(\"Event\")\n  event.initEvent(\"keydown\", true, true)\n  event.keyCode = keyCode\n  event.key = event.code = key\n  return event\n}\n","import {nodeSize, textRange, parentNode} from \"./dom\"\nimport browser from \"./browser\"\n\nfunction windowRect(doc) {\n  return {left: 0, right: doc.documentElement.clientWidth,\n          top: 0, bottom: doc.documentElement.clientHeight}\n}\n\nfunction getSide(value, side) {\n  return typeof value == \"number\" ? value : value[side]\n}\n\nfunction clientRect(node) {\n  let rect = node.getBoundingClientRect()\n  // Adjust for elements with style \"transform: scale()\"\n  let scaleX = (rect.width / node.offsetWidth) || 1\n  let scaleY = (rect.height / node.offsetHeight) || 1\n  // Make sure scrollbar width isn't included in the rectangle\n  return {left: rect.left, right: rect.left + node.clientWidth * scaleX,\n          top: rect.top, bottom: rect.top + node.clientHeight * scaleY}\n}\n\nexport function scrollRectIntoView(view, rect, startDOM) {\n  let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5\n  let doc = view.dom.ownerDocument\n  for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n    if (!parent) break\n    if (parent.nodeType != 1) continue\n    let atTop = parent == doc.body || parent.nodeType != 1\n    let bounding = atTop ? windowRect(doc) : clientRect(parent)\n    let moveX = 0, moveY = 0\n    if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n      moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"))\n    else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n      moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\")\n    if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n      moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"))\n    else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n      moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\")\n    if (moveX || moveY) {\n      if (atTop) {\n        doc.defaultView.scrollBy(moveX, moveY)\n      } else {\n        let startX = parent.scrollLeft, startY = parent.scrollTop\n        if (moveY) parent.scrollTop += moveY\n        if (moveX) parent.scrollLeft += moveX\n        let dX = parent.scrollLeft - startX, dY = parent.scrollTop - startY\n        rect = {left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY}\n      }\n    }\n    if (atTop) break\n  }\n}\n\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nexport function storeScrollPos(view) {\n  let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top)\n  let refDOM, refTop\n  for (let x = (rect.left + rect.right) / 2, y = startY + 1;\n       y < Math.min(innerHeight, rect.bottom); y += 5) {\n    let dom = view.root.elementFromPoint(x, y)\n    if (dom == view.dom || !view.dom.contains(dom)) continue\n    let localRect = dom.getBoundingClientRect()\n    if (localRect.top >= startY - 20) {\n      refDOM = dom\n      refTop = localRect.top\n      break\n    }\n  }\n  return {refDOM, refTop, stack: scrollStack(view.dom)}\n}\n\nfunction scrollStack(dom) {\n  let stack = [], doc = dom.ownerDocument\n  for (; dom; dom = parentNode(dom)) {\n    stack.push({dom, top: dom.scrollTop, left: dom.scrollLeft})\n    if (dom == doc) break\n  }\n  return stack\n}\n\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nexport function resetScrollPos({refDOM, refTop, stack}) {\n  let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0\n  restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop)\n}\n\nfunction restoreScrollStack(stack, dTop) {\n  for (let i = 0; i < stack.length; i++) {\n    let {dom, top, left} = stack[i]\n    if (dom.scrollTop != top + dTop) dom.scrollTop = top + dTop\n    if (dom.scrollLeft != left) dom.scrollLeft = left\n  }\n}\n\nlet preventScrollSupported = null\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nexport function focusPreventScroll(dom) {\n  if (dom.setActive) return dom.setActive() // in IE\n  if (preventScrollSupported) return dom.focus(preventScrollSupported)\n\n  let stored = scrollStack(dom)\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {preventScroll: true}\n      return true\n    }\n  } : undefined)\n  if (!preventScrollSupported) {\n    preventScrollSupported = false\n    restoreScrollStack(stored, 0)\n  }\n}\n\nfunction findOffsetInNode(node, coords) {\n  let closest, dxClosest = 2e8, coordsClosest, offset = 0\n  let rowBot = coords.top, rowTop = coords.top\n  for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    let rects\n    if (child.nodeType == 1) rects = child.getClientRects()\n    else if (child.nodeType == 3) rects = textRange(child).getClientRects()\n    else continue\n\n    for (let i = 0; i < rects.length; i++) {\n      let rect = rects[i]\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot)\n        rowTop = Math.min(rect.top, rowTop)\n        let dx = rect.left > coords.left ? rect.left - coords.left\n            : rect.right < coords.left ? coords.left - rect.right : 0\n        if (dx < dxClosest) {\n          closest = child\n          dxClosest = dx\n          coordsClosest = dx && closest.nodeType == 3 ? {left: rect.right < coords.left ? rect.right : rect.left, top: coords.top} : coords\n          if (child.nodeType == 1 && dx)\n            offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)\n          continue\n        }\n      }\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                       coords.left >= rect.left && coords.top >= rect.bottom))\n        offset = childIndex + 1\n    }\n  }\n  if (closest && closest.nodeType == 3) return findOffsetInText(closest, coordsClosest)\n  if (!closest || (dxClosest && closest.nodeType == 1)) return {node, offset}\n  return findOffsetInNode(closest, coordsClosest)\n}\n\nfunction findOffsetInText(node, coords) {\n  let len = node.nodeValue.length\n  let range = document.createRange()\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1)\n    range.setStart(node, i)\n    let rect = singleRect(range, 1)\n    if (rect.top == rect.bottom) continue\n    if (inRect(coords, rect))\n      return {node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)}\n  }\n  return {node, offset: 0}\n}\n\nfunction inRect(coords, rect) {\n  return coords.left >= rect.left - 1 && coords.left <= rect.right + 1&&\n    coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1\n}\n\nfunction targetKludge(dom, coords) {\n  let parent = dom.parentNode\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n    return parent\n  return dom\n}\n\nfunction posFromElement(view, elt, coords) {\n  let {node, offset} = findOffsetInNode(elt, coords), bias = -1\n  if (node.nodeType == 1 && !node.firstChild) {\n    let rect = node.getBoundingClientRect()\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1\n  }\n  return view.docView.posFromDOM(node, offset, bias)\n}\n\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  let outside = -1\n  for (let cur = node;;) {\n    if (cur == view.dom) break\n    let desc = view.docView.nearestDesc(cur, true)\n    if (!desc) return null\n    if (desc.node.isBlock && desc.parent) {\n      let rect = desc.dom.getBoundingClientRect()\n      if (rect.left > coords.left || rect.top > coords.top) outside = desc.posBefore\n      else if (rect.right < coords.left || rect.bottom < coords.top) outside = desc.posAfter\n      else break\n    }\n    cur = desc.dom.parentNode\n  }\n  return outside > -1 ? outside : view.docView.posFromDOM(node, offset)\n}\n\nfunction elementFromPoint(element, coords, box) {\n  let len = element.childNodes.length\n  if (len && box.top < box.bottom) {\n    for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n      let child = element.childNodes[i]\n      if (child.nodeType == 1) {\n        let rects = child.getClientRects()\n        for (let j = 0; j < rects.length; j++) {\n          let rect = rects[j]\n          if (inRect(coords, rect)) return elementFromPoint(child, coords, rect)\n        }\n      }\n      if ((i = (i + 1) % len) == startI) break\n    }\n  }\n  return element\n}\n\n// Given an x,y position on the editor, get the position in the document.\nexport function posAtCoords(view, coords) {\n  let root = view.root, node, offset\n  if (root.caretPositionFromPoint) {\n    try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n      let pos = root.caretPositionFromPoint(coords.left, coords.top)\n      if (pos) ({offsetNode: node, offset} = pos)\n    } catch (_) {}\n  }\n  if (!node && root.caretRangeFromPoint) {\n    let range = root.caretRangeFromPoint(coords.left, coords.top)\n    if (range) ({startContainer: node, startOffset: offset} = range)\n  }\n\n  let elt = root.elementFromPoint(coords.left, coords.top + 1), pos\n  if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n    let box = view.dom.getBoundingClientRect()\n    if (!inRect(coords, box)) return null\n    elt = elementFromPoint(view.dom, coords, box)\n    if (!elt) return null\n  }\n  // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n  if (browser.safari) {\n    for (let p = elt; node && p; p = parentNode(p))\n      if (p.draggable) node = offset = null\n  }\n  elt = targetKludge(elt, coords)\n  if (node) {\n    if (browser.gecko && node.nodeType == 1) {\n      // Firefox will sometimes return offsets into <input> nodes, which\n      // have no actual children, from caretPositionFromPoint (#953)\n      offset = Math.min(offset, node.childNodes.length)\n      // It'll also move the returned position before image nodes,\n      // even if those are behind it.\n      if (offset < node.childNodes.length) {\n        let next = node.childNodes[offset], box\n        if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n            box.bottom > coords.top)\n          offset++\n      }\n    }\n    // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n        coords.top > node.lastChild.getBoundingClientRect().bottom)\n      pos = view.state.doc.content.size\n    // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately placed\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n      pos = posFromCaret(view, node, offset, coords)\n  }\n  if (pos == null) pos = posFromElement(view, elt, coords)\n\n  let desc = view.docView.nearestDesc(elt, true)\n  return {pos, inside: desc ? desc.posAtStart - desc.border : -1}\n}\n\nfunction singleRect(object, bias) {\n  let rects = object.getClientRects()\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1]\n}\n\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/\n\n// : (EditorView, number, number) → {left: number, top: number, right: number, bottom: number}\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nexport function coordsAtPos(view, pos, side) {\n  let {node, offset} = view.docView.domFromPos(pos, side < 0 ? -1 : 1)\n\n  let supportEmptyRange = browser.webkit || browser.gecko\n  if (node.nodeType == 3) {\n    // These browsers support querying empty text ranges. Prefer that in\n    // bidi context or when at the end of a node.\n    if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n      let rect = singleRect(textRange(node, offset, offset), side)\n      // Firefox returns bad results (the position before the space)\n      // when querying a position directly after line-broken\n      // whitespace. Detect this situation and and kludge around it\n      if (browser.gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n        let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1)\n        if (rectBefore.top == rect.top) {\n          let rectAfter = singleRect(textRange(node, offset, offset + 1), -1)\n          if (rectAfter.top != rect.top)\n            return flattenV(rectAfter, rectAfter.left < rectBefore.left)\n        }\n      }\n      return rect\n    } else {\n      let from = offset, to = offset, takeSide = side < 0 ? 1 : -1\n      if (side < 0 && !offset) { to++; takeSide = -1 }\n      else if (side >= 0 && offset == node.nodeValue.length) { from--; takeSide = 1 }\n      else if (side < 0) { from-- }\n      else { to ++ }\n      return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0)\n    }\n  }\n\n  // Return a horizontal line in block context\n  if (!view.state.doc.resolve(pos).parent.inlineContent) {\n    if (offset && (side < 0 || offset == nodeSize(node))) {\n      let before = node.childNodes[offset - 1]\n      if (before.nodeType == 1) return flattenH(before.getBoundingClientRect(), false)\n    }\n    if (offset < nodeSize(node)) {\n      let after = node.childNodes[offset]\n      if (after.nodeType == 1) return flattenH(after.getBoundingClientRect(), true)\n    }\n    return flattenH(node.getBoundingClientRect(), side >= 0)\n  }\n\n  // Inline, not in text node (this is not Bidi-safe)\n  if (offset && (side < 0 || offset == nodeSize(node))) {\n    let before = node.childNodes[offset - 1]\n    let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n        // BR nodes tend to only return the rectangle before them.\n        // Only use them if they are the last element in their parent\n        : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null\n    if (target) return flattenV(singleRect(target, 1), false)\n  }\n  if (offset < nodeSize(node)) {\n    let after = node.childNodes[offset]\n    let target = after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n        : after.nodeType == 1 ? after : null\n    if (target) return flattenV(singleRect(target, -1), true)\n  }\n  // All else failed, just try to get a rectangle for the target node\n  return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0)\n}\n\nfunction flattenV(rect, left) {\n  if (rect.width == 0) return rect\n  let x = left ? rect.left : rect.right\n  return {top: rect.top, bottom: rect.bottom, left: x, right: x}\n}\n\nfunction flattenH(rect, top) {\n  if (rect.height == 0) return rect\n  let y = top ? rect.top : rect.bottom\n  return {top: y, bottom: y, left: rect.left, right: rect.right}\n}\n\nfunction withFlushedState(view, state, f) {\n  let viewState = view.state, active = view.root.activeElement\n  if (viewState != state) view.updateState(state)\n  if (active != view.dom) view.focus()\n  try {\n    return f()\n  } finally {\n    if (viewState != state) view.updateState(viewState)\n    if (active != view.dom && active) active.focus()\n  }\n}\n\n// : (EditorView, number, number)\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n  let sel = state.selection\n  let $pos = dir == \"up\" ? sel.$from : sel.$to\n  return withFlushedState(view, state, () => {\n    let {node: dom} = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1)\n    for (;;) {\n      let nearest = view.docView.nearestDesc(dom, true)\n      if (!nearest) break\n      if (nearest.node.isBlock) { dom = nearest.dom; break }\n      dom = nearest.dom.parentNode\n    }\n    let coords = coordsAtPos(view, $pos.pos, 1)\n    for (let child = dom.firstChild; child; child = child.nextSibling) {\n      let boxes\n      if (child.nodeType == 1) boxes = child.getClientRects()\n      else if (child.nodeType == 3) boxes = textRange(child, 0, child.nodeValue.length).getClientRects()\n      else continue\n      for (let i = 0; i < boxes.length; i++) {\n        let box = boxes[i]\n        if (box.bottom > box.top && (dir == \"up\" ? box.bottom < coords.top + 1 : box.top > coords.bottom - 1))\n          return false\n      }\n    }\n    return true\n  })\n}\n\nconst maybeRTL = /[\\u0590-\\u08ac]/\n\nfunction endOfTextblockHorizontal(view, state, dir) {\n  let {$head} = state.selection\n  if (!$head.parent.isTextblock) return false\n  let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size\n  let sel = getSelection()\n  // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n    return dir == \"left\" || dir == \"backward\" ? atStart : atEnd\n\n  return withFlushedState(view, state, () => {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    let oldRange = sel.getRangeAt(0), oldNode = sel.focusNode, oldOff = sel.focusOffset\n    let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n    sel.modify(\"move\", dir, \"character\")\n    let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom\n    let result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) ||\n        (oldNode == sel.focusNode && oldOff == sel.focusOffset)\n    // Restore the previous selection\n    sel.removeAllRanges()\n    sel.addRange(oldRange)\n    if (oldBidiLevel != null) sel.caretBidiLevel = oldBidiLevel\n    return result\n  })\n}\n\nlet cachedState = null, cachedDir = null, cachedResult = false\nexport function endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) return cachedResult\n  cachedState = state; cachedDir = dir\n  return cachedResult = dir == \"up\" || dir == \"down\"\n    ? endOfTextblockVertical(view, state, dir)\n    : endOfTextblockHorizontal(view, state, dir)\n}\n","import {DOMSerializer, Fragment, Mark} from \"prosemirror-model\"\nimport {TextSelection} from \"prosemirror-state\"\n\nimport {domIndex, isEquivalentPosition, nodeSize} from \"./dom\"\nimport browser from \"./browser\"\n\n// NodeView:: interface\n//\n// By default, document nodes are rendered using the result of the\n// [`toDOM`](#model.NodeSpec.toDOM) method of their spec, and managed\n// entirely by the editor. For some use cases, such as embedded\n// node-specific editing interfaces, you want more control over\n// the behavior of a node's in-editor representation, and need to\n// [define](#view.EditorProps.nodeViews) a custom node view.\n//\n// Mark views only support `dom` and `contentDOM`, and don't support\n// any of the node view methods.\n//\n// Objects returned as node views must conform to this interface.\n//\n//   dom:: ?dom.Node\n//   The outer DOM node that represents the document node. When not\n//   given, the default strategy is used to create a DOM node.\n//\n//   contentDOM:: ?dom.Node\n//   The DOM node that should hold the node's content. Only meaningful\n//   if the node view also defines a `dom` property and if its node\n//   type is not a leaf node type. When this is present, ProseMirror\n//   will take care of rendering the node's children into it. When it\n//   is not present, the node view itself is responsible for rendering\n//   (or deciding not to render) its child nodes.\n//\n//   update:: ?(node: Node, decorations: [Decoration], innerDecorations: DecorationSource) → bool\n//   When given, this will be called when the view is updating itself.\n//   It will be given a node (possibly of a different type), an array\n//   of active decorations around the node (which are automatically\n//   drawn, and the node view may ignore if it isn't interested in\n//   them), and a [decoration source](#view.DecorationSource) that\n//   represents any decorations that apply to the content of the node\n//   (which again may be ignored). It should return true if it was\n//   able to update to that node, and false otherwise. If the node\n//   view has a `contentDOM` property (or no `dom` property), updating\n//   its child nodes will be handled by ProseMirror.\n//\n//   selectNode:: ?()\n//   Can be used to override the way the node's selected status (as a\n//   node selection) is displayed.\n//\n//   deselectNode:: ?()\n//   When defining a `selectNode` method, you should also provide a\n//   `deselectNode` method to remove the effect again.\n//\n//   setSelection:: ?(anchor: number, head: number, root: dom.Document)\n//   This will be called to handle setting the selection inside the\n//   node. The `anchor` and `head` positions are relative to the start\n//   of the node. By default, a DOM selection will be created between\n//   the DOM positions corresponding to those positions, but if you\n//   override it you can do something else.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to prevent the editor view from trying to handle some\n//   or all DOM events that bubble up from the node view. Events for\n//   which this returns true are not handled by the editor.\n//\n//   ignoreMutation:: ?(dom.MutationRecord) → bool\n//   Called when a DOM\n//   [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n//   or a selection change happens within the view. When the change is\n//   a selection change, the record will have a `type` property of\n//   `\"selection\"` (which doesn't occur for native mutation records).\n//   Return false if the editor should re-read the selection or\n//   re-parse the range around the mutation, true if it can safely be\n//   ignored.\n//\n//   destroy:: ?()\n//   Called when the node view is removed from the editor or the whole\n//   editor is destroyed. (Not available for marks.)\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\n\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3\n\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n  // : (?ViewDesc, [ViewDesc], dom.Node, ?dom.Node)\n  constructor(parent, children, dom, contentDOM) {\n    this.parent = parent\n    this.children = children\n    this.dom = dom\n    // An expando property on the DOM node provides a link back to its\n    // description.\n    dom.pmViewDesc = this\n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    this.contentDOM = contentDOM\n    this.dirty = NOT_DIRTY\n  }\n\n  // Used to check whether a given description corresponds to a\n  // widget/mark/node.\n  matchesWidget() { return false }\n  matchesMark() { return false }\n  matchesNode() { return false }\n  matchesHack(_nodeName) { return false }\n\n  get beforePosition() { return false }\n\n  // : () → ?ParseRule\n  // When parsing in-editor content (in domchange.js), we allow\n  // descriptions to determine the parse rules that should be used to\n  // parse them.\n  parseRule() { return null }\n\n  // : (dom.Event) → bool\n  // Used by the editor's event handler to ignore events that come\n  // from certain descs.\n  stopEvent() { return false }\n\n  // The size of the content represented by this desc.\n  get size() {\n    let size = 0\n    for (let i = 0; i < this.children.length; i++) size += this.children[i].size\n    return size\n  }\n\n  // For block nodes, this represents the space taken up by their\n  // start/end tokens.\n  get border() { return 0 }\n\n  destroy() {\n    this.parent = null\n    if (this.dom.pmViewDesc == this) this.dom.pmViewDesc = null\n    for (let i = 0; i < this.children.length; i++)\n      this.children[i].destroy()\n  }\n\n  posBeforeChild(child) {\n    for (let i = 0, pos = this.posAtStart; i < this.children.length; i++) {\n      let cur = this.children[i]\n      if (cur == child) return pos\n      pos += cur.size\n    }\n  }\n\n  get posBefore() {\n    return this.parent.posBeforeChild(this)\n  }\n\n  get posAtStart() {\n    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0\n  }\n\n  get posAfter() {\n    return this.posBefore + this.size\n  }\n\n  get posAtEnd() {\n    return this.posAtStart + this.size - 2 * this.border\n  }\n\n  // : (dom.Node, number, ?number) → number\n  localPosFromDOM(dom, offset, bias) {\n    // If the DOM position is in the content, use the child desc after\n    // it to figure out a position.\n    if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n      if (bias < 0) {\n        let domBefore, desc\n        if (dom == this.contentDOM) {\n          domBefore = dom.childNodes[offset - 1]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domBefore = dom.previousSibling\n        }\n        while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) domBefore = domBefore.previousSibling\n        return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart\n      } else {\n        let domAfter, desc\n        if (dom == this.contentDOM) {\n          domAfter = dom.childNodes[offset]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domAfter = dom.nextSibling\n        }\n        while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this)) domAfter = domAfter.nextSibling\n        return domAfter ? this.posBeforeChild(desc) : this.posAtEnd\n      }\n    }\n    // Otherwise, use various heuristics, falling back on the bias\n    // parameter, to determine whether to return the position at the\n    // start or at the end of this view desc.\n    let atEnd\n    if (dom == this.dom && this.contentDOM) {\n      atEnd = offset > domIndex(this.contentDOM)\n    } else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n      atEnd = dom.compareDocumentPosition(this.contentDOM) & 2\n    } else if (this.dom.firstChild) {\n      if (offset == 0) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = false; break }\n        if (search.parentNode.firstChild != search) break\n      }\n      if (atEnd == null && offset == dom.childNodes.length) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = true; break }\n        if (search.parentNode.lastChild != search) break\n      }\n    }\n    return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart\n  }\n\n  // Scan up the dom finding the first desc that is a descendant of\n  // this one.\n  nearestDesc(dom, onlyNodes) {\n    for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n      let desc = this.getDesc(cur)\n      if (desc && (!onlyNodes || desc.node)) {\n        // If dom is outside of this desc's nodeDOM, don't count it.\n        if (first && desc.nodeDOM &&\n            !(desc.nodeDOM.nodeType == 1 ? desc.nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : desc.nodeDOM == dom))\n          first = false\n        else\n          return desc\n      }\n    }\n  }\n\n  getDesc(dom) {\n    let desc = dom.pmViewDesc\n    for (let cur = desc; cur; cur = cur.parent) if (cur == this) return desc\n  }\n\n  posFromDOM(dom, offset, bias) {\n    for (let scan = dom; scan; scan = scan.parentNode) {\n      let desc = this.getDesc(scan)\n      if (desc) return desc.localPosFromDOM(dom, offset, bias)\n    }\n    return -1\n  }\n\n  // : (number) → ?NodeViewDesc\n  // Find the desc for the node after the given pos, if any. (When a\n  // parent node overrode rendering, there might not be one.)\n  descAt(pos) {\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == pos && end != offset) {\n        while (!child.border && child.children.length) child = child.children[0]\n        return child\n      }\n      if (pos < end) return child.descAt(pos - offset - child.border)\n      offset = end\n    }\n  }\n\n  // : (number, number) → {node: dom.Node, offset: number}\n  domFromPos(pos, side) {\n    if (!this.contentDOM) return {node: this.dom, offset: 0}\n    for (let offset = 0, i = 0, first = true;; i++, first = false) {\n      // Skip removed or always-before children\n      while (i < this.children.length && (this.children[i].beforePosition ||\n                                          this.children[i].dom.parentNode != this.contentDOM))\n        offset += this.children[i++].size\n      let child = i == this.children.length ? null : this.children[i]\n      if (offset == pos && (side == 0 || !child || !child.size || child.border || (side < 0 && first)) ||\n          child && child.domAtom && pos < offset + child.size) return {\n        node: this.contentDOM,\n        offset: child ? domIndex(child.dom) : this.contentDOM.childNodes.length\n      }\n      if (!child) throw new Error(\"Invalid position \" + pos)\n      let end = offset + child.size\n      if (!child.domAtom && (side < 0 && !child.border ? end >= pos : end > pos) &&\n          (end > pos || i + 1 >= this.children.length || !this.children[i + 1].beforePosition))\n        return child.domFromPos(pos - offset - child.border, side)\n      offset = end\n    }\n  }\n\n  // Used to find a DOM range in a single parent for a given changed\n  // range.\n  parseRange(from, to, base = 0) {\n    if (this.children.length == 0)\n      return {node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length}\n\n    let fromOffset = -1, toOffset = -1\n    for (let offset = base, i = 0;; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (fromOffset == -1 && from <= end) {\n        let childBase = offset + child.border\n        // FIXME maybe descend mark views to parse a narrower range?\n        if (from >= childBase && to <= end - child.border && child.node &&\n            child.contentDOM && this.contentDOM.contains(child.contentDOM))\n          return child.parseRange(from, to, childBase)\n\n        from = offset\n        for (let j = i; j > 0; j--) {\n          let prev = this.children[j - 1]\n          if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n            fromOffset = domIndex(prev.dom) + 1\n            break\n          }\n          from -= prev.size\n        }\n        if (fromOffset == -1) fromOffset = 0\n      }\n      if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n        to = end\n        for (let j = i + 1; j < this.children.length; j++) {\n          let next = this.children[j]\n          if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n            toOffset = domIndex(next.dom)\n            break\n          }\n          to += next.size\n        }\n        if (toOffset == -1) toOffset = this.contentDOM.childNodes.length\n        break\n      }\n      offset = end\n    }\n    return {node: this.contentDOM, from, to, fromOffset, toOffset}\n  }\n\n  emptyChildAt(side) {\n    if (this.border || !this.contentDOM || !this.children.length) return false\n    let child = this.children[side < 0 ? 0 : this.children.length - 1]\n    return child.size == 0 || child.emptyChildAt(side)\n  }\n\n  // : (number) → dom.Node\n  domAfterPos(pos) {\n    let {node, offset} = this.domFromPos(pos, 0)\n    if (node.nodeType != 1 || offset == node.childNodes.length)\n      throw new RangeError(\"No node after pos \" + pos)\n    return node.childNodes[offset]\n  }\n\n  // : (number, number, dom.Document)\n  // View descs are responsible for setting any selection that falls\n  // entirely inside of them, so that custom implementations can do\n  // custom things with the selection. Note that this falls apart when\n  // a selection starts in such a node and ends in another, in which\n  // case we just use whatever domFromPos produces as a best effort.\n  setSelection(anchor, head, root, force) {\n    // If the selection falls entirely in a child, give it to that child\n    let from = Math.min(anchor, head), to = Math.max(anchor, head)\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (from > offset && to < end)\n        return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force)\n      offset = end\n    }\n\n    let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1)\n    let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1)\n    let domSel = root.getSelection()\n\n    let brKludge = false\n    // On Firefox, using Selection.collapse to put the cursor after a\n    // BR node for some reason doesn't always work (#1073). On Safari,\n    // the cursor sometimes inexplicable visually lags behind its\n    // reported position in such situations (#1092).\n    if ((browser.gecko || browser.safari) && anchor == head) {\n      let {node, offset} = anchorDOM\n      if (node.nodeType == 3) {\n        brKludge = offset && node.nodeValue[offset - 1] == \"\\n\"\n        // Issue #1128\n        if (brKludge && offset == node.nodeValue.length) {\n          for (let scan = node, after; scan; scan = scan.parentNode) {\n            if (after = scan.nextSibling) {\n              if (after.nodeName == \"BR\")\n                anchorDOM = headDOM = {node: after.parentNode, offset: domIndex(after) + 1}\n              break\n            }\n            let desc = scan.pmViewDesc\n            if (desc && desc.node && desc.node.isBlock) break\n          }\n        }\n      } else {\n        let prev = node.childNodes[offset - 1]\n        brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\")\n      }\n    }\n    // Firefox can act strangely when the selection is in front of an\n    // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n    if (browser.gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n      let after = domSel.focusNode.childNodes[domSel.focusOffset]\n      if (after && after.contentEditable == \"false\") force = true\n    }\n\n    if (!(force || brKludge && browser.safari) &&\n        isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n        isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n      return\n\n    // Selection.extend can be used to create an 'inverted' selection\n    // (one where the focus is before the anchor), but not all\n    // browsers support it yet.\n    let domSelExtended = false\n    if ((domSel.extend || anchor == head) && !brKludge) {\n      domSel.collapse(anchorDOM.node, anchorDOM.offset)\n      try {\n        if (anchor != head) domSel.extend(headDOM.node, headDOM.offset)\n        domSelExtended = true\n      } catch (err) {\n        // In some cases with Chrome the selection is empty after calling\n        // collapse, even when it should be valid. This appears to be a bug, but\n        // it is difficult to isolate. If this happens fallback to the old path\n        // without using extend.\n        if (!(err instanceof DOMException)) throw err\n        // declare global: DOMException\n      }\n    }\n    if (!domSelExtended) {\n      if (anchor > head) { let tmp = anchorDOM; anchorDOM = headDOM; headDOM = tmp }\n      let range = document.createRange()\n      range.setEnd(headDOM.node, headDOM.offset)\n      range.setStart(anchorDOM.node, anchorDOM.offset)\n      domSel.removeAllRanges()\n      domSel.addRange(range)\n    }\n  }\n\n  // : (dom.MutationRecord) → bool\n  ignoreMutation(mutation) {\n    return !this.contentDOM && mutation.type != \"selection\"\n  }\n\n  get contentLost() {\n    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM)\n  }\n\n  // Remove a subtree of the element tree that has been touched\n  // by a DOM change, so that the next update will redraw it.\n  markDirty(from, to) {\n    for (let offset = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n        let startInside = offset + child.border, endInside = end - child.border\n        if (from >= startInside && to <= endInside) {\n          this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY\n          if (from == startInside && to == endInside &&\n              (child.contentLost || child.dom.parentNode != this.contentDOM)) child.dirty = NODE_DIRTY\n          else child.markDirty(from - startInside, to - startInside)\n          return\n        } else {\n          child.dirty = NODE_DIRTY\n        }\n      }\n      offset = end\n    }\n    this.dirty = CONTENT_DIRTY\n  }\n\n  markParentsDirty() {\n    let level = 1\n    for (let node = this.parent; node; node = node.parent, level++) {\n      let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY\n      if (node.dirty < dirty) node.dirty = dirty\n    }\n  }\n\n  get domAtom() { return false }\n}\n\n// Reused array to avoid allocating fresh arrays for things that will\n// stay empty anyway.\nconst nothing = []\n\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n  // : (ViewDesc, Decoration)\n  constructor(parent, widget, view, pos) {\n    let self, dom = widget.type.toDOM\n    if (typeof dom == \"function\") dom = dom(view, () => {\n      if (!self) return pos\n      if (self.parent) return self.parent.posBeforeChild(self)\n    })\n    if (!widget.type.spec.raw) {\n      if (dom.nodeType != 1) {\n        let wrap = document.createElement(\"span\")\n        wrap.appendChild(dom)\n        dom = wrap\n      }\n      dom.contentEditable = false\n      dom.classList.add(\"ProseMirror-widget\")\n    }\n    super(parent, nothing, dom, null)\n    this.widget = widget\n    self = this\n  }\n\n  get beforePosition() {\n    return this.widget.type.side < 0\n  }\n\n  matchesWidget(widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type)\n  }\n\n  parseRule() { return {ignore: true} }\n\n  stopEvent(event) {\n    let stop = this.widget.spec.stopEvent\n    return stop ? stop(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"selection\" || this.widget.spec.ignoreSelection\n  }\n\n  get domAtom() { return true }\n}\n\nclass CompositionViewDesc extends ViewDesc {\n  constructor(parent, dom, textDOM, text) {\n    super(parent, nothing, dom, null)\n    this.textDOM = textDOM\n    this.text = text\n  }\n\n  get size() { return this.text.length }\n\n  localPosFromDOM(dom, offset) {\n    if (dom != this.textDOM) return this.posAtStart + (offset ? this.size : 0)\n    return this.posAtStart + offset\n  }\n\n  domFromPos(pos) {\n    return {node: this.textDOM, offset: pos}\n  }\n\n  ignoreMutation(mut) {\n    return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue\n   }\n}\n\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n  // : (ViewDesc, Mark, dom.Node)\n  constructor(parent, mark, dom, contentDOM) {\n    super(parent, [], dom, contentDOM)\n    this.mark = mark\n  }\n\n  static create(parent, mark, inline, view) {\n    let custom = view.nodeViews[mark.type.name]\n    let spec = custom && custom(mark, view, inline)\n    if (!spec || !spec.dom)\n      spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline))\n    return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom)\n  }\n\n  parseRule() { return {mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM} }\n\n  matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark) }\n\n  markDirty(from, to) {\n    super.markDirty(from, to)\n    // Move dirty info to nearest node view\n    if (this.dirty != NOT_DIRTY) {\n      let parent = this.parent\n      while (!parent.node) parent = parent.parent\n      if (parent.dirty < this.dirty) parent.dirty = this.dirty\n      this.dirty = NOT_DIRTY\n    }\n  }\n\n  slice(from, to, view) {\n    let copy = MarkViewDesc.create(this.parent, this.mark, true, view)\n    let nodes = this.children, size = this.size\n    if (to < size) nodes = replaceNodes(nodes, to, size, view)\n    if (from > 0) nodes = replaceNodes(nodes, 0, from, view)\n    for (let i = 0; i < nodes.length; i++) nodes[i].parent = copy\n    copy.children = nodes\n    return copy\n  }\n}\n\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSource, dom.Node, ?dom.Node, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n    super(parent, node.isLeaf ? nothing : [], dom, contentDOM)\n    this.nodeDOM = nodeDOM\n    this.node = node\n    this.outerDeco = outerDeco\n    this.innerDeco = innerDeco\n    if (contentDOM) this.updateChildren(view, pos)\n  }\n\n  // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finnicky\n  // implementation details to the user code that they probably will\n  // never need.)\n  static create(parent, node, outerDeco, innerDeco, view, pos) {\n    let custom = view.nodeViews[node.type.name], descObj\n    let spec = custom && custom(node, view, () => {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (!descObj) return pos\n      if (descObj.parent) return descObj.parent.posBeforeChild(descObj)\n    }, outerDeco, innerDeco)\n\n    let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM\n    if (node.isText) {\n      if (!dom) dom = document.createTextNode(node.text)\n      else if (dom.nodeType != 3) throw new RangeError(\"Text must be rendered as a DOM text node\")\n    } else if (!dom) {\n      ;({dom, contentDOM} = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)))\n    }\n    if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n      if (!dom.hasAttribute(\"contenteditable\")) dom.contentEditable = false\n      if (node.type.spec.draggable) dom.draggable = true\n    }\n\n    let nodeDOM = dom\n    dom = applyOuterDeco(dom, outerDeco, node)\n\n    if (spec)\n      return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM,\n                                              spec, view, pos + 1)\n    else if (node.isText)\n      return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view)\n    else\n      return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos + 1)\n  }\n\n  parseRule() {\n    // Experimental kludge to allow opt-in re-parsing of nodes\n    if (this.node.type.spec.reparseInView) return null\n    // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n    let rule = {node: this.node.type.name, attrs: this.node.attrs}\n    if (this.node.type.spec.code) rule.preserveWhitespace = \"full\"\n    if (this.contentDOM && !this.contentLost) rule.contentElement = this.contentDOM\n    else rule.getContent = () => this.contentDOM ? Fragment.empty : this.node.content\n    return rule\n  }\n\n  matchesNode(node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n      sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco)\n  }\n\n  get size() { return this.node.nodeSize }\n\n  get border() { return this.node.isLeaf ? 0 : 1 }\n\n  // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n  updateChildren(view, pos) {\n    let inline = this.node.inlineContent, off = pos\n    let composition = inline && view.composing && this.localCompositionNode(view, pos)\n    let updater = new ViewTreeUpdater(this, composition && composition.node)\n    iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n      if (widget.spec.marks)\n        updater.syncToMarks(widget.spec.marks, inline, view)\n      else if (widget.type.side >= 0 && !insideNode)\n        updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view)\n      // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n      updater.placeWidget(widget, view, off)\n    }, (child, outerDeco, innerDeco, i) => {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view)\n      // Either find an existing desc that exactly matches this node,\n      // and drop the descs before it.\n      updater.findNodeMatch(child, outerDeco, innerDeco, i) ||\n        // Or try updating the next desc to reflect this node.\n        updater.updateNextNode(child, outerDeco, innerDeco, view, i) ||\n        // Or just add it as a new desc.\n        updater.addNode(child, outerDeco, innerDeco, view, off)\n      off += child.nodeSize\n    })\n    // Drop all remaining descs after the current position.\n    updater.syncToMarks(nothing, inline, view)\n    if (this.node.isTextblock) updater.addTextblockHacks()\n    updater.destroyRest()\n\n    // Sync the DOM if anything changed\n    if (updater.changed || this.dirty == CONTENT_DIRTY) {\n      // May have to protect focused DOM from being changed if a composition is active\n      if (composition) this.protectLocalComposition(view, composition)\n      renderDescs(this.contentDOM, this.children, view)\n      if (browser.ios) iosHacks(this.dom)\n    }\n  }\n\n  localCompositionNode(view, pos) {\n    // Only do something if both the selection and a focused text node\n    // are inside of this node, and the node isn't already part of a\n    // view that's a child of this view\n    let {from, to} = view.state.selection\n    if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size) return\n    let sel = view.root.getSelection()\n    let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset)\n    if (!textNode || !this.dom.contains(textNode.parentNode)) return\n\n    // Find the text in the focused node in the node, stop if it's not\n    // there (may have been modified through other means, in which\n    // case it should overwritten)\n    let text = textNode.nodeValue\n    let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos)\n\n    return textPos < 0 ? null : {node: textNode, pos: textPos, text}\n  }\n\n  protectLocalComposition(view, {node, pos, text}) {\n    // The node is already part of a local view desc, leave it there\n    if (this.getDesc(node)) return\n\n    // Create a composition view for the orphaned nodes\n    let topNode = node\n    for (;; topNode = topNode.parentNode) {\n      if (topNode.parentNode == this.contentDOM) break\n      while (topNode.previousSibling) topNode.parentNode.removeChild(topNode.previousSibling)\n      while (topNode.nextSibling) topNode.parentNode.removeChild(topNode.nextSibling)\n      if (topNode.pmViewDesc) topNode.pmViewDesc = null\n    }\n    let desc = new CompositionViewDesc(this, topNode, node, text)\n    view.compositionNodes.push(desc)\n\n    // Patch up this.children to contain the composition view\n    this.children = replaceNodes(this.children, pos, pos + text.length, view, desc)\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView) → bool\n  // If this desc be updated to match the given node decoration,\n  // do so and return true.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY ||\n        !node.sameMarkup(this.node)) return false\n    this.updateInner(node, outerDeco, innerDeco, view)\n    return true\n  }\n\n  updateInner(node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco)\n    this.node = node\n    this.innerDeco = innerDeco\n    if (this.contentDOM) this.updateChildren(view, this.posAtStart)\n    this.dirty = NOT_DIRTY\n  }\n\n  updateOuterDeco(outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) return\n    let needsWrap = this.nodeDOM.nodeType != 1\n    let oldDOM = this.dom\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM,\n                              computeOuterDeco(this.outerDeco, this.node, needsWrap),\n                              computeOuterDeco(outerDeco, this.node, needsWrap))\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = null\n      this.dom.pmViewDesc = this\n    }\n    this.outerDeco = outerDeco\n  }\n\n  // Mark this node as being the selected node.\n  selectNode() {\n    this.nodeDOM.classList.add(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.draggable = true\n  }\n\n  // Remove selected node marking from this node.\n  deselectNode() {\n    this.nodeDOM.classList.remove(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.removeAttribute(\"draggable\")\n  }\n\n  get domAtom() { return this.node.isAtom }\n}\n\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nexport function docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc)\n  return new NodeViewDesc(null, doc, outerDeco, innerDeco, dom, dom, dom, view, 0)\n}\n\nclass TextViewDesc extends NodeViewDesc {\n  constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view)\n  }\n\n  parseRule() {\n    let skip = this.nodeDOM.parentNode\n    while (skip && skip != this.dom && !skip.pmIsDeco) skip = skip.parentNode\n    return {skip: skip || true}\n  }\n\n  update(node, outerDeco, _, view) {\n    if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n        !node.sameMarkup(this.node)) return false\n    this.updateOuterDeco(outerDeco)\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n      this.nodeDOM.nodeValue = node.text\n      if (view.trackWrites == this.nodeDOM) view.trackWrites = null\n    }\n    this.node = node\n    this.dirty = NOT_DIRTY\n    return true\n  }\n\n  inParent() {\n    let parentDOM = this.parent.contentDOM\n    for (let n = this.nodeDOM; n; n = n.parentNode) if (n == parentDOM) return true\n    return false\n  }\n\n  domFromPos(pos) {\n    return {node: this.nodeDOM, offset: pos}\n  }\n\n  localPosFromDOM(dom, offset, bias) {\n    if (dom == this.nodeDOM) return this.posAtStart + Math.min(offset, this.node.text.length)\n    return super.localPosFromDOM(dom, offset, bias)\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"characterData\" && mutation.type != \"selection\"\n  }\n\n  slice(from, to, view) {\n    let node = this.node.cut(from, to), dom = document.createTextNode(node.text)\n    return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view)\n  }\n\n  markDirty(from, to) {\n    super.markDirty(from, to)\n    if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n      this.dirty = NODE_DIRTY\n  }\n\n  get domAtom() { return false }\n}\n\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n  parseRule() { return {ignore: true} }\n  matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName }\n  get domAtom() { return true }\n}\n\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSource, dom.Node, ?dom.Node, NodeView, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n    super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos)\n    this.spec = spec\n  }\n\n  // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) return false\n    if (this.spec.update) {\n      let result = this.spec.update(node, outerDeco, innerDeco)\n      if (result) this.updateInner(node, outerDeco, innerDeco, view)\n      return result\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false\n    } else {\n      return super.update(node, outerDeco, innerDeco, view)\n    }\n  }\n\n  selectNode() {\n    this.spec.selectNode ? this.spec.selectNode() : super.selectNode()\n  }\n\n  deselectNode() {\n    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode()\n  }\n\n  setSelection(anchor, head, root, force) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n      : super.setSelection(anchor, head, root, force)\n  }\n\n  destroy() {\n    if (this.spec.destroy) this.spec.destroy()\n    super.destroy()\n  }\n\n  stopEvent(event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation)\n  }\n}\n\n// : (dom.Node, [ViewDesc])\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n  let dom = parentDOM.firstChild, written = false\n  for (let i = 0; i < descs.length; i++) {\n    let desc = descs[i], childDOM = desc.dom\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) { dom = rm(dom); written = true }\n      dom = dom.nextSibling\n    } else {\n      written = true\n      parentDOM.insertBefore(childDOM, dom)\n    }\n    if (desc instanceof MarkViewDesc) {\n      let pos = dom ? dom.previousSibling : parentDOM.lastChild\n      renderDescs(desc.contentDOM, desc.children, view)\n      dom = pos ? pos.nextSibling : parentDOM.firstChild\n    }\n  }\n  while (dom) { dom = rm(dom); written = true }\n  if (written && view.trackWrites == parentDOM) view.trackWrites = null\n}\n\nfunction OuterDecoLevel(nodeName) {\n  if (nodeName) this.nodeName = nodeName\n}\nOuterDecoLevel.prototype = Object.create(null)\n\nconst noDeco = [new OuterDecoLevel]\n\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) return noDeco\n\n  let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top]\n\n  for (let i = 0; i < outerDeco.length; i++) {\n    let attrs = outerDeco[i].type.attrs\n    if (!attrs) continue\n    if (attrs.nodeName)\n      result.push(top = new OuterDecoLevel(attrs.nodeName))\n\n    for (let name in attrs) {\n      let val = attrs[name]\n      if (val == null) continue\n      if (needsWrap && result.length == 1)\n        result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"))\n      if (name == \"class\") top.class = (top.class ? top.class + \" \" : \"\") + val\n      else if (name == \"style\") top.style = (top.style ? top.style + \";\" : \"\") + val\n      else if (name != \"nodeName\") top[name] = val\n    }\n  }\n\n  return result\n}\n\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) return nodeDOM\n\n  let curDOM = nodeDOM\n  for (let i = 0; i < curComputed.length; i++) {\n    let deco = curComputed[i], prev = prevComputed[i]\n    if (i) {\n      let parent\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n          (parent = curDOM.parentNode) && parent.tagName.toLowerCase() == deco.nodeName) {\n        curDOM = parent\n      } else {\n        parent = document.createElement(deco.nodeName)\n        parent.pmIsDeco = true\n        parent.appendChild(curDOM)\n        prev = noDeco[0]\n        curDOM = parent\n      }\n    }\n    patchAttributes(curDOM, prev || noDeco[0], deco)\n  }\n  return curDOM\n}\n\nfunction patchAttributes(dom, prev, cur) {\n  for (let name in prev)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n      dom.removeAttribute(name)\n  for (let name in cur)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n      dom.setAttribute(name, cur[name])\n  if (prev.class != cur.class) {\n    let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : nothing\n    let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : nothing\n    for (let i = 0; i < prevList.length; i++) if (curList.indexOf(prevList[i]) == -1)\n      dom.classList.remove(prevList[i])\n    for (let i = 0; i < curList.length; i++) if (prevList.indexOf(curList[i]) == -1)\n      dom.classList.add(curList[i])\n  }\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m\n      while (m = prop.exec(prev.style))\n        dom.style.removeProperty(m[1])\n    }\n    if (cur.style)\n      dom.style.cssText += cur.style\n  }\n}\n\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1))\n}\n\n// : ([Decoration], [Decoration]) → bool\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) return false\n  for (let i = 0; i < a.length; i++) if (!a[i].type.eq(b[i].type)) return false\n  return true\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n  let next = dom.nextSibling\n  dom.parentNode.removeChild(dom)\n  return next\n}\n\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n  // : (NodeViewDesc)\n  constructor(top, lockedNode) {\n    this.top = top\n    this.lock = lockedNode\n    // Index into `this.top`'s child array, represents the current\n    // update position.\n    this.index = 0\n    // When entering a mark, the current top and index are pushed\n    // onto this.\n    this.stack = []\n    // Tracks whether anything was changed\n    this.changed = false\n\n    this.preMatch = preMatch(top.node.content, top.children)\n  }\n\n  // Destroy and remove the children between the given indices in\n  // `this.top`.\n  destroyBetween(start, end) {\n    if (start == end) return\n    for (let i = start; i < end; i++) this.top.children[i].destroy()\n    this.top.children.splice(start, end - start)\n    this.changed = true\n  }\n\n  // Destroy all remaining children in `this.top`.\n  destroyRest() {\n    this.destroyBetween(this.index, this.top.children.length)\n  }\n\n  // : ([Mark], EditorView)\n  // Sync the current stack of mark descs with the given array of\n  // marks, reusing existing mark descs when possible.\n  syncToMarks(marks, inline, view) {\n    let keep = 0, depth = this.stack.length >> 1\n    let maxKeep = Math.min(depth, marks.length)\n    while (keep < maxKeep &&\n           (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1]).matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n      keep++\n\n    while (keep < depth) {\n      this.destroyRest()\n      this.top.dirty = NOT_DIRTY\n      this.index = this.stack.pop()\n      this.top = this.stack.pop()\n      depth--\n    }\n    while (depth < marks.length) {\n      this.stack.push(this.top, this.index + 1)\n      let found = -1\n      for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n        if (this.top.children[i].matchesMark(marks[depth])) { found = i; break }\n      }\n      if (found > -1) {\n        if (found > this.index) {\n          this.changed = true\n          this.destroyBetween(this.index, found)\n        }\n        this.top = this.top.children[this.index]\n      } else {\n        let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view)\n        this.top.children.splice(this.index, 0, markDesc)\n        this.top = markDesc\n        this.changed = true\n      }\n      this.index = 0\n      depth++\n    }\n  }\n\n  // : (Node, [Decoration], DecorationSource) → bool\n  // Try to find a node desc matching the given data. Skip over it and\n  // return true when successful.\n  findNodeMatch(node, outerDeco, innerDeco, index) {\n    let children = this.top.children, found = -1\n    if (index >= this.preMatch.index) {\n      for (let i = this.index; i < children.length; i++) if (children[i].matchesNode(node, outerDeco, innerDeco)) {\n        found = i\n        break\n      }\n    } else {\n      for (let i = this.index, e = Math.min(children.length, i + 1); i < e; i++) {\n        let child = children[i]\n        if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n          found = i\n          break\n        }\n      }\n    }\n    if (found < 0) return false\n    this.destroyBetween(this.index, found)\n    this.index++\n    return true\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView, Fragment, number) → bool\n  // Try to update the next node, if any, to the given data. Checks\n  // pre-matches to avoid overwriting nodes that could still be used.\n  updateNextNode(node, outerDeco, innerDeco, view, index) {\n    for (let i = this.index; i < this.top.children.length; i++) {\n      let next = this.top.children[i]\n      if (next instanceof NodeViewDesc) {\n        let preMatch = this.preMatch.matched.get(next)\n        if (preMatch != null && preMatch != index) return false\n        let nextDOM = next.dom\n\n        // Can't update if nextDOM is or contains this.lock, except if\n        // it's a text node whose content already matches the new text\n        // and whose decorations match the new ones.\n        let locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) &&\n            !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n              next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco))\n        if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n          this.destroyBetween(this.index, i)\n          if (next.dom != nextDOM) this.changed = true\n          this.index++\n          return true\n        }\n        break\n      }\n    }\n    return false\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView)\n  // Insert the node as a newly created node desc.\n  addNode(node, outerDeco, innerDeco, view, pos) {\n    this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos))\n    this.changed = true\n  }\n\n  placeWidget(widget, view, pos) {\n    let next = this.index < this.top.children.length ? this.top.children[this.index] : null\n    if (next && next.matchesWidget(widget) && (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n      this.index++\n    } else {\n      let desc = new WidgetViewDesc(this.top, widget, view, pos)\n      this.top.children.splice(this.index++, 0, desc)\n      this.changed = true\n    }\n  }\n\n  // Make sure a textblock looks and behaves correctly in\n  // contentEditable.\n  addTextblockHacks() {\n    let lastChild = this.top.children[this.index - 1]\n    while (lastChild instanceof MarkViewDesc) lastChild = lastChild.children[lastChild.children.length - 1]\n\n    if (!lastChild || // Empty textblock\n        !(lastChild instanceof TextViewDesc) ||\n        /\\n$/.test(lastChild.node.text)) {\n      // Avoid a bug in Safari's cursor drawing (#1165)\n      if (browser.safari && lastChild && lastChild.dom.contentEditable == \"false\")\n        this.addHackNode(\"IMG\")\n      this.addHackNode(\"BR\")\n    }\n  }\n\n  addHackNode(nodeName) {\n    if (this.index < this.top.children.length && this.top.children[this.index].matchesHack(nodeName)) {\n      this.index++\n    } else {\n      let dom = document.createElement(nodeName)\n      this.top.children.splice(this.index++, 0, new TrailingHackViewDesc(this.top, nothing, dom, null))\n      this.changed = true\n    }\n  }\n}\n\n// : (Fragment, [ViewDesc]) → {index: number, matched: Map<ViewDesc, number>}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, descs) {\n  let fI = frag.childCount, dI = descs.length, matched = new Map\n  for (; fI > 0 && dI > 0; dI--) {\n    let desc = descs[dI - 1], node = desc.node\n    if (!node) continue\n    if (node != frag.child(fI - 1)) break\n    --fI\n    matched.set(desc, fI)\n  }\n  return {index: fI, matched}\n}\n\nfunction compareSide(a, b) { return a.type.side - b.type.side }\n\n// : (ViewDesc, DecorationSource, (Decoration, number), (Node, [Decoration], DecorationSource, number))\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  let locals = deco.locals(parent), offset = 0\n  // Simple, cheap variant for when there are no local decorations\n  if (locals.length == 0) {\n    for (let i = 0; i < parent.childCount; i++) {\n      let child = parent.child(i)\n      onNode(child, locals, deco.forChild(offset, child), i)\n      offset += child.nodeSize\n    }\n    return\n  }\n\n  let decoIndex = 0, active = [], restNode = null\n  for (let parentIndex = 0;;) {\n    if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      let widget = locals[decoIndex++], widgets\n      while (decoIndex < locals.length && locals[decoIndex].to == offset)\n        (widgets || (widgets = [widget])).push(locals[decoIndex++])\n      if (widgets) {\n        widgets.sort(compareSide)\n        for (let i = 0; i < widgets.length; i++) onWidget(widgets[i], parentIndex, !!restNode)\n      } else {\n        onWidget(widget, parentIndex, !!restNode)\n      }\n    }\n\n    let child, index\n    if (restNode) {\n      index = -1\n      child = restNode\n      restNode = null\n    } else if (parentIndex < parent.childCount) {\n      index = parentIndex\n      child = parent.child(parentIndex++)\n    } else {\n      break\n    }\n\n    for (let i = 0; i < active.length; i++) if (active[i].to <= offset) active.splice(i--, 1)\n    while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n      active.push(locals[decoIndex++])\n\n    let end = offset + child.nodeSize\n    if (child.isText) {\n      let cutAt = end\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) cutAt = locals[decoIndex].from\n      for (let i = 0; i < active.length; i++) if (active[i].to < cutAt) cutAt = active[i].to\n      if (cutAt < end) {\n        restNode = child.cut(cutAt - offset)\n        child = child.cut(0, cutAt - offset)\n        end = cutAt\n        index = -1\n      }\n    }\n\n    let outerDeco = !active.length ? nothing\n        : child.isInline && !child.isLeaf ? active.filter(d => !d.inline)\n        : active.slice()\n    onNode(child, outerDeco, deco.forChild(offset, child), index)\n    offset = end\n  }\n}\n\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    let oldCSS = dom.style.cssText\n    dom.style.cssText = oldCSS + \"; list-style: square !important\"\n    window.getComputedStyle(dom).listStyle\n    dom.style.cssText = oldCSS\n  }\n}\n\nfunction nearbyTextNode(node, offset) {\n  for (;;) {\n    if (node.nodeType == 3) return node\n    if (node.nodeType == 1 && offset > 0) {\n      if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n        return node.childNodes[offset]\n      node = node.childNodes[offset - 1]\n      offset = nodeSize(node)\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset]\n      offset = 0\n    } else {\n      return null\n    }\n  }\n}\n\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n  for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n    let child = frag.child(i++), childStart = pos\n    pos += child.nodeSize\n    if (!child.isText) continue\n    let str = child.text\n    while (i < frag.childCount) {\n      let next = frag.child(i++)\n      pos += next.nodeSize\n      if (!next.isText) break\n      str += next.text\n    }\n    if (pos >= from) {\n      let found = str.lastIndexOf(text, to - childStart)\n      if (found >= 0 && found + text.length + childStart >= from)\n        return childStart + found\n    }\n  }\n  return -1\n}\n\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n  let result = []\n  for (let i = 0, off = 0; i < nodes.length; i++) {\n    let child = nodes[i], start = off, end = off += child.size\n    if (start >= to || end <= from) {\n      result.push(child)\n    } else {\n      if (start < from) result.push(child.slice(0, from - start, view))\n      if (replacement) {\n        result.push(replacement)\n        replacement = null\n      }\n      if (end > to) result.push(child.slice(to - start, child.size, view))\n    }\n  }\n  return result\n}\n","import {Selection, NodeSelection, TextSelection, AllSelection} from \"prosemirror-state\"\nimport browser from \"./browser\"\nimport {domIndex, selectionCollapsed} from \"./dom\"\nimport {selectionToDOM} from \"./selection\"\n\nfunction moveSelectionBlock(state, dir) {\n  let {$anchor, $head} = state.selection\n  let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head)\n  let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null\n  return $start && Selection.findFrom($start, dir)\n}\n\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView())\n  return true\n}\n\nfunction selectHorizontally(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection) {\n    if (!sel.empty || mods.indexOf(\"s\") > -1) {\n      return false\n    } else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n      let next = moveSelectionBlock(view.state, dir)\n      if (next && (next instanceof NodeSelection)) return apply(view, next)\n      return false\n    } else if (!(browser.mac && mods.indexOf(\"m\") > -1)) {\n      let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc\n      if (!node || node.isText) return false\n      let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos\n      if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM)) return false\n      if (NodeSelection.isSelectable(node)) {\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head))\n      } else if (browser.webkit) {\n        // Chrome and Safari will introduce extra pointless cursor\n        // positions around inline uneditable nodes, so we have to\n        // take over and move the cursor past them (#937)\n        return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)))\n      } else {\n        return false\n      }\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from))\n  } else {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next) return apply(view, next)\n    return false\n  }\n}\n\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isIgnorable(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\")\n}\n\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let moveNode, moveOffset, force = false\n  // Gecko will do odd things when the selection is directly in front\n  // of a non-editable node, so in that case, move it into the next\n  // node if possible. Issue prosemirror/prosemirror#832.\n  if (browser.gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset])) force = true\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        break\n      } else {\n        let before = node.childNodes[offset - 1]\n        if (isIgnorable(before)) {\n          moveNode = node\n          moveOffset = --offset\n        } else if (before.nodeType == 3) {\n          node = before\n          offset = node.nodeValue.length\n        } else break\n      }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let prev = node.previousSibling\n      while (prev && isIgnorable(prev)) {\n        moveNode = node.parentNode\n        moveOffset = domIndex(prev)\n        prev = prev.previousSibling\n      }\n      if (!prev) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = 0\n      } else {\n        node = prev\n        offset = nodeLen(node)\n      }\n    }\n  }\n  if (force) setSelFocus(view, sel, node, offset)\n  else if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let len = nodeLen(node)\n  let moveNode, moveOffset\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) break\n      let after = node.childNodes[offset]\n      if (isIgnorable(after)) {\n        moveNode = node\n        moveOffset = ++offset\n      }\n      else break\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let next = node.nextSibling\n      while (next && isIgnorable(next)) {\n        moveNode = next.parentNode\n        moveOffset = domIndex(next) + 1\n        next = next.nextSibling\n      }\n      if (!next) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = len = 0\n      } else {\n        node = next\n        offset = 0\n        len = nodeLen(node)\n      }\n    }\n  }\n  if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\nfunction isBlockNode(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.node && desc.node.isBlock\n}\n\nfunction setSelFocus(view, sel, node, offset) {\n  if (selectionCollapsed(sel)) {\n    let range = document.createRange()\n    range.setEnd(node, offset)\n    range.setStart(node, offset)\n    sel.removeAllRanges()\n    sel.addRange(range)\n  } else if (sel.extend) {\n    sel.extend(node, offset)\n  }\n  view.domObserver.setCurSelection()\n  let {state} = view\n  // If no state update ends up happening, reset the selection.\n  setTimeout(() => {\n    if (view.state == state) selectionToDOM(view)\n  }, 50)\n}\n\n// : (EditorState, number)\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1) return false\n  if (browser.mac && mods.indexOf(\"m\") > -1) return false\n  let {$from, $to} = sel\n\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next && (next instanceof NodeSelection))\n      return apply(view, next)\n  }\n  if (!$from.parent.inlineContent) {\n    let side = dir < 0 ? $from : $to\n    let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir)\n    return beyond ? apply(view, beyond) : false\n  }\n  return false\n}\n\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) return true\n  let {$head, $anchor, empty} = view.state.selection\n  if (!$head.sameParent($anchor)) return true\n  if (!empty) return false\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) return true\n  let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter)\n  if (nextNode && !nextNode.isText) {\n    let tr = view.state.tr\n    if (dir < 0) tr.delete($head.pos - nextNode.nodeSize, $head.pos)\n    else tr.delete($head.pos, $head.pos + nextNode.nodeSize)\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\nfunction switchEditable(view, node, state) {\n  view.domObserver.stop()\n  node.contentEditable = state\n  view.domObserver.start()\n}\n\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n  if (!browser.safari || view.state.selection.$head.parentOffset > 0) return\n  let {focusNode, focusOffset} = view.root.getSelection()\n  if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n      focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n    let child = focusNode.firstChild\n    switchEditable(view, child, true)\n    setTimeout(() => switchEditable(view, child, false), 20)\n  }\n}\n\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\n\nfunction getMods(event) {\n  let result = \"\"\n  if (event.ctrlKey) result += \"c\"\n  if (event.metaKey) result += \"m\"\n  if (event.altKey) result += \"a\"\n  if (event.shiftKey) result += \"s\"\n  return result\n}\n\nexport function captureKeyDown(view, event) {\n  let code = event.keyCode, mods = getMods(event)\n  if (code == 8 || (browser.mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 46 || (browser.mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view)\n  } else if (code == 13 || code == 27) { // Enter, Esc\n    return true\n  } else if (code == 37) { // Left arrow\n    return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 39) { // Right arrow\n    return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (code == 38) { // Up arrow\n    return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 40) { // Down arrow\n    return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (mods == (browser.mac ? \"m\" : \"c\") &&\n             (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n    return true\n  }\n  return false\n}\n","import {Fragment, DOMParser} from \"prosemirror-model\"\nimport {Selection, TextSelection} from \"prosemirror-state\"\n\nimport {selectionBetween, selectionFromDOM, selectionToDOM} from \"./selection\"\nimport {selectionCollapsed, keyEvent} from \"./dom\"\nimport browser from \"./browser\"\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\n\nfunction parseBetween(view, from_, to_) {\n  let {node: parent, fromOffset, toOffset, from, to} = view.docView.parseRange(from_, to_)\n\n  let domSel = view.root.getSelection(), find = null, anchor = domSel.anchorNode\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{node: anchor, offset: domSel.anchorOffset}]\n    if (!selectionCollapsed(domSel))\n      find.push({node: domSel.focusNode, offset: domSel.focusOffset})\n  }\n  // Work around issue in Chrome where backspacing sometimes replaces\n  // the deleted content with a random BR node (issues #799, #831)\n  if (browser.chrome && view.lastKeyCode === 8) {\n    for (let off = toOffset; off > fromOffset; off--) {\n      let node = parent.childNodes[off - 1], desc = node.pmViewDesc\n      if (node.nodeName == \"BR\" && !desc) { toOffset = off; break }\n      if (!desc || desc.size) break\n    }\n  }\n  let startDoc = view.state.doc\n  let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n  let $from = startDoc.resolve(from)\n\n  let sel = null, doc = parser.parse(parent, {\n    topNode: $from.parent,\n    topMatch: $from.parent.contentMatchAt($from.index()),\n    topOpen: true,\n    from: fromOffset,\n    to: toOffset,\n    preserveWhitespace: $from.parent.type.spec.code ? \"full\" : true,\n    editableContent: true,\n    findPositions: find,\n    ruleFromNode,\n    context: $from\n  })\n  if (find && find[0].pos != null) {\n    let anchor = find[0].pos, head = find[1] && find[1].pos\n    if (head == null) head = anchor\n    sel = {anchor: anchor + from, head: head + from}\n  }\n  return {doc, sel, from, to}\n}\n\nfunction ruleFromNode(dom) {\n  let desc = dom.pmViewDesc\n  if (desc) {\n    return desc.parseRule()\n  } else if (dom.nodeName == \"BR\" && dom.parentNode) {\n    // Safari replaces the list item or table cell with a BR\n    // directly in the list node (?!) if you delete the last\n    // character in a list item or table cell (#708, #862)\n    if (browser.safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n      let skip = document.createElement(\"div\")\n      skip.appendChild(document.createElement(\"li\"))\n      return {skip}\n    } else if (dom.parentNode.lastChild == dom || browser.safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n      return {ignore: true}\n    }\n  } else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n    return {ignore: true}\n  }\n}\n\nexport function readDOMChange(view, from, to, typeOver, addedNodes) {\n  if (from < 0) {\n    let origin = view.lastSelectionTime > Date.now() - 50 ? view.lastSelectionOrigin : null\n    let newSel = selectionFromDOM(view, origin)\n    if (newSel && !view.state.selection.eq(newSel)) {\n      let tr = view.state.tr.setSelection(newSel)\n      if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n      else if (origin == \"key\") tr.scrollIntoView()\n      view.dispatch(tr)\n    }\n    return\n  }\n\n  let $before = view.state.doc.resolve(from)\n  let shared = $before.sharedDepth(to)\n  from = $before.before(shared + 1)\n  to = view.state.doc.resolve(to).after(shared + 1)\n\n  let sel = view.state.selection\n  let parse = parseBetween(view, from, to)\n  // Chrome sometimes leaves the cursor before the inserted text when\n  // composing after a cursor wrapper. This moves it forward.\n  if (browser.chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from) {\n    let text = view.cursorWrapper.deco.type.toDOM.nextSibling\n    let size = text && text.nodeValue ? text.nodeValue.length : 1\n    parse.sel = {anchor: parse.sel.anchor + size, head: parse.sel.anchor + size}\n  }\n\n  let doc = view.state.doc, compare = doc.slice(parse.from, parse.to)\n  let preferredPos, preferredSide\n  // Prefer anchoring to end when Backspace is pressed\n  if (view.lastKeyCode === 8 && Date.now() - 100 < view.lastKeyCodeTime) {\n    preferredPos = view.state.selection.to\n    preferredSide = \"end\"\n  } else {\n    preferredPos = view.state.selection.from\n    preferredSide = \"start\"\n  }\n  view.lastKeyCode = null\n\n  let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide)\n  if (!change) {\n    if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n        !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n      change = {start: sel.from, endA: sel.to, endB: sel.to}\n    } else if ((browser.ios && view.lastIOSEnter > Date.now() - 225 || browser.android) &&\n               addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\") &&\n               view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n      view.lastIOSEnter = 0\n      return\n    } else {\n      if (parse.sel) {\n        let sel = resolveSelection(view, view.state.doc, parse.sel)\n        if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n      }\n      return\n    }\n  }\n  view.domChangeCount++\n  // Handle the case where overwriting a selection by typing matches\n  // the start or end of the selected content, creating a change\n  // that's smaller than what was actually overwritten.\n  if (view.state.selection.from < view.state.selection.to &&\n      change.start == change.endB &&\n      view.state.selection instanceof TextSelection) {\n    if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2) {\n      change.start = view.state.selection.from\n    } else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2) {\n      change.endB += (view.state.selection.to - change.endA)\n      change.endA = view.state.selection.to\n    }\n  }\n\n  // IE11 will insert a non-breaking space _ahead_ of the space after\n  // the cursor space when adding a space before another space. When\n  // that happened, adjust the change to cover the space instead.\n  if (browser.ie && browser.ie_version <= 11 && change.endB == change.start + 1 &&\n      change.endA == change.start && change.start > parse.from &&\n      parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n    change.start--\n    change.endA--\n    change.endB--\n  }\n\n  let $from = parse.doc.resolveNoCache(change.start - parse.from)\n  let $to = parse.doc.resolveNoCache(change.endB - parse.from)\n  let inlineChange = $from.sameParent($to) && $from.parent.inlineContent\n  let nextSel\n  // If this looks like the effect of pressing Enter (or was recorded\n  // as being an iOS enter press), just dispatch an Enter key instead.\n  if (((browser.ios && view.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n       (!inlineChange && $from.pos < parse.doc.content.size &&\n        (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n        nextSel.head == $to.pos)) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n    view.lastIOSEnter = 0\n    return\n  }\n  // Same for backspace\n  if (view.state.selection.anchor > change.start &&\n      looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n    if (browser.android && browser.chrome) view.domObserver.suppressSelectionUpdates() // #820\n    return\n  }\n\n  // Chrome Android will occasionally, during composition, delete the\n  // entire composition and then immediately insert it again. This is\n  // used to detect that situation.\n  if (browser.chrome && browser.android && change.toB == change.from)\n    view.lastAndroidDelete = Date.now()\n\n  // This tries to detect Android virtual keyboard\n  // enter-and-pick-suggestion action. That sometimes (see issue\n  // #1059) first fires a DOM mutation, before moving the selection to\n  // the newly created block. And then, because ProseMirror cleans up\n  // the DOM selection, it gives up moving the selection entirely,\n  // leaving the cursor in the wrong place. When that happens, we drop\n  // the new paragraph from the initial change, and fire a simulated\n  // enter key afterwards.\n  if (browser.android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n      parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n    change.endB -= 2\n    $to = parse.doc.resolveNoCache(change.endB - parse.from)\n    setTimeout(() => {\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); })\n    }, 20)\n  }\n\n  let chFrom = change.start, chTo = change.endA\n\n  let tr, storedMarks, markChange, $from1\n  if (inlineChange) {\n    if ($from.pos == $to.pos) { // Deletion\n      // IE11 sometimes weirdly moves the DOM selection around after\n      // backspacing out the first element in a textblock\n      if (browser.ie && browser.ie_version <= 11 && $from.parentOffset == 0) {\n        view.domObserver.suppressSelectionUpdates()\n        setTimeout(() => selectionToDOM(view), 20)\n      }\n      tr = view.state.tr.delete(chFrom, chTo)\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA))\n    } else if ( // Adding or removing a mark\n      change.endA == change.endB && ($from1 = doc.resolve(change.start)) &&\n      (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset),\n                                 $from1.parent.content.cut($from1.parentOffset, change.endA - $from1.start())))\n    ) {\n      tr = view.state.tr\n      if (markChange.type == \"add\") tr.addMark(chFrom, chTo, markChange.mark)\n      else tr.removeMark(chFrom, chTo, markChange.mark)\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset)\n      if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text))) return\n      tr = view.state.tr.insertText(text, chFrom, chTo)\n    }\n  }\n\n  if (!tr)\n    tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from))\n  if (parse.sel) {\n    let sel = resolveSelection(view, tr.doc, parse.sel)\n    // Chrome Android will sometimes, during composition, report the\n    // selection in the wrong place. If it looks like that is\n    // happening, don't update the selection.\n    // Edge just doesn't move the cursor forward when you start typing\n    // in an empty block or between br nodes.\n    if (sel && !(browser.chrome && browser.android && view.composing && sel.empty &&\n                 (change.start != change.endB || view.lastAndroidDelete < Date.now() - 100) &&\n                 (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n                 browser.ie && sel.empty && sel.head == chFrom))\n      tr.setSelection(sel)\n  }\n  if (storedMarks) tr.ensureMarks(storedMarks)\n  view.dispatch(tr.scrollIntoView())\n}\n\nfunction resolveSelection(view, doc, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) return null\n  return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head))\n}\n\n// : (Fragment, Fragment) → ?{mark: Mark, type: string}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n  let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks\n  let added = curMarks, removed = prevMarks, type, mark, update\n  for (let i = 0; i < prevMarks.length; i++) added = prevMarks[i].removeFromSet(added)\n  for (let i = 0; i < curMarks.length; i++) removed = curMarks[i].removeFromSet(removed)\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0]\n    type = \"add\"\n    update = node => node.mark(mark.addToSet(node.marks))\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0]\n    type = \"remove\"\n    update = node => node.mark(mark.removeFromSet(node.marks))\n  } else {\n    return null\n  }\n  let updated = []\n  for (let i = 0; i < prev.childCount; i++) updated.push(update(prev.child(i)))\n  if (Fragment.from(updated).eq(cur)) return {mark, type}\n}\n\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock ||\n      // The content must have shrunk\n      end - start <= $newEnd.pos - $newStart.pos ||\n      // newEnd must point directly at or after the end of the block that newStart points into\n      skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n    return false\n\n  let $start = old.resolve(start)\n  // Start must be at the end of a block\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n    return false\n  let $next = old.resolve(skipClosingAndOpening($start, true, true))\n  // The next textblock must start before end and end near it\n  if (!$next.parent.isTextblock || $next.pos > end ||\n      skipClosingAndOpening($next, true, false) < end)\n    return false\n\n  // The fragments after the join point must match\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content)\n}\n\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--\n    end++\n    fromEnd = false\n  }\n  if (mayOpen) {\n    let next = $pos.node(depth).maybeChild($pos.indexAfter(depth))\n    while (next && !next.isLeaf) {\n      next = next.firstChild\n      end++\n    }\n  }\n  return end\n}\n\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n  let start = a.findDiffStart(b, pos)\n  if (start == null) return null\n  let {a: endA, b: endB} = a.findDiffEnd(b, pos + a.size, pos + b.size)\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, start - Math.min(endA, endB))\n    preferredPos -= endA + adjust - start\n  }\n  if (endA < start && a.size < b.size) {\n    let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0\n    start -= move\n    endB = start + (endB - endA)\n    endA = start\n  } else if (endB < start) {\n    let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0\n    start -= move\n    endA = start + (endA - endB)\n    endB = start\n  }\n  return {start, endA, endB}\n}\n","import {Slice, Fragment, DOMParser, DOMSerializer} from \"prosemirror-model\"\n\nexport function serializeForClipboard(view, slice) {\n  let context = [], {content, openStart, openEnd} = slice\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--\n    openEnd--\n    let node = content.firstChild\n    context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null)\n    content = node.content\n  }\n\n  let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema)\n  let doc = detachedDoc(), wrap = doc.createElement(\"div\")\n  wrap.appendChild(serializer.serializeFragment(content, {document: doc}))\n\n  let firstChild = wrap.firstChild, needsWrap\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      let wrapper = doc.createElement(needsWrap[i])\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild)\n      wrap.appendChild(wrapper)\n    }\n    firstChild = wrap.firstChild\n  }\n\n  if (firstChild && firstChild.nodeType == 1)\n    firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd} ${JSON.stringify(context)}`)\n\n  let text = view.someProp(\"clipboardTextSerializer\", f => f(slice)) ||\n      slice.content.textBetween(0, slice.content.size, \"\\n\\n\")\n\n  return {dom: wrap, text}\n}\n\n// : (EditorView, string, string, ?bool, ResolvedPos) → ?Slice\n// Read a slice of content from the clipboard (or drop data).\nexport function parseFromClipboard(view, text, html, plainText, $context) {\n  let dom, inCode = $context.parent.type.spec.code, slice\n  if (!html && !text) return null\n  let asText = text && (plainText || inCode || !html)\n  if (asText) {\n    view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText) })\n    if (inCode) return new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0)\n    let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText))\n    if (parsed) {\n      slice = parsed\n    } else {\n      dom = document.createElement(\"div\")\n      text.trim().split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n        dom.appendChild(document.createElement(\"p\")).textContent = block\n      })\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", f => { html = f(html) })\n    dom = readHTML(html)\n  }\n\n  let contextNode = dom && dom.querySelector(\"[data-pm-slice]\")\n  let sliceData = contextNode && /^(\\d+) (\\d+) (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\"))\n  if (!slice) {\n    let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n    slice = parser.parseSlice(dom, {preserveWhitespace: !!(asText || sliceData), context: $context})\n  }\n  if (sliceData)\n    slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[3])\n  else // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), false)\n\n  view.someProp(\"transformPasted\", f => { slice = f(slice) })\n  return slice\n}\n\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n  if (fragment.childCount < 2) return fragment\n  for (let d = $context.depth; d >= 0; d--) {\n    let parent = $context.node(d)\n    let match = parent.contentMatchAt($context.index(d))\n    let lastWrap, result = []\n    fragment.forEach(node => {\n      if (!result) return\n      let wrap = match.findWrapping(node.type), inLast\n      if (!wrap) return result = null\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast\n      } else {\n        if (result.length) result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length)\n        let wrapped = withWrappers(node, wrap)\n        result.push(wrapped)\n        match = match.matchType(wrapped.type, wrapped.attrs)\n        lastWrap = wrap\n      }\n    })\n    if (result) return Fragment.from(result)\n  }\n  return fragment\n}\n\nfunction withWrappers(node, wrap, from = 0) {\n  for (let i = wrap.length - 1; i >= from; i--)\n    node = wrap[i].create(null, Fragment.from(node))\n  return node\n}\n\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1)\n    if (inner) return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner))\n    let match = sibling.contentMatchAt(sibling.childCount)\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n      return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))))\n  }\n}\n\nfunction closeRight(node, depth) {\n  if (depth == 0) return node\n  let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1))\n  let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true)\n  return node.copy(fragment.append(fill))\n}\n\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n  let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content\n  if (depth < to - 1) inner = closeRange(inner, side, from, to, depth + 1, openEnd)\n  if (depth >= from)\n    inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n      : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true))\n  return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner))\n}\n\nfunction closeSlice(slice, openStart, openEnd) {\n  if (openStart < slice.openStart)\n    slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd)\n  if (openEnd < slice.openEnd)\n    slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd)\n  return slice\n}\n\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n  thead: [\"table\"],\n  tbody: [\"table\"],\n  tfoot: [\"table\"],\n  caption: [\"table\"],\n  colgroup: [\"table\"],\n  col: [\"table\", \"colgroup\"],\n  tr: [\"table\", \"tbody\"],\n  td: [\"table\", \"tbody\", \"tr\"],\n  th: [\"table\", \"tbody\", \"tr\"]\n}\n\nlet _detachedDoc = null\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n}\n\nfunction readHTML(html) {\n  let metas = /^(\\s*<meta [^>]*>)*/.exec(html)\n  if (metas) html = html.slice(metas[0].length)\n  let elt = detachedDoc().createElement(\"div\")\n  let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n    html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\")\n  elt.innerHTML = html\n  if (wrap) for (let i = 0; i < wrap.length; i++) elt = elt.querySelector(wrap[i]) || elt\n  return elt\n}\n\nfunction addContext(slice, context) {\n  if (!slice.size) return slice\n  let schema = slice.content.firstChild.type.schema, array\n  try { array = JSON.parse(context) }\n  catch(e) { return slice }\n  let {content, openStart, openEnd} = slice\n  for (let i = array.length - 2; i >= 0; i -= 2) {\n    let type = schema.nodes[array[i]]\n    if (!type || type.hasRequiredAttrs()) break\n    content = Fragment.from(type.create(array[i + 1], content))\n    openStart++; openEnd++\n  }\n  return new Slice(content, openStart, openEnd)\n}\n","import browser from \"./browser\"\nimport {domIndex, isEquivalentPosition} from \"./dom\"\nimport {hasFocusAndSelection, hasSelection, selectionToDOM} from \"./selection\"\n\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  attributes: true,\n  attributeOldValue: true,\n  subtree: true\n}\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = browser.ie && browser.ie_version <= 11\n\nclass SelectionState {\n  constructor() {\n    this.anchorNode = this.anchorOffset = this.focusNode = this.focusOffset = null\n  }\n\n  set(sel) {\n    this.anchorNode = sel.anchorNode; this.anchorOffset = sel.anchorOffset\n    this.focusNode = sel.focusNode; this.focusOffset = sel.focusOffset\n  }\n\n  eq(sel) {\n    return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n      sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset\n  }\n}\n\nexport class DOMObserver {\n  constructor(view, handleDOMChange) {\n    this.view = view\n    this.handleDOMChange = handleDOMChange\n    this.queue = []\n    this.flushingSoon = -1\n    this.observer = window.MutationObserver &&\n      new window.MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) this.queue.push(mutations[i])\n        // IE11 will sometimes (on backspacing out a single character\n        // text node after a BR node) call the observer callback\n        // before actually updating the DOM, which will cause\n        // ProseMirror to miss the change (see #930)\n        if (browser.ie && browser.ie_version <= 11 && mutations.some(\n          m => m.type == \"childList\" && m.removedNodes.length ||\n               m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n          this.flushSoon()\n        else\n          this.flush()\n      })\n    this.currentSelection = new SelectionState\n    if (useCharData) {\n      this.onCharData = e => {\n        this.queue.push({target: e.target, type: \"characterData\", oldValue: e.prevValue})\n        this.flushSoon()\n      }\n    }\n    this.onSelectionChange = this.onSelectionChange.bind(this)\n    this.suppressingSelectionUpdates = false\n  }\n\n  flushSoon() {\n    if (this.flushingSoon < 0)\n      this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush() }, 20)\n  }\n\n  forceFlush() {\n    if (this.flushingSoon > -1) {\n      window.clearTimeout(this.flushingSoon)\n      this.flushingSoon = -1\n      this.flush()\n    }\n  }\n\n  start() {\n    if (this.observer)\n      this.observer.observe(this.view.dom, observeOptions)\n    if (useCharData)\n      this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.connectSelection()\n  }\n\n  stop() {\n    if (this.observer) {\n      let take = this.observer.takeRecords()\n      if (take.length) {\n        for (let i = 0; i < take.length; i++) this.queue.push(take[i])\n        window.setTimeout(() => this.flush(), 20)\n      }\n      this.observer.disconnect()\n    }\n    if (useCharData) this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.disconnectSelection()\n  }\n\n  connectSelection() {\n    this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  disconnectSelection() {\n    this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  suppressSelectionUpdates() {\n    this.suppressingSelectionUpdates = true\n    setTimeout(() => this.suppressingSelectionUpdates = false, 50)\n  }\n\n  onSelectionChange() {\n    if (!hasFocusAndSelection(this.view)) return\n    if (this.suppressingSelectionUpdates) return selectionToDOM(this.view)\n    // Deletions on IE11 fire their events in the wrong order, giving\n    // us a selection change event before the DOM changes are\n    // reported.\n    if (browser.ie && browser.ie_version <= 11 && !this.view.state.selection.empty) {\n      let sel = this.view.root.getSelection()\n      // Selection.isCollapsed isn't reliable on IE\n      if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n        return this.flushSoon()\n    }\n    this.flush()\n  }\n\n  setCurSelection() {\n    this.currentSelection.set(this.view.root.getSelection())\n  }\n\n  ignoreSelectionChange(sel) {\n    if (sel.rangeCount == 0) return true\n    let container = sel.getRangeAt(0).commonAncestorContainer\n    let desc = this.view.docView.nearestDesc(container)\n    if (desc && desc.ignoreMutation({type: \"selection\", target: container.nodeType == 3 ? container.parentNode : container})) {\n      this.setCurSelection()\n      return true\n    }\n  }\n\n  flush() {\n    if (!this.view.docView || this.flushingSoon > -1) return\n    let mutations = this.observer ? this.observer.takeRecords() : []\n    if (this.queue.length) {\n      mutations = this.queue.concat(mutations)\n      this.queue.length = 0\n    }\n\n    let sel = this.view.root.getSelection()\n    let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasSelection(this.view) && !this.ignoreSelectionChange(sel)\n\n    let from = -1, to = -1, typeOver = false, added = []\n    if (this.view.editable) {\n      for (let i = 0; i < mutations.length; i++) {\n        let result = this.registerMutation(mutations[i], added)\n        if (result) {\n          from = from < 0 ? result.from : Math.min(result.from, from)\n          to = to < 0 ? result.to : Math.max(result.to, to)\n          if (result.typeOver) typeOver = true\n        }\n      }\n    }\n\n    if (browser.gecko && added.length > 1) {\n      let brs = added.filter(n => n.nodeName == \"BR\")\n      if (brs.length == 2) {\n        let [a, b] = brs\n        if (a.parentNode && a.parentNode.parentNode == b.parentNode) b.remove()\n        else a.remove()\n      }\n    }\n\n    if (from > -1 || newSel) {\n      if (from > -1) {\n        this.view.docView.markDirty(from, to)\n        checkCSS(this.view)\n      }\n      this.handleDOMChange(from, to, typeOver, added)\n      if (this.view.docView.dirty) this.view.updateState(this.view.state)\n      else if (!this.currentSelection.eq(sel)) selectionToDOM(this.view)\n      this.currentSelection.set(sel)\n    }\n  }\n\n  registerMutation(mut, added) {\n    // Ignore mutations inside nodes that were already noted as inserted\n    if (added.indexOf(mut.target) > -1) return null\n    let desc = this.view.docView.nearestDesc(mut.target)\n    if (mut.type == \"attributes\" &&\n        (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n         // Firefox sometimes fires spurious events for null/empty styles\n         (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n      return null\n    if (!desc || desc.ignoreMutation(mut)) return null\n\n    if (mut.type == \"childList\") {\n      for (let i = 0; i < mut.addedNodes.length; i++) added.push(mut.addedNodes[i])\n      if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n        return {from: desc.posBefore, to: desc.posAfter}\n      let prev = mut.previousSibling, next = mut.nextSibling\n      if (browser.ie && browser.ie_version <= 11 && mut.addedNodes.length) {\n        // IE11 gives us incorrect next/prev siblings for some\n        // insertions, so if there are added nodes, recompute those\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n          let {previousSibling, nextSibling} = mut.addedNodes[i]\n          if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0) prev = previousSibling\n          if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0) next = nextSibling\n        }\n      }\n      let fromOffset = prev && prev.parentNode == mut.target\n          ? domIndex(prev) + 1 : 0\n      let from = desc.localPosFromDOM(mut.target, fromOffset, -1)\n      let toOffset = next && next.parentNode == mut.target\n          ? domIndex(next) : mut.target.childNodes.length\n      let to = desc.localPosFromDOM(mut.target, toOffset, 1)\n      return {from, to}\n    } else if (mut.type == \"attributes\") {\n      return {from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border}\n    } else { // \"characterData\"\n      return {\n        from: desc.posAtStart,\n        to: desc.posAtEnd,\n        // An event was generated for a text change that didn't change\n        // any text. Mark the dom change to fall back to assuming the\n        // selection was typed over with an identical value if it can't\n        // find another change.\n        typeOver: mut.target.nodeValue == mut.oldValue\n      }\n    }\n  }\n}\n\nlet cssChecked = false\n\nfunction checkCSS(view) {\n  if (cssChecked) return\n  cssChecked = true\n  if (getComputedStyle(view.dom).whiteSpace == \"normal\")\n    console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\")\n}\n","import {Selection, NodeSelection, TextSelection} from \"prosemirror-state\"\nimport {dropPoint} from \"prosemirror-transform\"\nimport {Slice} from \"prosemirror-model\"\n\nimport browser from \"./browser\"\nimport {captureKeyDown} from \"./capturekeys\"\nimport {readDOMChange} from \"./domchange\"\nimport {parseFromClipboard, serializeForClipboard} from \"./clipboard\"\nimport {DOMObserver} from \"./domobserver\"\nimport {selectionBetween, selectionToDOM, selectionFromDOM} from \"./selection\"\nimport {keyEvent} from \"./dom\"\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {}, editHandlers = {}\n\nexport function initInput(view) {\n  view.shiftKey = false\n  view.mouseDown = null\n  view.lastKeyCode = null\n  view.lastKeyCodeTime = 0\n  view.lastClick = {time: 0, x: 0, y: 0, type: \"\"}\n  view.lastSelectionOrigin = null\n  view.lastSelectionTime = 0\n\n  view.lastIOSEnter = 0\n  view.lastIOSEnterFallbackTimeout = null\n  view.lastAndroidDelete = 0\n\n  view.composing = false\n  view.composingTimeout = null\n  view.compositionNodes = []\n  view.compositionEndedAt = -2e8\n\n  view.domObserver = new DOMObserver(view, (from, to, typeOver, added) => readDOMChange(view, from, to, typeOver, added))\n  view.domObserver.start()\n  // Used by hacks like the beforeinput handler to check whether anything happened in the DOM\n  view.domChangeCount = 0\n\n  view.eventHandlers = Object.create(null)\n  for (let event in handlers) {\n    let handler = handlers[event]\n    view.dom.addEventListener(event, view.eventHandlers[event] = event => {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n          (view.editable || !(event.type in editHandlers)))\n        handler(view, event)\n    })\n  }\n  // On Safari, for reasons beyond my understanding, adding an input\n  // event handler makes an issue where the composition vanishes when\n  // you press enter go away.\n  if (browser.safari) view.dom.addEventListener(\"input\", () => null)\n\n  ensureListeners(view)\n}\n\nfunction setSelectionOrigin(view, origin) {\n  view.lastSelectionOrigin = origin\n  view.lastSelectionTime = Date.now()\n}\n\nexport function destroyInput(view) {\n  view.domObserver.stop()\n  for (let type in view.eventHandlers)\n    view.dom.removeEventListener(type, view.eventHandlers[type])\n  clearTimeout(view.composingTimeout)\n  clearTimeout(view.lastIOSEnterFallbackTimeout)\n}\n\nexport function ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", currentHandlers => {\n    for (let type in currentHandlers) if (!view.eventHandlers[type])\n      view.dom.addEventListener(type, view.eventHandlers[type] = event => runCustomHandler(view, event))\n  })\n}\n\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", handlers => {\n    let handler = handlers[event.type]\n    return handler ? handler(view, event) || event.defaultPrevented : false\n  })\n}\n\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) return true\n  if (event.defaultPrevented) return false\n  for (let node = event.target; node != view.dom; node = node.parentNode)\n    if (!node || node.nodeType == 11 ||\n        (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n      return false\n  return true\n}\n\nexport function dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] &&\n      (view.editable || !(event.type in editHandlers)))\n    handlers[event.type](view, event)\n}\n\neditHandlers.keydown = (view, event) => {\n  view.shiftKey = event.keyCode == 16 || event.shiftKey\n  if (inOrNearComposition(view, event)) return\n  if (event.keyCode != 229) view.domObserver.forceFlush()\n  view.lastKeyCode = event.keyCode\n  view.lastKeyCodeTime = Date.now()\n  // On iOS, if we preventDefault enter key presses, the virtual\n  // keyboard gets confused. So the hack here is to set a flag that\n  // makes the DOM change code recognize that what just happens should\n  // be replaced by whatever the Enter key handlers do.\n  if (browser.ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    let now = Date.now()\n    view.lastIOSEnter = now\n    view.lastIOSEnterFallbackTimeout = setTimeout(() => {\n      if (view.lastIOSEnter == now) {\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))\n        view.lastIOSEnter = 0\n      }\n    }, 200)\n  } else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n    event.preventDefault()\n  } else {\n    setSelectionOrigin(view, \"key\")\n  }\n}\n\neditHandlers.keyup = (view, e) => {\n  if (e.keyCode == 16) view.shiftKey = false\n}\n\neditHandlers.keypress = (view, event) => {\n  if (inOrNearComposition(view, event) || !event.charCode ||\n      event.ctrlKey && !event.altKey || browser.mac && event.metaKey) return\n\n  if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n    event.preventDefault()\n    return\n  }\n\n  let sel = view.state.selection\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    let text = String.fromCharCode(event.charCode)\n    if (!view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n      view.dispatch(view.state.tr.insertText(text).scrollIntoView())\n    event.preventDefault()\n  }\n}\n\nfunction eventCoords(event) { return {left: event.clientX, top: event.clientY} }\n\nfunction isNear(event, click) {\n  let dx = click.x - event.clientX, dy = click.y - event.clientY\n  return dx * dx + dy * dy < 100\n}\n\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n                                                    : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n      return true\n  }\n  return false\n}\n\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) view.focus()\n  let tr = view.state.tr.setSelection(selection)\n  if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n  view.dispatch(tr)\n}\n\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\")\n    return true\n  }\n  return false\n}\n\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) return false\n  let sel = view.state.selection, selectedNode, selectAt\n  if (sel instanceof NodeSelection) selectedNode = sel.node\n\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 &&\n          i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n        selectAt = $pos.before(sel.$from.depth)\n      else\n        selectAt = $pos.before(i)\n      break\n    }\n  }\n\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\")\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n    (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside))\n}\n\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleDoubleClick\", f => f(view, pos, event))\n}\n\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n    defaultTripleClick(view, inside, event)\n}\n\nfunction defaultTripleClick(view, inside, event) {\n  if (event.button != 0) return false\n  let doc = view.state.doc\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\")\n      return true\n    }\n    return false\n  }\n\n  let $pos = doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    let nodePos = $pos.before(i)\n    if (node.inlineContent)\n      updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\")\n    else if (NodeSelection.isSelectable(node))\n      updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\")\n    else\n      continue\n    return true\n  }\n}\n\nfunction forceDOMFlush(view) {\n  return endComposition(view)\n}\n\nconst selectNodeModifier = browser.mac ? \"metaKey\" : \"ctrlKey\"\n\nhandlers.mousedown = (view, event) => {\n  view.shiftKey = event.shiftKey\n  let flushed = forceDOMFlush(view)\n  let now = Date.now(), type = \"singleClick\"\n  if (now - view.lastClick.time < 500 && isNear(event, view.lastClick) && !event[selectNodeModifier]) {\n    if (view.lastClick.type == \"singleClick\") type = \"doubleClick\"\n    else if (view.lastClick.type == \"doubleClick\") type = \"tripleClick\"\n  }\n  view.lastClick = {time: now, x: event.clientX, y: event.clientY, type}\n\n  let pos = view.posAtCoords(eventCoords(event))\n  if (!pos) return\n\n  if (type == \"singleClick\") {\n    if (view.mouseDown) view.mouseDown.done()\n    view.mouseDown = new MouseDown(view, pos, event, flushed)\n  } else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n    event.preventDefault()\n  } else {\n    setSelectionOrigin(view, \"pointer\")\n  }\n}\n\nclass MouseDown {\n  constructor(view, pos, event, flushed) {\n    this.view = view\n    this.startDoc = view.state.doc\n    this.pos = pos\n    this.event = event\n    this.flushed = flushed\n    this.selectNode = event[selectNodeModifier]\n    this.allowDefault = event.shiftKey || event.button != 0\n\n    let targetNode, targetPos\n    if (pos.inside > -1) {\n      targetNode = view.state.doc.nodeAt(pos.inside)\n      targetPos = pos.inside\n    } else {\n      let $pos = view.state.doc.resolve(pos.pos)\n      targetNode = $pos.parent\n      targetPos = $pos.depth ? $pos.before() : 0\n    }\n\n    this.mightDrag = null\n\n    const target = flushed ? null : event.target\n    const targetDesc = target ? view.docView.nearestDesc(target, true) : null\n    this.target = targetDesc ? targetDesc.dom : null\n\n    let {selection} = view.state\n    if (event.button == 0 &&\n        targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n        selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n      this.mightDrag = {node: targetNode,\n                        pos: targetPos,\n                        addAttr: this.target && !this.target.draggable,\n                        setUneditable: this.target && browser.gecko && !this.target.hasAttribute(\"contentEditable\")}\n\n    if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.draggable = true\n      if (this.mightDrag.setUneditable)\n        setTimeout(() => {\n          if (this.view.mouseDown == this) this.target.setAttribute(\"contentEditable\", \"false\")\n        }, 20)\n      this.view.domObserver.start()\n    }\n\n    view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this))\n    view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this))\n    setSelectionOrigin(view, \"pointer\")\n  }\n\n  done() {\n    this.view.root.removeEventListener(\"mouseup\", this.up)\n    this.view.root.removeEventListener(\"mousemove\", this.move)\n    if (this.mightDrag && this.target) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.removeAttribute(\"draggable\")\n      if (this.mightDrag.setUneditable) this.target.removeAttribute(\"contentEditable\")\n      this.view.domObserver.start()\n    }\n    this.view.mouseDown = null\n  }\n\n  up(event) {\n    this.done()\n\n    if (!this.view.dom.contains(event.target.nodeType == 3 ? event.target.parentNode : event.target))\n      return\n\n    let pos = this.pos\n    if (this.view.state.doc != this.startDoc) pos = this.view.posAtCoords(eventCoords(event))\n\n    if (this.allowDefault || !pos) {\n      setSelectionOrigin(this.view, \"pointer\")\n    } else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n      event.preventDefault()\n    } else if (this.flushed ||\n               // Safari ignores clicks on draggable elements\n               (browser.safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n               // Chrome will sometimes treat a node selection as a\n               // cursor, but still report that the node is selected\n               // when asked through getSelection. You'll then get a\n               // situation where clicking at the point where that\n               // (hidden) cursor is doesn't change the selection, and\n               // thus doesn't get a reaction from ProseMirror. This\n               // works around that.\n               (browser.chrome && !(this.view.state.selection instanceof TextSelection) &&\n                Math.min(Math.abs(pos.pos - this.view.state.selection.from),\n                         Math.abs(pos.pos - this.view.state.selection.to)) <= 2)) {\n      updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\")\n      event.preventDefault()\n    } else {\n      setSelectionOrigin(this.view, \"pointer\")\n    }\n  }\n\n  move(event) {\n    if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n                               Math.abs(this.event.y - event.clientY) > 4))\n      this.allowDefault = true\n    setSelectionOrigin(this.view, \"pointer\")\n    if (event.buttons == 0) this.done()\n  }\n}\n\nhandlers.touchdown = view => {\n  forceDOMFlush(view)\n  setSelectionOrigin(view, \"pointer\")\n}\n\nhandlers.contextmenu = view => forceDOMFlush(view)\n\nfunction inOrNearComposition(view, event) {\n  if (view.composing) return true\n  // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n  // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n  // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n  // emitted. The keydown event triggers newline insertion, which we don't want.\n  // This method returns true if the keydown event should be ignored.\n  // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n  // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n  // This guards against the case where compositionend is triggered without the keyboard\n  // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n  // afterwards- we wouldn't want to ignore the keydown event in this case.\n  if (browser.safari && Math.abs(event.timeStamp - view.compositionEndedAt) < 500) {\n    view.compositionEndedAt = -2e8\n    return true\n  }\n  return false\n}\n\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = browser.android ? 5000 : -1\n\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n  if (!view.composing) {\n    view.domObserver.flush()\n    let {state} = view, $pos = state.selection.$from\n    if (state.selection.empty &&\n        (state.storedMarks ||\n         (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n      // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n      view.markCursor = view.state.storedMarks || $pos.marks()\n      endComposition(view, true)\n      view.markCursor = null\n    } else {\n      endComposition(view)\n      // In firefox, if the cursor is after but outside a marked node,\n      // the inserted text won't inherit the marks. So this moves it\n      // inside if necessary.\n      if (browser.gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n        let sel = view.root.getSelection()\n        for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n          let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1]\n          if (!before) break\n          if (before.nodeType == 3) {\n            sel.collapse(before, before.nodeValue.length)\n            break\n          } else {\n            node = before\n            offset = -1\n          }\n        }\n      }\n    }\n    view.composing = true\n  }\n  scheduleComposeEnd(view, timeoutComposition)\n}\n\neditHandlers.compositionend = (view, event) => {\n  if (view.composing) {\n    view.composing = false\n    view.compositionEndedAt = event.timeStamp\n    scheduleComposeEnd(view, 20)\n  }\n}\n\nfunction scheduleComposeEnd(view, delay) {\n  clearTimeout(view.composingTimeout)\n  if (delay > -1) view.composingTimeout = setTimeout(() => endComposition(view), delay)\n}\n\nexport function clearComposition(view) {\n  view.composing = false\n  while (view.compositionNodes.length > 0) view.compositionNodes.pop().markParentsDirty()\n}\n\nexport function endComposition(view, forceUpdate) {\n  view.domObserver.forceFlush()\n  clearComposition(view)\n  if (forceUpdate || view.docView.dirty) {\n    let sel = selectionFromDOM(view)\n    if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n    else view.updateState(view.state)\n    return true\n  }\n  return false\n}\n\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  if (!view.dom.parentNode) return\n  let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"))\n  wrap.appendChild(dom)\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  let sel = getSelection(), range = document.createRange()\n  range.selectNodeContents(dom)\n  // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n  view.dom.blur()\n  sel.removeAllRanges()\n  sel.addRange(range)\n  setTimeout(() => {\n    if (wrap.parentNode) wrap.parentNode.removeChild(wrap)\n    view.focus()\n  }, 50)\n}\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n      (browser.ios && browser.webkit_version < 604)\n\nhandlers.copy = editHandlers.cut = (view, e) => {\n  let sel = view.state.selection, cut = e.type == \"cut\"\n  if (sel.empty) return\n\n  // IE and Edge's clipboard interface is completely broken\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  let slice = sel.content(), {dom, text} = serializeForClipboard(view, slice)\n  if (data) {\n    e.preventDefault()\n    data.clearData()\n    data.setData(\"text/html\", dom.innerHTML)\n    data.setData(\"text/plain\", text)\n  } else {\n    captureCopy(view, dom)\n  }\n  if (cut) view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"))\n}\n\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null\n}\n\nfunction capturePaste(view, e) {\n  if (!view.dom.parentNode) return\n  let plainText = view.shiftKey || view.state.selection.$from.parent.type.spec.code\n  let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"))\n  if (!plainText) target.contentEditable = \"true\"\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.focus()\n  setTimeout(() => {\n    view.focus()\n    if (target.parentNode) target.parentNode.removeChild(target)\n    if (plainText) doPaste(view, target.value, null, e)\n    else doPaste(view, target.textContent, target.innerHTML, e)\n  }, 50)\n}\n\nfunction doPaste(view, text, html, e) {\n  let slice = parseFromClipboard(view, text, html, view.shiftKey, view.state.selection.$from)\n  if (view.someProp(\"handlePaste\", f => f(view, e, slice || Slice.empty))) return true\n  if (!slice) return false\n\n  let singleNode = sliceSingleNode(slice)\n  let tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, view.shiftKey) : view.state.tr.replaceSelection(slice)\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"))\n  return true\n}\n\neditHandlers.paste = (view, e) => {\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), e)) e.preventDefault()\n  else capturePaste(view, e)\n}\n\nclass Dragging {\n  constructor(slice, move) {\n    this.slice = slice\n    this.move = move\n  }\n}\n\nconst dragCopyModifier = browser.mac ? \"altKey\" : \"ctrlKey\"\n\nhandlers.dragstart = (view, e) => {\n  let mouseDown = view.mouseDown\n  if (mouseDown) mouseDown.done()\n  if (!e.dataTransfer) return\n\n  let sel = view.state.selection\n  let pos = sel.empty ? null : view.posAtCoords(eventCoords(e))\n  if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1: sel.to)) {\n    // In selection\n  } else if (mouseDown && mouseDown.mightDrag) {\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)))\n  } else if (e.target && e.target.nodeType == 1) {\n    let desc = view.docView.nearestDesc(e.target, true)\n    if (!desc || !desc.node.type.spec.draggable || desc == view.docView) return\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)))\n  }\n  let slice = view.state.selection.content(), {dom, text} = serializeForClipboard(view, slice)\n  e.dataTransfer.clearData()\n  e.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML)\n  // See https://github.com/ProseMirror/prosemirror/issues/1156\n  e.dataTransfer.effectAllowed = \"copyMove\"\n  if (!brokenClipboardAPI) e.dataTransfer.setData(\"text/plain\", text)\n  view.dragging = new Dragging(slice, !e[dragCopyModifier])\n}\n\nhandlers.dragend = view => {\n  let dragging = view.dragging\n  window.setTimeout(() => {\n    if (view.dragging == dragging)  view.dragging = null\n  }, 50)\n}\n\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault()\n\neditHandlers.drop = (view, e) => {\n  let dragging = view.dragging\n  view.dragging = null\n\n  if (!e.dataTransfer) return\n\n  let eventPos = view.posAtCoords(eventCoords(e))\n  if (!eventPos) return\n  let $mouse = view.state.doc.resolve(eventPos.pos)\n  if (!$mouse) return\n  let slice = dragging && dragging.slice\n  if (slice) {\n    view.someProp(\"transformPasted\", f => { slice = f(slice) })\n  } else {\n    slice = parseFromClipboard(view, e.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"),\n                               brokenClipboardAPI ? null : e.dataTransfer.getData(\"text/html\"), false, $mouse)\n  }\n  let move = dragging && !e[dragCopyModifier]\n  if (view.someProp(\"handleDrop\", f => f(view, e, slice || Slice.empty, move))) {\n    e.preventDefault()\n    return\n  }\n  if (!slice) return\n\n  e.preventDefault()\n  let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos\n  if (insertPos == null) insertPos = $mouse.pos\n\n  let tr = view.state.tr\n  if (move) tr.deleteSelection()\n\n  let pos = tr.mapping.map(insertPos)\n  let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1\n  let beforeInsert = tr.doc\n  if (isNode)\n    tr.replaceRangeWith(pos, pos, slice.content.firstChild)\n  else\n    tr.replaceRange(pos, pos, slice)\n  if (tr.doc.eq(beforeInsert)) return\n\n  let $pos = tr.doc.resolve(pos)\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n      $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n    tr.setSelection(new NodeSelection($pos))\n  } else {\n    let end = tr.mapping.map(insertPos)\n    tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo)\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)))\n  }\n  view.focus()\n  view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"))\n}\n\nhandlers.focus = view => {\n  if (!view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.add(\"ProseMirror-focused\")\n    view.domObserver.start()\n    view.focused = true\n    setTimeout(() => {\n      if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.root.getSelection()))\n        selectionToDOM(view)\n    }, 20)\n  }\n}\n\nhandlers.blur = view => {\n  if (view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.remove(\"ProseMirror-focused\")\n    view.domObserver.start()\n    view.domObserver.currentSelection.set({})\n    view.focused = false\n  }\n}\n\nhandlers.beforeinput = (view, event) => {\n  // We should probably do more with beforeinput events, but support\n  // is so spotty that I'm still waiting to see where they are going.\n\n  // Very specific hack to deal with backspace sometimes failing on\n  // Chrome Android when after an uneditable node.\n  if (browser.chrome && browser.android && event.inputType == \"deleteContentBackward\") {\n    let {domChangeCount} = view\n    setTimeout(() => {\n      if (view.domChangeCount != domChangeCount) return // Event already had some effect\n      // This bug tends to close the virtual keyboard, so we refocus\n      view.dom.blur()\n      view.focus()\n      if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) return\n      let {$cursor} = view.state.selection\n      // Crude approximation of backspace behavior when no command handled it\n      if ($cursor && $cursor.pos > 0) view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView())\n    }, 50)\n  }\n}\n\n// Make sure all handlers get registered\nfor (let prop in editHandlers) handlers[prop] = editHandlers[prop]\n","function compareObjs(a, b) {\n  if (a == b) return true\n  for (let p in a) if (a[p] !== b[p]) return false\n  for (let p in b) if (!(p in a)) return false\n  return true\n}\n\nclass WidgetType {\n  constructor(toDOM, spec) {\n    this.spec = spec || noSpec\n    this.side = this.spec.side || 0\n    this.toDOM = toDOM\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let {pos, deleted} = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1)\n    return deleted ? null : new Decoration(pos - offset, pos - offset, this)\n  }\n\n  valid() { return true }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof WidgetType &&\n       (this.spec.key && this.spec.key == other.spec.key ||\n        this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)))\n  }\n}\n\nclass InlineType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset\n    let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset\n    return from >= to ? null : new Decoration(from, to, this)\n  }\n\n  valid(_, span) { return span.from < span.to }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n\n  static is(span) { return span.type instanceof InlineType }\n}\n\nclass NodeType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.mapResult(span.from + oldOffset, 1)\n    if (from.deleted) return null\n    let to = mapping.mapResult(span.to + oldOffset, -1)\n    if (to.deleted || to.pos <= from.pos) return null\n    return new Decoration(from.pos - offset, to.pos - offset, this)\n  }\n\n  valid(node, span) {\n    let {index, offset} = node.content.findIndex(span.from)\n    return offset == span.from && offset + node.child(index).nodeSize == span.to\n  }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n}\n\n// ::- Decoration objects can be provided to the view through the\n// [`decorations` prop](#view.EditorProps.decorations). They come in\n// several variants—see the static members of this class for details.\nexport class Decoration {\n  constructor(from, to, type) {\n    // :: number\n    // The start position of the decoration.\n    this.from = from\n    // :: number\n    // The end position. Will be the same as `from` for [widget\n    // decorations](#view.Decoration^widget).\n    this.to = to\n    this.type = type\n  }\n\n  copy(from, to) {\n    return new Decoration(from, to, this.type)\n  }\n\n  eq(other, offset = 0) {\n    return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to\n  }\n\n  map(mapping, offset, oldOffset) {\n    return this.type.map(mapping, this, offset, oldOffset)\n  }\n\n  // :: (number, union<(view: EditorView, getPos: () → number) → dom.Node, dom.Node>, ?Object) → Decoration\n  // Creates a widget decoration, which is a DOM node that's shown in\n  // the document at the given position. It is recommended that you\n  // delay rendering the widget by passing a function that will be\n  // called when the widget is actually drawn in a view, but you can\n  // also directly pass a DOM node. `getPos` can be used to find the\n  // widget's current document position.\n  //\n  //   spec::- These options are supported:\n  //\n  //     side:: ?number\n  //     Controls which side of the document position this widget is\n  //     associated with. When negative, it is drawn before a cursor\n  //     at its position, and content inserted at that position ends\n  //     up after the widget. When zero (the default) or positive, the\n  //     widget is drawn after the cursor and content inserted there\n  //     ends up before the widget.\n  //\n  //     When there are multiple widgets at a given position, their\n  //     `side` values determine the order in which they appear. Those\n  //     with lower values appear first. The ordering of widgets with\n  //     the same `side` value is unspecified.\n  //\n  //     When `marks` is null, `side` also determines the marks that\n  //     the widget is wrapped in—those of the node before when\n  //     negative, those of the node after when positive.\n  //\n  //     marks:: ?[Mark]\n  //     The precise set of marks to draw around the widget.\n  //\n  //     stopEvent:: ?(event: dom.Event) → bool\n  //     Can be used to control which DOM events, when they bubble out\n  //     of this widget, the editor view should ignore.\n  //\n  //     ignoreSelection:: ?bool\n  //     When set (defaults to false), selection changes inside the\n  //     widget are ignored, and don't cause ProseMirror to try and\n  //     re-sync the selection with its selection state.\n  //\n  //     key:: ?string\n  //     When comparing decorations of this type (in order to decide\n  //     whether it needs to be redrawn), ProseMirror will by default\n  //     compare the widget DOM node by identity. If you pass a key,\n  //     that key will be compared instead, which can be useful when\n  //     you generate decorations on the fly and don't want to store\n  //     and reuse DOM nodes. Make sure that any widgets with the same\n  //     key are interchangeable—if widgets differ in, for example,\n  //     the behavior of some event handler, they should get\n  //     different keys.\n  static widget(pos, toDOM, spec) {\n    return new Decoration(pos, pos, new WidgetType(toDOM, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates an inline decoration, which adds the given attributes to\n  // each inline node between `from` and `to`.\n  //\n  //   spec::- These options are recognized:\n  //\n  //     inclusiveStart:: ?bool\n  //     Determines how the left side of the decoration is\n  //     [mapped](#transform.Position_Mapping) when content is\n  //     inserted directly at that position. By default, the decoration\n  //     won't include the new content, but you can set this to `true`\n  //     to make it inclusive.\n  //\n  //     inclusiveEnd:: ?bool\n  //     Determines how the right side of the decoration is mapped.\n  //     See\n  //     [`inclusiveStart`](#view.Decoration^inline^spec.inclusiveStart).\n  static inline(from, to, attrs, spec) {\n    return new Decoration(from, to, new InlineType(attrs, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates a node decoration. `from` and `to` should point precisely\n  // before and after a node in the document. That node, and only that\n  // node, will receive the given attributes.\n  //\n  //   spec::-\n  //\n  //   Optional information to store with the decoration. It\n  //   is also used when comparing decorators for equality.\n  static node(from, to, attrs, spec) {\n    return new Decoration(from, to, new NodeType(attrs, spec))\n  }\n\n  // :: Object\n  // The spec provided when creating this decoration. Can be useful\n  // if you've stored extra information in that object.\n  get spec() { return this.type.spec }\n\n  get inline() { return this.type instanceof InlineType }\n}\n\n// DecorationAttrs:: interface\n// A set of attributes to add to a decorated node. Most properties\n// simply directly correspond to DOM attributes of the same name,\n// which will be set to the property's value. These are exceptions:\n//\n//   class:: ?string\n//   A CSS class name or a space-separated set of class names to be\n//   _added_ to the classes that the node already had.\n//\n//   style:: ?string\n//   A string of CSS to be _added_ to the node's existing `style` property.\n//\n//   nodeName:: ?string\n//   When non-null, the target node is wrapped in a DOM element of\n//   this type (and the other attributes are applied to this element).\n\nconst none = [], noSpec = {}\n\n// :: class extends DecorationSource\n// A collection of [decorations](#view.Decoration), organized in\n// such a way that the drawing algorithm can efficiently use and\n// compare them. This is a persistent data structure—it is not\n// modified, updates create a new value.\nexport class DecorationSet {\n  constructor(local, children) {\n    this.local = local && local.length ? local : none\n    this.children = children && children.length ? children : none\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Create a set of decorations, using the structure of the given\n  // document.\n  static create(doc, decorations) {\n    return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty\n  }\n\n  // :: (?number, ?number, ?(spec: Object) → bool) → [Decoration]\n  // Find all decorations in this set which touch the given range\n  // (including decorations that start or end directly at the\n  // boundaries) and match the given predicate on their spec. When\n  // `start` and `end` are omitted, all decorations in the set are\n  // considered. When `predicate` isn't given, all decorations are\n  // assumed to match.\n  find(start, end, predicate) {\n    let result = []\n    this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate)\n    return result\n  }\n\n  findInner(start, end, result, offset, predicate) {\n    for (let i = 0; i < this.local.length; i++) {\n      let span = this.local[i]\n      if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n        result.push(span.copy(span.from + offset, span.to + offset))\n    }\n    for (let i = 0; i < this.children.length; i += 3) {\n      if (this.children[i] < end && this.children[i + 1] > start) {\n        let childOff = this.children[i] + 1\n        this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate)\n      }\n    }\n  }\n\n  // :: (Mapping, Node, ?Object) → DecorationSet\n  // Map the set of decorations in response to a change in the\n  // document.\n  //\n  //   options::- An optional set of options.\n  //\n  //     onRemove:: ?(decorationSpec: Object)\n  //     When given, this function will be called for each decoration\n  //     that gets dropped as a result of the mapping, passing the\n  //     spec of that decoration.\n  map(mapping, doc, options) {\n    if (this == empty || mapping.maps.length == 0) return this\n    return this.mapInner(mapping, doc, 0, 0, options || noSpec)\n  }\n\n  mapInner(mapping, node, offset, oldOffset, options) {\n    let newLocal\n    for (let i = 0; i < this.local.length; i++) {\n      let mapped = this.local[i].map(mapping, offset, oldOffset)\n      if (mapped && mapped.type.valid(node, mapped)) (newLocal || (newLocal = [])).push(mapped)\n      else if (options.onRemove) options.onRemove(this.local[i].spec)\n    }\n\n    if (this.children.length)\n      return mapChildren(this.children, newLocal, mapping, node, offset, oldOffset, options)\n    else\n      return newLocal ? new DecorationSet(newLocal.sort(byPos)) : empty\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Add the given array of decorations to the ones in the set,\n  // producing a new set. Needs access to the current document to\n  // create the appropriate tree structure.\n  add(doc, decorations) {\n    if (!decorations.length) return this\n    if (this == empty) return DecorationSet.create(doc, decorations)\n    return this.addInner(doc, decorations, 0)\n  }\n\n  addInner(doc, decorations, offset) {\n    let children, childIndex = 0\n    doc.forEach((childNode, childOffset) => {\n      let baseOffset = childOffset + offset, found\n      if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) return\n\n      if (!children) children = this.children.slice()\n      while (childIndex < children.length && children[childIndex] < childOffset) childIndex += 3\n      if (children[childIndex] == childOffset)\n        children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1)\n      else\n        children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec))\n      childIndex += 3\n    })\n\n    let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset)\n    for (let i = 0; i < local.length; i++) if (!local[i].type.valid(doc, local[i])) local.splice(i--, 1)\n\n    return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local,\n                             children || this.children)\n  }\n\n  // :: ([Decoration]) → DecorationSet\n  // Create a new set that contains the decorations in this set, minus\n  // the ones in the given array.\n  remove(decorations) {\n    if (decorations.length == 0 || this == empty) return this\n    return this.removeInner(decorations, 0)\n  }\n\n  removeInner(decorations, offset) {\n    let children = this.children, local = this.local\n    for (let i = 0; i < children.length; i += 3) {\n      let found, from = children[i] + offset, to = children[i + 1] + offset\n      for (let j = 0, span; j < decorations.length; j++) if (span = decorations[j]) {\n        if (span.from > from && span.to < to) {\n          decorations[j] = null\n          ;(found || (found = [])).push(span)\n        }\n      }\n      if (!found) continue\n      if (children == this.children) children = this.children.slice()\n      let removed = children[i + 2].removeInner(found, from + 1)\n      if (removed != empty) {\n        children[i + 2] = removed\n      } else {\n        children.splice(i, 3)\n        i -= 3\n      }\n    }\n    if (local.length) for (let i = 0, span; i < decorations.length; i++) if (span = decorations[i]) {\n      for (let j = 0; j < local.length; j++) if (local[j].eq(span, offset)) {\n        if (local == this.local) local = this.local.slice()\n        local.splice(j--, 1)\n      }\n    }\n    if (children == this.children && local == this.local) return this\n    return local.length || children.length ? new DecorationSet(local, children) : empty\n  }\n\n  forChild(offset, node) {\n    if (this == empty) return this\n    if (node.isLeaf) return DecorationSet.empty\n\n    let child, local\n    for (let i = 0; i < this.children.length; i += 3) if (this.children[i] >= offset) {\n      if (this.children[i] == offset) child = this.children[i + 2]\n      break\n    }\n    let start = offset + 1, end = start + node.content.size\n    for (let i = 0; i < this.local.length; i++) {\n      let dec = this.local[i]\n      if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n        let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start\n        if (from < to) (local || (local = [])).push(dec.copy(from, to))\n      }\n    }\n    if (local) {\n      let localSet = new DecorationSet(local.sort(byPos))\n      return child ? new DecorationGroup([localSet, child]) : localSet\n    }\n    return child || empty\n  }\n\n  eq(other) {\n    if (this == other) return true\n    if (!(other instanceof DecorationSet) ||\n        this.local.length != other.local.length ||\n        this.children.length != other.children.length) return false\n    for (let i = 0; i < this.local.length; i++)\n      if (!this.local[i].eq(other.local[i])) return false\n    for (let i = 0; i < this.children.length; i += 3)\n      if (this.children[i] != other.children[i] ||\n          this.children[i + 1] != other.children[i + 1] ||\n          !this.children[i + 2].eq(other.children[i + 2])) return false\n    return true\n  }\n\n  locals(node) {\n    return removeOverlap(this.localsInner(node))\n  }\n\n  localsInner(node) {\n    if (this == empty) return none\n    if (node.inlineContent || !this.local.some(InlineType.is)) return this.local\n    let result = []\n    for (let i = 0; i < this.local.length; i++) {\n      if (!(this.local[i].type instanceof InlineType))\n        result.push(this.local[i])\n    }\n    return result\n  }\n}\n\n// DecorationSource:: interface\n// An object that can [provide](#view.EditorProps.decorations)\n// decorations. Implemented by [`DecorationSet`](#view.DecorationSet),\n// and passed to [node views](#view.EditorProps.nodeViews).\n\nconst empty = new DecorationSet()\n\n// :: DecorationSet\n// The empty set of decorations.\nDecorationSet.empty = empty\n\nDecorationSet.removeOverlap = removeOverlap\n\n// :- An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n  constructor(members) {\n    this.members = members\n  }\n\n  forChild(offset, child) {\n    if (child.isLeaf) return DecorationSet.empty\n    let found = []\n    for (let i = 0; i < this.members.length; i++) {\n      let result = this.members[i].forChild(offset, child)\n      if (result == empty) continue\n      if (result instanceof DecorationGroup) found = found.concat(result.members)\n      else found.push(result)\n    }\n    return DecorationGroup.from(found)\n  }\n\n  eq(other) {\n    if (!(other instanceof DecorationGroup) ||\n        other.members.length != this.members.length) return false\n    for (let i = 0; i < this.members.length; i++)\n      if (!this.members[i].eq(other.members[i])) return false\n    return true\n  }\n\n  locals(node) {\n    let result, sorted = true\n    for (let i = 0; i < this.members.length; i++) {\n      let locals = this.members[i].localsInner(node)\n      if (!locals.length) continue\n      if (!result) {\n        result = locals\n      } else {\n        if (sorted) {\n          result = result.slice()\n          sorted = false\n        }\n        for (let j = 0; j < locals.length; j++) result.push(locals[j])\n      }\n    }\n    return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none\n  }\n\n  // : ([DecorationSet]) → union<DecorationSet, DecorationGroup>\n  // Create a group for the given array of decoration sets, or return\n  // a single set when possible.\n  static from(members) {\n    switch (members.length) {\n      case 0: return empty\n      case 1: return members[0]\n      default: return new DecorationGroup(members)\n    }\n  }\n}\n\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  let children = oldChildren.slice()\n\n  // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n  let shift = (oldStart, oldEnd, newStart, newEnd) => {\n    for (let i = 0; i < children.length; i += 3) {\n      let end = children[i + 1], dSize\n      if (end == -1 || oldStart > end + oldOffset) continue\n      if (oldEnd >= children[i] + oldOffset) {\n        children[i + 1] = -1\n      } else if (newStart >= offset && (dSize = (newEnd - newStart) - (oldEnd - oldStart))) {\n        children[i] += dSize\n        children[i + 1] += dSize\n      }\n    }\n  }\n  for (let i = 0; i < mapping.maps.length; i++) mapping.maps[i].forEach(shift)\n\n  // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n  let mustRebuild = false\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1) { // Touched nodes\n    let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset\n    if (fromLocal < 0 || fromLocal >= node.content.size) {\n      mustRebuild = true\n      continue\n    }\n    // Must read oldChildren because children was tagged with -1\n    let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset\n    let {index, offset: childOffset} = node.content.findIndex(fromLocal)\n    let childNode = node.maybeChild(index)\n    if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n      let mapped = children[i + 2].mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options)\n      if (mapped != empty) {\n        children[i] = fromLocal\n        children[i + 1] = toLocal\n        children[i + 2] = mapped\n      } else {\n        children[i + 1] = -2\n        mustRebuild = true\n      }\n    } else {\n      mustRebuild = true\n    }\n  }\n\n  // Remaining children must be collected and rebuilt into the appropriate structure\n  if (mustRebuild) {\n    let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal || [], mapping,\n                                                       offset, oldOffset, options)\n    let built = buildTree(decorations, node, 0, options)\n    newLocal = built.local\n    for (let i = 0; i < children.length; i += 3) if (children[i + 1] < 0) {\n      children.splice(i, 3)\n      i -= 3\n    }\n    for (let i = 0, j = 0; i < built.children.length; i += 3) {\n      let from = built.children[i]\n      while (j < children.length && children[j] < from) j += 3\n      children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2])\n    }\n  }\n\n  return new DecorationSet(newLocal && newLocal.sort(byPos), children)\n}\n\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) return spans\n  let result = []\n  for (let i = 0; i < spans.length; i++) {\n    let span = spans[i]\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type))\n  }\n  return result\n}\n\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (let i = 0; i < set.local.length; i++) {\n      let mapped = set.local[i].map(mapping, offset, oldOffset)\n      if (mapped) decorations.push(mapped)\n      else if (options.onRemove) options.onRemove(set.local[i].spec)\n    }\n    for (let i = 0; i < set.children.length; i += 3)\n      gather(set.children[i + 2], set.children[i] + oldOffset + 1)\n  }\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1)\n    gather(children[i + 2], oldChildren[i] + oldOffset + 1)\n\n  return decorations\n}\n\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) return null\n  let end = offset + node.nodeSize, found = null\n  for (let i = 0, span; i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n      ;(found || (found = [])).push(span)\n      spans[i] = null\n    }\n  }\n  return found\n}\n\nfunction withoutNulls(array) {\n  let result = []\n  for (let i = 0; i < array.length; i++)\n    if (array[i] != null) result.push(array[i])\n  return result\n}\n\n// : ([Decoration], Node, number) → DecorationSet\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtractet from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n  let children = [], hasNulls = false\n  node.forEach((childNode, localStart) => {\n    let found = takeSpansForNode(spans, childNode, localStart + offset)\n    if (found) {\n      hasNulls = true\n      let subtree = buildTree(found, childNode, offset + localStart + 1, options)\n      if (subtree != empty)\n        children.push(localStart, localStart + childNode.nodeSize, subtree)\n    }\n  })\n  let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos)\n  for (let i = 0; i < locals.length; i++) if (!locals[i].type.valid(node, locals[i])) {\n    if (options.onRemove) options.onRemove(locals[i].spec)\n    locals.splice(i--, 1)\n  }\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty\n}\n\n// : (Decoration, Decoration) → number\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to\n}\n\n// : ([Decoration]) → [Decoration]\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n  let working = spans\n  for (let i = 0; i < working.length - 1; i++) {\n    let span = working[i]\n    if (span.from != span.to) for (let j = i + 1; j < working.length; j++) {\n      let next = working[j]\n      if (next.from == span.from) {\n        if (next.to != span.to) {\n          if (working == spans) working = spans.slice()\n          // Followed by a partially overlapping larger span. Split that\n          // span.\n          working[j] = next.copy(next.from, span.to)\n          insertAhead(working, j + 1, next.copy(span.to, next.to))\n        }\n        continue\n      } else {\n        if (next.from < span.to) {\n          if (working == spans) working = spans.slice()\n          // The end of this one overlaps with a subsequent span. Split\n          // this one.\n          working[i] = span.copy(span.from, next.from)\n          insertAhead(working, j, span.copy(next.from, span.to))\n        }\n        break\n      }\n    }\n  }\n  return working\n}\n\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) i++\n  array.splice(i, 0, deco)\n}\n\n// : (EditorView) → union<DecorationSet, DecorationGroup>\n// Get the decorations associated with the current props of a view.\nexport function viewDecorations(view) {\n  let found = []\n  view.someProp(\"decorations\", f => {\n    let result = f(view.state)\n    if (result && result != empty) found.push(result)\n  })\n  if (view.cursorWrapper)\n    found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]))\n  return DecorationGroup.from(found)\n}\n","import {NodeSelection} from \"prosemirror-state\"\n\nimport {scrollRectIntoView, posAtCoords, coordsAtPos, endOfTextblock, storeScrollPos,\n        resetScrollPos, focusPreventScroll} from \"./domcoords\"\nimport {docViewDesc} from \"./viewdesc\"\nimport {initInput, destroyInput, dispatchEvent, ensureListeners, clearComposition} from \"./input\"\nimport {selectionToDOM, anchorInRightPlace, syncNodeSelection} from \"./selection\"\nimport {Decoration, viewDecorations} from \"./decoration\"\nimport browser from \"./browser\"\n\nexport {Decoration, DecorationSet} from \"./decoration\"\n\n// Exported for testing\nexport {serializeForClipboard as __serializeForClipboard, parseFromClipboard as __parseFromClipboard} from \"./clipboard\"\nexport {endComposition as __endComposition} from \"./input\"\n\n// ::- An editor view manages the DOM structure that represents an\n// editable document. Its state and behavior are determined by its\n// [props](#view.DirectEditorProps).\nexport class EditorView {\n  // :: (?union<dom.Node, (dom.Node), {mount: dom.Node}>, DirectEditorProps)\n  // Create a view. `place` may be a DOM node that the editor should\n  // be appended to, a function that will place it into the document,\n  // or an object whose `mount` property holds the node to use as the\n  // document container. If it is `null`, the editor will not be added\n  // to the document.\n  constructor(place, props) {\n    this._props = props\n    // :: EditorState\n    // The view's current [state](#state.EditorState).\n    this.state = props.state\n\n    this.dispatch = this.dispatch.bind(this)\n\n    this._root = null\n    this.focused = false\n    // Kludge used to work around a Chrome bug\n    this.trackWrites = null\n\n    // :: dom.Element\n    // An editable DOM node containing the document. (You probably\n    // should not directly interfere with its content.)\n    this.dom = (place && place.mount) || document.createElement(\"div\")\n    if (place) {\n      if (place.appendChild) place.appendChild(this.dom)\n      else if (place.apply) place(this.dom)\n      else if (place.mount) this.mounted = true\n    }\n\n    // :: bool\n    // Indicates whether the editor is currently [editable](#view.EditorProps.editable).\n    this.editable = getEditable(this)\n    this.markCursor = null\n    this.cursorWrapper = null\n    updateCursorWrapper(this)\n    this.nodeViews = buildNodeViews(this)\n    this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this)\n\n    this.lastSelectedViewDesc = null\n    // :: ?{slice: Slice, move: bool}\n    // When editor content is being dragged, this object contains\n    // information about the dragged slice and whether it is being\n    // copied or moved. At any other time, it is null.\n    this.dragging = null\n\n    initInput(this)\n\n    this.pluginViews = []\n    this.updatePluginViews()\n  }\n\n  // composing:: boolean\n  // Holds `true` when a\n  // [composition](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide)\n  // is active.\n\n  // :: DirectEditorProps\n  // The view's current [props](#view.EditorProps).\n  get props() {\n    if (this._props.state != this.state) {\n      let prev = this._props\n      this._props = {}\n      for (let name in prev) this._props[name] = prev[name]\n      this._props.state = this.state\n    }\n    return this._props\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view's props. Will immediately cause an update to\n  // the DOM.\n  update(props) {\n    if (props.handleDOMEvents != this._props.handleDOMEvents) ensureListeners(this)\n    this._props = props\n    this.updateStateInner(props.state, true)\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view by updating existing props object with the object\n  // given as argument. Equivalent to `view.update(Object.assign({},\n  // view.props, props))`.\n  setProps(props) {\n    let updated = {}\n    for (let name in this._props) updated[name] = this._props[name]\n    updated.state = this.state\n    for (let name in props) updated[name] = props[name]\n    this.update(updated)\n  }\n\n  // :: (EditorState)\n  // Update the editor's `state` prop, without touching any of the\n  // other props.\n  updateState(state) {\n    this.updateStateInner(state, this.state.plugins != state.plugins)\n  }\n\n  updateStateInner(state, reconfigured) {\n    let prev = this.state, redraw = false, updateSel = false\n    // When stored marks are added, stop composition, so that they can\n    // be displayed.\n    if (state.storedMarks && this.composing) {\n      clearComposition(this)\n      updateSel = true\n    }\n    this.state = state\n    if (reconfigured) {\n      let nodeViews = buildNodeViews(this)\n      if (changedNodeViews(nodeViews, this.nodeViews)) {\n        this.nodeViews = nodeViews\n        redraw = true\n      }\n      ensureListeners(this)\n    }\n\n    this.editable = getEditable(this)\n    updateCursorWrapper(this)\n    let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this)\n\n    let scroll = reconfigured ? \"reset\"\n        : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\"\n    let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco)\n    if (updateDoc || !state.selection.eq(prev.selection)) updateSel = true\n    let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this)\n\n    if (updateSel) {\n      this.domObserver.stop()\n      // Work around an issue in Chrome, IE, and Edge where changing\n      // the DOM around an active selection puts it into a broken\n      // state where the thing the user sees differs from the\n      // selection reported by the Selection object (#710, #973,\n      // #1011, #1013, #1035).\n      let forceSelUpdate = updateDoc && (browser.ie || browser.chrome) && !this.composing &&\n          !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection)\n      if (updateDoc) {\n        // If the node that the selection points into is written to,\n        // Chrome sometimes starts misreporting the selection, so this\n        // tracks that and forces a selection reset when our update\n        // did write to the node.\n        let chromeKludge = browser.chrome ? (this.trackWrites = this.root.getSelection().focusNode) : null\n        if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n          this.docView.updateOuterDeco([])\n          this.docView.destroy()\n          this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this)\n        }\n        if (chromeKludge && !this.trackWrites) forceSelUpdate = true\n      }\n      // Work around for an issue where an update arriving right between\n      // a DOM selection change and the \"selectionchange\" event for it\n      // can cause a spurious DOM selection update, disrupting mouse\n      // drag selection.\n      if (forceSelUpdate ||\n          !(this.mouseDown && this.domObserver.currentSelection.eq(this.root.getSelection()) && anchorInRightPlace(this))) {\n        selectionToDOM(this, forceSelUpdate)\n      } else {\n        syncNodeSelection(this, state.selection)\n        this.domObserver.setCurSelection()\n      }\n      this.domObserver.start()\n    }\n\n    this.updatePluginViews(prev)\n\n    if (scroll == \"reset\") {\n      this.dom.scrollTop = 0\n    } else if (scroll == \"to selection\") {\n      let startDOM = this.root.getSelection().focusNode\n      if (this.someProp(\"handleScrollToSelection\", f => f(this)))\n        {} // Handled\n      else if (state.selection instanceof NodeSelection)\n        scrollRectIntoView(this, this.docView.domAfterPos(state.selection.from).getBoundingClientRect(), startDOM)\n      else\n        scrollRectIntoView(this, this.coordsAtPos(state.selection.head, 1), startDOM)\n    } else if (oldScrollPos) {\n      resetScrollPos(oldScrollPos)\n    }\n  }\n\n  destroyPluginViews() {\n    let view\n    while (view = this.pluginViews.pop()) if (view.destroy) view.destroy()\n  }\n\n  updatePluginViews(prevState) {\n    if (!prevState || prevState.plugins != this.state.plugins) {\n      this.destroyPluginViews()\n      for (let i = 0; i < this.state.plugins.length; i++) {\n        let plugin = this.state.plugins[i]\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this))\n      }\n    } else {\n      for (let i = 0; i < this.pluginViews.length; i++) {\n        let pluginView = this.pluginViews[i]\n        if (pluginView.update) pluginView.update(this, prevState)\n      }\n    }\n  }\n\n  // :: (string, ?(prop: *) → *) → *\n  // Goes over the values of a prop, first those provided directly,\n  // then those from plugins (in order), and calls `f` every time a\n  // non-undefined value is found. When `f` returns a truthy value,\n  // that is immediately returned. When `f` isn't provided, it is\n  // treated as the identity function (the prop value is returned\n  // directly).\n  someProp(propName, f) {\n    let prop = this._props && this._props[propName], value\n    if (prop != null && (value = f ? f(prop) : prop)) return value\n    let plugins = this.state.plugins\n    if (plugins) for (let i = 0; i < plugins.length; i++) {\n      let prop = plugins[i].props[propName]\n      if (prop != null && (value = f ? f(prop) : prop)) return value\n    }\n  }\n\n  // :: () → bool\n  // Query whether the view has focus.\n  hasFocus() {\n    return this.root.activeElement == this.dom\n  }\n\n  // :: ()\n  // Focus the editor.\n  focus() {\n    this.domObserver.stop()\n    if (this.editable) focusPreventScroll(this.dom)\n    selectionToDOM(this)\n    this.domObserver.start()\n  }\n\n  // :: union<dom.Document, dom.DocumentFragment>\n  // Get the document root in which the editor exists. This will\n  // usually be the top-level `document`, but might be a [shadow\n  // DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n  // root if the editor is inside one.\n  get root() {\n    let cached = this._root\n    if (cached == null) for (let search = this.dom.parentNode; search; search = search.parentNode) {\n      if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n        if (!search.getSelection) Object.getPrototypeOf(search).getSelection = () => document.getSelection()\n        return this._root = search\n      }\n    }\n    return cached || document\n  }\n\n  // :: ({left: number, top: number}) → ?{pos: number, inside: number}\n  // Given a pair of viewport coordinates, return the document\n  // position that corresponds to them. May return null if the given\n  // coordinates aren't inside of the editor. When an object is\n  // returned, its `pos` property is the position nearest to the\n  // coordinates, and its `inside` property holds the position of the\n  // inner node that the position falls inside of, or -1 if it is at\n  // the top level, not in any node.\n  posAtCoords(coords) {\n    return posAtCoords(this, coords)\n  }\n\n  // :: (number, number) → {left: number, right: number, top: number, bottom: number}\n  // Returns the viewport rectangle at a given document position.\n  // `left` and `right` will be the same number, as this returns a\n  // flat cursor-ish rectangle. If the position is between two things\n  // that aren't directly adjacent, `side` determines which element is\n  // used. When < 0, the element before the position is used,\n  // otherwise the element after.\n  coordsAtPos(pos, side = 1) {\n    return coordsAtPos(this, pos, side)\n  }\n\n  // :: (number, number) → {node: dom.Node, offset: number}\n  // Find the DOM position that corresponds to the given document\n  // position. When `side` is negative, find the position as close as\n  // possible to the content before the position. When positive,\n  // prefer positions close to the content after the position. When\n  // zero, prefer as shallow a position as possible.\n  //\n  // Note that you should **not** mutate the editor's internal DOM,\n  // only inspect it (and even that is usually not necessary).\n  domAtPos(pos, side = 0) {\n    return this.docView.domFromPos(pos, side)\n  }\n\n  // :: (number) → ?dom.Node\n  // Find the DOM node that represents the document node after the\n  // given position. May return `null` when the position doesn't point\n  // in front of a node or if the node is inside an opaque node view.\n  //\n  // This is intended to be able to call things like\n  // `getBoundingClientRect` on that DOM node. Do **not** mutate the\n  // editor DOM directly, or add styling this way, since that will be\n  // immediately overriden by the editor as it redraws the node.\n  nodeDOM(pos) {\n    let desc = this.docView.descAt(pos)\n    return desc ? desc.nodeDOM : null\n  }\n\n  // :: (dom.Node, number, ?number) → number\n  // Find the document position that corresponds to a given DOM\n  // position. (Whenever possible, it is preferable to inspect the\n  // document structure directly, rather than poking around in the\n  // DOM, but sometimes—for example when interpreting an event\n  // target—you don't have a choice.)\n  //\n  // The `bias` parameter can be used to influence which side of a DOM\n  // node to use when the position is inside a leaf node.\n  posAtDOM(node, offset, bias = -1) {\n    let pos = this.docView.posFromDOM(node, offset, bias)\n    if (pos == null) throw new RangeError(\"DOM position not inside the editor\")\n    return pos\n  }\n\n  // :: (union<\"up\", \"down\", \"left\", \"right\", \"forward\", \"backward\">, ?EditorState) → bool\n  // Find out whether the selection is at the end of a textblock when\n  // moving in a given direction. When, for example, given `\"left\"`,\n  // it will return true if moving left from the current cursor\n  // position would leave that position's parent textblock. Will apply\n  // to the view's current state by default, but it is possible to\n  // pass a different state.\n  endOfTextblock(dir, state) {\n    return endOfTextblock(this, state || this.state, dir)\n  }\n\n  // :: ()\n  // Removes the editor from the DOM and destroys all [node\n  // views](#view.NodeView).\n  destroy() {\n    if (!this.docView) return\n    destroyInput(this)\n    this.destroyPluginViews()\n    if (this.mounted) {\n      this.docView.update(this.state.doc, [], viewDecorations(this), this)\n      this.dom.textContent = \"\"\n    } else if (this.dom.parentNode) {\n      this.dom.parentNode.removeChild(this.dom)\n    }\n    this.docView.destroy()\n    this.docView = null\n  }\n\n  // Used for testing.\n  dispatchEvent(event) {\n    return dispatchEvent(this, event)\n  }\n\n  // :: (Transaction)\n  // Dispatch a transaction. Will call\n  // [`dispatchTransaction`](#view.DirectEditorProps.dispatchTransaction)\n  // when given, and otherwise defaults to applying the transaction to\n  // the current state and calling\n  // [`updateState`](#view.EditorView.updateState) with the result.\n  // This method is bound to the view instance, so that it can be\n  // easily passed around.\n  dispatch(tr) {\n    let dispatchTransaction = this._props.dispatchTransaction\n    if (dispatchTransaction) dispatchTransaction.call(this, tr)\n    else this.updateState(this.state.apply(tr))\n  }\n}\n\nfunction computeDocDeco(view) {\n  let attrs = Object.create(null)\n  attrs.class = \"ProseMirror\"\n  attrs.contenteditable = String(view.editable)\n\n  view.someProp(\"attributes\", value => {\n    if (typeof value == \"function\") value = value(view.state)\n    if (value) for (let attr in value) {\n      if (attr == \"class\")\n        attrs.class += \" \" + value[attr]\n      else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n        attrs[attr] = String(value[attr])\n    }\n  })\n\n  return [Decoration.node(0, view.state.doc.content.size, attrs)]\n}\n\nfunction updateCursorWrapper(view) {\n  if (view.markCursor) {\n    let dom = document.createElement(\"img\")\n    dom.setAttribute(\"mark-placeholder\", \"true\")\n    view.cursorWrapper = {dom, deco: Decoration.widget(view.state.selection.head, dom, {raw: true, marks: view.markCursor})}\n  } else {\n    view.cursorWrapper = null\n  }\n}\n\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", value => value(view.state) === false)\n}\n\nfunction selectionContextChanged(sel1, sel2) {\n  let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head))\n  return sel1.$anchor.start(depth) != sel2.$anchor.start(depth)\n}\n\nfunction buildNodeViews(view) {\n  let result = {}\n  view.someProp(\"nodeViews\", obj => {\n    for (let prop in obj) if (!Object.prototype.hasOwnProperty.call(result, prop))\n      result[prop] = obj[prop]\n  })\n  return result\n}\n\nfunction changedNodeViews(a, b) {\n  let nA = 0, nB = 0\n  for (let prop in a) {\n    if (a[prop] != b[prop]) return true\n    nA++\n  }\n  for (let _ in b) nB++\n  return nA != nB\n}\n\n// EditorProps:: interface\n//\n// Props are configuration values that can be passed to an editor view\n// or included in a plugin. This interface lists the supported props.\n//\n// The various event-handling functions may all return `true` to\n// indicate that they handled the given event. The view will then take\n// care to call `preventDefault` on the event, except with\n// `handleDOMEvents`, where the handler itself is responsible for that.\n//\n// How a prop is resolved depends on the prop. Handler functions are\n// called one at a time, starting with the base props and then\n// searching through the plugins (in order of appearance) until one of\n// them returns true. For some props, the first plugin that yields a\n// value gets precedence.\n//\n//   handleDOMEvents:: ?Object<(view: EditorView, event: dom.Event) → bool>\n//   Can be an object mapping DOM event type names to functions that\n//   handle them. Such functions will be called before any handling\n//   ProseMirror does of events fired on the editable DOM element.\n//   Contrary to the other event handling props, when returning true\n//   from such a function, you are responsible for calling\n//   `preventDefault` yourself (or not, if you want to allow the\n//   default behavior).\n//\n//   handleKeyDown:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Called when the editor receives a `keydown` event.\n//\n//   handleKeyPress:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Handler for `keypress` events.\n//\n//   handleTextInput:: ?(view: EditorView, from: number, to: number, text: string) → bool\n//   Whenever the user directly input text, this handler is called\n//   before the input is applied. If it returns `true`, the default\n//   behavior of actually inserting the text is suppressed.\n//\n//   handleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a click, from the inside out. The\n//   `direct` flag will be true for the inner node.\n//\n//   handleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is clicked, after `handleClickOn` handlers\n//   have been called.\n//\n//   handleDoubleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a double click.\n//\n//   handleDoubleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is double-clicked, after `handleDoubleClickOn`.\n//\n//   handleTripleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a triple click.\n//\n//   handleTripleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is triple-clicked, after `handleTripleClickOn`.\n//\n//   handlePaste:: ?(view: EditorView, event: dom.ClipboardEvent, slice: Slice) → bool\n//   Can be used to override the behavior of pasting. `slice` is the\n//   pasted content parsed by the editor, but you can directly access\n//   the event to get at the raw content.\n//\n//   handleDrop:: ?(view: EditorView, event: dom.Event, slice: Slice, moved: bool) → bool\n//   Called when something is dropped on the editor. `moved` will be\n//   true if this drop moves from the current selection (which should\n//   thus be deleted).\n//\n//   handleScrollToSelection:: ?(view: EditorView) → bool\n//   Called when the view, after updating its state, tries to scroll\n//   the selection into view. A handler function may return false to\n//   indicate that it did not handle the scrolling and further\n//   handlers or the default behavior should be tried.\n//\n//   createSelectionBetween:: ?(view: EditorView, anchor: ResolvedPos, head: ResolvedPos) → ?Selection\n//   Can be used to override the way a selection is created when\n//   reading a DOM selection between the given anchor and head.\n//\n//   domParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading editor changes\n//   from the DOM. Defaults to calling\n//   [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) on the\n//   editor's schema.\n//\n//   transformPastedHTML:: ?(html: string) → string\n//   Can be used to transform pasted HTML text, _before_ it is parsed,\n//   for example to clean it up.\n//\n//   clipboardParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading content from\n//   the clipboard. When not given, the value of the\n//   [`domParser`](#view.EditorProps.domParser) prop is used.\n//\n//   transformPastedText:: ?(text: string, plain: bool) → string\n//   Transform pasted plain text. The `plain` flag will be true when\n//   the text is pasted as plain text.\n//\n//   clipboardTextParser:: ?(text: string, $context: ResolvedPos, plain: bool) → Slice\n//   A function to parse text from the clipboard into a document\n//   slice. Called after\n//   [`transformPastedText`](#view.EditorProps.transformPastedText).\n//   The default behavior is to split the text into lines, wrap them\n//   in `<p>` tags, and call\n//   [`clipboardParser`](#view.EditorProps.clipboardParser) on it.\n//   The `plain` flag will be true when the text is pasted as plain text.\n//\n//   transformPasted:: ?(Slice) → Slice\n//   Can be used to transform pasted content before it is applied to\n//   the document.\n//\n//   nodeViews:: ?Object<(node: Node, view: EditorView, getPos: () → number, decorations: [Decoration], innerDecorations: DecorationSource) → NodeView>\n//   Allows you to pass custom rendering and behavior logic for nodes\n//   and marks. Should map node and mark names to constructor\n//   functions that produce a [`NodeView`](#view.NodeView) object\n//   implementing the node's display behavior. For nodes, the third\n//   argument `getPos` is a function that can be called to get the\n//   node's current position, which can be useful when creating\n//   transactions to update it. For marks, the third argument is a\n//   boolean that indicates whether the mark's content is inline.\n//\n//   `decorations` is an array of node or inline decorations that are\n//   active around the node. They are automatically drawn in the\n//   normal way, and you will usually just want to ignore this, but\n//   they can also be used as a way to provide context information to\n//   the node view without adding it to the document itself.\n//\n//   `innerDecorations` holds the decorations for the node's content.\n//   You can safely ignore this if your view has no content or a\n//   `contentDOM` property, since the editor will draw the decorations\n//   on the content. But if you, for example, want to create a nested\n//   editor with the content, it may make sense to provide it with the\n//   inner decorations.\n//\n//   clipboardSerializer:: ?DOMSerializer\n//   The DOM serializer to use when putting content onto the\n//   clipboard. If not given, the result of\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)\n//   will be used.\n//\n//   clipboardTextSerializer:: ?(Slice) → string\n//   A function that will be called to get the text for the current\n//   selection when copying text to the clipboard. By default, the\n//   editor will use [`textBetween`](#model.Node.textBetween) on the\n//   selected range.\n//\n//   decorations:: ?(state: EditorState) → ?DecorationSource\n//   A set of [document decorations](#view.Decoration) to show in the\n//   view.\n//\n//   editable:: ?(state: EditorState) → bool\n//   When this returns false, the content of the view is not directly\n//   editable.\n//\n//   attributes:: ?union<Object<string>, (EditorState) → ?Object<string>>\n//   Control the DOM attributes of the editable element. May be either\n//   an object or a function going from an editor state to an object.\n//   By default, the element will get a class `\"ProseMirror\"`, and\n//   will have its `contentEditable` attribute determined by the\n//   [`editable` prop](#view.EditorProps.editable). Additional classes\n//   provided here will be added to the class. For other attributes,\n//   the value provided first (as in\n//   [`someProp`](#view.EditorView.someProp)) will be used.\n//\n//   scrollThreshold:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the distance (in pixels) between the cursor and the\n//   end of the visible viewport at which point, when scrolling the\n//   cursor into view, scrolling takes place. Defaults to 0.\n//\n//   scrollMargin:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the extra space (in pixels) that is left above or\n//   below the cursor when it is scrolled into view. Defaults to 5.\n\n// DirectEditorProps:: interface extends EditorProps\n//\n// The props object given directly to the editor view supports two\n// fields that can't be used in plugins:\n//\n//   state:: EditorState\n//   The current state of the editor.\n//\n//   dispatchTransaction:: ?(tr: Transaction)\n//   The callback over which to send transactions (state updates)\n//   produced by the view. If you specify this, you probably want to\n//   make sure this ends up calling the view's\n//   [`updateState`](#view.EditorView.updateState) method with a new\n//   state that has the transaction\n//   [applied](#state.EditorState.apply). The callback will be bound to have\n//   the view instance as its `this` binding.\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nvar ropeSequence = RopeSequence;\n\nexport default ropeSequence;\n","import RopeSequence from \"rope-sequence\"\nimport {Mapping} from \"prosemirror-transform\"\nimport {Plugin, PluginKey} from \"prosemirror-state\"\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n\n// Used to schedule history compression\nconst max_empty_items = 500\n\nclass Branch {\n  constructor(items, eventCount) {\n    this.items = items\n    this.eventCount = eventCount\n  }\n\n  // : (EditorState, bool) → ?{transform: Transform, selection: ?SelectionBookmark, remaining: Branch}\n  // Pop the latest event off the branch's history and apply it\n  // to a document transform.\n  popEvent(state, preserveItems) {\n    if (this.eventCount == 0) return null\n\n    let end = this.items.length\n    for (;; end--) {\n      let next = this.items.get(end - 1)\n      if (next.selection) { --end; break }\n    }\n\n    let remap, mapFrom\n    if (preserveItems) {\n      remap = this.remapping(end, this.items.length)\n      mapFrom = remap.maps.length\n    }\n    let transform = state.tr\n    let selection, remaining\n    let addAfter = [], addBefore = []\n\n    this.items.forEach((item, i) => {\n      if (!item.step) {\n        if (!remap) {\n          remap = this.remapping(end, i + 1)\n          mapFrom = remap.maps.length\n        }\n        mapFrom--\n        addBefore.push(item)\n        return\n      }\n\n      if (remap) {\n        addBefore.push(new Item(item.map))\n        let step = item.step.map(remap.slice(mapFrom)), map\n\n        if (step && transform.maybeStep(step).doc) {\n          map = transform.mapping.maps[transform.mapping.maps.length - 1]\n          addAfter.push(new Item(map, null, null, addAfter.length + addBefore.length))\n        }\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n      } else {\n        transform.maybeStep(item.step)\n      }\n\n      if (item.selection) {\n        selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection\n        remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1)\n        return false\n      }\n    }, this.items.length, 0)\n\n    return {remaining, transform, selection}\n  }\n\n  // : (Transform, ?SelectionBookmark, Object) → Branch\n  // Create a new branch with the given transform added.\n  addTransform(transform, selection, histOptions, preserveItems) {\n    let newItems = [], eventCount = this.eventCount\n    let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null\n\n    for (let i = 0; i < transform.steps.length; i++) {\n      let step = transform.steps[i].invert(transform.docs[i])\n      let item = new Item(transform.mapping.maps[i], step, selection), merged\n      if (merged = lastItem && lastItem.merge(item)) {\n        item = merged\n        if (i) newItems.pop()\n        else oldItems = oldItems.slice(0, oldItems.length - 1)\n      }\n      newItems.push(item)\n      if (selection) {\n        eventCount++\n        selection = null\n      }\n      if (!preserveItems) lastItem = item\n    }\n    let overflow = eventCount - histOptions.depth\n    if (overflow > DEPTH_OVERFLOW) {\n      oldItems = cutOffEvents(oldItems, overflow)\n      eventCount -= overflow\n    }\n    return new Branch(oldItems.append(newItems), eventCount)\n  }\n\n  remapping(from, to) {\n    let maps = new Mapping\n    this.items.forEach((item, i) => {\n      let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n          ? maps.maps.length - item.mirrorOffset : null\n      maps.appendMap(item.map, mirrorPos)\n    }, from, to)\n    return maps\n  }\n\n  addMaps(array) {\n    if (this.eventCount == 0) return this\n    return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount)\n  }\n\n  // : (Transform, number)\n  // When the collab module receives remote changes, the history has\n  // to know about those, so that it can adjust the steps that were\n  // rebased on top of the remote changes, and include the position\n  // maps for the remote changes in its array of items.\n  rebased(rebasedTransform, rebasedCount) {\n    if (!this.eventCount) return this\n\n    let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount)\n\n    let mapping = rebasedTransform.mapping\n    let newUntil = rebasedTransform.steps.length\n    let eventCount = this.eventCount\n    this.items.forEach(item => { if (item.selection) eventCount-- }, start)\n\n    let iRebased = rebasedCount\n    this.items.forEach(item => {\n      let pos = mapping.getMirror(--iRebased)\n      if (pos == null) return\n      newUntil = Math.min(newUntil, pos)\n      let map = mapping.maps[pos]\n      if (item.step) {\n        let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos])\n        let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos))\n        if (selection) eventCount++\n        rebasedItems.push(new Item(map, step, selection))\n      } else {\n        rebasedItems.push(new Item(map))\n      }\n    }, start)\n\n    let newMaps = []\n    for (let i = rebasedCount; i < newUntil; i++)\n      newMaps.push(new Item(mapping.maps[i]))\n    let items = this.items.slice(0, start).append(newMaps).append(rebasedItems)\n    let branch = new Branch(items, eventCount)\n\n    if (branch.emptyItemCount() > max_empty_items)\n      branch = branch.compress(this.items.length - rebasedItems.length)\n    return branch\n  }\n\n  emptyItemCount() {\n    let count = 0\n    this.items.forEach(item => { if (!item.step) count++ })\n    return count\n  }\n\n  // Compressing a branch means rewriting it to push the air (map-only\n  // items) out. During collaboration, these naturally accumulate\n  // because each remote change adds one. The `upto` argument is used\n  // to ensure that only the items below a given level are compressed,\n  // because `rebased` relies on a clean, untouched set of items in\n  // order to associate old items with rebased steps.\n  compress(upto = this.items.length) {\n    let remap = this.remapping(0, upto), mapFrom = remap.maps.length\n    let items = [], events = 0\n    this.items.forEach((item, i) => {\n      if (i >= upto) {\n        items.push(item)\n        if (item.selection) events++\n      } else if (item.step) {\n        let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap()\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n        if (step) {\n          let selection = item.selection && item.selection.map(remap.slice(mapFrom))\n          if (selection) events++\n          let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1\n          if (merged = items.length && items[last].merge(newItem))\n            items[last] = merged\n          else\n            items.push(newItem)\n        }\n      } else if (item.map) {\n        mapFrom--\n      }\n    }, this.items.length, 0)\n    return new Branch(RopeSequence.from(items.reverse()), events)\n  }\n}\n\nBranch.empty = new Branch(RopeSequence.empty, 0)\n\nfunction cutOffEvents(items, n) {\n  let cutPoint\n  items.forEach((item, i) => {\n    if (item.selection && (n-- == 0)) {\n      cutPoint = i\n      return false\n    }\n  })\n  return items.slice(cutPoint)\n}\n\nclass Item {\n  constructor(map, step, selection, mirrorOffset) {\n    // The (forward) step map for this item.\n    this.map = map\n    // The inverted step\n    this.step = step\n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    this.selection = selection\n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    this.mirrorOffset = mirrorOffset\n  }\n\n  merge(other) {\n    if (this.step && other.step && !other.selection) {\n      let step = other.step.merge(this.step)\n      if (step) return new Item(step.getMap().invert(), step, this.selection)\n    }\n  }\n}\n\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nexport class HistoryState {\n  constructor(done, undone, prevRanges, prevTime) {\n    this.done = done\n    this.undone = undone\n    this.prevRanges = prevRanges\n    this.prevTime = prevTime\n  }\n}\n\nconst DEPTH_OVERFLOW = 20\n\n// : (HistoryState, EditorState, Transaction, Object)\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n  let historyTr = tr.getMeta(historyKey), rebased\n  if (historyTr) return historyTr.historyState\n\n  if (tr.getMeta(closeHistoryKey)) history = new HistoryState(history.done, history.undone, null, 0)\n\n  let appended = tr.getMeta(\"appendedTransaction\")\n\n  if (tr.steps.length == 0) {\n    return history\n  } else if (appended && appended.getMeta(historyKey)) {\n    if (appended.getMeta(historyKey).redo)\n      return new HistoryState(history.done.addTransform(tr, null, options, mustPreserveItems(state)),\n                              history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime)\n    else\n      return new HistoryState(history.done, history.undone.addTransform(tr, null, options, mustPreserveItems(state)),\n                              null, history.prevTime)\n  } else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n    // Group transforms that occur in quick succession into one event.\n    let newGroup = history.prevTime == 0 || !appended && (history.prevTime < (tr.time || 0) - options.newGroupDelay ||\n                                                          !isAdjacentTo(tr, history.prevRanges))\n    let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1])\n    return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : null,\n                                                      options, mustPreserveItems(state)),\n                            Branch.empty, prevRanges, tr.time)\n  } else if (rebased = tr.getMeta(\"rebased\")) {\n    // Used by the collab module to tell the history that some of its\n    // content has been rebased.\n    return new HistoryState(history.done.rebased(tr, rebased),\n                            history.undone.rebased(tr, rebased),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  } else {\n    return new HistoryState(history.done.addMaps(tr.mapping.maps),\n                            history.undone.addMaps(tr.mapping.maps),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  }\n}\n\nfunction isAdjacentTo(transform, prevRanges) {\n  if (!prevRanges) return false\n  if (!transform.docChanged) return true\n  let adjacent = false\n  transform.mapping.maps[0].forEach((start, end) => {\n    for (let i = 0; i < prevRanges.length; i += 2)\n      if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n        adjacent = true\n  })\n  return adjacent\n}\n\nfunction rangesFor(map) {\n  let result = []\n  map.forEach((_from, _to, from, to) => result.push(from, to))\n  return result\n}\n\nfunction mapRanges(ranges, mapping) {\n  if (!ranges) return null\n  let result = []\n  for (let i = 0; i < ranges.length; i += 2) {\n    let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1)\n    if (from <= to) result.push(from, to)\n  }\n  return result\n}\n\n// : (HistoryState, EditorState, (tr: Transaction), bool)\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n  let preserveItems = mustPreserveItems(state), histOptions = historyKey.get(state).spec.config\n  let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems)\n  if (!pop) return\n\n  let selection = pop.selection.resolve(pop.transform.doc)\n  let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(),\n                                                                  histOptions, preserveItems)\n\n  let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0)\n  dispatch(pop.transform.setSelection(selection).setMeta(historyKey, {redo, historyState: newHist}).scrollIntoView())\n}\n\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n  let plugins = state.plugins\n  if (cachedPreserveItemsPlugins != plugins) {\n    cachedPreserveItems = false\n    cachedPreserveItemsPlugins = plugins\n    for (let i = 0; i < plugins.length; i++) if (plugins[i].spec.historyPreserveItems) {\n      cachedPreserveItems = true\n      break\n    }\n  }\n  return cachedPreserveItems\n}\n\n// :: (Transaction) → Transaction\n// Set a flag on the given transaction that will prevent further steps\n// from being appended to an existing history event (so that they\n// require a separate undo command to undo).\nexport function closeHistory(tr) {\n  return tr.setMeta(closeHistoryKey, true)\n}\n\nconst historyKey = new PluginKey(\"history\")\nconst closeHistoryKey = new PluginKey(\"closeHistory\")\n\n// :: (?Object) → Plugin\n// Returns a plugin that enables the undo history for an editor. The\n// plugin will track undo and redo stacks, which can be used with the\n// [`undo`](#history.undo) and [`redo`](#history.redo) commands.\n//\n// You can set an `\"addToHistory\"` [metadata\n// property](#state.Transaction.setMeta) of `false` on a transaction\n// to prevent it from being rolled back by undo.\n//\n//   config::-\n//   Supports the following configuration options:\n//\n//     depth:: ?number\n//     The amount of history events that are collected before the\n//     oldest events are discarded. Defaults to 100.\n//\n//     newGroupDelay:: ?number\n//     The delay between changes after which a new group should be\n//     started. Defaults to 500 (milliseconds). Note that when changes\n//     aren't adjacent, a new group is always started.\nexport function history(config) {\n  config = {depth: config && config.depth || 100,\n            newGroupDelay: config && config.newGroupDelay || 500}\n  return new Plugin({\n    key: historyKey,\n\n    state: {\n      init() {\n        return new HistoryState(Branch.empty, Branch.empty, null, 0)\n      },\n      apply(tr, hist, state) {\n        return applyTransaction(hist, state, tr, config)\n      }\n    },\n\n    config\n  })\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that undoes the last change, if any.\nexport function undo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.done.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, false)\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that redoes the last undone change, if any.\nexport function redo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.undone.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, true)\n  return true\n}\n\n// :: (EditorState) → number\n// The amount of undoable events available in a given state.\nexport function undoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.done.eventCount : 0\n}\n\n// :: (EditorState) → number\n// The amount of redoable events available in a given editor state.\nexport function redoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.undone.eventCount : 0\n}\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import {base, keyName} from \"w3c-keyname\"\nimport {Plugin} from \"prosemirror-state\"\n\n// declare global: navigator\n\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false\n\nfunction normalizeKeyName(name) {\n  let parts = name.split(/-(?!$)/), result = parts[parts.length - 1]\n  if (result == \"Space\") result = \" \"\n  let alt, ctrl, shift, meta\n  for (let i = 0; i < parts.length - 1; i++) {\n    let mod = parts[i]\n    if (/^(cmd|meta|m)$/i.test(mod)) meta = true\n    else if (/^a(lt)?$/i.test(mod)) alt = true\n    else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true\n    else if (/^s(hift)?$/i.test(mod)) shift = true\n    else if (/^mod$/i.test(mod)) { if (mac) meta = true; else ctrl = true }\n    else throw new Error(\"Unrecognized modifier name: \" + mod)\n  }\n  if (alt) result = \"Alt-\" + result\n  if (ctrl) result = \"Ctrl-\" + result\n  if (meta) result = \"Meta-\" + result\n  if (shift) result = \"Shift-\" + result\n  return result\n}\n\nfunction normalize(map) {\n  let copy = Object.create(null)\n  for (let prop in map) copy[normalizeKeyName(prop)] = map[prop]\n  return copy\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) name = \"Alt-\" + name\n  if (event.ctrlKey) name = \"Ctrl-\" + name\n  if (event.metaKey) name = \"Meta-\" + name\n  if (shift !== false && event.shiftKey) name = \"Shift-\" + name\n  return name\n}\n\n// :: (Object) → Plugin\n// Create a keymap plugin for the given set of bindings.\n//\n// Bindings should map key names to [command](#commands)-style\n// functions, which will be called with `(EditorState, dispatch,\n// EditorView)` arguments, and should return true when they've handled\n// the key. Note that the view argument isn't part of the command\n// protocol, but can be used as an escape hatch if a binding needs to\n// directly interact with the UI.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`—a key\n// identifier prefixed with zero or more modifiers. Key identifiers\n// are based on the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized. For characters that are created by holding\n// shift, the `Shift-` prefix is implied, and should not be added\n// explicitly.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap plugins to an editor. The order in\n// which they appear determines their precedence (the ones early in\n// the array get to dispatch first).\nexport function keymap(bindings) {\n  return new Plugin({props: {handleKeyDown: keydownHandler(bindings)}})\n}\n\n// :: (Object) → (view: EditorView, event: dom.Event) → bool\n// Given a set of bindings (using the same format as\n// [`keymap`](#keymap.keymap), return a [keydown\n// handler](#view.EditorProps.handleKeyDown) that handles them.\nexport function keydownHandler(bindings) {\n  let map = normalize(bindings)\n  return function(view, event) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \", baseName\n    let direct = map[modifiers(name, event, !isChar)]\n    if (direct && direct(view.state, view.dispatch, view)) return true\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n        (baseName = base[event.keyCode]) && baseName != name) {\n      // Try falling back to the keyCode when there's a modifier\n      // active or the character produced isn't ASCII, and our table\n      // produces a different name from the the keyCode. See #668,\n      // #1060\n      let fromCode = map[modifiers(baseName, event, true)]\n      if (fromCode && fromCode(view.state, view.dispatch, view)) return true\n    } else if (isChar && event.shiftKey) {\n      // Otherwise, if shift is active, also try the binding with the\n      // Shift- prefix enabled. See #997\n      let withShift = map[modifiers(name, event, true)]\n      if (withShift && withShift(view.state, view.dispatch, view)) return true\n    }\n    return false\n  }\n}\n","import {joinPoint, canJoin, findWrapping, liftTarget, canSplit, ReplaceAroundStep} from \"prosemirror-transform\"\nimport {Slice, Fragment} from \"prosemirror-model\"\nimport {Selection, TextSelection, NodeSelection, AllSelection} from \"prosemirror-state\"\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Delete the selection, if there is one.\nexport function deleteSelection(state, dispatch) {\n  if (state.selection.empty) return false\n  if (dispatch) dispatch(state.tr.deleteSelection().scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and at the start of a textblock, try to\n// reduce the distance between that block and the one before it—if\n// there's a block directly before it that can be joined, join them.\n// If not, try to move the selected block closer to the next one in\n// the document structure by lifting it out of its parent or moving it\n// into a parent of the previous block. Will use the view for accurate\n// (bidi-aware) start-of-textblock detection if given.\nexport function joinBackward(state, dispatch, view) {\n  let {$cursor} = state.selection\n  if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n                        : $cursor.parentOffset > 0))\n    return false\n\n  let $cut = findCutBefore($cursor)\n\n  // If there is no node before this, try to lift\n  if (!$cut) {\n    let range = $cursor.blockRange(), target = range && liftTarget(range)\n    if (target == null) return false\n    if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n    return true\n  }\n\n  let before = $cut.nodeBefore\n  // Apply the joining algorithm\n  if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n    return true\n\n  // If the node below has no content and the node above is\n  // selectable, delete the node below and select the one above.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n    if (dispatch) {\n      let tr = state.tr.deleteRange($cursor.before(), $cursor.after())\n      tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                      : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize))\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n\n  // If the node before is an atom, delete it\n  if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView())\n    return true\n  }\n\n  return false\n}\n\nfunction textblockAt(node, side) {\n  for (; node; node = (side == \"start\" ? node.firstChild : node.lastChild))\n    if (node.isTextblock) return true\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the start of a textblock, select\n// the node before that textblock, if possible. This is intended to be\n// bound to keys like backspace, after\n// [`joinBackward`](#commands.joinBackward) or other deleting\n// commands, as a fall-back behavior when the schema doesn't allow\n// deletion at the selected point.\nexport function selectNodeBackward(state, dispatch, view) {\n  let {$head, empty} = state.selection, $cut = $head\n  if (!empty) return false\n\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0) return false\n    $cut = findCutBefore($head)\n  }\n  let node = $cut && $cut.nodeBefore\n  if (!node || !NodeSelection.isSelectable(node)) return false\n  if (dispatch)\n    dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView())\n  return true\n}\n\nfunction findCutBefore($pos) {\n  if (!$pos.parent.type.spec.isolating) for (let i = $pos.depth - 1; i >= 0; i--) {\n    if ($pos.index(i) > 0) return $pos.doc.resolve($pos.before(i + 1))\n    if ($pos.node(i).type.spec.isolating) break\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and the cursor is at the end of a\n// textblock, try to reduce or remove the boundary between that block\n// and the one after it, either by joining them or by moving the other\n// block closer to this one in the tree structure. Will use the view\n// for accurate start-of-textblock detection if given.\nexport function joinForward(state, dispatch, view) {\n  let {$cursor} = state.selection\n  if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n                        : $cursor.parentOffset < $cursor.parent.content.size))\n    return false\n\n  let $cut = findCutAfter($cursor)\n\n  // If there is no node after this, there's nothing to do\n  if (!$cut) return false\n\n  let after = $cut.nodeAfter\n  // Try the joining algorithm\n  if (deleteBarrier(state, $cut, dispatch)) return true\n\n  // If the node above has no content and the node below is\n  // selectable, delete the node above and select the one below.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n    if (dispatch) {\n      let tr = state.tr.deleteRange($cursor.before(), $cursor.after())\n      tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                      : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)))\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n\n  // If the next node is an atom, delete it\n  if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView())\n    return true\n  }\n\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the end of a textblock, select\n// the node coming after that textblock, if possible. This is intended\n// to be bound to keys like delete, after\n// [`joinForward`](#commands.joinForward) and similar deleting\n// commands, to provide a fall-back behavior when the schema doesn't\n// allow deletion at the selected point.\nexport function selectNodeForward(state, dispatch, view) {\n  let {$head, empty} = state.selection, $cut = $head\n  if (!empty) return false\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n      return false\n    $cut = findCutAfter($head)\n  }\n  let node = $cut && $cut.nodeAfter\n  if (!node || !NodeSelection.isSelectable(node)) return false\n  if (dispatch)\n    dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView())\n  return true\n}\n\nfunction findCutAfter($pos) {\n  if (!$pos.parent.type.spec.isolating) for (let i = $pos.depth - 1; i >= 0; i--) {\n    let parent = $pos.node(i)\n    if ($pos.index(i) + 1 < parent.childCount) return $pos.doc.resolve($pos.after(i + 1))\n    if (parent.type.spec.isolating) break\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block or, if there is a text selection, the\n// closest ancestor block of the selection that can be joined, with\n// the sibling above it.\nexport function joinUp(state, dispatch) {\n  let sel = state.selection, nodeSel = sel instanceof NodeSelection, point\n  if (nodeSel) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.from)) return false\n    point = sel.from\n  } else {\n    point = joinPoint(state.doc, sel.from, -1)\n    if (point == null) return false\n  }\n  if (dispatch) {\n    let tr = state.tr.join(point)\n    if (nodeSel) tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block, or the closest ancestor of the selection\n// that can be joined, with the sibling after it.\nexport function joinDown(state, dispatch) {\n  let sel = state.selection, point\n  if (sel instanceof NodeSelection) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.to)) return false\n    point = sel.to\n  } else {\n    point = joinPoint(state.doc, sel.to, 1)\n    if (point == null) return false\n  }\n  if (dispatch)\n    dispatch(state.tr.join(point).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Lift the selected block, or the closest ancestor block of the\n// selection that can be lifted, out of its parent node.\nexport function lift(state, dispatch) {\n  let {$from, $to} = state.selection\n  let range = $from.blockRange($to), target = range && liftTarget(range)\n  if (target == null) return false\n  if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the selection is in a node whose type has a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, replace the\n// selection with a newline character.\nexport function newlineInCode(state, dispatch) {\n  let {$head, $anchor} = state.selection\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) return false\n  if (dispatch) dispatch(state.tr.insertText(\"\\n\").scrollIntoView())\n  return true\n}\n\nfunction defaultBlockAt(match) {\n  for (let i = 0; i < match.edgeCount; i++) {\n    let {type} = match.edge(i)\n    if (type.isTextblock && !type.hasRequiredAttrs()) return type\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// When the selection is in a node with a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, create a\n// default block after the code block, and move the cursor there.\nexport function exitCode(state, dispatch) {\n  let {$head, $anchor} = state.selection\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) return false\n  let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after))\n  if (!above.canReplaceWith(after, after, type)) return false\n  if (dispatch) {\n    let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill())\n    tr.setSelection(Selection.near(tr.doc.resolve(pos), 1))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If a block node is selected, create an empty paragraph before (if\n// it is its parent's first child) or after it.\nexport function createParagraphNear(state, dispatch) {\n  let sel = state.selection, {$from, $to} = sel\n  if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent) return false\n  let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()))\n  if (!type || !type.isTextblock) return false\n  if (dispatch) {\n    let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos\n    let tr = state.tr.insert(side, type.createAndFill())\n    tr.setSelection(TextSelection.create(tr.doc, side + 1))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the cursor is in an empty textblock that can be lifted, lift the\n// block.\nexport function liftEmptyBlock(state, dispatch) {\n  let {$cursor} = state.selection\n  if (!$cursor || $cursor.parent.content.size) return false\n  if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n    let before = $cursor.before()\n    if (canSplit(state.doc, before)) {\n      if (dispatch) dispatch(state.tr.split(before).scrollIntoView())\n      return true\n    }\n  }\n  let range = $cursor.blockRange(), target = range && liftTarget(range)\n  if (target == null) return false\n  if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Split the parent block of the selection. If the selection is a text\n// selection, also delete its content.\nexport function splitBlock(state, dispatch) {\n  let {$from, $to} = state.selection\n  if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n    if (!$from.parentOffset || !canSplit(state.doc, $from.pos)) return false\n    if (dispatch) dispatch(state.tr.split($from.pos).scrollIntoView())\n    return true\n  }\n\n  if (!$from.parent.isBlock) return false\n\n  if (dispatch) {\n    let atEnd = $to.parentOffset == $to.parent.content.size\n    let tr = state.tr\n    if (state.selection instanceof TextSelection || state.selection instanceof AllSelection) tr.deleteSelection()\n    let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)))\n    let types = atEnd && deflt ? [{type: deflt}] : null\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types)\n    if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt && [{type: deflt}])) {\n      types = [{type: deflt}]\n      can = true\n    }\n    if (can) {\n      tr.split(tr.mapping.map($from.pos), 1, types)\n      if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n        let first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first)\n        if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n          tr.setNodeMarkup(tr.mapping.map($from.before()), deflt)\n      }\n    }\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Acts like [`splitBlock`](#commands.splitBlock), but without\n// resetting the set of active marks at the cursor.\nexport function splitBlockKeepMarks(state, dispatch) {\n  return splitBlock(state, dispatch && (tr => {\n    let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks())\n    if (marks) tr.ensureMarks(marks)\n    dispatch(tr)\n  }))\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Move the selection to the node wrapping the current selection, if\n// any. (Will not select the document node.)\nexport function selectParentNode(state, dispatch) {\n  let {$from, to} = state.selection, pos\n  let same = $from.sharedDepth(to)\n  if (same == 0) return false\n  pos = $from.before(same)\n  if (dispatch) dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)))\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Select the whole document.\nexport function selectAll(state, dispatch) {\n  if (dispatch) dispatch(state.tr.setSelection(new AllSelection(state.doc)))\n  return true\n}\n\nfunction joinMaybeClear(state, $pos, dispatch) {\n  let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index()\n  if (!before || !after || !before.type.compatibleContent(after.type)) return false\n  if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n    if (dispatch) dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView())\n    return true\n  }\n  if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n    return false\n  if (dispatch)\n    dispatch(state.tr\n             .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n             .join($pos.pos)\n             .scrollIntoView())\n  return true\n}\n\nfunction deleteBarrier(state, $cut, dispatch) {\n  let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match\n  if (before.type.spec.isolating || after.type.spec.isolating) return false\n  if (joinMaybeClear(state, $cut, dispatch)) return true\n\n  let canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1)\n  if (canDelAfter &&\n      (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n      match.matchType(conn[0] || after.type).validEnd) {\n    if (dispatch) {\n      let end = $cut.pos + after.nodeSize, wrap = Fragment.empty\n      for (let i = conn.length - 1; i >= 0; i--)\n        wrap = Fragment.from(conn[i].create(null, wrap))\n      wrap = Fragment.from(before.copy(wrap))\n      let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true))\n      let joinAt = end + 2 * conn.length\n      if (canJoin(tr.doc, joinAt)) tr.join(joinAt)\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n\n  let selAfter = Selection.findFrom($cut, 1)\n  let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range)\n  if (target != null && target >= $cut.depth) {\n    if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n    return true\n  }\n\n  if (canDelAfter && after.isTextblock && textblockAt(before, \"end\")) {\n    let at = before, wrap = []\n    for (;;) {\n      wrap.push(at)\n      if (at.isTextblock) break\n      at = at.lastChild\n    }\n    if (at.canReplace(at.childCount, at.childCount, after.content)) {\n      if (dispatch) {\n        let end = Fragment.empty\n        for (let i = wrap.length - 1; i >= 0; i--) end = Fragment.from(wrap[i].copy(end))\n        let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize,\n                                                     $cut.pos + 1, $cut.pos + after.nodeSize - 1,\n                                                     new Slice(end, wrap.length, 0), 0, true))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n  }\n\n  return false\n}\n\n// Parameterized commands\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Wrap the selection in a node of the given type with the given\n// attributes.\nexport function wrapIn(nodeType, attrs) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs)\n    if (!wrapping) return false\n    if (dispatch) dispatch(state.tr.wrap(range, wrapping).scrollIntoView())\n    return true\n  }\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command that tries to set the selected textblocks to the\n// given node type with the given attributes.\nexport function setBlockType(nodeType, attrs) {\n  return function(state, dispatch) {\n    let {from, to} = state.selection\n    let applicable = false\n    state.doc.nodesBetween(from, to, (node, pos) => {\n      if (applicable) return false\n      if (!node.isTextblock || node.hasMarkup(nodeType, attrs)) return\n      if (node.type == nodeType) {\n        applicable = true\n      } else {\n        let $pos = state.doc.resolve(pos), index = $pos.index()\n        applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType)\n      }\n    })\n    if (!applicable) return false\n    if (dispatch) dispatch(state.tr.setBlockType(from, to, nodeType, attrs).scrollIntoView())\n    return true\n  }\n}\n\nfunction markApplies(doc, ranges, type) {\n  for (let i = 0; i < ranges.length; i++) {\n    let {$from, $to} = ranges[i]\n    let can = $from.depth == 0 ? doc.type.allowsMarkType(type) : false\n    doc.nodesBetween($from.pos, $to.pos, node => {\n      if (can) return false\n      can = node.inlineContent && node.type.allowsMarkType(type)\n    })\n    if (can) return true\n  }\n  return false\n}\n\n// :: (MarkType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command function that toggles the given mark with the\n// given attributes. Will return `false` when the current selection\n// doesn't support that mark. This will remove the mark if any marks\n// of that type exist in the selection, or add it otherwise. If the\n// selection is empty, this applies to the [stored\n// marks](#state.EditorState.storedMarks) instead of a range of the\n// document.\nexport function toggleMark(markType, attrs) {\n  return function(state, dispatch) {\n    let {empty, $cursor, ranges} = state.selection\n    if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType)) return false\n    if (dispatch) {\n      if ($cursor) {\n        if (markType.isInSet(state.storedMarks || $cursor.marks()))\n          dispatch(state.tr.removeStoredMark(markType))\n        else\n          dispatch(state.tr.addStoredMark(markType.create(attrs)))\n      } else {\n        let has = false, tr = state.tr\n        for (let i = 0; !has && i < ranges.length; i++) {\n          let {$from, $to} = ranges[i]\n          has = state.doc.rangeHasMark($from.pos, $to.pos, markType)\n        }\n        for (let i = 0; i < ranges.length; i++) {\n          let {$from, $to} = ranges[i]\n          if (has) {\n            tr.removeMark($from.pos, $to.pos, markType)\n          } else {\n            let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore\n            let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0\n            let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0\n            if (from + spaceStart < to) { from += spaceStart; to -= spaceEnd }\n            tr.addMark(from, to, markType.create(attrs))\n          }\n        }\n        dispatch(tr.scrollIntoView())\n      }\n    }\n    return true\n  }\n}\n\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n  return tr => {\n    if (!tr.isGeneric) return dispatch(tr)\n\n    let ranges = []\n    for (let i = 0; i < tr.mapping.maps.length; i++) {\n      let map = tr.mapping.maps[i]\n      for (let j = 0; j < ranges.length; j++)\n        ranges[j] = map.map(ranges[j])\n      map.forEach((_s, _e, from, to) => ranges.push(from, to))\n    }\n\n    // Figure out which joinable points exist inside those ranges,\n    // by checking all node boundaries in their parent nodes.\n    let joinable = []\n    for (let i = 0; i < ranges.length; i += 2) {\n      let from = ranges[i], to = ranges[i + 1]\n      let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth)\n      for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n        let after = parent.maybeChild(index)\n        if (!after) break\n        if (index && joinable.indexOf(pos) == -1) {\n          let before = parent.child(index - 1)\n          if (before.type == after.type && isJoinable(before, after))\n            joinable.push(pos)\n        }\n        pos += after.nodeSize\n      }\n    }\n    // Join the joinable points\n    joinable.sort((a, b) => a - b)\n    for (let i = joinable.length - 1; i >= 0; i--) {\n      if (canJoin(tr.doc, joinable[i])) tr.join(joinable[i])\n    }\n    dispatch(tr)\n  }\n}\n\n// :: ((state: EditorState, ?(tr: Transaction)) → bool, union<(before: Node, after: Node) → bool, [string]>) → (state: EditorState, ?(tr: Transaction)) → bool\n// Wrap a command so that, when it produces a transform that causes\n// two joinable nodes to end up next to each other, those are joined.\n// Nodes are considered joinable when they are of the same type and\n// when the `isJoinable` predicate returns true for them or, if an\n// array of strings was passed, if their node type name is in that\n// array.\nexport function autoJoin(command, isJoinable) {\n  if (Array.isArray(isJoinable)) {\n    let types = isJoinable\n    isJoinable = node => types.indexOf(node.type.name) > -1\n  }\n  return (state, dispatch) => command(state, dispatch && wrapDispatchForJoin(dispatch, isJoinable))\n}\n\n// :: (...[(EditorState, ?(tr: Transaction), ?EditorView) → bool]) → (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// Combine a number of command functions into a single function (which\n// calls them one by one until one returns true).\nexport function chainCommands(...commands) {\n  return function(state, dispatch, view) {\n    for (let i = 0; i < commands.length; i++)\n      if (commands[i](state, dispatch, view)) return true\n    return false\n  }\n}\n\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward)\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward)\n\n// :: Object\n// A basic keymap containing bindings not specific to any schema.\n// Binds the following keys (when multiple commands are listed, they\n// are chained with [`chainCommands`](#commands.chainCommands)):\n//\n// * **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n// * **Mod-Enter** to `exitCode`\n// * **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n// * **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-a** to `selectAll`\nexport let pcBaseKeymap = {\n  \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n  \"Mod-Enter\": exitCode,\n  \"Backspace\": backspace,\n  \"Mod-Backspace\": backspace,\n  \"Delete\": del,\n  \"Mod-Delete\": del,\n  \"Mod-a\": selectAll\n}\n\n// :: Object\n// A copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n// **Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n// **Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\n// Ctrl-Delete.\nexport let macBaseKeymap = {\n  \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n  \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n  \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n  \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"]\n}\nfor (let key in pcBaseKeymap) macBaseKeymap[key] = pcBaseKeymap[key]\n\n// declare global: os, navigator\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform)\n          : typeof os != \"undefined\" ? os.platform() == \"darwin\" : false\n\n// :: Object\n// Depending on the detected platform, this will hold\n// [`pcBasekeymap`](#commands.pcBaseKeymap) or\n// [`macBaseKeymap`](#commands.macBaseKeymap).\nexport let baseKeymap = mac ? macBaseKeymap : pcBaseKeymap\n","import {schema} from \"prosemirror-schema-basic\"\r\nimport {EditorState} from \"prosemirror-state\"\r\nimport {EditorView} from \"prosemirror-view\"\r\nimport {undo, redo, history} from \"prosemirror-history\"\r\nimport { keymap } from \"prosemirror-keymap\";\r\nimport  {DOMParser } from \"prosemirror-model\";\r\nimport {baseKeymap} from \"prosemirror-commands\"\r\n\r\nlet editor = document.querySelector('#root');\r\nlet content = document.querySelector('#content');\r\nlet state = EditorState.create({\r\n    doc: DOMParser.fromSchema(schema).parse(content),\r\n    plugins:[\r\n        history(),\r\n        keymap({'Mod-z': undo, 'Mod-y': redo}),\r\n        keymap(baseKeymap)\r\n    ]\r\n})\r\nlet view = new EditorView(editor, {state})\r\n\r\n\r\n// TODO:\r\n// Make my own schema\r\n// add more plugins (menu bar, etc)\r\n// add style to editor"]}